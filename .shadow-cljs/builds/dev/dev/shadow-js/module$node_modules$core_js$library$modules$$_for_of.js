["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js/library/modules/$.for-of.js"],"~:js","shadow$provide.module$node_modules$core_js$library$modules$$_for_of=function(global,process,require,module,exports,shadow$shims){var ctx=require(\"module$node_modules$core_js$library$modules$$_ctx\"),call=require(\"module$node_modules$core_js$library$modules$$_iter_call\"),isArrayIter=require(\"module$node_modules$core_js$library$modules$$_is_array_iter\"),anObject=require(\"module$node_modules$core_js$library$modules$$_an_object\"),toLength=require(\"module$node_modules$core_js$library$modules$$_to_length\"),\ngetIterFn=require(\"module$node_modules$core_js$library$modules$core_get_iterator_method\");module.exports=function(iterable,entries,fn,that){var iterFn=getIterFn(iterable);fn=ctx(fn,that,entries?2:1);that=0;var step;if(\"function\"!=typeof iterFn)throw TypeError(iterable+\" is not iterable!\");if(isArrayIter(iterFn))for(iterFn=toLength(iterable.length);iterFn>that;that++)entries?fn(anObject(step=iterable[that])[0],step[1]):fn(iterable[that]);else for(iterable=iterFn.call(iterable);!(step=iterable.next()).done;)call(iterable,\nfn,step.value,entries)}}","~:source","shadow$provide[\"module$node_modules$core_js$library$modules$$_for_of\"] = function(global,process,require,module,exports,shadow$shims) {\nvar ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js$library$modules$$_is_array_iter","~$module$node_modules$core_js$library$modules$core_get_iterator_method","~$shadow.js","~$module$node_modules$core_js$library$modules$$_ctx","~$module$node_modules$core_js$library$modules$$_iter_call","~$module$node_modules$core_js$library$modules$$_to_length","~$module$node_modules$core_js$library$modules$$_an_object"]],"~:properties",["^5",[]],"~:compiled-at",1537791607617,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js$library$modules$$_for_of.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAClIC,IAAcJ,OAAA,CAAQ,mDAAR,CADoH,CAElIK,KAAcL,OAAA,CAAQ,yDAAR,CAFoH,CAGlIM,YAAcN,OAAA,CAAQ,6DAAR,CAHoH,CAIlIO,SAAcP,OAAA,CAAQ,yDAAR,CAJoH,CAKlIQ,SAAcR,OAAA,CAAQ,yDAAR,CALoH;AAMlIS,UAAcT,OAAA,CAAQ,sEAAR,CAClBC,OAAAC,QAAA,CAAiBQ,QAAQ,CAACC,QAAD,CAAWC,OAAX,CAAoBC,EAApB,CAAwBC,IAAxB,CAA6B,CAAA,IAChDC,OAASN,SAAA,CAAUE,QAAV,CACTK,GAAAA,CAASZ,GAAA,CAAIS,EAAJ,CAAQC,IAAR,CAAcF,OAAA,CAAU,CAAV,CAAc,CAA5B,CACTK,KAAAA,CAAS,CAHuC,KAIxCC,IACZ,IAAoB,UAApB,EAAG,MAAOH,OAAV,CAA+B,KAAMI,UAAA,CAAUR,QAAV,CAAqB,mBAArB,CAAN,CAE/B,GAAGL,WAAA,CAAYS,MAAZ,CAAH,CAAuB,IAAIK,MAAJ,CAAaZ,QAAA,CAASG,QAAAS,OAAT,CAAb,CAAwCA,MAAxC,CAAiDH,IAAjD,CAAwDA,IAAA,EAAxD,CACrBL,OAAA,CAAUI,EAAA,CAAET,QAAA,CAASW,IAAT,CAAgBP,QAAA,CAASM,IAAT,CAAhB,CAAA,CAAiC,CAAjC,CAAF,CAAuCC,IAAA,CAAK,CAAL,CAAvC,CAAV,CAA4DF,EAAA,CAAEL,QAAA,CAASM,IAAT,CAAF,CAD9D,KAEO,KAAII,QAAJ,CAAeN,MAAAV,KAAA,CAAYM,QAAZ,CAAf,CAAsC,CAACW,CAACJ,IAADI,CAAQD,QAAAE,KAAA,EAARD,MAAvC,CAAA,CACLjB,IAAA,CAAKgB,QAAL;AAAeL,EAAf,CAAkBE,IAAAM,MAAlB,CAA8BZ,OAA9B,CAVkD,CAPgF;\",\n\"sources\":[\"node_modules/core-js/library/modules/$.for-of.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js$library$modules$$_for_of\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar ctx         = require('./$.ctx')\\n  , call        = require('./$.iter-call')\\n  , isArrayIter = require('./$.is-array-iter')\\n  , anObject    = require('./$.an-object')\\n  , toLength    = require('./$.to-length')\\n  , getIterFn   = require('./core.get-iterator-method');\\nmodule.exports = function(iterable, entries, fn, that){\\n  var iterFn = getIterFn(iterable)\\n    , f      = ctx(fn, that, entries ? 2 : 1)\\n    , index  = 0\\n    , length, step, iterator;\\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\\n  // fast case for arrays with default iterator\\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\\n    call(iterator, f, step.value, entries);\\n  }\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"ctx\",\"call\",\"isArrayIter\",\"anObject\",\"toLength\",\"getIterFn\",\"module.exports\",\"iterable\",\"entries\",\"fn\",\"that\",\"iterFn\",\"f\",\"index\",\"step\",\"TypeError\",\"length\",\"iterator\",\"done\",\"next\",\"value\"]\n}\n"]