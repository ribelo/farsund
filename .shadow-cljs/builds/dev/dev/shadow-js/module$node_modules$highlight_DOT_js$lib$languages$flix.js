["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/flix.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$flix=function(global,process,require,module,exports,shadow$shims){module.exports=function(hljs){return{keywords:{literal:\"true false\",keyword:\"case class def else enum if impl import in lat rel index let match namespace switch type yield with\"},contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,{className:\"string\",begin:/'(.|\\\\[xXuU][a-zA-Z0-9]+)'/},{className:\"string\",variants:[{begin:'\"',end:'\"'}]},{className:\"function\",\nbeginKeywords:\"def\",end:/[:={\\[(\\n;]/,excludeEnd:!0,contains:[{className:\"title\",begin:/[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/}]},hljs.C_NUMBER_MODE]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$flix\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = function (hljs) {\n\n    var CHAR = {\n        className: 'string',\n        begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n    };\n\n    var STRING = {\n        className: 'string',\n        variants: [\n            {\n                begin: '\"', end: '\"'\n            }\n        ]\n    };\n\n    var NAME = {\n        className: 'title',\n        begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/\n    };\n\n    var METHOD = {\n        className: 'function',\n        beginKeywords: 'def',\n        end: /[:={\\[(\\n;]/,\n        excludeEnd: true,\n        contains: [NAME]\n    };\n\n    return {\n        keywords: {\n            literal: 'true false',\n            keyword: 'case class def else enum if impl import in lat rel index let match namespace switch type yield with'\n        },\n        contains: [\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            CHAR,\n            STRING,\n            METHOD,\n            hljs.C_NUMBER_MODE\n        ]\n    };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","begin","className","contains","keyword","keywords","beginKeywords","excludeEnd","literal","end"]],"~:compiled-at",1537561386358,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$flix.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACzIF,MAAAC,QAAA,CAAiBE,QAAS,CAACC,IAAD,CAAO,CA6B7B,MAAO,CACHC,SAAU,CACNC,QAAS,YADH,CAENC,QAAS,qGAFH,CADP,CAKHC,SAAU,CACNJ,IAAAK,oBADM,CAENL,IAAAM,qBAFM,CAhCHC,CACPC,UAAW,QADJD,CAEPE,MAAO,4BAFAF,CAgCG,CA3BDG,CACTF,UAAW,QADFE,CAETC,SAAU,CACN,CACIF,MAAO,GADX,CACgBG,IAAK,GADrB,CADM,CAFDF,CA2BC,CAbDG,CACTL,UAAW,UADFK;AAETC,cAAe,KAFND,CAGTD,IAAK,aAHIC,CAITE,WAAY,CAAA,CAJHF,CAKTT,SAAU,CAVHY,CACPR,UAAW,OADJQ,CAEPP,MAAO,gFAFAO,CAUG,CALDH,CAaC,CAMNb,IAAAiB,cANM,CALP,CA7BsB,CADwG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/flix.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$flix\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nmodule.exports = function (hljs) {\\n\\n    var CHAR = {\\n        className: 'string',\\n        begin: /'(.|\\\\\\\\[xXuU][a-zA-Z0-9]+)'/\\n    };\\n\\n    var STRING = {\\n        className: 'string',\\n        variants: [\\n            {\\n                begin: '\\\"', end: '\\\"'\\n            }\\n        ]\\n    };\\n\\n    var NAME = {\\n        className: 'title',\\n        begin: /[^0-9\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;][^\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;]+|[^0-9\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;=]/\\n    };\\n\\n    var METHOD = {\\n        className: 'function',\\n        beginKeywords: 'def',\\n        end: /[:={\\\\[(\\\\n;]/,\\n        excludeEnd: true,\\n        contains: [NAME]\\n    };\\n\\n    return {\\n        keywords: {\\n            literal: 'true false',\\n            keyword: 'case class def else enum if impl import in lat rel index let match namespace switch type yield with'\\n        },\\n        contains: [\\n            hljs.C_LINE_COMMENT_MODE,\\n            hljs.C_BLOCK_COMMENT_MODE,\\n            CHAR,\\n            STRING,\\n            METHOD,\\n            hljs.C_NUMBER_MODE\\n        ]\\n    };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"module.exports\",\"hljs\",\"keywords\",\"literal\",\"keyword\",\"contains\",\"C_LINE_COMMENT_MODE\",\"C_BLOCK_COMMENT_MODE\",\"CHAR\",\"className\",\"begin\",\"STRING\",\"variants\",\"end\",\"METHOD\",\"beginKeywords\",\"excludeEnd\",\"NAME\",\"C_NUMBER_MODE\"]\n}\n"]