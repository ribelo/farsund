["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(_ref){var cellCount=_ref.cellCount,cellSizeAndPositionGetter=_ref.cellSizeAndPositionGetter,cellMetadata=[];_ref=new _SectionManager2.default(_ref.sectionSize);for(var height=0,width=0,index=0;index<cellCount;index++){var cellMetadatum=cellSizeAndPositionGetter({index:index});\nif(null==cellMetadatum.height||isNaN(cellMetadatum.height)||null==cellMetadatum.width||isNaN(cellMetadatum.width)||null==cellMetadatum.x||isNaN(cellMetadatum.x)||null==cellMetadatum.y||isNaN(cellMetadatum.y))throw Error(\"Invalid metadata returned for cell \"+index+\":\\n        x:\"+cellMetadatum.x+\", y:\"+cellMetadatum.y+\", width:\"+cellMetadatum.width+\", height:\"+cellMetadatum.height);height=Math.max(height,cellMetadatum.y+cellMetadatum.height);width=Math.max(width,cellMetadatum.x+cellMetadatum.width);\ncellMetadata[index]=cellMetadatum;_ref.registerCell({cellMetadatum:cellMetadatum,index:index})}return{cellMetadata:cellMetadata,height:height,sectionManager:_ref,width:width}};var _SectionManager2=(global=require(\"module$node_modules$react_virtualized$dist$commonjs$Collection$SectionManager\"))&&global.__esModule?global:{default:global}}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calculateSizeAndPositionData;\n\nvar _SectionManager = require('../SectionManager');\n\nvar _SectionManager2 = _interopRequireDefault(_SectionManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n\n  var cellMetadata = [];\n  var sectionManager = new _SectionManager2.default(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react_virtualized$dist$commonjs$Collection$SectionManager"]],"~:properties",["^5",["width","sectionManager","index","height","__esModule","cellMetadatum","value","cellMetadata","default"]],"~:compiled-at",1537791607678,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,kGAAA,CAAsH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGnLC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,QAAA,CAQAC,QAAqC,CAACC,IAAD,CAAO,CAAA,IACtCC,UAAYD,IAAAC,UAD0B,CAEtCC,0BAA4BF,IAAAE,0BAFU,CAKtCC,aAAe,EACfC,KAAAA,CAAiB,IAAIC,gBAAAP,QAAJ,CAHHE,IAAAM,YAGG,CAIrB,KAHA,IAAIC,OAAS,CAAb,CACIC,MAAQ,CADZ,CAGSC,MAAQ,CAAjB,CAAoBA,KAApB,CAA4BR,SAA5B,CAAuCQ,KAAA,EAAvC,CAAgD,CAC9C,IAAIC,cAAgBR,yBAAA,CAA0B,CAAEO,MAAOA,KAAT,CAA1B,CAEpB;GAA4B,IAA5B,EAAIC,aAAAH,OAAJ,EAAoCI,KAAA,CAAMD,aAAAH,OAAN,CAApC,EAA0F,IAA1F,EAAmEG,aAAAF,MAAnE,EAAkGG,KAAA,CAAMD,aAAAF,MAAN,CAAlG,EAAmJ,IAAnJ,EAAgIE,aAAAE,EAAhI,EAA2JD,KAAA,CAAMD,aAAAE,EAAN,CAA3J,EAAwM,IAAxM,EAAqLF,aAAAG,EAArL,EAAgNF,KAAA,CAAMD,aAAAG,EAAN,CAAhN,CACE,KAAMC,MAAA,CAAM,qCAAN,CAA8CL,KAA9C,CAAsD,eAAtD,CAAwEC,aAAAE,EAAxE,CAA0F,MAA1F,CAAmGF,aAAAG,EAAnG,CAAqH,UAArH,CAAkIH,aAAAF,MAAlI,CAAwJ,WAAxJ,CAAsKE,aAAAH,OAAtK,CAAN,CAGFA,MAAA,CAASQ,IAAAC,IAAA,CAAST,MAAT,CAAiBG,aAAAG,EAAjB,CAAmCH,aAAAH,OAAnC,CACTC,MAAA,CAAQO,IAAAC,IAAA,CAASR,KAAT,CAAgBE,aAAAE,EAAhB,CAAkCF,aAAAF,MAAlC,CAERL;YAAA,CAAaM,KAAb,CAAA,CAAsBC,aACtBN,KAAAa,aAAA,CAA4B,CAC1BP,cAAeA,aADW,CAE1BD,MAAOA,KAFmB,CAA5B,CAX8C,CAiBhD,MAAO,CACLN,aAAcA,YADT,CAELI,OAAQA,MAFH,CAGLH,eAAgBA,IAHX,CAILI,MAAOA,KAJF,CA3BmC,CAJ5C,KAAIH,iBAE0C,CAJ1Ca,MAI0C,CAJxB3B,OAAA,CAAQ,+EAAR,CAIwB,GAFA2B,MAEOC,WAAP,CAFAD,MAEA,CAA8B,CAAEpB,QAFhCoB,MAE8B,CAZuG;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = calculateSizeAndPositionData;\\n\\nvar _SectionManager = require('../SectionManager');\\n\\nvar _SectionManager2 = _interopRequireDefault(_SectionManager);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction calculateSizeAndPositionData(_ref) {\\n  var cellCount = _ref.cellCount,\\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\\n      sectionSize = _ref.sectionSize;\\n\\n  var cellMetadata = [];\\n  var sectionManager = new _SectionManager2.default(sectionSize);\\n  var height = 0;\\n  var width = 0;\\n\\n  for (var index = 0; index < cellCount; index++) {\\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\\n\\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\\n      throw Error('Invalid metadata returned for cell ' + index + ':\\\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\\n    }\\n\\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\\n\\n    cellMetadata[index] = cellMetadatum;\\n    sectionManager.registerCell({\\n      cellMetadatum: cellMetadatum,\\n      index: index\\n    });\\n  }\\n\\n  return {\\n    cellMetadata: cellMetadata,\\n    height: height,\\n    sectionManager: sectionManager,\\n    width: width\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"default\",\"calculateSizeAndPositionData\",\"_ref\",\"cellCount\",\"cellSizeAndPositionGetter\",\"cellMetadata\",\"sectionManager\",\"_SectionManager2\",\"sectionSize\",\"height\",\"width\",\"index\",\"cellMetadatum\",\"isNaN\",\"x\",\"y\",\"Error\",\"Math\",\"max\",\"registerCell\",\"_SectionManager\",\"__esModule\"]\n}\n"]