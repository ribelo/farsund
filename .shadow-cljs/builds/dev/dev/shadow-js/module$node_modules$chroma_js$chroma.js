["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/chroma-js/chroma.js"],"~:js","shadow$provide.module$node_modules$chroma_js$chroma=function(global,process,require,module,exports,shadow$shims){(function(){var brewer,m,slice=[].slice;var type=function(){var len;var classToType={};var ref=\"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");var o=0;for(len=ref.length;o<len;o++){var name=ref[o];classToType[\"[object \"+name+\"]\"]=name.toLowerCase()}return function(obj){obj=Object.prototype.toString.call(obj);return classToType[obj]||\"object\"}}();var limit=function(x,\nmin,max){null==min&&(min=0);null==max&&(max=1);x<min&&(x=min);x>max&&(x=max);return x};var unpack=function(args){return 3<=args.length?Array.prototype.slice.call(args):args[0]};var clip_rgb=function(rgb){var i,o;rgb._clipped=!1;rgb._unclipped=rgb.slice(0);for(i=o=0;3>o;i=++o)if(3>i){if(0>rgb[i]||255<rgb[i])rgb._clipped=!0;0>rgb[i]&&(rgb[i]=0);255<rgb[i]&&(rgb[i]=255)}else 3===i&&(0>rgb[i]&&(rgb[i]=0),1<rgb[i]&&(rgb[i]=1));rgb._clipped||delete rgb._unclipped;return rgb};var PI=Math.PI;var round=Math.round;\nvar cos=Math.cos;var floor=Math.floor;var pow=Math.pow;var log=Math.log;var sin=Math.sin;var sqrt=Math.sqrt;var atan2=Math.atan2;var max=Math.max;var abs=Math.abs;var TWOPI=2*PI;var PITHIRD=PI/3;var DEG2RAD=PI/180;var RAD2DEG=180/PI;var chroma=function(){return arguments[0]instanceof Color?arguments[0]:function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,arguments,function(){})};chroma[\"default\"]=chroma;var _interpolators=\n[];\"undefined\"!==typeof module&&null!==module&&null!=module.exports&&(module.exports=chroma);if(\"function\"===typeof define&&define.amd)define([],function(){return chroma});else{var blend_f=\"undefined\"!==typeof exports&&null!==exports?exports:this;blend_f.chroma=chroma}chroma.version=\"1.3.7\";var _input={};var _guess_formats=[];var _guess_formats_sorted=!1;var Color=function(){function Color(){var chk,len;var args=[];var o=0;for(len=arguments.length;o<len;o++){var arg=arguments[o];null!=arg&&args.push(arg)}1<\nargs.length&&(chk=args[args.length-1]);if(null!=_input[chk])this._rgb=clip_rgb(_input[chk](unpack(args.slice(0,-1))));else{_guess_formats_sorted||(_guess_formats=_guess_formats.sort(function(a,b){return b.p-a.p}),_guess_formats_sorted=!0);len=0;for(arg=_guess_formats.length;len<arg&&!(chk=_guess_formats[len],chk=chk.test.apply(chk,args));len++);chk&&(this._rgb=clip_rgb(_input[chk].apply(_input,args)))}null==this._rgb&&console.warn(\"unknown format: \"+args);null==this._rgb&&(this._rgb=[0,0,0]);3===\nthis._rgb.length&&this._rgb.push(1)}Color.prototype.toString=function(){return this.hex()};Color.prototype.clone=function(){return chroma(me._rgb)};return Color}();chroma._input=_input;chroma.brewer=brewer={OrRd:\"#fff7ec #fee8c8 #fdd49e #fdbb84 #fc8d59 #ef6548 #d7301f #b30000 #7f0000\".split(\" \"),PuBu:\"#fff7fb #ece7f2 #d0d1e6 #a6bddb #74a9cf #3690c0 #0570b0 #045a8d #023858\".split(\" \"),BuPu:\"#f7fcfd #e0ecf4 #bfd3e6 #9ebcda #8c96c6 #8c6bb1 #88419d #810f7c #4d004b\".split(\" \"),Oranges:\"#fff5eb #fee6ce #fdd0a2 #fdae6b #fd8d3c #f16913 #d94801 #a63603 #7f2704\".split(\" \"),\nBuGn:\"#f7fcfd #e5f5f9 #ccece6 #99d8c9 #66c2a4 #41ae76 #238b45 #006d2c #00441b\".split(\" \"),YlOrBr:\"#ffffe5 #fff7bc #fee391 #fec44f #fe9929 #ec7014 #cc4c02 #993404 #662506\".split(\" \"),YlGn:\"#ffffe5 #f7fcb9 #d9f0a3 #addd8e #78c679 #41ab5d #238443 #006837 #004529\".split(\" \"),Reds:\"#fff5f0 #fee0d2 #fcbba1 #fc9272 #fb6a4a #ef3b2c #cb181d #a50f15 #67000d\".split(\" \"),RdPu:\"#fff7f3 #fde0dd #fcc5c0 #fa9fb5 #f768a1 #dd3497 #ae017e #7a0177 #49006a\".split(\" \"),Greens:\"#f7fcf5 #e5f5e0 #c7e9c0 #a1d99b #74c476 #41ab5d #238b45 #006d2c #00441b\".split(\" \"),\nYlGnBu:\"#ffffd9 #edf8b1 #c7e9b4 #7fcdbb #41b6c4 #1d91c0 #225ea8 #253494 #081d58\".split(\" \"),Purples:\"#fcfbfd #efedf5 #dadaeb #bcbddc #9e9ac8 #807dba #6a51a3 #54278f #3f007d\".split(\" \"),GnBu:\"#f7fcf0 #e0f3db #ccebc5 #a8ddb5 #7bccc4 #4eb3d3 #2b8cbe #0868ac #084081\".split(\" \"),Greys:\"#ffffff #f0f0f0 #d9d9d9 #bdbdbd #969696 #737373 #525252 #252525 #000000\".split(\" \"),YlOrRd:\"#ffffcc #ffeda0 #fed976 #feb24c #fd8d3c #fc4e2a #e31a1c #bd0026 #800026\".split(\" \"),PuRd:\"#f7f4f9 #e7e1ef #d4b9da #c994c7 #df65b0 #e7298a #ce1256 #980043 #67001f\".split(\" \"),\nBlues:\"#f7fbff #deebf7 #c6dbef #9ecae1 #6baed6 #4292c6 #2171b5 #08519c #08306b\".split(\" \"),PuBuGn:\"#fff7fb #ece2f0 #d0d1e6 #a6bddb #67a9cf #3690c0 #02818a #016c59 #014636\".split(\" \"),Viridis:\"#440154 #482777 #3f4a8a #31678e #26838f #1f9d8a #6cce5a #b6de2b #fee825\".split(\" \"),Spectral:\"#9e0142 #d53e4f #f46d43 #fdae61 #fee08b #ffffbf #e6f598 #abdda4 #66c2a5 #3288bd #5e4fa2\".split(\" \"),RdYlGn:\"#a50026 #d73027 #f46d43 #fdae61 #fee08b #ffffbf #d9ef8b #a6d96a #66bd63 #1a9850 #006837\".split(\" \"),RdBu:\"#67001f #b2182b #d6604d #f4a582 #fddbc7 #f7f7f7 #d1e5f0 #92c5de #4393c3 #2166ac #053061\".split(\" \"),\nPiYG:\"#8e0152 #c51b7d #de77ae #f1b6da #fde0ef #f7f7f7 #e6f5d0 #b8e186 #7fbc41 #4d9221 #276419\".split(\" \"),PRGn:\"#40004b #762a83 #9970ab #c2a5cf #e7d4e8 #f7f7f7 #d9f0d3 #a6dba0 #5aae61 #1b7837 #00441b\".split(\" \"),RdYlBu:\"#a50026 #d73027 #f46d43 #fdae61 #fee090 #ffffbf #e0f3f8 #abd9e9 #74add1 #4575b4 #313695\".split(\" \"),BrBG:\"#543005 #8c510a #bf812d #dfc27d #f6e8c3 #f5f5f5 #c7eae5 #80cdc1 #35978f #01665e #003c30\".split(\" \"),RdGy:\"#67001f #b2182b #d6604d #f4a582 #fddbc7 #ffffff #e0e0e0 #bababa #878787 #4d4d4d #1a1a1a\".split(\" \"),\nPuOr:\"#7f3b08 #b35806 #e08214 #fdb863 #fee0b6 #f7f7f7 #d8daeb #b2abd2 #8073ac #542788 #2d004b\".split(\" \"),Set2:\"#66c2a5 #fc8d62 #8da0cb #e78ac3 #a6d854 #ffd92f #e5c494 #b3b3b3\".split(\" \"),Accent:\"#7fc97f #beaed4 #fdc086 #ffff99 #386cb0 #f0027f #bf5b17 #666666\".split(\" \"),Set1:\"#e41a1c #377eb8 #4daf4a #984ea3 #ff7f00 #ffff33 #a65628 #f781bf #999999\".split(\" \"),Set3:\"#8dd3c7 #ffffb3 #bebada #fb8072 #80b1d3 #fdb462 #b3de69 #fccde5 #d9d9d9 #bc80bd #ccebc5 #ffed6f\".split(\" \"),Dark2:\"#1b9e77 #d95f02 #7570b3 #e7298a #66a61e #e6ab02 #a6761d #666666\".split(\" \"),\nPaired:\"#a6cee3 #1f78b4 #b2df8a #33a02c #fb9a99 #e31a1c #fdbf6f #ff7f00 #cab2d6 #6a3d9a #ffff99 #b15928\".split(\" \"),Pastel2:\"#b3e2cd #fdcdac #cbd5e8 #f4cae4 #e6f5c9 #fff2ae #f1e2cc #cccccc\".split(\" \"),Pastel1:\"#fbb4ae #b3cde3 #ccebc5 #decbe4 #fed9a6 #ffffcc #e5d8bd #fddaec #f2f2f2\".split(\" \")};(function(){var key;var results=[];for(key in brewer)results.push(brewer[key.toLowerCase()]=brewer[key]);return results})();var w3cx11={aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",\nazure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflower:\"#6495ed\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",\ndarkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",green:\"#008000\",\ngreenyellow:\"#adff2f\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",laserlemon:\"#ffff54\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrod:\"#fafad2\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgreen:\"#90ee90\",lightgrey:\"#d3d3d3\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",\nlightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",maroon2:\"#7f0000\",maroon3:\"#b03060\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370db\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",\nmoccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#db7093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",purple2:\"#7f007f\",purple3:\"#a020f0\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",\nsalmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"};chroma.colors=w3cx11;var lab2rgb=function(){var args=unpack(arguments);\nvar l=args[0];var a=args[1];var b=args[2];l=(l+16)/116;var x=isNaN(a)?l:l+a/500;b=isNaN(b)?l:l-b/200;l=LAB_CONSTANTS.Yn*lab_xyz(l);x=LAB_CONSTANTS.Xn*lab_xyz(x);b=LAB_CONSTANTS.Zn*lab_xyz(b);var r=xyz_rgb(3.2404542*x-1.5371385*l-.4985314*b);a=xyz_rgb(-.969266*x+1.8760108*l+.041556*b);b=xyz_rgb(.0556434*x-.2040259*l+1.0572252*b);return[r,a,b,3<args.length?args[3]:1]};var xyz_rgb=function(r){return 255*(.00304>=r?12.92*r:1.055*pow(r,1/2.4)-.055)};var lab_xyz=function(t){return t>LAB_CONSTANTS.t1?t*\nt*t:LAB_CONSTANTS.t2*(t-LAB_CONSTANTS.t0)};var LAB_CONSTANTS={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452};var rgb2lab=function(){var ref=unpack(arguments);ref=rgb2xyz(ref[0],ref[1],ref[2]);var x=ref[0];var y=ref[1];return[116*y-16,500*(x-y),200*(y-ref[2])]};var rgb_xyz=function(r){return.04045>=(r/=255)?r/12.92:pow((r+.055)/1.055,2.4)};var xyz_lab=function(t){return t>LAB_CONSTANTS.t3?pow(t,1/3):t/LAB_CONSTANTS.t2+LAB_CONSTANTS.t0};var rgb2xyz=function(){var ref=\nunpack(arguments);var r=ref[0];var g=ref[1];var b=ref[2];r=rgb_xyz(r);g=rgb_xyz(g);b=rgb_xyz(b);ref=xyz_lab((.4124564*r+.3575761*g+.1804375*b)/LAB_CONSTANTS.Xn);var y=xyz_lab((.2126729*r+.7151522*g+.072175*b)/LAB_CONSTANTS.Yn);g=xyz_lab((.0193339*r+.119192*g+.9503041*b)/LAB_CONSTANTS.Zn);return[ref,y,g]};chroma.lab=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"lab\"]),\nfunction(){})};_input.lab=lab2rgb;Color.prototype.lab=function(){return rgb2lab(this._rgb)};var bezier=function(colors){var c;colors=function(){var len;var results=[];var o=0;for(len=colors.length;o<len;o++)c=colors[o],results.push(chroma(c));return results}();if(2===colors.length){var I=function(){var len;var results=[];var o=0;for(len=colors.length;o<len;o++)c=colors[o],results.push(c.lab());return results}();var lab0=I[0];var lab1=I[1];I=function(t){var i,o;var results=[];for(i=o=0;2>=o;i=++o)results.push(lab0[i]+\nt*(lab1[i]-lab0[i]));return chroma.lab.apply(chroma,results)}}else if(3===colors.length){I=function(){var len;var results=[];var o=0;for(len=colors.length;o<len;o++)c=colors[o],results.push(c.lab());return results}();lab0=I[0];lab1=I[1];var lab2=I[2];I=function(t){var i,o;var results=[];for(i=o=0;2>=o;i=++o)results.push((1-t)*(1-t)*lab0[i]+2*(1-t)*t*lab1[i]+t*t*lab2[i]);return chroma.lab.apply(chroma,results)}}else if(4===colors.length){I=function(){var len;var results=[];var o=0;for(len=colors.length;o<\nlen;o++)c=colors[o],results.push(c.lab());return results}();lab0=I[0];lab1=I[1];lab2=I[2];var lab3=I[3];I=function(t){var i,o;var results=[];for(i=o=0;2>=o;i=++o)results.push((1-t)*(1-t)*(1-t)*lab0[i]+3*(1-t)*(1-t)*t*lab1[i]+3*(1-t)*t*t*lab2[i]+t*t*t*lab3[i]);return chroma.lab.apply(chroma,results)}}else if(5===colors.length){var I0=bezier(colors.slice(0,3));var I1=bezier(colors.slice(2,5));I=function(t){return.5>t?I0(2*t):I1(2*(t-.5))}}return I};chroma.bezier=function(colors){var f=bezier(colors);\nf.scale=function(){return chroma.scale(f)};return f};chroma.cubehelix=function(start,rotations,hue,gamma,lightness){null==start&&(start=300);null==rotations&&(rotations=-1.5);null==hue&&(hue=1);null==gamma&&(gamma=1);null==lightness&&(lightness=[0,1]);var dh=0;if(\"array\"===type(lightness))var dl=lightness[1]-lightness[0];else dl=0,lightness=[lightness,lightness];var f=function(fract){var a=TWOPI*((start+120)/360+rotations*fract);var l=pow(lightness[0]+dl*fract,gamma);fract=(0!==dh?hue[0]+fract*dh:\nhue)*l*(1-l)/2;var cos_a=cos(a);a=sin(a);return chroma(clip_rgb([255*(l+fract*(-.14861*cos_a+1.78277*a)),255*(l+fract*(-.29227*cos_a-.90649*a)),255*(l+1.97294*fract*cos_a)]))};f.start=function(s){if(null==s)return start;start=s;return f};f.rotations=function(r){if(null==r)return rotations;rotations=r;return f};f.gamma=function(g){if(null==g)return gamma;gamma=g;return f};f.hue=function(h){if(null==h)return hue;hue=h;\"array\"===type(hue)?(dh=hue[1]-hue[0],0===dh&&(hue=hue[1])):dh=0;return f};f.lightness=\nfunction(h){if(null==h)return lightness;\"array\"===type(h)?(lightness=h,dl=h[1]-h[0]):(lightness=[h,h],dl=0);return f};f.scale=function(){return chroma.scale(f)};f.hue(hue);return f};chroma.random=function(){var o;var code=\"#\";for(o=0;6>o;++o)code+=\"0123456789abcdef\".charAt(floor(16*Math.random()));return new Color(code)};_interpolators=[];var interpolate=function(col1,col2,f,m){var len;null==f&&(f=.5);null==m&&(m=\"rgb\");\"object\"!==type(col1)&&(col1=chroma(col1));\"object\"!==type(col2)&&(col2=chroma(col2));\nvar o=0;for(len=_interpolators.length;o<len;o++){var interpol=_interpolators[o];if(m===interpol[0]){var res=interpol[1](col1,col2,f,m);break}}if(null==res)throw\"color mode \"+m+\" is not supported\";return res.alpha(col1.alpha()+f*(col2.alpha()-col1.alpha()))};chroma.interpolate=interpolate;Color.prototype.interpolate=function(col2,f,m){return interpolate(this,col2,f,m)};chroma.mix=interpolate;Color.prototype.mix=Color.prototype.interpolate;_input.rgb=function(){var k;var ref=unpack(arguments);var results=\n[];for(k in ref){var v=ref[k];results.push(v)}return results};chroma.rgb=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"rgb\"]),function(){})};Color.prototype.rgb=function(round){null==round&&(round=!0);return round?this._rgb.map(Math.round).slice(0,3):this._rgb.slice(0,3)};Color.prototype.rgba=function(round){null==round&&(round=!0);return round?[Math.round(this._rgb[0]),\nMath.round(this._rgb[1]),Math.round(this._rgb[2]),this._rgb[3]]:this._rgb.slice(0)};_guess_formats.push({p:3,test:function(n){var a=unpack(arguments);if(\"array\"===type(a)&&3===a.length||4===a.length&&\"number\"===type(a[3])&&0<=a[3]&&1>=a[3])return\"rgb\"}});_input.lrgb=_input.rgb;var _average_lrgb=function(colors){var len;var f=1/colors.length;var xyz=[0,0,0,0];var o=0;for(len=colors.length;o<len;o++){var col=colors[o];col=col._rgb;xyz[0]+=pow(col[0],2)*f;xyz[1]+=pow(col[1],2)*f;xyz[2]+=pow(col[2],2)*\nf;xyz[3]+=col[3]*f}xyz[0]=sqrt(xyz[0]);xyz[1]=sqrt(xyz[1]);xyz[2]=sqrt(xyz[2]);return new Color(xyz)};_interpolators.push([\"lrgb\",function(col1,col2,f,m){col1=col1._rgb;col2=col2._rgb;return new Color(sqrt(pow(col1[0],2)*(1-f)+pow(col2[0],2)*f),sqrt(pow(col1[1],2)*(1-f)+pow(col2[1],2)*f),sqrt(pow(col1[2],2)*(1-f)+pow(col2[2],2)*f),m)}]);chroma.average=function(colors,mode){var dx,i,len;null==mode&&(mode=\"rgb\");var l=colors.length;colors=colors.map(function(c){return chroma(c)});var alpha=colors.splice(0,\n1)[0];if(\"lrgb\"===mode)return _average_lrgb(colors);var xyz=alpha.get(mode);var cnt=[];var dy=dx=0;for(i in xyz)if(xyz[i]=xyz[i]||0,cnt.push(isNaN(xyz[i])?0:1),\"h\"===mode.charAt(i)&&!isNaN(xyz[i])){var A=xyz[i]/180*PI;dx+=cos(A);dy+=sin(A)}alpha=alpha.alpha();var o=0;for(len=colors.length;o<len;o++){A=colors[o];var xyz2=A.get(mode);alpha+=A.alpha();for(i in xyz)isNaN(xyz2[i])||(cnt[i]+=1,\"h\"===mode.charAt(i)?(A=xyz2[i]/180*PI,dx+=cos(A),dy+=sin(A)):xyz[i]+=xyz2[i])}for(i in xyz)if(\"h\"===mode.charAt(i)){for(A=\natan2(dy/cnt[i],dx/cnt[i])/PI*180;0>A;)A+=360;for(;360<=A;)A-=360;xyz[i]=A}else xyz[i]/=cnt[i];return chroma(xyz,mode).alpha(alpha/l)};var hex2rgb=function(hex){if(hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)){if(4===hex.length||7===hex.length)hex=hex.substr(1);3===hex.length&&(hex=hex.split(\"\"),hex=hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]);var a=parseInt(hex,16);return[a>>16,a>>8&255,a&255,1]}if(hex.match(/^#?([A-Fa-f0-9]{8})$/)){9===hex.length&&(hex=hex.substr(1));a=parseInt(hex,16);var r=\na>>24&255;var g=a>>16&255;hex=a>>8&255;a=round((a&255)/255*100)/100;return[r,g,hex,a]}if(null!=_input.css&&(g=_input.css(hex)))return g;throw\"unknown color: \"+hex;};var rgb2hex=function(channels,mode){null==mode&&(mode=\"rgb\");var r=channels[0];var g=channels[1];var b=channels[2];channels=channels[3];r=Math.round(r);g=Math.round(g);b=Math.round(b);var str=\"000000\"+(r<<16|g<<8|b).toString(16);str=str.substr(str.length-6);var hxa=\"0\"+round(255*channels).toString(16);hxa=hxa.substr(hxa.length-2);return\"#\"+\nfunction(){switch(mode.toLowerCase()){case \"rgba\":return str+hxa;case \"argb\":return hxa+str;default:return str}}()};_input.hex=function(h){return hex2rgb(h)};chroma.hex=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"hex\"]),function(){})};Color.prototype.hex=function(mode){null==mode&&(mode=\"rgb\");return rgb2hex(this._rgb,mode)};_guess_formats.push({p:4,test:function(n){if(1===\narguments.length&&\"string\"===type(n))return\"hex\"}});var hsl2rgb=function(){var c,o;var args=unpack(arguments);var h=args[0];var b=args[1];var l=args[2];if(0===b)var r=c=b=255*l;else{r=[0,0,0];c=[0,0,0];b=.5>l?l*(1+b):l+b-l*b;l=2*l-b;h/=360;r[0]=h+1/3;r[1]=h;r[2]=h-1/3;for(h=o=0;2>=o;h=++o)0>r[h]&&(r[h]+=1),1<r[h]&&--r[h],c[h]=1>6*r[h]?l+6*(b-l)*r[h]:1>2*r[h]?b:2>3*r[h]?l+(b-l)*(2/3-r[h])*6:l;b=[round(255*c[0]),round(255*c[1]),round(255*c[2])];r=b[0];c=b[1];b=b[2]}return 3<args.length?[r,c,b,args[3]]:\n[r,c,b]};var rgb2hsl=function(r,g,b){void 0!==r&&3<=r.length&&(b=r,r=b[0],g=b[1],b=b[2]);r/=255;g/=255;b/=255;var min=Math.min(r,g,b);max=Math.max(r,g,b);var l=(max+min)/2;if(max===min){var s=0;var h=Number.NaN}else s=.5>l?(max-min)/(max+min):(max-min)/(2-max-min);r===max?h=(g-b)/(max-min):g===max?h=2+(b-r)/(max-min):b===max&&(h=4+(r-g)/(max-min));h*=60;0>h&&(h+=360);return[h,s,l]};chroma.hsl=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,\nargs);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"hsl\"]),function(){})};_input.hsl=hsl2rgb;Color.prototype.hsl=function(){return rgb2hsl(this._rgb)};var rgb2hsv=function(){var b=unpack(arguments);var r=b[0];var g=b[1];b=b[2];var delta=Math.min(r,g,b);max=Math.max(r,g,b);delta=max-delta;var v=max/255;if(0===max){var h=Number.NaN;var s=0}else s=delta/max,r===max&&(h=(g-b)/delta),g===max&&(h=2+(b-r)/delta),b===max&&(h=4+(r-g)/delta),h*=60,0>h&&(h+=360);return[h,s,v]};chroma.hsv=\nfunction(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"hsv\"]),function(){})};_input.hsv=function(){var b,g;var args=unpack(arguments);var h=args[0];var s=args[1];var v=args[2];v*=255;if(0===s)var r=g=b=v;else{360===h&&(h=0);360<h&&(h-=360);0>h&&(h+=360);h/=60;var i=floor(h);var f=h-i;h=v*(1-s);var q=v*(1-s*f);s=v*(1-s*(1-f));switch(i){case 0:b=[v,s,h];r=b[0];g=b[1];\nb=b[2];break;case 1:b=[q,v,h];r=b[0];g=b[1];b=b[2];break;case 2:b=[h,v,s];r=b[0];g=b[1];b=b[2];break;case 3:b=[h,q,v];r=b[0];g=b[1];b=b[2];break;case 4:b=[s,h,v];r=b[0];g=b[1];b=b[2];break;case 5:b=[v,h,q],r=b[0],g=b[1],b=b[2]}}return[r,g,b,3<args.length?args[3]:1]};Color.prototype.hsv=function(){return rgb2hsv(this._rgb)};var rgb2num=function(){var ref=unpack(arguments);return(ref[0]<<16)+(ref[1]<<8)+ref[2]};chroma.num=function(num){return new Color(num,\"num\")};Color.prototype.num=function(mode){null==\nmode&&(mode=\"rgb\");return rgb2num(this._rgb,mode)};_input.num=function(num){if(\"number\"===type(num)&&0<=num&&16777215>=num)return[num>>16,num>>8&255,num&255,1];console.warn(\"unknown num color: \"+num);return[0,0,0,1]};_guess_formats.push({p:1,test:function(n){if(1===arguments.length&&\"number\"===type(n)&&0<=n&&16777215>=n)return\"num\"}});var rgb2hcg=function(){var b=unpack(arguments);var r=b[0];var g=b[1];b=b[2];var min=Math.min(r,g,b);max=Math.max(r,g,b);var delta=max-min;if(0===delta)var h=Number.NaN;\nelse r===max&&(h=(g-b)/delta),g===max&&(h=2+(b-r)/delta),b===max&&(h=4+(r-g)/delta),h*=60,0>h&&(h+=360);return[h,100*delta/255,min/(255-delta)*100]};chroma.hcg=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"hcg\"]),function(){})};_input.hcg=function(){var b;var args=unpack(arguments);var f=args[0];var c=args[1];var _g=args[2];c/=100;var g=g/100*255;var _c=255*\nc;if(0===c)var r=g=b=_g;else{360===f&&(f=0);360<f&&(f-=360);0>f&&(f+=360);f/=60;var i=floor(f);f-=i;_g*=1-c;c=_g+_c*(1-f);f=_g+_c*f;_c=_g+_c;switch(i){case 0:b=[_c,f,_g];r=b[0];g=b[1];b=b[2];break;case 1:b=[c,_c,_g];r=b[0];g=b[1];b=b[2];break;case 2:b=[_g,_c,f];r=b[0];g=b[1];b=b[2];break;case 3:b=[_g,c,_c];r=b[0];g=b[1];b=b[2];break;case 4:b=[f,_g,_c];r=b[0];g=b[1];b=b[2];break;case 5:b=[_c,_g,c],r=b[0],g=b[1],b=b[2]}}return[r,g,b,3<args.length?args[3]:1]};Color.prototype.hcg=function(){return rgb2hcg(this._rgb)};\nvar css2rgb=function(css){var i;css=css.toLowerCase();if(null!=chroma.colors&&chroma.colors[css])return hex2rgb(chroma.colors[css]);if(i=css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)){var hsl=i.slice(1,4);for(i=css=0;2>=css;i=++css)hsl[i]=+hsl[i];hsl[3]=1}else if(i=css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))for(hsl=i.slice(1,5),i=css=0;3>=css;i=++css)hsl[i]=+hsl[i];else if(i=css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)){hsl=\ni.slice(1,4);for(i=css=0;2>=css;i=++css)hsl[i]=round(2.55*hsl[i]);hsl[3]=1}else if(i=css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)){hsl=i.slice(1,5);for(i=css=0;2>=css;i=++css)hsl[i]=round(2.55*hsl[i]);hsl[3]=+hsl[3]}else if(i=css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/))hsl=i.slice(1,4),hsl[1]*=.01,hsl[2]*=.01,hsl=hsl2rgb(hsl),hsl[3]=1;else if(i=css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/))hsl=\ni.slice(1,4),hsl[1]*=.01,hsl[2]*=.01,hsl=hsl2rgb(hsl),hsl[3]=+i[4];return hsl};var rgb2css=function(rgba){var mode=1>rgba[3]?\"rgba\":\"rgb\";if(\"rgb\"===mode)return mode+\"(\"+rgba.slice(0,3).map(round).join(\",\")+\")\";if(\"rgba\"===mode)return mode+\"(\"+rgba.slice(0,3).map(round).join(\",\")+\",\"+rgba[3]+\")\"};var rnd=function(a){return round(100*a)/100};var hsl2css=function(hsl,alpha){var mode=1>alpha?\"hsla\":\"hsl\";hsl[0]=rnd(hsl[0]||0);hsl[1]=rnd(100*hsl[1])+\"%\";hsl[2]=rnd(100*hsl[2])+\"%\";\"hsla\"===mode&&(hsl[3]=\nalpha);return mode+\"(\"+hsl.join(\",\")+\")\"};_input.css=function(h){return css2rgb(h)};chroma.css=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"css\"]),function(){})};Color.prototype.css=function(mode){null==mode&&(mode=\"rgb\");if(\"rgb\"===mode.slice(0,3))return rgb2css(this._rgb);if(\"hsl\"===mode.slice(0,3))return hsl2css(this.hsl(),this.alpha())};_input.named=function(name){return hex2rgb(w3cx11[name])};\n_guess_formats.push({p:5,test:function(n){if(1===arguments.length&&null!=w3cx11[n])return\"named\"}});Color.prototype.name=function(n){var k;arguments.length&&(w3cx11[n]&&(this._rgb=hex2rgb(w3cx11[n])),this._rgb[3]=1,this);var h=this.hex();for(k in w3cx11)if(h===w3cx11[k])return k;return h};var lch2lab=function(){var h=unpack(arguments);var l=h[0];var c=h[1];h=h[2];h*=DEG2RAD;return[l,cos(h)*c,sin(h)*c]};var lch2rgb=function(){var args=unpack(arguments);var b=lch2lab(args[0],args[1],args[2]);var L=\nb[0];var a=b[1];b=b[2];b=lab2rgb(L,a,b);a=b[0];L=b[1];b=b[2];return[a,L,b,3<args.length?args[3]:1]};var lab2lch=function(){var c=unpack(arguments);var l=c[0];var a=c[1];var b=c[2];c=sqrt(a*a+b*b);a=(atan2(b,a)*RAD2DEG+360)%360;0===round(1E4*c)&&(a=Number.NaN);return[l,c,a]};var rgb2lch=function(){var b=unpack(arguments);var l=b[0];var a=b[1];b=b[2];b=rgb2lab(l,a,b);l=b[0];a=b[1];b=b[2];return lab2lch(l,a,b)};chroma.lch=function(){var args=unpack(arguments);return new Color(args,\"lch\")};chroma.hcl=\nfunction(){var args=unpack(arguments);return new Color(args,\"hcl\")};_input.lch=lch2rgb;_input.hcl=function(){var ref=unpack(arguments);return lch2rgb([ref[2],ref[1],ref[0]])};Color.prototype.lch=function(){return rgb2lch(this._rgb)};Color.prototype.hcl=function(){return rgb2lch(this._rgb).reverse()};var rgb2cmyk=function(mode){null==mode&&(mode=\"rgb\");var b=unpack(arguments);var r=b[0];var g=b[1];b=b[2];r/=255;g/=255;b/=255;var k=1-Math.max(r,Math.max(g,b));var f=1>k?1/(1-k):0;return[(1-r-k)*f,(1-\ng-k)*f,(1-b-k)*f,k]};var cmyk2rgb=function(){var alpha=unpack(arguments);var c=alpha[0];var m=alpha[1];var y=alpha[2];var k=alpha[3];alpha=4<alpha.length?alpha[4]:1;return 1===k?[0,0,0,alpha]:[1<=c?0:255*(1-c)*(1-k),1<=m?0:255*(1-m)*(1-k),1<=y?0:255*(1-y)*(1-k),alpha]};_input.cmyk=function(){return cmyk2rgb(unpack(arguments))};chroma.cmyk=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"cmyk\"]),\nfunction(){})};Color.prototype.cmyk=function(){return rgb2cmyk(this._rgb)};_input.gl=function(){var i,k,o,v;var rgb=function(){var ref=unpack(arguments);var results=[];for(k in ref)v=ref[k],results.push(v);return results}.apply(this,arguments);for(i=o=0;2>=o;i=++o)rgb[i]*=255;return rgb};chroma.gl=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"gl\"]),function(){})};\nColor.prototype.gl=function(){var rgb=this._rgb;return[rgb[0]/255,rgb[1]/255,rgb[2]/255,rgb[3]]};var rgb2luminance=function(r,g,b){var ref=unpack(arguments);r=ref[0];g=ref[1];b=ref[2];r=luminance_x(r);g=luminance_x(g);b=luminance_x(b);return.2126*r+.7152*g+.0722*b};var luminance_x=function(x){x/=255;return.03928>=x?x/12.92:pow((x+.055)/1.055,2.4)};_interpolators.push([\"rgb\",function(col1,col2,f,m){col1=col1._rgb;col2=col2._rgb;return new Color(col1[0]+f*(col2[0]-col1[0]),col1[1]+f*(col2[1]-col1[1]),\ncol1[2]+f*(col2[2]-col1[2]),m)}]);Color.prototype.luminance=function(lum,mode){null==mode&&(mode=\"rgb\");if(!arguments.length)return rgb2luminance(this._rgb);var cur_lum=this._rgb;if(0===lum)cur_lum=[0,0,0,this._rgb[3]];else if(1===lum)cur_lum=[255,255,255,this[3]];else{cur_lum=rgb2luminance(this._rgb);var max_iter=20;var test=function(l,h){var m=l.interpolate(h,.5,mode);var lm=m.luminance();return 1E-7>Math.abs(lum-lm)||!max_iter--?m:lm>lum?test(l,m):test(m,h)};cur_lum=cur_lum>lum?test(chroma(\"black\"),\nthis).rgba():test(this,chroma(\"white\")).rgba()}return chroma(cur_lum).alpha(this.alpha())};var temperature2rgb=function(kelvin){kelvin/=100;if(66>kelvin){var r=255;var g=-155.25485562709179-.44596950469579133*(g=kelvin-2)+104.49216199393888*log(g);var b=20>kelvin?0:-254.76935184120902+.8274096064007395*(b=kelvin-10)+115.67994401066147*log(b)}else r=351.97690566805693+.114206453784165*(r=kelvin-55)-40.25366309332127*log(r),g=325.4494125711974+.07943456536662342*(g=kelvin-50)-28.0852963507957*log(g),\nb=255;return[r,g,b]};var rgb2temperature=function(){var maxTemp;var b=unpack(arguments);var r=b[0];b=b[2];var minTemp=1E3;for(maxTemp=4E4;.4<maxTemp-minTemp;){var temp=.5*(maxTemp+minTemp);var rgb=temperature2rgb(temp);rgb[2]/rgb[0]>=b/r?maxTemp=temp:minTemp=temp}return round(temp)};chroma.temperature=chroma.kelvin=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"temperature\"]),\nfunction(){})};_input.temperature=_input.kelvin=_input.K=temperature2rgb;Color.prototype.temperature=function(){return rgb2temperature(this._rgb)};Color.prototype.kelvin=Color.prototype.temperature;chroma.contrast=function(a,b){var ref,ref1;if(\"string\"===(ref=type(a))||\"number\"===ref)a=new Color(a);if(\"string\"===(ref1=type(b))||\"number\"===ref1)b=new Color(b);a=a.luminance();b=b.luminance();return a>b?(a+.05)/(b+.05):(b+.05)/(a+.05)};chroma.distance=function(a,b,mode){var i,ref,ref1;null==mode&&(mode=\n\"lab\");if(\"string\"===(ref=type(a))||\"number\"===ref)a=new Color(a);if(\"string\"===(ref1=type(b))||\"number\"===ref1)b=new Color(b);a=a.get(mode);mode=b.get(mode);ref=0;for(i in a)b=(a[i]||0)-(mode[i]||0),ref+=b*b;return Math.sqrt(ref)};chroma.deltaE=function(a,b,L,C){var L2,a1,h1;null==L&&(L=1);null==C&&(C=1);if(\"string\"===(L2=type(a))||\"number\"===L2)a=new Color(a);if(\"string\"===(a1=type(b))||\"number\"===a1)b=new Color(b);L2=a.lab();a=L2[0];a1=L2[1];var b1=L2[2];b=b.lab();L2=b[0];var a2=b[1];var b2=b[2];\nvar c1=sqrt(a1*a1+b1*b1);var c2=sqrt(a2*a2+b2*b2);var sl=16>a?.511:.040975*a/(1+.01765*a);b=.0638*c1/(1+.0131*c1)+.638;for(h1=1E-6>c1?0:180*atan2(b1,a1)/PI;0>h1;)h1+=360;for(;360<=h1;)h1-=360;h1=164<=h1&&345>=h1?.56+abs(.2*cos(PI*(h1+168)/180)):.36+abs(.4*cos(PI*(h1+35)/180));var c4=c1*c1*c1*c1;c4=sqrt(c4/(c4+1900));c1-=c2;a1-=a2;b1-=b2;L=(a-L2)/(L*sl);C=c1/(C*b);a=b*(c4*h1+1-c4);return sqrt(L*L+C*C+(a1*a1+b1*b1-c1*c1)/(a*a))};Color.prototype.get=function(modechan){var channel=modechan.split(\".\");\nmodechan=channel[0];channel=channel[1];var src=this[modechan]();if(channel){var i=modechan.indexOf(channel);return-1<i?src[i]:console.warn(\"unknown channel \"+channel+\" in mode \"+modechan)}return src};Color.prototype.set=function(modechan,value){var channel=modechan.split(\".\");modechan=channel[0];if(channel=channel[1]){var src=this[modechan]();var i=modechan.indexOf(channel);if(-1<i)if(\"string\"===type(value))switch(value.charAt(0)){case \"+\":src[i]+=+value;break;case \"-\":src[i]+=+value;break;case \"*\":src[i]*=\n+value.substr(1);break;case \"/\":src[i]/=+value.substr(1);break;default:src[i]=+value}else src[i]=value;else console.warn(\"unknown channel \"+channel+\" in mode \"+modechan)}else src=value;return chroma(src,modechan).alpha(this.alpha())};Color.prototype.clipped=function(){return this._rgb._clipped||!1};Color.prototype.alpha=function(a){return arguments.length?chroma.rgb([this._rgb[0],this._rgb[1],this._rgb[2],a]):this._rgb[3]};Color.prototype.darken=function(amount){null==amount&&(amount=1);var lab=this.lab();\nlab[0]-=LAB_CONSTANTS.Kn*amount;return chroma.lab(lab).alpha(this.alpha())};Color.prototype.brighten=function(amount){null==amount&&(amount=1);return this.darken(-amount)};Color.prototype.darker=Color.prototype.darken;Color.prototype.brighter=Color.prototype.brighten;Color.prototype.saturate=function(amount){null==amount&&(amount=1);var lch=this.lch();lch[1]+=amount*LAB_CONSTANTS.Kn;0>lch[1]&&(lch[1]=0);return chroma.lch(lch).alpha(this.alpha())};Color.prototype.desaturate=function(amount){null==\namount&&(amount=1);return this.saturate(-amount)};Color.prototype.premultiply=function(){var rgb=this.rgb();var a=this.alpha();return chroma(rgb[0]*a,rgb[1]*a,rgb[2]*a,a)};var blend=function(bottom,top,mode){if(!blend[mode])throw\"unknown blend mode \"+mode;return blend[mode](bottom,top)};blend_f=function(f){return function(bottom,top){top=chroma(top).rgb();bottom=chroma(bottom).rgb();return chroma(f(top,bottom),\"rgb\")}};var each=function(f){return function(c0,c1){var i,o;var out=[];for(i=o=0;3>=o;i=\n++o)out[i]=f(c0[i],c1[i]);return out}};blend.normal=blend_f(each(function(a,b){return a}));blend.multiply=blend_f(each(function(a,b){return a*b/255}));blend.screen=blend_f(each(function(a,b){return 255*(1-(1-a/255)*(1-b/255))}));blend.overlay=blend_f(each(function(a,b){return 128>b?2*a*b/255:255*(1-2*(1-a/255)*(1-b/255))}));blend.darken=blend_f(each(function(a,b){return a>b?b:a}));blend.lighten=blend_f(each(function(a,b){return a>b?a:b}));blend.dodge=blend_f(each(function(a,b){if(255===a)return 255;\na=b/255*255/(1-a/255);return 255<a?255:a}));blend.burn=blend_f(each(function(a,b){return 255*(1-(1-b/255)/(a/255))}));chroma.blend=blend;chroma.analyze=function(data){var len;var r={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0};var o=0;for(len=data.length;o<len;o++){var val=data[o];null==val||isNaN(val)||(r.values.push(val),r.sum+=val,val<r.min&&(r.min=val),val>r.max&&(r.max=val),r.count+=1)}r.domain=[r.min,r.max];r.limits=function(mode,num){return chroma.limits(r,mode,num)};\nreturn r};chroma.scale=function(colors$jscomp$0,positions){var _mode=\"rgb\";var _nacol=chroma(\"#ccc\");var _spread=0;var _domain=[0,1];var _pos=[];var _padding=[0,0];var _classes=!1;var _colors=[];var _out=!1;var _min=0;var _max=1;var _correctLightness=!1;var _colorCache={};var _useCache=!0;var _gamma=1;var setColors=function(colors){var o,ref;null==colors&&(colors=[\"#fff\",\"#000\"]);null!=colors&&\"string\"===type(colors)&&null!=chroma.brewer&&(colors=chroma.brewer[colors]||chroma.brewer[colors.toLowerCase()]||\ncolors);if(\"array\"===type(colors)){colors=colors.slice(0);var c=o=0;for(ref=colors.length-1;0<=ref?o<=ref:o>=ref;c=0<=ref?++o:--o){var col=colors[c];\"string\"===type(col)&&(colors[c]=chroma(col))}c=o=_pos.length=0;for(col=colors.length-1;0<=col?o<=col:o>=col;c=0<=col?++o:--o)_pos.push(c/(colors.length-1))}resetCache();return _colors=colors};var getClass=function(value){var i;if(null!=_classes){var n=_classes.length-1;for(i=0;i<n&&value>=_classes[i];)i++;return i-1}return 0};var tmap=function(t){return t};\nvar getColor=function(val,bypassMap){var o,ref;null==bypassMap&&(bypassMap=!1);if(isNaN(val))return _nacol;bypassMap||(_classes&&2<_classes.length?(val=getClass(val),val/=_classes.length-2):val=_max!==_min?(val-_min)/(_max-_min):1);bypassMap||(val=tmap(val));1!==_gamma&&(val=pow(val,_gamma));val=_padding[0]+val*(1-_padding[0]-_padding[1]);val=Math.min(1,Math.max(0,val));var k=Math.floor(1E4*val);if(_useCache&&_colorCache[k])var col=_colorCache[k];else{if(\"array\"===type(_colors))for(bypassMap=o=0,\nref=_pos.length-1;0<=ref?o<=ref:o>=ref;bypassMap=0<=ref?++o:--o){var p=_pos[bypassMap];if(val<=p){col=_colors[bypassMap];break}if(val>=p&&bypassMap===_pos.length-1){col=_colors[bypassMap];break}if(val>p&&val<_pos[bypassMap+1]){val=(val-p)/(_pos[bypassMap+1]-p);col=chroma.interpolate(_colors[bypassMap],_colors[bypassMap+1],val,_mode);break}}else\"function\"===type(_colors)&&(col=_colors(val));_useCache&&(_colorCache[k]=col)}return col};var resetCache=function(){return _colorCache={}};setColors(colors$jscomp$0);\nvar f=function(v){v=chroma(getColor(v));return _out&&v[_out]?v[_out]():v};f.classes=function(classes){if(null!=classes){if(\"array\"===type(classes))_classes=classes,_domain=[classes[0],classes[classes.length-1]];else{var d=chroma.analyze(_domain);_classes=0===classes?[d.min,d.max]:chroma.limits(d,\"e\",classes)}return f}return _classes};f.domain=function(domain){var w;if(!arguments.length)return _domain;_min=domain[0];_max=domain[domain.length-1];_pos=[];var k=_colors.length;if(domain.length===k&&_min!==\n_max){var o=0;for(k=domain.length;o<k;o++){var c=domain[o];_pos.push((c-_min)/(_max-_min))}}else for(c=w=0,o=k-1;0<=o?w<=o:w>=o;c=0<=o?++w:--w)_pos.push(c/(k-1));_domain=[_min,_max];return f};f.mode=function(_m){if(!arguments.length)return _mode;_mode=_m;resetCache();return f};f.range=function(colors,_pos){setColors(colors,_pos);return f};f.out=function(_o){_out=_o;return f};f.spread=function(val){if(!arguments.length)return _spread;_spread=val;return f};f.correctLightness=function(v){null==v&&(v=\n!0);_correctLightness=v;resetCache();tmap=_correctLightness?function(t){var L0=getColor(0,!0).lab()[0];var L1=getColor(1,!0).lab()[0];var pol=L0>L1;var L_actual=getColor(t,!0).lab()[0];L0+=(L1-L0)*t;L_actual-=L0;var t0=0;var t1=1;for(L1=20;.01<Math.abs(L_actual)&&0<L1--;)pol&&(L_actual*=-1),0>L_actual?(t0=t,t+=.5*(t1-t)):(t1=t,t+=.5*(t0-t)),L_actual=getColor(t,!0).lab()[0],L_actual-=L0;return t}:function(t){return t};return f};f.padding=function(p){return null!=p?(\"number\"===type(p)&&(p=[p,p]),_padding=\np,f):_padding};f.colors=function(numColors,out){var ref,results,w;2>arguments.length&&(out=\"hex\");var i$jscomp$0=[];if(0===arguments.length)i$jscomp$0=_colors.slice(0);else if(1===numColors)i$jscomp$0=[f(.5)];else if(1<numColors){var dm=_domain[0];var dd=_domain[1]-dm;i$jscomp$0=function(){results=[];for(var o=0;0<=numColors?o<numColors:o>numColors;0<=numColors?o++:o--)results.push(o);return results}.apply(this).map(function(i){return f(dm+i/(numColors-1)*dd)})}else{colors$jscomp$0=[];var samples=\n[];if(_classes&&2<_classes.length)for(i$jscomp$0=w=1,ref=_classes.length;1<=ref?w<ref:w>ref;i$jscomp$0=1<=ref?++w:--w)samples.push(.5*(_classes[i$jscomp$0-1]+_classes[i$jscomp$0]));else samples=_domain;i$jscomp$0=samples.map(function(v){return f(v)})}chroma[out]&&(i$jscomp$0=i$jscomp$0.map(function(c){return c[out]()}));return i$jscomp$0};f.cache=function(c){return null!=c?(_useCache=c,f):_useCache};f.gamma=function(g){return null!=g?(_gamma=g,f):_gamma};return f};null==chroma.scales&&(chroma.scales=\n{});chroma.scales.cool=function(){return chroma.scale([chroma.hsl(180,1,.9),chroma.hsl(250,.7,.4)])};chroma.scales.hot=function(){return chroma.scale([\"#000\",\"#f00\",\"#ff0\",\"#fff\"],[0,.25,.75,1]).mode(\"rgb\")};chroma.analyze=function(data,key,filter){var k$jscomp$0;var r={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0};null==filter&&(filter=function(){return!0});var add=function(val){null==val||isNaN(val)||(r.values.push(val),r.sum+=val,val<r.min&&(r.min=val),val>r.max&&(r.max=\nval),r.count+=1)};var visit=function(val,k){if(filter(val,k))return null!=key&&\"function\"===type(key)?add(key(val)):null!=key&&\"string\"===type(key)||\"number\"===type(key)?add(val[key]):add(val)};if(\"array\"===type(data)){var o=0;for(k$jscomp$0=data.length;o<k$jscomp$0;o++){var val$jscomp$0=data[o];visit(val$jscomp$0)}}else for(k$jscomp$0 in data)val$jscomp$0=data[k$jscomp$0],visit(val$jscomp$0,k$jscomp$0);r.domain=[r.min,r.max];r.limits=function(mode,num){return chroma.limits(r,mode,num)};return r};\nchroma.limits=function(data,mode,num){var aa,ab,ai,best,n,ref5,ref6;null==mode&&(mode=\"equal\");null==num&&(num=7);\"array\"===type(data)&&(data=chroma.analyze(data));var cluster=data.min;max=data.max;var max_log=data.values.sort(function(a,b){return a-b});if(1===num)return[cluster,max];data=[];\"c\"===mode.substr(0,1)&&(data.push(cluster),data.push(max));if(\"e\"===mode.substr(0,1)){data.push(cluster);mode=max_log=1;for(aa=num-1;1<=aa?max_log<=aa:max_log>=aa;mode=1<=aa?++max_log:--max_log)data.push(cluster+\nmode/num*(max-cluster));data.push(max)}else if(\"l\"===mode.substr(0,1)){if(0>=cluster)throw\"Logarithmic scales are only possible for values \\x3e 0\";aa=Math.LOG10E*log(cluster);max_log=Math.LOG10E*log(max);data.push(cluster);mode=best=1;for(n=num-1;1<=n?best<=n:best>=n;mode=1<=n?++best:--best)data.push(pow(10,aa+mode/num*(max_log-aa)));data.push(max)}else if(\"q\"===mode.substr(0,1)){data.push(cluster);mode=aa=1;for(n=num-1;1<=n?aa<=n:aa>=n;mode=1<=n?++aa:--aa)best=(max_log.length-1)*mode/num,mode=floor(best),\nmode===best?data.push(max_log[mode]):(best-=mode,data.push(max_log[mode]*(1-best)+max_log[mode+1]*best));data.push(max)}else if(\"k\"===mode.substr(0,1)){n=max_log.length;aa=Array(n);var clusterSizes=Array(num);var ae=!0;var nb_iters=0;var ak=null;ak=[];ak.push(cluster);mode=ab=1;for(ai=num-1;1<=ai?ab<=ai:ab>=ai;mode=1<=ai?++ab:--ab)ak.push(cluster+mode/num*(max-cluster));for(ak.push(max);ae;){cluster=mode=0;for(ab=num-1;0<=ab?mode<=ab:mode>=ab;cluster=0<=ab?++mode:--mode)clusterSizes[cluster]=0;mode=\nab=0;for(ref5=n-1;0<=ref5?ab<=ref5:ab>=ref5;mode=0<=ref5?++ab:--ab){var value=max_log[mode];var mindist=Number.MAX_VALUE;cluster=ae=0;for(ref6=num-1;0<=ref6?ae<=ref6:ae>=ref6;cluster=0<=ref6?++ae:--ae)ai=abs(ak[cluster]-value),ai<mindist&&(mindist=ai,best=cluster);clusterSizes[best]++;aa[mode]=best}ab=Array(num);cluster=mode=0;for(ae=num-1;0<=ae?mode<=ae:mode>=ae;cluster=0<=ae?++mode:--mode)ab[cluster]=null;mode=ae=0;for(ai=n-1;0<=ai?ae<=ai:ae>=ai;mode=0<=ai?++ae:--ae)cluster=aa[mode],ab[cluster]=\nnull===ab[cluster]?max_log[mode]:ab[cluster]+max_log[mode];cluster=ae=0;for(ai=num-1;0<=ai?ae<=ai:ae>=ai;cluster=0<=ai?++ae:--ae)ab[cluster]*=1/clusterSizes[cluster];ae=!1;cluster=ai=0;for(mindist=num-1;0<=mindist?ai<=mindist:ai>=mindist;cluster=0<=mindist?++ai:--ai)if(ab[cluster]!==ak[mode]){ae=!0;break}ak=ab;nb_iters++;200<nb_iters&&(ae=!1)}best={};cluster=mode=0;for(ak=num-1;0<=ak?mode<=ak:mode>=ak;cluster=0<=ak?++mode:--mode)best[cluster]=[];mode=ak=0;for(--n;0<=n?ak<=n:ak>=n;mode=0<=n?++ak:--ak)cluster=\naa[mode],best[cluster].push(max_log[mode]);max_log=[];cluster=mode=0;for(--num;0<=num?mode<=num:mode>=num;cluster=0<=num?++mode:--mode)max_log.push(best[cluster][0]),max_log.push(best[cluster][best[cluster].length-1]);max_log=max_log.sort(function(a,b){return a-b});data.push(max_log[0]);mode=num=1;for(aa=max_log.length-1;num<=aa;mode=num+=2)mode=max_log[mode],isNaN(mode)||-1!==data.indexOf(mode)||data.push(mode)}return data};var rgb2hsi=function(){var b=unpack(arguments);var h=b[0];var g=b[1];b=b[2];\nTWOPI=2*Math.PI;h/=255;g/=255;b/=255;var min=Math.min(h,g,b);var i=(h+g+b)/3;min=1-min/i;0===min?h=0:(h=(h-g+(h-b))/2/Math.sqrt((h-g)*(h-g)+(h-b)*(g-b)),h=Math.acos(h),b>g&&(h=TWOPI-h),h/=TWOPI);return[360*h,min,i]};chroma.hsi=function(){return function(func,args,ctor){ctor.prototype=func.prototype;ctor=new ctor;func=func.apply(ctor,args);return Object(func)===func?func:ctor}(Color,slice.call(arguments).concat([\"hsi\"]),function(){})};_input.hsi=function(h,s,i){var args=unpack(arguments);h=args[0];\ns=args[1];i=args[2];isNaN(h)&&(h=0);h/=360;if(h<1/3){var b=(1-s)/3;var r=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3;var g=1-(b+r)}else h<2/3?(h-=1/3,r=(1-s)/3,g=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3,b=1-(r+g)):(h-=2/3,g=(1-s)/3,b=(1+s*cos(TWOPI*h)/cos(PITHIRD-TWOPI*h))/3,r=1-(g+b));r=limit(i*r*3);g=limit(i*g*3);b=limit(i*b*3);return[255*r,255*g,255*b,3<args.length?args[3]:1]};Color.prototype.hsi=function(){return rgb2hsi(this._rgb)};var interpolate_hsx=function(col1,col2,f,m){var sat;if(\"hsl\"===\nm){var xyz0=col1.hsl();var xyz1=col2.hsl()}else if(\"hsv\"===m)xyz0=col1.hsv(),xyz1=col2.hsv();else if(\"hcg\"===m)xyz0=col1.hcg(),xyz1=col2.hcg();else if(\"hsi\"===m)xyz0=col1.hsi(),xyz1=col2.hsi();else if(\"lch\"===m||\"hcl\"===m)m=\"hcl\",xyz0=col1.hcl(),xyz1=col2.hcl();if(\"h\"===m.substr(0,1)){var hue0=xyz0[0];var sat0=xyz0[1];var lbv0=xyz0[2];var hue1=xyz1[0];var sat1=xyz1[1];var lbv1=xyz1[2]}isNaN(hue0)||isNaN(hue1)?isNaN(hue0)?isNaN(hue1)?col1=Number.NaN:(col1=hue1,1!==lbv0&&0!==lbv0||\"hsv\"===m||(sat=sat1)):\n(col1=hue0,1!==lbv1&&0!==lbv1||\"hsv\"===m||(sat=sat0)):col1=hue0+f*(hue1>hue0&&180<hue1-hue0?hue1-(hue0+360):hue1<hue0&&180<hue0-hue1?hue1+360-hue0:hue1-hue0);null==sat&&(sat=sat0+f*(sat1-sat0));return chroma[m](col1,sat,lbv0+f*(lbv1-lbv0))};_interpolators=_interpolators.concat(function(){var len;var ref=\"hsv hsl hsi hcl lch hcg\".split(\" \");var results=[];var o=0;for(len=ref.length;o<len;o++)m=ref[o],results.push([m,interpolate_hsx]);return results}());_interpolators.push([\"num\",function(col1,col2,\nf,m){col1=col1.num();col2=col2.num();return chroma.num(col1+(col2-col1)*f,\"num\")}]);_interpolators.push([\"lab\",function(col1,col2,f,m){col1=col1.lab();col2=col2.lab();return new Color(col1[0]+f*(col2[0]-col1[0]),col1[1]+f*(col2[1]-col1[1]),col1[2]+f*(col2[2]-col1[2]),m)}])}).call(this)}","~:source","shadow$provide[\"module$node_modules$chroma_js$chroma\"] = function(global,process,require,module,exports,shadow$shims) {\n\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["springgreen","aqua","blue","cool","olivedrab","lightskyblue","K","greenyellow","ivory","lab","range","OrRd","navajowhite","cyan","random","gamma","mediumturquoise","cmyk","darkslateblue","lawngreen","values","min","rgba","PuOr","saddlebrown","white","hsv","Dark2","silver","purple","Purples","_unclipped","gainsboro","plum","midnightblue","blend","magenta","paleturquoise","lch","Yn","Xn","interpolate","hotpink","darken","Pastel1","Blues","brighten","Spectral","PiYG","Paired","_input","rgb","mediumorchid","Oranges","gold","t1","powderblue","lightgoldenrod","GnBu","lighten","average","papayawhip","prototype","multiply","clipped","bisque","scale","purple3","salmon","forestgreen","RdYlGn","hsi","burn","blanchedalmond","grey","crimson","darkturquoise","steelblue","mediumvioletred","deltaE","aquamarine","kelvin","darkgoldenrod","p","hex","sum","YlGnBu","orange","darkgray","lime","hot","cornflowerblue","aliceblue","lightgoldenrodyellow","lemonchiffon","css","max","lightsalmon","padding","deepskyblue","lightgreen","palegoldenrod","lrgb","darkred","rotations","violet","hsl","gray","toString","screen","goldenrod","darksalmon","BrBG","t3","skyblue","Accent","darkviolet","cubehelix","fuchsia","count","lightcoral","moccasin","darkgreen","lightyellow","maroon2","lavenderblush","sienna","normal","RdGy","burlywood","ghostwhite","cache","mode","coral","linen","lightslategray","azure","analyze","darkolivegreen","floralwhite","yellow","lightness","RdBu","name","beige","correctLightness","PRGn","scales","Greens","wheat","slategray","contrast","hue","bezier","darkmagenta","darkcyan","dodgerblue","PuBu","YlOrRd","temperature","laserlemon","mediumseagreen","darkgrey","Zn","mediumblue","pink","Greys","mistyrose","desaturate","teal","start","olive","RdPu","navy","darkkhaki","Set3","green","classes","darkblue","distance","Viridis","domain","red","maroon","limegreen","brown","seashell","chocolate","antiquewhite","length","tan","seagreen","PuBuGn","out","cornflower","palevioletred","rosybrown","cornsilk","named","lavender","mediumpurple","black","snow","maroon3","lightseagreen","darker","saturate","palegreen","gl","chroma","deeppink","premultiply","version","dimgray","brewer","clone","t2","blueviolet","cadetblue","alpha","slateblue","_clipped","hcg","BuGn","mediumspringgreen","lightpink","firebrick","set","num","dimgrey","khaki","dodge","Pastel2","royalblue","sandybrown","YlOrBr","Set1","mix","orangered","limits","darkslategray","orchid","indianred","darkorchid","honeydew","oldlace","colors","whitesmoke","mediumaquamarine","lightgrey","t0","peru","get","overlay","chartreuse","lightcyan","lightblue","tomato","mintcream","Kn","spread","Set2","peachpuff","thistle","lightsteelblue","YlGn","BuPu","mediumslateblue","darkslategrey","Reds","turquoise","slategrey","test","rebeccapurple","PuRd","indigo","lightslategrey","darkorange","yellowgreen","_rgb","brighter","lightgray","luminance","purple2","RdYlBu","darkseagreen","hcl"]],"~:compiled-at",1539023746021,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$chroma_js$chroma.js\",\n\"lineCount\":87,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/chroma-js/chroma.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$chroma_js$chroma\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\n/**\\n * @license\\n *\\n * chroma.js - JavaScript library for color conversions\\n * \\n * Copyright (c) 2011-2017, Gregor Aisch\\n * All rights reserved.\\n * \\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n * \\n * 1. Redistributions of source code must retain the above copyright notice, this\\n *    list of conditions and the following disclaimer.\\n * \\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n *    this list of conditions and the following disclaimer in the documentation\\n *    and/or other materials provided with the distribution.\\n * \\n * 3. The name Gregor Aisch may not be used to endorse or promote products\\n *    derived from this software without specific prior written permission.\\n * \\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\n(function() {\\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\\n    slice = [].slice;\\n\\n  type = (function() {\\n\\n    /*\\n    for browser-safe type checking+\\n    ported from jQuery's $.type\\n     */\\n    var classToType, len, name, o, ref;\\n    classToType = {};\\n    ref = \\\"Boolean Number String Function Array Date RegExp Undefined Null\\\".split(\\\" \\\");\\n    for (o = 0, len = ref.length; o < len; o++) {\\n      name = ref[o];\\n      classToType[\\\"[object \\\" + name + \\\"]\\\"] = name.toLowerCase();\\n    }\\n    return function(obj) {\\n      var strType;\\n      strType = Object.prototype.toString.call(obj);\\n      return classToType[strType] || \\\"object\\\";\\n    };\\n  })();\\n\\n  limit = function(x, min, max) {\\n    if (min == null) {\\n      min = 0;\\n    }\\n    if (max == null) {\\n      max = 1;\\n    }\\n    if (x < min) {\\n      x = min;\\n    }\\n    if (x > max) {\\n      x = max;\\n    }\\n    return x;\\n  };\\n\\n  unpack = function(args) {\\n    if (args.length >= 3) {\\n      return Array.prototype.slice.call(args);\\n    } else {\\n      return args[0];\\n    }\\n  };\\n\\n  clip_rgb = function(rgb) {\\n    var i, o;\\n    rgb._clipped = false;\\n    rgb._unclipped = rgb.slice(0);\\n    for (i = o = 0; o < 3; i = ++o) {\\n      if (i < 3) {\\n        if (rgb[i] < 0 || rgb[i] > 255) {\\n          rgb._clipped = true;\\n        }\\n        if (rgb[i] < 0) {\\n          rgb[i] = 0;\\n        }\\n        if (rgb[i] > 255) {\\n          rgb[i] = 255;\\n        }\\n      } else if (i === 3) {\\n        if (rgb[i] < 0) {\\n          rgb[i] = 0;\\n        }\\n        if (rgb[i] > 1) {\\n          rgb[i] = 1;\\n        }\\n      }\\n    }\\n    if (!rgb._clipped) {\\n      delete rgb._unclipped;\\n    }\\n    return rgb;\\n  };\\n\\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\\n\\n  TWOPI = PI * 2;\\n\\n  PITHIRD = PI / 3;\\n\\n  DEG2RAD = PI / 180;\\n\\n  RAD2DEG = 180 / PI;\\n\\n  chroma = function() {\\n    if (arguments[0] instanceof Color) {\\n      return arguments[0];\\n    }\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, arguments, function(){});\\n  };\\n\\n  chroma[\\\"default\\\"] = chroma;\\n\\n  _interpolators = [];\\n\\n  if ((typeof module !== \\\"undefined\\\" && module !== null) && (module.exports != null)) {\\n    module.exports = chroma;\\n  }\\n\\n  if (typeof define === 'function' && define.amd) {\\n    define([], function() {\\n      return chroma;\\n    });\\n  } else {\\n    root = typeof exports !== \\\"undefined\\\" && exports !== null ? exports : this;\\n    root.chroma = chroma;\\n  }\\n\\n  chroma.version = '1.3.7';\\n\\n  _input = {};\\n\\n  _guess_formats = [];\\n\\n  _guess_formats_sorted = false;\\n\\n  Color = (function() {\\n    function Color() {\\n      var arg, args, chk, len, len1, me, mode, o, w;\\n      me = this;\\n      args = [];\\n      for (o = 0, len = arguments.length; o < len; o++) {\\n        arg = arguments[o];\\n        if (arg != null) {\\n          args.push(arg);\\n        }\\n      }\\n      if (args.length > 1) {\\n        mode = args[args.length - 1];\\n      }\\n      if (_input[mode] != null) {\\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\\n      } else {\\n        if (!_guess_formats_sorted) {\\n          _guess_formats = _guess_formats.sort(function(a, b) {\\n            return b.p - a.p;\\n          });\\n          _guess_formats_sorted = true;\\n        }\\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\\n          chk = _guess_formats[w];\\n          mode = chk.test.apply(chk, args);\\n          if (mode) {\\n            break;\\n          }\\n        }\\n        if (mode) {\\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\\n        }\\n      }\\n      if (me._rgb == null) {\\n        console.warn('unknown format: ' + args);\\n      }\\n      if (me._rgb == null) {\\n        me._rgb = [0, 0, 0];\\n      }\\n      if (me._rgb.length === 3) {\\n        me._rgb.push(1);\\n      }\\n    }\\n\\n    Color.prototype.toString = function() {\\n      return this.hex();\\n    };\\n\\n    Color.prototype.clone = function() {\\n      return chroma(me._rgb);\\n    };\\n\\n    return Color;\\n\\n  })();\\n\\n  chroma._input = _input;\\n\\n\\n  /**\\n  \\tColorBrewer colors for chroma.js\\n  \\n  \\tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \\n  \\tPennsylvania State University.\\n  \\n  \\tLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); \\n  \\tyou may not use this file except in compliance with the License.\\n  \\tYou may obtain a copy of the License at\\t\\n  \\thttp://www.apache.org/licenses/LICENSE-2.0\\n  \\n  \\tUnless required by applicable law or agreed to in writing, software distributed\\n  \\tunder the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n  \\tCONDITIONS OF ANY KIND, either express or implied. See the License for the\\n  \\tspecific language governing permissions and limitations under the License.\\n  \\n      @preserve\\n   */\\n\\n  chroma.brewer = brewer = {\\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\\n  };\\n\\n  (function() {\\n    var key, results;\\n    results = [];\\n    for (key in brewer) {\\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\\n    }\\n    return results;\\n  })();\\n\\n\\n  /**\\n  \\tX11 color names\\n  \\n  \\thttp://www.w3.org/TR/css3-color/#svg-color\\n   */\\n\\n  w3cx11 = {\\n    aliceblue: '#f0f8ff',\\n    antiquewhite: '#faebd7',\\n    aqua: '#00ffff',\\n    aquamarine: '#7fffd4',\\n    azure: '#f0ffff',\\n    beige: '#f5f5dc',\\n    bisque: '#ffe4c4',\\n    black: '#000000',\\n    blanchedalmond: '#ffebcd',\\n    blue: '#0000ff',\\n    blueviolet: '#8a2be2',\\n    brown: '#a52a2a',\\n    burlywood: '#deb887',\\n    cadetblue: '#5f9ea0',\\n    chartreuse: '#7fff00',\\n    chocolate: '#d2691e',\\n    coral: '#ff7f50',\\n    cornflower: '#6495ed',\\n    cornflowerblue: '#6495ed',\\n    cornsilk: '#fff8dc',\\n    crimson: '#dc143c',\\n    cyan: '#00ffff',\\n    darkblue: '#00008b',\\n    darkcyan: '#008b8b',\\n    darkgoldenrod: '#b8860b',\\n    darkgray: '#a9a9a9',\\n    darkgreen: '#006400',\\n    darkgrey: '#a9a9a9',\\n    darkkhaki: '#bdb76b',\\n    darkmagenta: '#8b008b',\\n    darkolivegreen: '#556b2f',\\n    darkorange: '#ff8c00',\\n    darkorchid: '#9932cc',\\n    darkred: '#8b0000',\\n    darksalmon: '#e9967a',\\n    darkseagreen: '#8fbc8f',\\n    darkslateblue: '#483d8b',\\n    darkslategray: '#2f4f4f',\\n    darkslategrey: '#2f4f4f',\\n    darkturquoise: '#00ced1',\\n    darkviolet: '#9400d3',\\n    deeppink: '#ff1493',\\n    deepskyblue: '#00bfff',\\n    dimgray: '#696969',\\n    dimgrey: '#696969',\\n    dodgerblue: '#1e90ff',\\n    firebrick: '#b22222',\\n    floralwhite: '#fffaf0',\\n    forestgreen: '#228b22',\\n    fuchsia: '#ff00ff',\\n    gainsboro: '#dcdcdc',\\n    ghostwhite: '#f8f8ff',\\n    gold: '#ffd700',\\n    goldenrod: '#daa520',\\n    gray: '#808080',\\n    green: '#008000',\\n    greenyellow: '#adff2f',\\n    grey: '#808080',\\n    honeydew: '#f0fff0',\\n    hotpink: '#ff69b4',\\n    indianred: '#cd5c5c',\\n    indigo: '#4b0082',\\n    ivory: '#fffff0',\\n    khaki: '#f0e68c',\\n    laserlemon: '#ffff54',\\n    lavender: '#e6e6fa',\\n    lavenderblush: '#fff0f5',\\n    lawngreen: '#7cfc00',\\n    lemonchiffon: '#fffacd',\\n    lightblue: '#add8e6',\\n    lightcoral: '#f08080',\\n    lightcyan: '#e0ffff',\\n    lightgoldenrod: '#fafad2',\\n    lightgoldenrodyellow: '#fafad2',\\n    lightgray: '#d3d3d3',\\n    lightgreen: '#90ee90',\\n    lightgrey: '#d3d3d3',\\n    lightpink: '#ffb6c1',\\n    lightsalmon: '#ffa07a',\\n    lightseagreen: '#20b2aa',\\n    lightskyblue: '#87cefa',\\n    lightslategray: '#778899',\\n    lightslategrey: '#778899',\\n    lightsteelblue: '#b0c4de',\\n    lightyellow: '#ffffe0',\\n    lime: '#00ff00',\\n    limegreen: '#32cd32',\\n    linen: '#faf0e6',\\n    magenta: '#ff00ff',\\n    maroon: '#800000',\\n    maroon2: '#7f0000',\\n    maroon3: '#b03060',\\n    mediumaquamarine: '#66cdaa',\\n    mediumblue: '#0000cd',\\n    mediumorchid: '#ba55d3',\\n    mediumpurple: '#9370db',\\n    mediumseagreen: '#3cb371',\\n    mediumslateblue: '#7b68ee',\\n    mediumspringgreen: '#00fa9a',\\n    mediumturquoise: '#48d1cc',\\n    mediumvioletred: '#c71585',\\n    midnightblue: '#191970',\\n    mintcream: '#f5fffa',\\n    mistyrose: '#ffe4e1',\\n    moccasin: '#ffe4b5',\\n    navajowhite: '#ffdead',\\n    navy: '#000080',\\n    oldlace: '#fdf5e6',\\n    olive: '#808000',\\n    olivedrab: '#6b8e23',\\n    orange: '#ffa500',\\n    orangered: '#ff4500',\\n    orchid: '#da70d6',\\n    palegoldenrod: '#eee8aa',\\n    palegreen: '#98fb98',\\n    paleturquoise: '#afeeee',\\n    palevioletred: '#db7093',\\n    papayawhip: '#ffefd5',\\n    peachpuff: '#ffdab9',\\n    peru: '#cd853f',\\n    pink: '#ffc0cb',\\n    plum: '#dda0dd',\\n    powderblue: '#b0e0e6',\\n    purple: '#800080',\\n    purple2: '#7f007f',\\n    purple3: '#a020f0',\\n    rebeccapurple: '#663399',\\n    red: '#ff0000',\\n    rosybrown: '#bc8f8f',\\n    royalblue: '#4169e1',\\n    saddlebrown: '#8b4513',\\n    salmon: '#fa8072',\\n    sandybrown: '#f4a460',\\n    seagreen: '#2e8b57',\\n    seashell: '#fff5ee',\\n    sienna: '#a0522d',\\n    silver: '#c0c0c0',\\n    skyblue: '#87ceeb',\\n    slateblue: '#6a5acd',\\n    slategray: '#708090',\\n    slategrey: '#708090',\\n    snow: '#fffafa',\\n    springgreen: '#00ff7f',\\n    steelblue: '#4682b4',\\n    tan: '#d2b48c',\\n    teal: '#008080',\\n    thistle: '#d8bfd8',\\n    tomato: '#ff6347',\\n    turquoise: '#40e0d0',\\n    violet: '#ee82ee',\\n    wheat: '#f5deb3',\\n    white: '#ffffff',\\n    whitesmoke: '#f5f5f5',\\n    yellow: '#ffff00',\\n    yellowgreen: '#9acd32'\\n  };\\n\\n  chroma.colors = colors = w3cx11;\\n\\n  lab2rgb = function() {\\n    var a, args, b, g, l, r, x, y, z;\\n    args = unpack(arguments);\\n    l = args[0], a = args[1], b = args[2];\\n    y = (l + 16) / 116;\\n    x = isNaN(a) ? y : y + a / 500;\\n    z = isNaN(b) ? y : y - b / 200;\\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\\n    return [r, g, b, args.length > 3 ? args[3] : 1];\\n  };\\n\\n  xyz_rgb = function(r) {\\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\\n  };\\n\\n  lab_xyz = function(t) {\\n    if (t > LAB_CONSTANTS.t1) {\\n      return t * t * t;\\n    } else {\\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\\n    }\\n  };\\n\\n  LAB_CONSTANTS = {\\n    Kn: 18,\\n    Xn: 0.950470,\\n    Yn: 1,\\n    Zn: 1.088830,\\n    t0: 0.137931034,\\n    t1: 0.206896552,\\n    t2: 0.12841855,\\n    t3: 0.008856452\\n  };\\n\\n  rgb2lab = function() {\\n    var b, g, r, ref, ref1, x, y, z;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\\n  };\\n\\n  rgb_xyz = function(r) {\\n    if ((r /= 255) <= 0.04045) {\\n      return r / 12.92;\\n    } else {\\n      return pow((r + 0.055) / 1.055, 2.4);\\n    }\\n  };\\n\\n  xyz_lab = function(t) {\\n    if (t > LAB_CONSTANTS.t3) {\\n      return pow(t, 1 / 3);\\n    } else {\\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\\n    }\\n  };\\n\\n  rgb2xyz = function() {\\n    var b, g, r, ref, x, y, z;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    r = rgb_xyz(r);\\n    g = rgb_xyz(g);\\n    b = rgb_xyz(b);\\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\\n    return [x, y, z];\\n  };\\n\\n  chroma.lab = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\\n  };\\n\\n  _input.lab = lab2rgb;\\n\\n  Color.prototype.lab = function() {\\n    return rgb2lab(this._rgb);\\n  };\\n\\n  bezier = function(colors) {\\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\\n    colors = (function() {\\n      var len, o, results;\\n      results = [];\\n      for (o = 0, len = colors.length; o < len; o++) {\\n        c = colors[o];\\n        results.push(chroma(c));\\n      }\\n      return results;\\n    })();\\n    if (colors.length === 2) {\\n      ref = (function() {\\n        var len, o, results;\\n        results = [];\\n        for (o = 0, len = colors.length; o < len; o++) {\\n          c = colors[o];\\n          results.push(c.lab());\\n        }\\n        return results;\\n      })(), lab0 = ref[0], lab1 = ref[1];\\n      I = function(t) {\\n        var i, lab;\\n        lab = (function() {\\n          var o, results;\\n          results = [];\\n          for (i = o = 0; o <= 2; i = ++o) {\\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\\n          }\\n          return results;\\n        })();\\n        return chroma.lab.apply(chroma, lab);\\n      };\\n    } else if (colors.length === 3) {\\n      ref1 = (function() {\\n        var len, o, results;\\n        results = [];\\n        for (o = 0, len = colors.length; o < len; o++) {\\n          c = colors[o];\\n          results.push(c.lab());\\n        }\\n        return results;\\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\\n      I = function(t) {\\n        var i, lab;\\n        lab = (function() {\\n          var o, results;\\n          results = [];\\n          for (i = o = 0; o <= 2; i = ++o) {\\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\\n          }\\n          return results;\\n        })();\\n        return chroma.lab.apply(chroma, lab);\\n      };\\n    } else if (colors.length === 4) {\\n      ref2 = (function() {\\n        var len, o, results;\\n        results = [];\\n        for (o = 0, len = colors.length; o < len; o++) {\\n          c = colors[o];\\n          results.push(c.lab());\\n        }\\n        return results;\\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\\n      I = function(t) {\\n        var i, lab;\\n        lab = (function() {\\n          var o, results;\\n          results = [];\\n          for (i = o = 0; o <= 2; i = ++o) {\\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\\n          }\\n          return results;\\n        })();\\n        return chroma.lab.apply(chroma, lab);\\n      };\\n    } else if (colors.length === 5) {\\n      I0 = bezier(colors.slice(0, 3));\\n      I1 = bezier(colors.slice(2, 5));\\n      I = function(t) {\\n        if (t < 0.5) {\\n          return I0(t * 2);\\n        } else {\\n          return I1((t - 0.5) * 2);\\n        }\\n      };\\n    }\\n    return I;\\n  };\\n\\n  chroma.bezier = function(colors) {\\n    var f;\\n    f = bezier(colors);\\n    f.scale = function() {\\n      return chroma.scale(f);\\n    };\\n    return f;\\n  };\\n\\n\\n  /*\\n      chroma.js\\n  \\n      Copyright (c) 2011-2013, Gregor Aisch\\n      All rights reserved.\\n  \\n      Redistribution and use in source and binary forms, with or without\\n      modification, are permitted provided that the following conditions are met:\\n  \\n      * Redistributions of source code must retain the above copyright notice, this\\n        list of conditions and the following disclaimer.\\n  \\n      * Redistributions in binary form must reproduce the above copyright notice,\\n        this list of conditions and the following disclaimer in the documentation\\n        and/or other materials provided with the distribution.\\n  \\n      * The name Gregor Aisch may not be used to endorse or promote products\\n        derived from this software without specific prior written permission.\\n  \\n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n  \\n      @source: https://github.com/gka/chroma.js\\n   */\\n\\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\\n    var dh, dl, f;\\n    if (start == null) {\\n      start = 300;\\n    }\\n    if (rotations == null) {\\n      rotations = -1.5;\\n    }\\n    if (hue == null) {\\n      hue = 1;\\n    }\\n    if (gamma == null) {\\n      gamma = 1;\\n    }\\n    if (lightness == null) {\\n      lightness = [0, 1];\\n    }\\n    dh = 0;\\n    if (type(lightness) === 'array') {\\n      dl = lightness[1] - lightness[0];\\n    } else {\\n      dl = 0;\\n      lightness = [lightness, lightness];\\n    }\\n    f = function(fract) {\\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\\n      l = pow(lightness[0] + dl * fract, gamma);\\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\\n      amp = h * l * (1 - l) / 2;\\n      cos_a = cos(a);\\n      sin_a = sin(a);\\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\\n      b = l + amp * (+1.97294 * cos_a);\\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\\n    };\\n    f.start = function(s) {\\n      if (s == null) {\\n        return start;\\n      }\\n      start = s;\\n      return f;\\n    };\\n    f.rotations = function(r) {\\n      if (r == null) {\\n        return rotations;\\n      }\\n      rotations = r;\\n      return f;\\n    };\\n    f.gamma = function(g) {\\n      if (g == null) {\\n        return gamma;\\n      }\\n      gamma = g;\\n      return f;\\n    };\\n    f.hue = function(h) {\\n      if (h == null) {\\n        return hue;\\n      }\\n      hue = h;\\n      if (type(hue) === 'array') {\\n        dh = hue[1] - hue[0];\\n        if (dh === 0) {\\n          hue = hue[1];\\n        }\\n      } else {\\n        dh = 0;\\n      }\\n      return f;\\n    };\\n    f.lightness = function(h) {\\n      if (h == null) {\\n        return lightness;\\n      }\\n      if (type(h) === 'array') {\\n        lightness = h;\\n        dl = h[1] - h[0];\\n      } else {\\n        lightness = [h, h];\\n        dl = 0;\\n      }\\n      return f;\\n    };\\n    f.scale = function() {\\n      return chroma.scale(f);\\n    };\\n    f.hue(hue);\\n    return f;\\n  };\\n\\n  chroma.random = function() {\\n    var code, digits, i, o;\\n    digits = '0123456789abcdef';\\n    code = '#';\\n    for (i = o = 0; o < 6; i = ++o) {\\n      code += digits.charAt(floor(Math.random() * 16));\\n    }\\n    return new Color(code);\\n  };\\n\\n  _interpolators = [];\\n\\n  interpolate = function(col1, col2, f, m) {\\n    var interpol, len, o, res;\\n    if (f == null) {\\n      f = 0.5;\\n    }\\n    if (m == null) {\\n      m = 'rgb';\\n    }\\n\\n    /*\\n    interpolates between colors\\n    f = 0 --\\u003e me\\n    f = 1 --\\u003e col\\n     */\\n    if (type(col1) !== 'object') {\\n      col1 = chroma(col1);\\n    }\\n    if (type(col2) !== 'object') {\\n      col2 = chroma(col2);\\n    }\\n    for (o = 0, len = _interpolators.length; o < len; o++) {\\n      interpol = _interpolators[o];\\n      if (m === interpol[0]) {\\n        res = interpol[1](col1, col2, f, m);\\n        break;\\n      }\\n    }\\n    if (res == null) {\\n      throw \\\"color mode \\\" + m + \\\" is not supported\\\";\\n    }\\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\\n  };\\n\\n  chroma.interpolate = interpolate;\\n\\n  Color.prototype.interpolate = function(col2, f, m) {\\n    return interpolate(this, col2, f, m);\\n  };\\n\\n  chroma.mix = interpolate;\\n\\n  Color.prototype.mix = Color.prototype.interpolate;\\n\\n  _input.rgb = function() {\\n    var k, ref, results, v;\\n    ref = unpack(arguments);\\n    results = [];\\n    for (k in ref) {\\n      v = ref[k];\\n      results.push(v);\\n    }\\n    return results;\\n  };\\n\\n  chroma.rgb = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\\n  };\\n\\n  Color.prototype.rgb = function(round) {\\n    if (round == null) {\\n      round = true;\\n    }\\n    if (round) {\\n      return this._rgb.map(Math.round).slice(0, 3);\\n    } else {\\n      return this._rgb.slice(0, 3);\\n    }\\n  };\\n\\n  Color.prototype.rgba = function(round) {\\n    if (round == null) {\\n      round = true;\\n    }\\n    if (!round) {\\n      return this._rgb.slice(0);\\n    }\\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\\n  };\\n\\n  _guess_formats.push({\\n    p: 3,\\n    test: function(n) {\\n      var a;\\n      a = unpack(arguments);\\n      if (type(a) === 'array' && a.length === 3) {\\n        return 'rgb';\\n      }\\n      if (a.length === 4 && type(a[3]) === \\\"number\\\" && a[3] >= 0 && a[3] <= 1) {\\n        return 'rgb';\\n      }\\n    }\\n  });\\n\\n  _input.lrgb = _input.rgb;\\n\\n  interpolate_lrgb = function(col1, col2, f, m) {\\n    var xyz0, xyz1;\\n    xyz0 = col1._rgb;\\n    xyz1 = col2._rgb;\\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\\n  };\\n\\n  _average_lrgb = function(colors) {\\n    var col, f, len, o, rgb, xyz;\\n    f = 1 / colors.length;\\n    xyz = [0, 0, 0, 0];\\n    for (o = 0, len = colors.length; o < len; o++) {\\n      col = colors[o];\\n      rgb = col._rgb;\\n      xyz[0] += pow(rgb[0], 2) * f;\\n      xyz[1] += pow(rgb[1], 2) * f;\\n      xyz[2] += pow(rgb[2], 2) * f;\\n      xyz[3] += rgb[3] * f;\\n    }\\n    xyz[0] = sqrt(xyz[0]);\\n    xyz[1] = sqrt(xyz[1]);\\n    xyz[2] = sqrt(xyz[2]);\\n    return new Color(xyz);\\n  };\\n\\n  _interpolators.push(['lrgb', interpolate_lrgb]);\\n\\n  chroma.average = function(colors, mode) {\\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    l = colors.length;\\n    colors = colors.map(function(c) {\\n      return chroma(c);\\n    });\\n    first = colors.splice(0, 1)[0];\\n    if (mode === 'lrgb') {\\n      return _average_lrgb(colors);\\n    }\\n    xyz = first.get(mode);\\n    cnt = [];\\n    dx = 0;\\n    dy = 0;\\n    for (i in xyz) {\\n      xyz[i] = xyz[i] || 0;\\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\\n        A = xyz[i] / 180 * PI;\\n        dx += cos(A);\\n        dy += sin(A);\\n      }\\n    }\\n    alpha = first.alpha();\\n    for (o = 0, len = colors.length; o < len; o++) {\\n      c = colors[o];\\n      xyz2 = c.get(mode);\\n      alpha += c.alpha();\\n      for (i in xyz) {\\n        if (!isNaN(xyz2[i])) {\\n          cnt[i] += 1;\\n          if (mode.charAt(i) === 'h') {\\n            A = xyz2[i] / 180 * PI;\\n            dx += cos(A);\\n            dy += sin(A);\\n          } else {\\n            xyz[i] += xyz2[i];\\n          }\\n        }\\n      }\\n    }\\n    for (i in xyz) {\\n      if (mode.charAt(i) === 'h') {\\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\\n        while (A < 0) {\\n          A += 360;\\n        }\\n        while (A >= 360) {\\n          A -= 360;\\n        }\\n        xyz[i] = A;\\n      } else {\\n        xyz[i] = xyz[i] / cnt[i];\\n      }\\n    }\\n    return chroma(xyz, mode).alpha(alpha / l);\\n  };\\n\\n  hex2rgb = function(hex) {\\n    var a, b, g, r, rgb, u;\\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\\n      if (hex.length === 4 || hex.length === 7) {\\n        hex = hex.substr(1);\\n      }\\n      if (hex.length === 3) {\\n        hex = hex.split(\\\"\\\");\\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\\n      }\\n      u = parseInt(hex, 16);\\n      r = u >> 16;\\n      g = u >> 8 & 0xFF;\\n      b = u & 0xFF;\\n      return [r, g, b, 1];\\n    }\\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\\n      if (hex.length === 9) {\\n        hex = hex.substr(1);\\n      }\\n      u = parseInt(hex, 16);\\n      r = u >> 24 & 0xFF;\\n      g = u >> 16 & 0xFF;\\n      b = u >> 8 & 0xFF;\\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\\n      return [r, g, b, a];\\n    }\\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\\n      return rgb;\\n    }\\n    throw \\\"unknown color: \\\" + hex;\\n  };\\n\\n  rgb2hex = function(channels, mode) {\\n    var a, b, g, hxa, r, str, u;\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\\n    r = Math.round(r);\\n    g = Math.round(g);\\n    b = Math.round(b);\\n    u = r << 16 | g << 8 | b;\\n    str = \\\"000000\\\" + u.toString(16);\\n    str = str.substr(str.length - 6);\\n    hxa = '0' + round(a * 255).toString(16);\\n    hxa = hxa.substr(hxa.length - 2);\\n    return \\\"#\\\" + (function() {\\n      switch (mode.toLowerCase()) {\\n        case 'rgba':\\n          return str + hxa;\\n        case 'argb':\\n          return hxa + str;\\n        default:\\n          return str;\\n      }\\n    })();\\n  };\\n\\n  _input.hex = function(h) {\\n    return hex2rgb(h);\\n  };\\n\\n  chroma.hex = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\\n  };\\n\\n  Color.prototype.hex = function(mode) {\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    return rgb2hex(this._rgb, mode);\\n  };\\n\\n  _guess_formats.push({\\n    p: 4,\\n    test: function(n) {\\n      if (arguments.length === 1 && type(n) === \\\"string\\\") {\\n        return 'hex';\\n      }\\n    }\\n  });\\n\\n  hsl2rgb = function() {\\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\\n    args = unpack(arguments);\\n    h = args[0], s = args[1], l = args[2];\\n    if (s === 0) {\\n      r = g = b = l * 255;\\n    } else {\\n      t3 = [0, 0, 0];\\n      c = [0, 0, 0];\\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\\n      t1 = 2 * l - t2;\\n      h /= 360;\\n      t3[0] = h + 1 / 3;\\n      t3[1] = h;\\n      t3[2] = h - 1 / 3;\\n      for (i = o = 0; o <= 2; i = ++o) {\\n        if (t3[i] < 0) {\\n          t3[i] += 1;\\n        }\\n        if (t3[i] > 1) {\\n          t3[i] -= 1;\\n        }\\n        if (6 * t3[i] < 1) {\\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\\n        } else if (2 * t3[i] < 1) {\\n          c[i] = t2;\\n        } else if (3 * t3[i] < 2) {\\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\\n        } else {\\n          c[i] = t1;\\n        }\\n      }\\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\\n    }\\n    if (args.length > 3) {\\n      return [r, g, b, args[3]];\\n    } else {\\n      return [r, g, b];\\n    }\\n  };\\n\\n  rgb2hsl = function(r, g, b) {\\n    var h, l, min, ref, s;\\n    if (r !== void 0 && r.length >= 3) {\\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\\n    }\\n    r /= 255;\\n    g /= 255;\\n    b /= 255;\\n    min = Math.min(r, g, b);\\n    max = Math.max(r, g, b);\\n    l = (max + min) / 2;\\n    if (max === min) {\\n      s = 0;\\n      h = Number.NaN;\\n    } else {\\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\\n    }\\n    if (r === max) {\\n      h = (g - b) / (max - min);\\n    } else if (g === max) {\\n      h = 2 + (b - r) / (max - min);\\n    } else if (b === max) {\\n      h = 4 + (r - g) / (max - min);\\n    }\\n    h *= 60;\\n    if (h < 0) {\\n      h += 360;\\n    }\\n    return [h, s, l];\\n  };\\n\\n  chroma.hsl = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\\n  };\\n\\n  _input.hsl = hsl2rgb;\\n\\n  Color.prototype.hsl = function() {\\n    return rgb2hsl(this._rgb);\\n  };\\n\\n  hsv2rgb = function() {\\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\\n    args = unpack(arguments);\\n    h = args[0], s = args[1], v = args[2];\\n    v *= 255;\\n    if (s === 0) {\\n      r = g = b = v;\\n    } else {\\n      if (h === 360) {\\n        h = 0;\\n      }\\n      if (h > 360) {\\n        h -= 360;\\n      }\\n      if (h < 0) {\\n        h += 360;\\n      }\\n      h /= 60;\\n      i = floor(h);\\n      f = h - i;\\n      p = v * (1 - s);\\n      q = v * (1 - s * f);\\n      t = v * (1 - s * (1 - f));\\n      switch (i) {\\n        case 0:\\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\\n          break;\\n        case 1:\\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\\n          break;\\n        case 2:\\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\\n          break;\\n        case 3:\\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\\n          break;\\n        case 4:\\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\\n          break;\\n        case 5:\\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\\n      }\\n    }\\n    return [r, g, b, args.length > 3 ? args[3] : 1];\\n  };\\n\\n  rgb2hsv = function() {\\n    var b, delta, g, h, min, r, ref, s, v;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    min = Math.min(r, g, b);\\n    max = Math.max(r, g, b);\\n    delta = max - min;\\n    v = max / 255.0;\\n    if (max === 0) {\\n      h = Number.NaN;\\n      s = 0;\\n    } else {\\n      s = delta / max;\\n      if (r === max) {\\n        h = (g - b) / delta;\\n      }\\n      if (g === max) {\\n        h = 2 + (b - r) / delta;\\n      }\\n      if (b === max) {\\n        h = 4 + (r - g) / delta;\\n      }\\n      h *= 60;\\n      if (h < 0) {\\n        h += 360;\\n      }\\n    }\\n    return [h, s, v];\\n  };\\n\\n  chroma.hsv = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\\n  };\\n\\n  _input.hsv = hsv2rgb;\\n\\n  Color.prototype.hsv = function() {\\n    return rgb2hsv(this._rgb);\\n  };\\n\\n  num2rgb = function(num) {\\n    var b, g, r;\\n    if (type(num) === \\\"number\\\" && num >= 0 && num <= 0xFFFFFF) {\\n      r = num >> 16;\\n      g = (num >> 8) & 0xFF;\\n      b = num & 0xFF;\\n      return [r, g, b, 1];\\n    }\\n    console.warn(\\\"unknown num color: \\\" + num);\\n    return [0, 0, 0, 1];\\n  };\\n\\n  rgb2num = function() {\\n    var b, g, r, ref;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    return (r << 16) + (g << 8) + b;\\n  };\\n\\n  chroma.num = function(num) {\\n    return new Color(num, 'num');\\n  };\\n\\n  Color.prototype.num = function(mode) {\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    return rgb2num(this._rgb, mode);\\n  };\\n\\n  _input.num = num2rgb;\\n\\n  _guess_formats.push({\\n    p: 1,\\n    test: function(n) {\\n      if (arguments.length === 1 && type(n) === \\\"number\\\" && n >= 0 && n <= 0xFFFFFF) {\\n        return 'num';\\n      }\\n    }\\n  });\\n\\n  hcg2rgb = function() {\\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\\n    args = unpack(arguments);\\n    h = args[0], c = args[1], _g = args[2];\\n    c = c / 100;\\n    g = g / 100 * 255;\\n    _c = c * 255;\\n    if (c === 0) {\\n      r = g = b = _g;\\n    } else {\\n      if (h === 360) {\\n        h = 0;\\n      }\\n      if (h > 360) {\\n        h -= 360;\\n      }\\n      if (h < 0) {\\n        h += 360;\\n      }\\n      h /= 60;\\n      i = floor(h);\\n      f = h - i;\\n      p = _g * (1 - c);\\n      q = p + _c * (1 - f);\\n      t = p + _c * f;\\n      v = p + _c;\\n      switch (i) {\\n        case 0:\\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\\n          break;\\n        case 1:\\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\\n          break;\\n        case 2:\\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\\n          break;\\n        case 3:\\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\\n          break;\\n        case 4:\\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\\n          break;\\n        case 5:\\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\\n      }\\n    }\\n    return [r, g, b, args.length > 3 ? args[3] : 1];\\n  };\\n\\n  rgb2hcg = function() {\\n    var _g, b, c, delta, g, h, min, r, ref;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    min = Math.min(r, g, b);\\n    max = Math.max(r, g, b);\\n    delta = max - min;\\n    c = delta * 100 / 255;\\n    _g = min / (255 - delta) * 100;\\n    if (delta === 0) {\\n      h = Number.NaN;\\n    } else {\\n      if (r === max) {\\n        h = (g - b) / delta;\\n      }\\n      if (g === max) {\\n        h = 2 + (b - r) / delta;\\n      }\\n      if (b === max) {\\n        h = 4 + (r - g) / delta;\\n      }\\n      h *= 60;\\n      if (h < 0) {\\n        h += 360;\\n      }\\n    }\\n    return [h, c, _g];\\n  };\\n\\n  chroma.hcg = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\\n  };\\n\\n  _input.hcg = hcg2rgb;\\n\\n  Color.prototype.hcg = function() {\\n    return rgb2hcg(this._rgb);\\n  };\\n\\n  css2rgb = function(css) {\\n    var aa, ab, hsl, i, m, o, rgb, w;\\n    css = css.toLowerCase();\\n    if ((chroma.colors != null) && chroma.colors[css]) {\\n      return hex2rgb(chroma.colors[css]);\\n    }\\n    if (m = css.match(/rgb\\\\(\\\\s*(\\\\-?\\\\d+),\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*(\\\\-?\\\\d+)\\\\s*\\\\)/)) {\\n      rgb = m.slice(1, 4);\\n      for (i = o = 0; o <= 2; i = ++o) {\\n        rgb[i] = +rgb[i];\\n      }\\n      rgb[3] = 1;\\n    } else if (m = css.match(/rgba\\\\(\\\\s*(\\\\-?\\\\d+),\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/)) {\\n      rgb = m.slice(1, 5);\\n      for (i = w = 0; w <= 3; i = ++w) {\\n        rgb[i] = +rgb[i];\\n      }\\n    } else if (m = css.match(/rgb\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*\\\\)/)) {\\n      rgb = m.slice(1, 4);\\n      for (i = aa = 0; aa <= 2; i = ++aa) {\\n        rgb[i] = round(rgb[i] * 2.55);\\n      }\\n      rgb[3] = 1;\\n    } else if (m = css.match(/rgba\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/)) {\\n      rgb = m.slice(1, 5);\\n      for (i = ab = 0; ab <= 2; i = ++ab) {\\n        rgb[i] = round(rgb[i] * 2.55);\\n      }\\n      rgb[3] = +rgb[3];\\n    } else if (m = css.match(/hsl\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?),\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*\\\\)/)) {\\n      hsl = m.slice(1, 4);\\n      hsl[1] *= 0.01;\\n      hsl[2] *= 0.01;\\n      rgb = hsl2rgb(hsl);\\n      rgb[3] = 1;\\n    } else if (m = css.match(/hsla\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?),\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/)) {\\n      hsl = m.slice(1, 4);\\n      hsl[1] *= 0.01;\\n      hsl[2] *= 0.01;\\n      rgb = hsl2rgb(hsl);\\n      rgb[3] = +m[4];\\n    }\\n    return rgb;\\n  };\\n\\n  rgb2css = function(rgba) {\\n    var mode;\\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\\n    if (mode === 'rgb') {\\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\\n    } else if (mode === 'rgba') {\\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\\n    } else {\\n\\n    }\\n  };\\n\\n  rnd = function(a) {\\n    return round(a * 100) / 100;\\n  };\\n\\n  hsl2css = function(hsl, alpha) {\\n    var mode;\\n    mode = alpha < 1 ? 'hsla' : 'hsl';\\n    hsl[0] = rnd(hsl[0] || 0);\\n    hsl[1] = rnd(hsl[1] * 100) + '%';\\n    hsl[2] = rnd(hsl[2] * 100) + '%';\\n    if (mode === 'hsla') {\\n      hsl[3] = alpha;\\n    }\\n    return mode + '(' + hsl.join(',') + ')';\\n  };\\n\\n  _input.css = function(h) {\\n    return css2rgb(h);\\n  };\\n\\n  chroma.css = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['css']), function(){});\\n  };\\n\\n  Color.prototype.css = function(mode) {\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    if (mode.slice(0, 3) === 'rgb') {\\n      return rgb2css(this._rgb);\\n    } else if (mode.slice(0, 3) === 'hsl') {\\n      return hsl2css(this.hsl(), this.alpha());\\n    }\\n  };\\n\\n  _input.named = function(name) {\\n    return hex2rgb(w3cx11[name]);\\n  };\\n\\n  _guess_formats.push({\\n    p: 5,\\n    test: function(n) {\\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\\n        return 'named';\\n      }\\n    }\\n  });\\n\\n  Color.prototype.name = function(n) {\\n    var h, k;\\n    if (arguments.length) {\\n      if (w3cx11[n]) {\\n        this._rgb = hex2rgb(w3cx11[n]);\\n      }\\n      this._rgb[3] = 1;\\n      this;\\n    }\\n    h = this.hex();\\n    for (k in w3cx11) {\\n      if (h === w3cx11[k]) {\\n        return k;\\n      }\\n    }\\n    return h;\\n  };\\n\\n  lch2lab = function() {\\n\\n    /*\\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\\n    out of gamut if the parameters are in the range 0-1.\\n    \\n    A saturation multiplier was added by Gregor Aisch\\n     */\\n    var c, h, l, ref;\\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\\n    h = h * DEG2RAD;\\n    return [l, cos(h) * c, sin(h) * c];\\n  };\\n\\n  lch2rgb = function() {\\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\\n    args = unpack(arguments);\\n    l = args[0], c = args[1], h = args[2];\\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\\n    return [r, g, b, args.length > 3 ? args[3] : 1];\\n  };\\n\\n  lab2lch = function() {\\n    var a, b, c, h, l, ref;\\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\\n    c = sqrt(a * a + b * b);\\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\\n    if (round(c * 10000) === 0) {\\n      h = Number.NaN;\\n    }\\n    return [l, c, h];\\n  };\\n\\n  rgb2lch = function() {\\n    var a, b, g, l, r, ref, ref1;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\\n    return lab2lch(l, a, b);\\n  };\\n\\n  chroma.lch = function() {\\n    var args;\\n    args = unpack(arguments);\\n    return new Color(args, 'lch');\\n  };\\n\\n  chroma.hcl = function() {\\n    var args;\\n    args = unpack(arguments);\\n    return new Color(args, 'hcl');\\n  };\\n\\n  _input.lch = lch2rgb;\\n\\n  _input.hcl = function() {\\n    var c, h, l, ref;\\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\\n    return lch2rgb([l, c, h]);\\n  };\\n\\n  Color.prototype.lch = function() {\\n    return rgb2lch(this._rgb);\\n  };\\n\\n  Color.prototype.hcl = function() {\\n    return rgb2lch(this._rgb).reverse();\\n  };\\n\\n  rgb2cmyk = function(mode) {\\n    var b, c, f, g, k, m, r, ref, y;\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    r = r / 255;\\n    g = g / 255;\\n    b = b / 255;\\n    k = 1 - Math.max(r, Math.max(g, b));\\n    f = k < 1 ? 1 / (1 - k) : 0;\\n    c = (1 - r - k) * f;\\n    m = (1 - g - k) * f;\\n    y = (1 - b - k) * f;\\n    return [c, m, y, k];\\n  };\\n\\n  cmyk2rgb = function() {\\n    var alpha, args, b, c, g, k, m, r, y;\\n    args = unpack(arguments);\\n    c = args[0], m = args[1], y = args[2], k = args[3];\\n    alpha = args.length > 4 ? args[4] : 1;\\n    if (k === 1) {\\n      return [0, 0, 0, alpha];\\n    }\\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\\n    return [r, g, b, alpha];\\n  };\\n\\n  _input.cmyk = function() {\\n    return cmyk2rgb(unpack(arguments));\\n  };\\n\\n  chroma.cmyk = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\\n  };\\n\\n  Color.prototype.cmyk = function() {\\n    return rgb2cmyk(this._rgb);\\n  };\\n\\n  _input.gl = function() {\\n    var i, k, o, rgb, v;\\n    rgb = (function() {\\n      var ref, results;\\n      ref = unpack(arguments);\\n      results = [];\\n      for (k in ref) {\\n        v = ref[k];\\n        results.push(v);\\n      }\\n      return results;\\n    }).apply(this, arguments);\\n    for (i = o = 0; o <= 2; i = ++o) {\\n      rgb[i] *= 255;\\n    }\\n    return rgb;\\n  };\\n\\n  chroma.gl = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\\n  };\\n\\n  Color.prototype.gl = function() {\\n    var rgb;\\n    rgb = this._rgb;\\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\\n  };\\n\\n  rgb2luminance = function(r, g, b) {\\n    var ref;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    r = luminance_x(r);\\n    g = luminance_x(g);\\n    b = luminance_x(b);\\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\\n  };\\n\\n  luminance_x = function(x) {\\n    x /= 255;\\n    if (x <= 0.03928) {\\n      return x / 12.92;\\n    } else {\\n      return pow((x + 0.055) / 1.055, 2.4);\\n    }\\n  };\\n\\n  interpolate_rgb = function(col1, col2, f, m) {\\n    var xyz0, xyz1;\\n    xyz0 = col1._rgb;\\n    xyz1 = col2._rgb;\\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\\n  };\\n\\n  _interpolators.push(['rgb', interpolate_rgb]);\\n\\n  Color.prototype.luminance = function(lum, mode) {\\n    var cur_lum, eps, max_iter, rgba, test;\\n    if (mode == null) {\\n      mode = 'rgb';\\n    }\\n    if (!arguments.length) {\\n      return rgb2luminance(this._rgb);\\n    }\\n    rgba = this._rgb;\\n    if (lum === 0) {\\n      rgba = [0, 0, 0, this._rgb[3]];\\n    } else if (lum === 1) {\\n      rgba = [255, 255, 255, this[3]];\\n    } else {\\n      cur_lum = rgb2luminance(this._rgb);\\n      eps = 1e-7;\\n      max_iter = 20;\\n      test = function(l, h) {\\n        var lm, m;\\n        m = l.interpolate(h, 0.5, mode);\\n        lm = m.luminance();\\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\\n          return m;\\n        }\\n        if (lm > lum) {\\n          return test(l, m);\\n        }\\n        return test(m, h);\\n      };\\n      if (cur_lum > lum) {\\n        rgba = test(chroma('black'), this).rgba();\\n      } else {\\n        rgba = test(this, chroma('white')).rgba();\\n      }\\n    }\\n    return chroma(rgba).alpha(this.alpha());\\n  };\\n\\n  temperature2rgb = function(kelvin) {\\n    var b, g, r, temp;\\n    temp = kelvin / 100;\\n    if (temp < 66) {\\n      r = 255;\\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\\n    } else {\\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\\n      b = 255;\\n    }\\n    return [r, g, b];\\n  };\\n\\n  rgb2temperature = function() {\\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    minTemp = 1000;\\n    maxTemp = 40000;\\n    eps = 0.4;\\n    while (maxTemp - minTemp > eps) {\\n      temp = (maxTemp + minTemp) * 0.5;\\n      rgb = temperature2rgb(temp);\\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\\n        maxTemp = temp;\\n      } else {\\n        minTemp = temp;\\n      }\\n    }\\n    return round(temp);\\n  };\\n\\n  chroma.temperature = chroma.kelvin = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\\n  };\\n\\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\\n\\n  Color.prototype.temperature = function() {\\n    return rgb2temperature(this._rgb);\\n  };\\n\\n  Color.prototype.kelvin = Color.prototype.temperature;\\n\\n  chroma.contrast = function(a, b) {\\n    var l1, l2, ref, ref1;\\n    if ((ref = type(a)) === 'string' || ref === 'number') {\\n      a = new Color(a);\\n    }\\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\\n      b = new Color(b);\\n    }\\n    l1 = a.luminance();\\n    l2 = b.luminance();\\n    if (l1 > l2) {\\n      return (l1 + 0.05) / (l2 + 0.05);\\n    } else {\\n      return (l2 + 0.05) / (l1 + 0.05);\\n    }\\n  };\\n\\n  chroma.distance = function(a, b, mode) {\\n    var d, i, l1, l2, ref, ref1, sum_sq;\\n    if (mode == null) {\\n      mode = 'lab';\\n    }\\n    if ((ref = type(a)) === 'string' || ref === 'number') {\\n      a = new Color(a);\\n    }\\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\\n      b = new Color(b);\\n    }\\n    l1 = a.get(mode);\\n    l2 = b.get(mode);\\n    sum_sq = 0;\\n    for (i in l1) {\\n      d = (l1[i] || 0) - (l2[i] || 0);\\n      sum_sq += d * d;\\n    }\\n    return Math.sqrt(sum_sq);\\n  };\\n\\n  chroma.deltaE = function(a, b, L, C) {\\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\\n    if (L == null) {\\n      L = 1;\\n    }\\n    if (C == null) {\\n      C = 1;\\n    }\\n    if ((ref = type(a)) === 'string' || ref === 'number') {\\n      a = new Color(a);\\n    }\\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\\n      b = new Color(b);\\n    }\\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\\n    c1 = sqrt(a1 * a1 + b1 * b1);\\n    c2 = sqrt(a2 * a2 + b2 * b2);\\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\\n    while (h1 < 0) {\\n      h1 += 360;\\n    }\\n    while (h1 >= 360) {\\n      h1 -= 360;\\n    }\\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\\n    c4 = c1 * c1 * c1 * c1;\\n    f = sqrt(c4 / (c4 + 1900.0));\\n    sh = sc * (f * t + 1.0 - f);\\n    delL = L1 - L2;\\n    delC = c1 - c2;\\n    delA = a1 - a2;\\n    delB = b1 - b2;\\n    dH2 = delA * delA + delB * delB - delC * delC;\\n    v1 = delL / (L * sl);\\n    v2 = delC / (C * sc);\\n    v3 = sh;\\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\\n  };\\n\\n  Color.prototype.get = function(modechan) {\\n    var channel, i, me, mode, ref, src;\\n    me = this;\\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\\n    src = me[mode]();\\n    if (channel) {\\n      i = mode.indexOf(channel);\\n      if (i > -1) {\\n        return src[i];\\n      } else {\\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\\n      }\\n    } else {\\n      return src;\\n    }\\n  };\\n\\n  Color.prototype.set = function(modechan, value) {\\n    var channel, i, me, mode, ref, src;\\n    me = this;\\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\\n    if (channel) {\\n      src = me[mode]();\\n      i = mode.indexOf(channel);\\n      if (i > -1) {\\n        if (type(value) === 'string') {\\n          switch (value.charAt(0)) {\\n            case '+':\\n              src[i] += +value;\\n              break;\\n            case '-':\\n              src[i] += +value;\\n              break;\\n            case '*':\\n              src[i] *= +(value.substr(1));\\n              break;\\n            case '/':\\n              src[i] /= +(value.substr(1));\\n              break;\\n            default:\\n              src[i] = +value;\\n          }\\n        } else {\\n          src[i] = value;\\n        }\\n      } else {\\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\\n      }\\n    } else {\\n      src = value;\\n    }\\n    return chroma(src, mode).alpha(me.alpha());\\n  };\\n\\n  Color.prototype.clipped = function() {\\n    return this._rgb._clipped || false;\\n  };\\n\\n  Color.prototype.alpha = function(a) {\\n    if (arguments.length) {\\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\\n    }\\n    return this._rgb[3];\\n  };\\n\\n  Color.prototype.darken = function(amount) {\\n    var lab, me;\\n    if (amount == null) {\\n      amount = 1;\\n    }\\n    me = this;\\n    lab = me.lab();\\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\\n    return chroma.lab(lab).alpha(me.alpha());\\n  };\\n\\n  Color.prototype.brighten = function(amount) {\\n    if (amount == null) {\\n      amount = 1;\\n    }\\n    return this.darken(-amount);\\n  };\\n\\n  Color.prototype.darker = Color.prototype.darken;\\n\\n  Color.prototype.brighter = Color.prototype.brighten;\\n\\n  Color.prototype.saturate = function(amount) {\\n    var lch, me;\\n    if (amount == null) {\\n      amount = 1;\\n    }\\n    me = this;\\n    lch = me.lch();\\n    lch[1] += amount * LAB_CONSTANTS.Kn;\\n    if (lch[1] < 0) {\\n      lch[1] = 0;\\n    }\\n    return chroma.lch(lch).alpha(me.alpha());\\n  };\\n\\n  Color.prototype.desaturate = function(amount) {\\n    if (amount == null) {\\n      amount = 1;\\n    }\\n    return this.saturate(-amount);\\n  };\\n\\n  Color.prototype.premultiply = function() {\\n    var a, rgb;\\n    rgb = this.rgb();\\n    a = this.alpha();\\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\\n  };\\n\\n  blend = function(bottom, top, mode) {\\n    if (!blend[mode]) {\\n      throw 'unknown blend mode ' + mode;\\n    }\\n    return blend[mode](bottom, top);\\n  };\\n\\n  blend_f = function(f) {\\n    return function(bottom, top) {\\n      var c0, c1;\\n      c0 = chroma(top).rgb();\\n      c1 = chroma(bottom).rgb();\\n      return chroma(f(c0, c1), 'rgb');\\n    };\\n  };\\n\\n  each = function(f) {\\n    return function(c0, c1) {\\n      var i, o, out;\\n      out = [];\\n      for (i = o = 0; o <= 3; i = ++o) {\\n        out[i] = f(c0[i], c1[i]);\\n      }\\n      return out;\\n    };\\n  };\\n\\n  normal = function(a, b) {\\n    return a;\\n  };\\n\\n  multiply = function(a, b) {\\n    return a * b / 255;\\n  };\\n\\n  darken = function(a, b) {\\n    if (a > b) {\\n      return b;\\n    } else {\\n      return a;\\n    }\\n  };\\n\\n  lighten = function(a, b) {\\n    if (a > b) {\\n      return a;\\n    } else {\\n      return b;\\n    }\\n  };\\n\\n  screen = function(a, b) {\\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\\n  };\\n\\n  overlay = function(a, b) {\\n    if (b < 128) {\\n      return 2 * a * b / 255;\\n    } else {\\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\\n    }\\n  };\\n\\n  burn = function(a, b) {\\n    return 255 * (1 - (1 - b / 255) / (a / 255));\\n  };\\n\\n  dodge = function(a, b) {\\n    if (a === 255) {\\n      return 255;\\n    }\\n    a = 255 * (b / 255) / (1 - a / 255);\\n    if (a > 255) {\\n      return 255;\\n    } else {\\n      return a;\\n    }\\n  };\\n\\n  blend.normal = blend_f(each(normal));\\n\\n  blend.multiply = blend_f(each(multiply));\\n\\n  blend.screen = blend_f(each(screen));\\n\\n  blend.overlay = blend_f(each(overlay));\\n\\n  blend.darken = blend_f(each(darken));\\n\\n  blend.lighten = blend_f(each(lighten));\\n\\n  blend.dodge = blend_f(each(dodge));\\n\\n  blend.burn = blend_f(each(burn));\\n\\n  chroma.blend = blend;\\n\\n  chroma.analyze = function(data) {\\n    var len, o, r, val;\\n    r = {\\n      min: Number.MAX_VALUE,\\n      max: Number.MAX_VALUE * -1,\\n      sum: 0,\\n      values: [],\\n      count: 0\\n    };\\n    for (o = 0, len = data.length; o < len; o++) {\\n      val = data[o];\\n      if ((val != null) && !isNaN(val)) {\\n        r.values.push(val);\\n        r.sum += val;\\n        if (val < r.min) {\\n          r.min = val;\\n        }\\n        if (val > r.max) {\\n          r.max = val;\\n        }\\n        r.count += 1;\\n      }\\n    }\\n    r.domain = [r.min, r.max];\\n    r.limits = function(mode, num) {\\n      return chroma.limits(r, mode, num);\\n    };\\n    return r;\\n  };\\n\\n  chroma.scale = function(colors, positions) {\\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\\n    _mode = 'rgb';\\n    _nacol = chroma('#ccc');\\n    _spread = 0;\\n    _fixed = false;\\n    _domain = [0, 1];\\n    _pos = [];\\n    _padding = [0, 0];\\n    _classes = false;\\n    _colors = [];\\n    _out = false;\\n    _min = 0;\\n    _max = 1;\\n    _correctLightness = false;\\n    _colorCache = {};\\n    _useCache = true;\\n    _gamma = 1;\\n    setColors = function(colors) {\\n      var c, col, o, ref, ref1, w;\\n      if (colors == null) {\\n        colors = ['#fff', '#000'];\\n      }\\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\\n      }\\n      if (type(colors) === 'array') {\\n        colors = colors.slice(0);\\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\\n          col = colors[c];\\n          if (type(col) === \\\"string\\\") {\\n            colors[c] = chroma(col);\\n          }\\n        }\\n        _pos.length = 0;\\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\\n          _pos.push(c / (colors.length - 1));\\n        }\\n      }\\n      resetCache();\\n      return _colors = colors;\\n    };\\n    getClass = function(value) {\\n      var i, n;\\n      if (_classes != null) {\\n        n = _classes.length - 1;\\n        i = 0;\\n        while (i < n && value >= _classes[i]) {\\n          i++;\\n        }\\n        return i - 1;\\n      }\\n      return 0;\\n    };\\n    tmap = function(t) {\\n      return t;\\n    };\\n    classifyValue = function(value) {\\n      var i, maxc, minc, n, val;\\n      val = value;\\n      if (_classes.length > 2) {\\n        n = _classes.length - 1;\\n        i = getClass(value);\\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\\n      }\\n      return val;\\n    };\\n    getColor = function(val, bypassMap) {\\n      var c, col, i, k, o, p, ref, t;\\n      if (bypassMap == null) {\\n        bypassMap = false;\\n      }\\n      if (isNaN(val)) {\\n        return _nacol;\\n      }\\n      if (!bypassMap) {\\n        if (_classes && _classes.length > 2) {\\n          c = getClass(val);\\n          t = c / (_classes.length - 2);\\n        } else if (_max !== _min) {\\n          t = (val - _min) / (_max - _min);\\n        } else {\\n          t = 1;\\n        }\\n      } else {\\n        t = val;\\n      }\\n      if (!bypassMap) {\\n        t = tmap(t);\\n      }\\n      if (_gamma !== 1) {\\n        t = pow(t, _gamma);\\n      }\\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\\n      t = Math.min(1, Math.max(0, t));\\n      k = Math.floor(t * 10000);\\n      if (_useCache && _colorCache[k]) {\\n        col = _colorCache[k];\\n      } else {\\n        if (type(_colors) === 'array') {\\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\\n            p = _pos[i];\\n            if (t <= p) {\\n              col = _colors[i];\\n              break;\\n            }\\n            if (t >= p && i === _pos.length - 1) {\\n              col = _colors[i];\\n              break;\\n            }\\n            if (t > p && t < _pos[i + 1]) {\\n              t = (t - p) / (_pos[i + 1] - p);\\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\\n              break;\\n            }\\n          }\\n        } else if (type(_colors) === 'function') {\\n          col = _colors(t);\\n        }\\n        if (_useCache) {\\n          _colorCache[k] = col;\\n        }\\n      }\\n      return col;\\n    };\\n    resetCache = function() {\\n      return _colorCache = {};\\n    };\\n    setColors(colors);\\n    f = function(v) {\\n      var c;\\n      c = chroma(getColor(v));\\n      if (_out && c[_out]) {\\n        return c[_out]();\\n      } else {\\n        return c;\\n      }\\n    };\\n    f.classes = function(classes) {\\n      var d;\\n      if (classes != null) {\\n        if (type(classes) === 'array') {\\n          _classes = classes;\\n          _domain = [classes[0], classes[classes.length - 1]];\\n        } else {\\n          d = chroma.analyze(_domain);\\n          if (classes === 0) {\\n            _classes = [d.min, d.max];\\n          } else {\\n            _classes = chroma.limits(d, 'e', classes);\\n          }\\n        }\\n        return f;\\n      }\\n      return _classes;\\n    };\\n    f.domain = function(domain) {\\n      var c, d, k, len, o, ref, w;\\n      if (!arguments.length) {\\n        return _domain;\\n      }\\n      _min = domain[0];\\n      _max = domain[domain.length - 1];\\n      _pos = [];\\n      k = _colors.length;\\n      if (domain.length === k && _min !== _max) {\\n        for (o = 0, len = domain.length; o < len; o++) {\\n          d = domain[o];\\n          _pos.push((d - _min) / (_max - _min));\\n        }\\n      } else {\\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\\n          _pos.push(c / (k - 1));\\n        }\\n      }\\n      _domain = [_min, _max];\\n      return f;\\n    };\\n    f.mode = function(_m) {\\n      if (!arguments.length) {\\n        return _mode;\\n      }\\n      _mode = _m;\\n      resetCache();\\n      return f;\\n    };\\n    f.range = function(colors, _pos) {\\n      setColors(colors, _pos);\\n      return f;\\n    };\\n    f.out = function(_o) {\\n      _out = _o;\\n      return f;\\n    };\\n    f.spread = function(val) {\\n      if (!arguments.length) {\\n        return _spread;\\n      }\\n      _spread = val;\\n      return f;\\n    };\\n    f.correctLightness = function(v) {\\n      if (v == null) {\\n        v = true;\\n      }\\n      _correctLightness = v;\\n      resetCache();\\n      if (_correctLightness) {\\n        tmap = function(t) {\\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\\n          L0 = getColor(0, true).lab()[0];\\n          L1 = getColor(1, true).lab()[0];\\n          pol = L0 > L1;\\n          L_actual = getColor(t, true).lab()[0];\\n          L_ideal = L0 + (L1 - L0) * t;\\n          L_diff = L_actual - L_ideal;\\n          t0 = 0;\\n          t1 = 1;\\n          max_iter = 20;\\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\\n            (function() {\\n              if (pol) {\\n                L_diff *= -1;\\n              }\\n              if (L_diff < 0) {\\n                t0 = t;\\n                t += (t1 - t) * 0.5;\\n              } else {\\n                t1 = t;\\n                t += (t0 - t) * 0.5;\\n              }\\n              L_actual = getColor(t, true).lab()[0];\\n              return L_diff = L_actual - L_ideal;\\n            })();\\n          }\\n          return t;\\n        };\\n      } else {\\n        tmap = function(t) {\\n          return t;\\n        };\\n      }\\n      return f;\\n    };\\n    f.padding = function(p) {\\n      if (p != null) {\\n        if (type(p) === 'number') {\\n          p = [p, p];\\n        }\\n        _padding = p;\\n        return f;\\n      } else {\\n        return _padding;\\n      }\\n    };\\n    f.colors = function(numColors, out) {\\n      var dd, dm, i, o, ref, result, results, samples, w;\\n      if (arguments.length < 2) {\\n        out = 'hex';\\n      }\\n      result = [];\\n      if (arguments.length === 0) {\\n        result = _colors.slice(0);\\n      } else if (numColors === 1) {\\n        result = [f(0.5)];\\n      } else if (numColors > 1) {\\n        dm = _domain[0];\\n        dd = _domain[1] - dm;\\n        result = (function() {\\n          results = [];\\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\\n          return results;\\n        }).apply(this).map(function(i) {\\n          return f(dm + i / (numColors - 1) * dd);\\n        });\\n      } else {\\n        colors = [];\\n        samples = [];\\n        if (_classes && _classes.length > 2) {\\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\\n          }\\n        } else {\\n          samples = _domain;\\n        }\\n        result = samples.map(function(v) {\\n          return f(v);\\n        });\\n      }\\n      if (chroma[out]) {\\n        result = result.map(function(c) {\\n          return c[out]();\\n        });\\n      }\\n      return result;\\n    };\\n    f.cache = function(c) {\\n      if (c != null) {\\n        _useCache = c;\\n        return f;\\n      } else {\\n        return _useCache;\\n      }\\n    };\\n    f.gamma = function(g) {\\n      if (g != null) {\\n        _gamma = g;\\n        return f;\\n      } else {\\n        return _gamma;\\n      }\\n    };\\n    return f;\\n  };\\n\\n  if (chroma.scales == null) {\\n    chroma.scales = {};\\n  }\\n\\n  chroma.scales.cool = function() {\\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\\n  };\\n\\n  chroma.scales.hot = function() {\\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\\n  };\\n\\n  chroma.analyze = function(data, key, filter) {\\n    var add, k, len, o, r, val, visit;\\n    r = {\\n      min: Number.MAX_VALUE,\\n      max: Number.MAX_VALUE * -1,\\n      sum: 0,\\n      values: [],\\n      count: 0\\n    };\\n    if (filter == null) {\\n      filter = function() {\\n        return true;\\n      };\\n    }\\n    add = function(val) {\\n      if ((val != null) && !isNaN(val)) {\\n        r.values.push(val);\\n        r.sum += val;\\n        if (val < r.min) {\\n          r.min = val;\\n        }\\n        if (val > r.max) {\\n          r.max = val;\\n        }\\n        r.count += 1;\\n      }\\n    };\\n    visit = function(val, k) {\\n      if (filter(val, k)) {\\n        if ((key != null) && type(key) === 'function') {\\n          return add(key(val));\\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\\n          return add(val[key]);\\n        } else {\\n          return add(val);\\n        }\\n      }\\n    };\\n    if (type(data) === 'array') {\\n      for (o = 0, len = data.length; o < len; o++) {\\n        val = data[o];\\n        visit(val);\\n      }\\n    } else {\\n      for (k in data) {\\n        val = data[k];\\n        visit(val, k);\\n      }\\n    }\\n    r.domain = [r.min, r.max];\\n    r.limits = function(mode, num) {\\n      return chroma.limits(r, mode, num);\\n    };\\n    return r;\\n  };\\n\\n  chroma.limits = function(data, mode, num) {\\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\\n    if (mode == null) {\\n      mode = 'equal';\\n    }\\n    if (num == null) {\\n      num = 7;\\n    }\\n    if (type(data) === 'array') {\\n      data = chroma.analyze(data);\\n    }\\n    min = data.min;\\n    max = data.max;\\n    sum = data.sum;\\n    values = data.values.sort(function(a, b) {\\n      return a - b;\\n    });\\n    if (num === 1) {\\n      return [min, max];\\n    }\\n    limits = [];\\n    if (mode.substr(0, 1) === 'c') {\\n      limits.push(min);\\n      limits.push(max);\\n    }\\n    if (mode.substr(0, 1) === 'e') {\\n      limits.push(min);\\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\\n        limits.push(min + (i / num) * (max - min));\\n      }\\n      limits.push(max);\\n    } else if (mode.substr(0, 1) === 'l') {\\n      if (min <= 0) {\\n        throw 'Logarithmic scales are only possible for values > 0';\\n      }\\n      min_log = Math.LOG10E * log(min);\\n      max_log = Math.LOG10E * log(max);\\n      limits.push(min);\\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\\n      }\\n      limits.push(max);\\n    } else if (mode.substr(0, 1) === 'q') {\\n      limits.push(min);\\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\\n        p = (values.length - 1) * i / num;\\n        pb = floor(p);\\n        if (pb === p) {\\n          limits.push(values[pb]);\\n        } else {\\n          pr = p - pb;\\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\\n        }\\n      }\\n      limits.push(max);\\n    } else if (mode.substr(0, 1) === 'k') {\\n\\n      /*\\n      implementation based on\\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\\n      simplified for 1-d input values\\n       */\\n      n = values.length;\\n      assignments = new Array(n);\\n      clusterSizes = new Array(num);\\n      repeat = true;\\n      nb_iters = 0;\\n      centroids = null;\\n      centroids = [];\\n      centroids.push(min);\\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\\n        centroids.push(min + (i / num) * (max - min));\\n      }\\n      centroids.push(max);\\n      while (repeat) {\\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\\n          clusterSizes[j] = 0;\\n        }\\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\\n          value = values[i];\\n          mindist = Number.MAX_VALUE;\\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\\n            dist = abs(centroids[j] - value);\\n            if (dist < mindist) {\\n              mindist = dist;\\n              best = j;\\n            }\\n          }\\n          clusterSizes[best]++;\\n          assignments[i] = best;\\n        }\\n        newCentroids = new Array(num);\\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\\n          newCentroids[j] = null;\\n        }\\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\\n          cluster = assignments[i];\\n          if (newCentroids[cluster] === null) {\\n            newCentroids[cluster] = values[i];\\n          } else {\\n            newCentroids[cluster] += values[i];\\n          }\\n        }\\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\\n          newCentroids[j] *= 1 / clusterSizes[j];\\n        }\\n        repeat = false;\\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\\n          if (newCentroids[j] !== centroids[i]) {\\n            repeat = true;\\n            break;\\n          }\\n        }\\n        centroids = newCentroids;\\n        nb_iters++;\\n        if (nb_iters > 200) {\\n          repeat = false;\\n        }\\n      }\\n      kClusters = {};\\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\\n        kClusters[j] = [];\\n      }\\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\\n        cluster = assignments[i];\\n        kClusters[cluster].push(values[i]);\\n      }\\n      tmpKMeansBreaks = [];\\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\\n        tmpKMeansBreaks.push(kClusters[j][0]);\\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\\n      }\\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\\n        return a - b;\\n      });\\n      limits.push(tmpKMeansBreaks[0]);\\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\\n        v = tmpKMeansBreaks[i];\\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\\n          limits.push(v);\\n        }\\n      }\\n    }\\n    return limits;\\n  };\\n\\n  hsi2rgb = function(h, s, i) {\\n\\n    /*\\n    borrowed from here:\\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\\n     */\\n    var args, b, g, r;\\n    args = unpack(arguments);\\n    h = args[0], s = args[1], i = args[2];\\n    if (isNaN(h)) {\\n      h = 0;\\n    }\\n    h /= 360;\\n    if (h < 1 / 3) {\\n      b = (1 - s) / 3;\\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\\n      g = 1 - (b + r);\\n    } else if (h < 2 / 3) {\\n      h -= 1 / 3;\\n      r = (1 - s) / 3;\\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\\n      b = 1 - (r + g);\\n    } else {\\n      h -= 2 / 3;\\n      g = (1 - s) / 3;\\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\\n      r = 1 - (g + b);\\n    }\\n    r = limit(i * r * 3);\\n    g = limit(i * g * 3);\\n    b = limit(i * b * 3);\\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\\n  };\\n\\n  rgb2hsi = function() {\\n\\n    /*\\n    borrowed from here:\\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\\n     */\\n    var b, g, h, i, min, r, ref, s;\\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\\n    TWOPI = Math.PI * 2;\\n    r /= 255;\\n    g /= 255;\\n    b /= 255;\\n    min = Math.min(r, g, b);\\n    i = (r + g + b) / 3;\\n    s = 1 - min / i;\\n    if (s === 0) {\\n      h = 0;\\n    } else {\\n      h = ((r - g) + (r - b)) / 2;\\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\\n      h = Math.acos(h);\\n      if (b > g) {\\n        h = TWOPI - h;\\n      }\\n      h /= TWOPI;\\n    }\\n    return [h * 360, s, i];\\n  };\\n\\n  chroma.hsi = function() {\\n    return (function(func, args, ctor) {\\n      ctor.prototype = func.prototype;\\n      var child = new ctor, result = func.apply(child, args);\\n      return Object(result) === result ? result : child;\\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\\n  };\\n\\n  _input.hsi = hsi2rgb;\\n\\n  Color.prototype.hsi = function() {\\n    return rgb2hsi(this._rgb);\\n  };\\n\\n  interpolate_hsx = function(col1, col2, f, m) {\\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\\n    if (m === 'hsl') {\\n      xyz0 = col1.hsl();\\n      xyz1 = col2.hsl();\\n    } else if (m === 'hsv') {\\n      xyz0 = col1.hsv();\\n      xyz1 = col2.hsv();\\n    } else if (m === 'hcg') {\\n      xyz0 = col1.hcg();\\n      xyz1 = col2.hcg();\\n    } else if (m === 'hsi') {\\n      xyz0 = col1.hsi();\\n      xyz1 = col2.hsi();\\n    } else if (m === 'lch' || m === 'hcl') {\\n      m = 'hcl';\\n      xyz0 = col1.hcl();\\n      xyz1 = col2.hcl();\\n    }\\n    if (m.substr(0, 1) === 'h') {\\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\\n    }\\n    if (!isNaN(hue0) && !isNaN(hue1)) {\\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\\n        dh = hue1 - (hue0 + 360);\\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\\n        dh = hue1 + 360 - hue0;\\n      } else {\\n        dh = hue1 - hue0;\\n      }\\n      hue = hue0 + f * dh;\\n    } else if (!isNaN(hue0)) {\\n      hue = hue0;\\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\\n        sat = sat0;\\n      }\\n    } else if (!isNaN(hue1)) {\\n      hue = hue1;\\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\\n        sat = sat1;\\n      }\\n    } else {\\n      hue = Number.NaN;\\n    }\\n    if (sat == null) {\\n      sat = sat0 + f * (sat1 - sat0);\\n    }\\n    lbv = lbv0 + f * (lbv1 - lbv0);\\n    return res = chroma[m](hue, sat, lbv);\\n  };\\n\\n  _interpolators = _interpolators.concat((function() {\\n    var len, o, ref, results;\\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\\n    results = [];\\n    for (o = 0, len = ref.length; o < len; o++) {\\n      m = ref[o];\\n      results.push([m, interpolate_hsx]);\\n    }\\n    return results;\\n  })());\\n\\n  interpolate_num = function(col1, col2, f, m) {\\n    var n1, n2;\\n    n1 = col1.num();\\n    n2 = col2.num();\\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\\n  };\\n\\n  _interpolators.push(['num', interpolate_num]);\\n\\n  interpolate_lab = function(col1, col2, f, m) {\\n    var res, xyz0, xyz1;\\n    xyz0 = col1.lab();\\n    xyz1 = col2.lab();\\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\\n  };\\n\\n  _interpolators.push(['lab', interpolate_lab]);\\n\\n}).call(this);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"brewer\",\"m\",\"slice\",\"type\",\"len\",\"classToType\",\"ref\",\"o\",\"length\",\"name\",\"toLowerCase\",\"obj\",\"strType\",\"Object\",\"prototype\",\"toString\",\"call\",\"limit\",\"x\",\"min\",\"max\",\"unpack\",\"args\",\"Array\",\"clip_rgb\",\"rgb\",\"i\",\"_clipped\",\"_unclipped\",\"PI\",\"Math\",\"round\",\"cos\",\"floor\",\"pow\",\"log\",\"sin\",\"sqrt\",\"atan2\",\"abs\",\"TWOPI\",\"PITHIRD\",\"DEG2RAD\",\"RAD2DEG\",\"chroma\",\"arguments\",\"Color\",\"func\",\"ctor\",\"child\",\"result\",\"apply\",\"_interpolators\",\"define\",\"amd\",\"root\",\"version\",\"_input\",\"_guess_formats\",\"_guess_formats_sorted\",\"chk\",\"arg\",\"push\",\"mode\",\"me\",\"_rgb\",\"sort\",\"a\",\"b\",\"p\",\"w\",\"len1\",\"test\",\"console\",\"warn\",\"Color.prototype.toString\",\"hex\",\"clone\",\"Color.prototype.clone\",\"OrRd\",\"PuBu\",\"BuPu\",\"Oranges\",\"BuGn\",\"YlOrBr\",\"YlGn\",\"Reds\",\"RdPu\",\"Greens\",\"YlGnBu\",\"Purples\",\"GnBu\",\"Greys\",\"YlOrRd\",\"PuRd\",\"Blues\",\"PuBuGn\",\"Viridis\",\"Spectral\",\"RdYlGn\",\"RdBu\",\"PiYG\",\"PRGn\",\"RdYlBu\",\"BrBG\",\"RdGy\",\"PuOr\",\"Set2\",\"Accent\",\"Set1\",\"Set3\",\"Dark2\",\"Paired\",\"Pastel2\",\"Pastel1\",\"key\",\"results\",\"w3cx11\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflower\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"laserlemon\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrod\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"maroon2\",\"maroon3\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"purple2\",\"purple3\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"colors\",\"lab2rgb\",\"l\",\"y\",\"isNaN\",\"z\",\"LAB_CONSTANTS\",\"Yn\",\"lab_xyz\",\"Xn\",\"Zn\",\"r\",\"xyz_rgb\",\"g\",\"t\",\"t1\",\"t2\",\"t0\",\"Kn\",\"t3\",\"rgb2lab\",\"ref1\",\"rgb2xyz\",\"rgb_xyz\",\"xyz_lab\",\"lab\",\"chroma.lab\",\"concat\",\"Color.prototype.lab\",\"bezier\",\"c\",\"lab0\",\"lab1\",\"I\",\"lab2\",\"ref2\",\"lab3\",\"I0\",\"I1\",\"chroma.bezier\",\"f\",\"scale\",\"f.scale\",\"cubehelix\",\"chroma.cubehelix\",\"start\",\"rotations\",\"hue\",\"gamma\",\"lightness\",\"dh\",\"dl\",\"fract\",\"amp\",\"h\",\"cos_a\",\"sin_a\",\"f.start\",\"s\",\"f.rotations\",\"f.gamma\",\"f.hue\",\"f.lightness\",\"random\",\"chroma.random\",\"code\",\"digits\",\"charAt\",\"interpolate\",\"col1\",\"col2\",\"interpol\",\"res\",\"alpha\",\"Color.prototype.interpolate\",\"mix\",\"_input.rgb\",\"k\",\"v\",\"chroma.rgb\",\"Color.prototype.rgb\",\"map\",\"rgba\",\"Color.prototype.rgba\",\"n\",\"lrgb\",\"_average_lrgb\",\"xyz\",\"col\",\"interpolate_lrgb\",\"xyz0\",\"xyz1\",\"average\",\"chroma.average\",\"dx\",\"first\",\"splice\",\"get\",\"cnt\",\"dy\",\"A\",\"xyz2\",\"hex2rgb\",\"match\",\"substr\",\"split\",\"u\",\"parseInt\",\"css\",\"rgb2hex\",\"channels\",\"str\",\"hxa\",\"_input.hex\",\"chroma.hex\",\"Color.prototype.hex\",\"hsl2rgb\",\"rgb2hsl\",\"Number\",\"NaN\",\"hsl\",\"chroma.hsl\",\"Color.prototype.hsl\",\"rgb2hsv\",\"delta\",\"hsv\",\"chroma.hsv\",\"hsv2rgb\",\"q\",\"ref3\",\"ref4\",\"ref5\",\"Color.prototype.hsv\",\"rgb2num\",\"num\",\"chroma.num\",\"Color.prototype.num\",\"num2rgb\",\"rgb2hcg\",\"hcg\",\"chroma.hcg\",\"hcg2rgb\",\"_g\",\"_c\",\"Color.prototype.hcg\",\"css2rgb\",\"aa\",\"ab\",\"rgb2css\",\"join\",\"rnd\",\"hsl2css\",\"_input.css\",\"chroma.css\",\"Color.prototype.css\",\"named\",\"_input.named\",\"Color.prototype.name\",\"lch2lab\",\"lch2rgb\",\"L\",\"lab2lch\",\"rgb2lch\",\"lch\",\"chroma.lch\",\"hcl\",\"chroma.hcl\",\"_input.hcl\",\"Color.prototype.lch\",\"Color.prototype.hcl\",\"reverse\",\"rgb2cmyk\",\"cmyk2rgb\",\"cmyk\",\"_input.cmyk\",\"chroma.cmyk\",\"Color.prototype.cmyk\",\"gl\",\"_input.gl\",\"chroma.gl\",\"Color.prototype.gl\",\"rgb2luminance\",\"luminance_x\",\"interpolate_rgb\",\"luminance\",\"Color.prototype.luminance\",\"lum\",\"cur_lum\",\"max_iter\",\"lm\",\"eps\",\"temperature2rgb\",\"kelvin\",\"temp\",\"rgb2temperature\",\"maxTemp\",\"minTemp\",\"temperature\",\"chroma.kelvin\",\"K\",\"Color.prototype.temperature\",\"contrast\",\"chroma.contrast\",\"l1\",\"l2\",\"distance\",\"chroma.distance\",\"sum_sq\",\"d\",\"deltaE\",\"chroma.deltaE\",\"C\",\"L2\",\"a1\",\"h1\",\"L1\",\"b1\",\"a2\",\"b2\",\"c1\",\"c2\",\"sl\",\"sc\",\"c4\",\"v1\",\"v2\",\"delC\",\"v3\",\"delA\",\"delB\",\"Color.prototype.get\",\"modechan\",\"channel\",\"src\",\"indexOf\",\"set\",\"Color.prototype.set\",\"value\",\"clipped\",\"Color.prototype.clipped\",\"Color.prototype.alpha\",\"darken\",\"Color.prototype.darken\",\"amount\",\"brighten\",\"Color.prototype.brighten\",\"darker\",\"brighter\",\"saturate\",\"Color.prototype.saturate\",\"desaturate\",\"Color.prototype.desaturate\",\"premultiply\",\"Color.prototype.premultiply\",\"blend\",\"bottom\",\"top\",\"blend_f\",\"c0\",\"each\",\"out\",\"normal\",\"multiply\",\"screen\",\"overlay\",\"lighten\",\"dodge\",\"burn\",\"analyze\",\"chroma.analyze\",\"data\",\"MAX_VALUE\",\"sum\",\"values\",\"count\",\"val\",\"domain\",\"limits\",\"r.limits\",\"chroma.scale\",\"positions\",\"_mode\",\"_nacol\",\"_spread\",\"_domain\",\"_pos\",\"_padding\",\"_classes\",\"_colors\",\"_out\",\"_min\",\"_max\",\"_correctLightness\",\"_colorCache\",\"_useCache\",\"_gamma\",\"setColors\",\"resetCache\",\"getClass\",\"tmap\",\"getColor\",\"bypassMap\",\"classes\",\"f.classes\",\"f.domain\",\"f.mode\",\"_m\",\"range\",\"f.range\",\"f.out\",\"_o\",\"spread\",\"f.spread\",\"correctLightness\",\"f.correctLightness\",\"L0\",\"pol\",\"L_actual\",\"L_ideal\",\"L_diff\",\"padding\",\"f.padding\",\"f.colors\",\"numColors\",\"dm\",\"dd\",\"samples\",\"cache\",\"f.cache\",\"scales\",\"cool\",\"chroma.scales.cool\",\"hot\",\"chroma.scales.hot\",\"filter\",\"add\",\"visit\",\"chroma.limits\",\"ai\",\"best\",\"ref6\",\"min_log\",\"LOG10E\",\"max_log\",\"pb\",\"pr\",\"assignments\",\"clusterSizes\",\"repeat\",\"nb_iters\",\"centroids\",\"j\",\"ac\",\"ad\",\"mindist\",\"ae\",\"dist\",\"newCentroids\",\"af\",\"ref7\",\"ag\",\"ref8\",\"cluster\",\"ah\",\"ref9\",\"ref10\",\"kClusters\",\"aj\",\"ref11\",\"ak\",\"ref12\",\"tmpKMeansBreaks\",\"al\",\"ref13\",\"am\",\"ref14\",\"rgb2hsi\",\"acos\",\"hsi\",\"chroma.hsi\",\"hsi2rgb\",\"Color.prototype.hsi\",\"interpolate_hsx\",\"sat\",\"hue0\",\"sat0\",\"lbv0\",\"hue1\",\"sat1\",\"lbv1\",\"interpolate_num\",\"n1\",\"n2\",\"interpolate_lab\"]\n}\n"]