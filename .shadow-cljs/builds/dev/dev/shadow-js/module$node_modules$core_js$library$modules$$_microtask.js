["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js/library/modules/$.microtask.js"],"~:js","shadow$provide.module$node_modules$core_js$library$modules$$_microtask=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$core_js$library$modules$$_global\");var macrotask=require(\"module$node_modules$core_js$library$modules$$_task\").set;exports=global.MutationObserver||global.WebKitMutationObserver;process=global.process;var Promise=global.Promise,isNode=\"process\"==require(\"module$node_modules$core_js$library$modules$$_cof\")(process),head,last,flush=function(){var parent;\nisNode&&(parent=process.domain)&&(process.domain=null,parent.exit());for(;head;){var domain=head.domain;var fn=head.fn;domain&&domain.enter();fn();domain&&domain.exit();head=head.next}last=void 0;parent&&parent.enter()};if(isNode)var notify=function(){process.nextTick(flush)};else if(exports){var toggle=1,node=document.createTextNode(\"\");(new exports(flush)).observe(node,{characterData:!0});notify=function(){node.data=toggle=-toggle}}else notify=Promise&&Promise.resolve?function(){Promise.resolve().then(flush)}:\nfunction(){macrotask.call(global,flush)};module.exports=function(fn){fn={fn:fn,next:void 0,domain:isNode&&process.domain};last&&(last.next=fn);head||(head=fn,notify());last=fn}}","~:source","shadow$provide[\"module$node_modules$core_js$library$modules$$_microtask\"] = function(global,process,require,module,exports,shadow$shims) {\nvar global    = require('./$.global')\n  , macrotask = require('./$.task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./$.cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js$library$modules$$_global","~$module$node_modules$core_js$library$modules$$_cof","~$module$node_modules$core_js$library$modules$$_task"]],"~:properties",["^5",["next","fn","characterData","domain","data"]],"~:compiled-at",1537791607625,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js$library$modules$$_microtask.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrIL,MADqI,CACzHE,OAAA,CAAQ,sDAAR,CADyH,KAErII,UAAYJ,OAAA,CAAQ,oDAAR,CAAAK,IACZC,QAAAA,CAAYR,MAAAS,iBAAZD,EAAuCR,MAAAU,uBACvCT,QAJqI,CAIzHD,MAAAC,QAJyH,KAKrIU,QAAYX,MAAAW,QALyH,CAMrIC,OAA2C,SAA3CA,EAAYV,OAAA,CAAQ,mDAAR,CAAA,CAAmBD,OAAnB,CANyH,CAOrIY,IAPqI,CAO/HC,IAP+H,CASrIC,MAAQA,QAAQ,EAAE,CAAA,IAChBC,MACDJ;MAAH,GAAcI,MAAd,CAAuBf,OAAAgB,OAAvB,IACEhB,OAAAgB,OACA,CADiB,IACjB,CAAAD,MAAAE,KAAA,EAFF,CAIA,KAAA,CAAML,IAAN,CAAA,CAAW,CACT,IAAAI,OAASJ,IAAAI,OACT,KAAAE,GAASN,IAAAM,GACNF,OAAH,EAAUA,MAAAG,MAAA,EACVD,GAAA,EACGF,OAAH,EAAUA,MAAAC,KAAA,EACVL,KAAA,CAAOA,IAAAQ,KANE,CAOTP,IAAA,CAAOQ,IAAAA,EACNN,OAAH,EAAUA,MAAAI,MAAA,EAdU,CAkBtB,IAAGR,MAAH,CACE,IAAAW,OAASA,QAAQ,EAAE,CACjBtB,OAAAuB,SAAA,CAAiBT,KAAjB,CADiB,CADrB,KAKO,IAAGP,OAAH,CAAY,CAAA,IACbiB,OAAS,CADI,CAEbC,KAASC,QAAAC,eAAA,CAAwB,EAAxB,CACbC,EAAA,IAAIrB,OAAJ,CAAaO,KAAb,CAAAc,SAAA,CAA4BH,IAA5B,CAAkC,CAACI,cAAe,CAAA,CAAhB,CAAlC,CACAP,OAAA,CAASA,QAAQ,EAAE,CACjBG,IAAAK,KAAA,CAAYN,MAAZ,CAAqB,CAACA,MADL,CAJF,CAAZ,IASLF,OAAA,CADQZ,OAAH,EAAcA,OAAAqB,QAAd,CACIT,QAAQ,EAAE,CACjBZ,OAAAqB,QAAA,EAAAC,KAAA,CAAuBlB,KAAvB,CADiB,CADd;AAWIQ,QAAQ,EAAE,CAEjBjB,SAAA4B,KAAA,CAAelC,MAAf,CAAuBe,KAAvB,CAFiB,CAMrBZ,OAAAC,QAAA,CAAiB+B,QAAa,CAAChB,EAAD,CAAI,CAC5BiB,EAAAA,CAAO,CAACjB,GAAIA,EAAL,CAASE,KAAMC,IAAAA,EAAf,CAA0BL,OAAQL,MAARK,EAAkBhB,OAAAgB,OAA5C,CACRH,KAAH,GAAQA,IAAAO,KAAR,CAAoBe,EAApB,CACIvB,KAAJ,GACEA,IACA,CADOuB,EACP,CAAAb,MAAA,EAFF,CAGET,KAAA,CAAOsB,EANuB,CAzDuG;\",\n\"sources\":[\"node_modules/core-js/library/modules/$.microtask.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js$library$modules$$_microtask\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar global    = require('./$.global')\\n  , macrotask = require('./$.task').set\\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\\n  , process   = global.process\\n  , Promise   = global.Promise\\n  , isNode    = require('./$.cof')(process) == 'process'\\n  , head, last, notify;\\n\\nvar flush = function(){\\n  var parent, domain, fn;\\n  if(isNode && (parent = process.domain)){\\n    process.domain = null;\\n    parent.exit();\\n  }\\n  while(head){\\n    domain = head.domain;\\n    fn     = head.fn;\\n    if(domain)domain.enter();\\n    fn(); // <- currently we use it only for Promise - try / catch not required\\n    if(domain)domain.exit();\\n    head = head.next;\\n  } last = undefined;\\n  if(parent)parent.enter();\\n};\\n\\n// Node.js\\nif(isNode){\\n  notify = function(){\\n    process.nextTick(flush);\\n  };\\n// browsers with MutationObserver\\n} else if(Observer){\\n  var toggle = 1\\n    , node   = document.createTextNode('');\\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\\n  notify = function(){\\n    node.data = toggle = -toggle;\\n  };\\n// environments with maybe non-completely correct, but existent Promise\\n} else if(Promise && Promise.resolve){\\n  notify = function(){\\n    Promise.resolve().then(flush);\\n  };\\n// for other environments - macrotask based on:\\n// - setImmediate\\n// - MessageChannel\\n// - window.postMessag\\n// - onreadystatechange\\n// - setTimeout\\n} else {\\n  notify = function(){\\n    // strange IE + webpack dev server bug - use .call(global)\\n    macrotask.call(global, flush);\\n  };\\n}\\n\\nmodule.exports = function asap(fn){\\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\\n  if(last)last.next = task;\\n  if(!head){\\n    head = task;\\n    notify();\\n  } last = task;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"macrotask\",\"set\",\"Observer\",\"MutationObserver\",\"WebKitMutationObserver\",\"Promise\",\"isNode\",\"head\",\"last\",\"flush\",\"parent\",\"domain\",\"exit\",\"fn\",\"enter\",\"next\",\"undefined\",\"notify\",\"nextTick\",\"toggle\",\"node\",\"document\",\"createTextNode\",\"observe\",\"characterData\",\"data\",\"resolve\",\"then\",\"call\",\"module.exports\",\"task\"]\n}\n"]