["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$babel_runtime$helpers$objectWithoutProperties\");var _objectWithoutProperties3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$classCallCheck\");\nvar _classCallCheck3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$createClass\");var _createClass3=_interopRequireDefault(global);global=require(\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$CellSizeAndPositionManager\");var _CellSizeAndPositionManager2=_interopRequireDefault(global),_maxElementSize=require(\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$maxElementSize\");require(\"module$node_modules$react_virtualized$dist$commonjs$Grid$types\");\nrequire=function(){function ScalingCellSizeAndPositionManager(_ref){var _ref$maxScrollSize=_ref.maxScrollSize;_ref$maxScrollSize=void 0===_ref$maxScrollSize?(0,_maxElementSize.getMaxElementSize)():_ref$maxScrollSize;_ref=(0,_objectWithoutProperties3.default)(_ref,[\"maxScrollSize\"]);(0,_classCallCheck3.default)(this,ScalingCellSizeAndPositionManager);this._cellSizeAndPositionManager=new _CellSizeAndPositionManager2.default(_ref);this._maxScrollSize=_ref$maxScrollSize}(0,_createClass3.default)(ScalingCellSizeAndPositionManager,\n[{key:\"areOffsetsAdjusted\",value:function(){return this._cellSizeAndPositionManager.getTotalSize()>this._maxScrollSize}},{key:\"configure\",value:function(params){this._cellSizeAndPositionManager.configure(params)}},{key:\"getCellCount\",value:function(){return this._cellSizeAndPositionManager.getCellCount()}},{key:\"getEstimatedCellSize\",value:function(){return this._cellSizeAndPositionManager.getEstimatedCellSize()}},{key:\"getLastMeasuredIndex\",value:function(){return this._cellSizeAndPositionManager.getLastMeasuredIndex()}},\n{key:\"getOffsetAdjustment\",value:function(_ref2){var containerSize=_ref2.containerSize,offset=_ref2.offset;_ref2=this._cellSizeAndPositionManager.getTotalSize();var safeTotalSize=this.getTotalSize();containerSize=this._getOffsetPercentage({containerSize:containerSize,offset:offset,totalSize:safeTotalSize});return Math.round(containerSize*(safeTotalSize-_ref2))}},{key:\"getSizeAndPositionOfCell\",value:function(index){return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index)}},{key:\"getSizeAndPositionOfLastMeasuredCell\",\nvalue:function(){return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell()}},{key:\"getTotalSize\",value:function(){return Math.min(this._maxScrollSize,this._cellSizeAndPositionManager.getTotalSize())}},{key:\"getUpdatedOffsetForIndex\",value:function(_ref3){var _ref3$align=_ref3.align,align=void 0===_ref3$align?\"auto\":_ref3$align;_ref3$align=_ref3.containerSize;var currentOffset=_ref3.currentOffset;_ref3=_ref3.targetIndex;currentOffset=this._safeOffsetToOffset({containerSize:_ref3$align,\noffset:currentOffset});_ref3=this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({align:align,containerSize:_ref3$align,currentOffset:currentOffset,targetIndex:_ref3});return this._offsetToSafeOffset({containerSize:_ref3$align,offset:_ref3})}},{key:\"getVisibleCellRange\",value:function(_ref4){var containerSize=_ref4.containerSize;_ref4=_ref4.offset;_ref4=this._safeOffsetToOffset({containerSize:containerSize,offset:_ref4});return this._cellSizeAndPositionManager.getVisibleCellRange({containerSize:containerSize,\noffset:_ref4})}},{key:\"resetCell\",value:function(index){this._cellSizeAndPositionManager.resetCell(index)}},{key:\"_getOffsetPercentage\",value:function(_ref5){var containerSize=_ref5.containerSize,offset=_ref5.offset;_ref5=_ref5.totalSize;return _ref5<=containerSize?0:offset/(_ref5-containerSize)}},{key:\"_offsetToSafeOffset\",value:function(_ref6){var containerSize=_ref6.containerSize,offset=_ref6.offset,totalSize=this._cellSizeAndPositionManager.getTotalSize();_ref6=this.getTotalSize();if(totalSize===\n_ref6)return offset;offset=this._getOffsetPercentage({containerSize:containerSize,offset:offset,totalSize:totalSize});return Math.round(offset*(_ref6-containerSize))}},{key:\"_safeOffsetToOffset\",value:function(_ref7){var containerSize=_ref7.containerSize,offset=_ref7.offset;_ref7=this._cellSizeAndPositionManager.getTotalSize();var safeTotalSize=this.getTotalSize();if(_ref7===safeTotalSize)return offset;offset=this._getOffsetPercentage({containerSize:containerSize,offset:offset,totalSize:safeTotalSize});\nreturn Math.round(offset*(_ref7-containerSize))}}]);return ScalingCellSizeAndPositionManager}();exports.default=require}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _CellSizeAndPositionManager = require('./CellSizeAndPositionManager');\n\nvar _CellSizeAndPositionManager2 = _interopRequireDefault(_CellSizeAndPositionManager);\n\nvar _maxElementSize = require('./maxElementSize.js');\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\n\n\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties3.default)(_ref, ['maxScrollSize']);\n    (0, _classCallCheck3.default)(this, ScalingCellSizeAndPositionManager);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager2.default(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass3.default)(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports.default = ScalingCellSizeAndPositionManager;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Grid$types","~$module$node_modules$react_virtualized$dist$commonjs$Grid$utils$maxElementSize","~$shadow.js","~$module$node_modules$react_virtualized$dist$commonjs$Grid$utils$CellSizeAndPositionManager","~$module$node_modules$babel_runtime$helpers$objectWithoutProperties","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["align","targetIndex","offset","_cellSizeAndPositionManager","key","__esModule","_maxScrollSize","containerSize","value","currentOffset","default","totalSize"]],"~:compiled-at",1537791607611,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\\n\\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _CellSizeAndPositionManager = require('./CellSizeAndPositionManager');\\n\\nvar _CellSizeAndPositionManager2 = _interopRequireDefault(_CellSizeAndPositionManager);\\n\\nvar _maxElementSize = require('./maxElementSize.js');\\n\\nvar _types = require('../types');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\\n */\\n\\n\\n/**\\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\\n */\\n\\nvar ScalingCellSizeAndPositionManager = function () {\\n  function ScalingCellSizeAndPositionManager(_ref) {\\n    var _ref$maxScrollSize = _ref.maxScrollSize,\\n        maxScrollSize = _ref$maxScrollSize === undefined ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\\n        params = (0, _objectWithoutProperties3.default)(_ref, ['maxScrollSize']);\\n    (0, _classCallCheck3.default)(this, ScalingCellSizeAndPositionManager);\\n\\n    // Favor composition over inheritance to simplify IE10 support\\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager2.default(params);\\n    this._maxScrollSize = maxScrollSize;\\n  }\\n\\n  (0, _createClass3.default)(ScalingCellSizeAndPositionManager, [{\\n    key: 'areOffsetsAdjusted',\\n    value: function areOffsetsAdjusted() {\\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\\n    }\\n  }, {\\n    key: 'configure',\\n    value: function configure(params) {\\n      this._cellSizeAndPositionManager.configure(params);\\n    }\\n  }, {\\n    key: 'getCellCount',\\n    value: function getCellCount() {\\n      return this._cellSizeAndPositionManager.getCellCount();\\n    }\\n  }, {\\n    key: 'getEstimatedCellSize',\\n    value: function getEstimatedCellSize() {\\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\\n    }\\n  }, {\\n    key: 'getLastMeasuredIndex',\\n    value: function getLastMeasuredIndex() {\\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\\n    }\\n\\n    /**\\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\\n     * The offset passed to this function is scaled (safe) as well.\\n     */\\n\\n  }, {\\n    key: 'getOffsetAdjustment',\\n    value: function getOffsetAdjustment(_ref2) {\\n      var containerSize = _ref2.containerSize,\\n          offset = _ref2.offset;\\n\\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\\n      var safeTotalSize = this.getTotalSize();\\n      var offsetPercentage = this._getOffsetPercentage({\\n        containerSize: containerSize,\\n        offset: offset,\\n        totalSize: safeTotalSize\\n      });\\n\\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\\n    }\\n  }, {\\n    key: 'getSizeAndPositionOfCell',\\n    value: function getSizeAndPositionOfCell(index) {\\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\\n    }\\n  }, {\\n    key: 'getSizeAndPositionOfLastMeasuredCell',\\n    value: function getSizeAndPositionOfLastMeasuredCell() {\\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\\n    }\\n\\n    /** See CellSizeAndPositionManager#getTotalSize */\\n\\n  }, {\\n    key: 'getTotalSize',\\n    value: function getTotalSize() {\\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\\n    }\\n\\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\\n\\n  }, {\\n    key: 'getUpdatedOffsetForIndex',\\n    value: function getUpdatedOffsetForIndex(_ref3) {\\n      var _ref3$align = _ref3.align,\\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\\n          containerSize = _ref3.containerSize,\\n          currentOffset = _ref3.currentOffset,\\n          targetIndex = _ref3.targetIndex;\\n\\n      currentOffset = this._safeOffsetToOffset({\\n        containerSize: containerSize,\\n        offset: currentOffset\\n      });\\n\\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\\n        align: align,\\n        containerSize: containerSize,\\n        currentOffset: currentOffset,\\n        targetIndex: targetIndex\\n      });\\n\\n      return this._offsetToSafeOffset({\\n        containerSize: containerSize,\\n        offset: offset\\n      });\\n    }\\n\\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\\n\\n  }, {\\n    key: 'getVisibleCellRange',\\n    value: function getVisibleCellRange(_ref4) {\\n      var containerSize = _ref4.containerSize,\\n          offset = _ref4.offset;\\n\\n      offset = this._safeOffsetToOffset({\\n        containerSize: containerSize,\\n        offset: offset\\n      });\\n\\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\\n        containerSize: containerSize,\\n        offset: offset\\n      });\\n    }\\n  }, {\\n    key: 'resetCell',\\n    value: function resetCell(index) {\\n      this._cellSizeAndPositionManager.resetCell(index);\\n    }\\n  }, {\\n    key: '_getOffsetPercentage',\\n    value: function _getOffsetPercentage(_ref5) {\\n      var containerSize = _ref5.containerSize,\\n          offset = _ref5.offset,\\n          totalSize = _ref5.totalSize;\\n\\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\\n    }\\n  }, {\\n    key: '_offsetToSafeOffset',\\n    value: function _offsetToSafeOffset(_ref6) {\\n      var containerSize = _ref6.containerSize,\\n          offset = _ref6.offset;\\n\\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\\n      var safeTotalSize = this.getTotalSize();\\n\\n      if (totalSize === safeTotalSize) {\\n        return offset;\\n      } else {\\n        var offsetPercentage = this._getOffsetPercentage({\\n          containerSize: containerSize,\\n          offset: offset,\\n          totalSize: totalSize\\n        });\\n\\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\\n      }\\n    }\\n  }, {\\n    key: '_safeOffsetToOffset',\\n    value: function _safeOffsetToOffset(_ref7) {\\n      var containerSize = _ref7.containerSize,\\n          offset = _ref7.offset;\\n\\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\\n      var safeTotalSize = this.getTotalSize();\\n\\n      if (totalSize === safeTotalSize) {\\n        return offset;\\n      } else {\\n        var offsetPercentage = this._getOffsetPercentage({\\n          containerSize: containerSize,\\n          offset: offset,\\n          totalSize: safeTotalSize\\n        });\\n\\n        return Math.round(offsetPercentage * (totalSize - containerSize));\\n      }\\n    }\\n  }]);\\n  return ScalingCellSizeAndPositionManager;\\n}();\\n\\nexports.default = ScalingCellSizeAndPositionManager;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_objectWithoutProperties2\",\"_objectWithoutProperties3\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_CellSizeAndPositionManager\",\"_CellSizeAndPositionManager2\",\"_maxElementSize\",\"ScalingCellSizeAndPositionManager\",\"_ref\",\"_ref$maxScrollSize\",\"maxScrollSize\",\"undefined\",\"getMaxElementSize\",\"params\",\"_cellSizeAndPositionManager\",\"_maxScrollSize\",\"key\",\"areOffsetsAdjusted\",\"getTotalSize\",\"configure\",\"getCellCount\",\"getEstimatedCellSize\",\"getLastMeasuredIndex\",\"getOffsetAdjustment\",\"_ref2\",\"containerSize\",\"offset\",\"totalSize\",\"safeTotalSize\",\"offsetPercentage\",\"_getOffsetPercentage\",\"Math\",\"round\",\"getSizeAndPositionOfCell\",\"index\",\"getSizeAndPositionOfLastMeasuredCell\",\"min\",\"getUpdatedOffsetForIndex\",\"_ref3\",\"_ref3$align\",\"align\",\"currentOffset\",\"targetIndex\",\"_safeOffsetToOffset\",\"_offsetToSafeOffset\",\"getVisibleCellRange\",\"_ref4\",\"resetCell\",\"_ref5\",\"_ref6\",\"_ref7\"]\n}\n"]