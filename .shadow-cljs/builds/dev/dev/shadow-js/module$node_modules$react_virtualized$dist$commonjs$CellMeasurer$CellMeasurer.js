["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$babel_runtime$core_js$object$get_prototype_of\");var _getPrototypeOf2=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$classCallCheck\");\nvar _classCallCheck3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$createClass\");var _createClass3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$possibleConstructorReturn\");var _possibleConstructorReturn3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$inherits\");var _inherits3=_interopRequireDefault(global);global=function(obj){if(obj&&obj.__esModule)return obj;var newObj=\n{};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);newObj.default=obj;return newObj}(require(\"module$node_modules$react$index\"));var _reactDom=require(\"module$node_modules$react_dom$index\"),_types=require(\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types\");require=require(\"module$node_modules$prop_types$index\");var _propTypes2=_interopRequireDefault(require);require=function(_React$PureComponent){function CellMeasurer(){var _ref,\n_temp,_this,_ret;(0,_classCallCheck3.default)(this,CellMeasurer);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _ret=(_temp=(_this=(0,_possibleConstructorReturn3.default)(this,(_ref=CellMeasurer.__proto__||(0,_getPrototypeOf2.default)(CellMeasurer)).call.apply(_ref,[this].concat(args))),_this),_this._measure=function(){var _this$props=_this.props,cache=_this$props.cache,_this$props$columnInd=_this$props.columnIndex;_this$props$columnInd=void 0===\n_this$props$columnInd?0:_this$props$columnInd;var parent=_this$props.parent;_this$props=_this$props.rowIndex;_this$props=void 0===_this$props?_this.props.index||0:_this$props;var _this$_getCellMeasure=_this._getCellMeasurements(),height=_this$_getCellMeasure.height;_this$_getCellMeasure=_this$_getCellMeasure.width;if(height!==cache.getHeight(_this$props,_this$props$columnInd)||_this$_getCellMeasure!==cache.getWidth(_this$props,_this$props$columnInd))cache.set(_this$props,_this$props$columnInd,_this$_getCellMeasure,\nheight),parent&&\"function\"===typeof parent.recomputeGridSize&&parent.recomputeGridSize({columnIndex:_this$props$columnInd,rowIndex:_this$props})},_temp),(0,_possibleConstructorReturn3.default)(_this,_ret)}(0,_inherits3.default)(CellMeasurer,_React$PureComponent);(0,_createClass3.default)(CellMeasurer,[{key:\"componentDidMount\",value:function(){this._maybeMeasureCell()}},{key:\"componentDidUpdate\",value:function(){this._maybeMeasureCell()}},{key:\"render\",value:function(){var children=this.props.children;\nreturn\"function\"===typeof children?children({measure:this._measure}):children}},{key:\"_getCellMeasurements\",value:function(){var cache=this.props.cache,node=(0,_reactDom.findDOMNode)(this);if(node&&node.ownerDocument&&node.ownerDocument.defaultView&&node instanceof node.ownerDocument.defaultView.HTMLElement){var styleWidth=node.style.width,styleHeight=node.style.height;cache.hasFixedWidth()||(node.style.width=\"auto\");cache.hasFixedHeight()||(node.style.height=\"auto\");cache=Math.ceil(node.offsetHeight);\nvar width=Math.ceil(node.offsetWidth);styleWidth&&(node.style.width=styleWidth);styleHeight&&(node.style.height=styleHeight);return{height:cache,width:width}}return{height:0,width:0}}},{key:\"_maybeMeasureCell\",value:function(){var _props=this.props,cache=_props.cache,_props$columnIndex=_props.columnIndex;_props$columnIndex=void 0===_props$columnIndex?0:_props$columnIndex;var parent=_props.parent;_props=_props.rowIndex;_props=void 0===_props?this.props.index||0:_props;if(!cache.has(_props,_props$columnIndex)){var _getCellMeasurements2=\nthis._getCellMeasurements();cache.set(_props,_props$columnIndex,_getCellMeasurements2.width,_getCellMeasurements2.height);parent&&\"function\"===typeof parent.invalidateCellSizeAfterRender&&parent.invalidateCellSizeAfterRender({columnIndex:_props$columnIndex,rowIndex:_props})}}}]);return CellMeasurer}(global.PureComponent);require.__internalCellMeasurerFlag=!1;require.propTypes={cache:function(){return(\"function\"===typeof _types.bpfrpt_proptype_CellMeasureCache?_types.bpfrpt_proptype_CellMeasureCache.isRequired?\n_types.bpfrpt_proptype_CellMeasureCache.isRequired:_types.bpfrpt_proptype_CellMeasureCache:_propTypes2.default.shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this,arguments)},children:_propTypes2.default.oneOfType([_propTypes2.default.func,_propTypes2.default.node]).isRequired,columnIndex:_propTypes2.default.number,index:_propTypes2.default.number,parent:_propTypes2.default.shape({invalidateCellSizeAfterRender:_propTypes2.default.func,recomputeGridSize:_propTypes2.default.func}).isRequired,\nrowIndex:_propTypes2.default.number};exports.default=require;require.__internalCellMeasurerFlag=!0}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _types = require('./types');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = function (_React$PureComponent) {\n  (0, _inherits3.default)(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CellMeasurer.__proto__ || (0, _getPrototypeOf2.default)(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n\n\n      var node = (0, _reactDom.findDOMNode)(this);\n\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height;\n\n        // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth);\n\n        // Reset after measuring to avoid breaking styles; see #660\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return { height: height, width: width };\n      } else {\n        return { height: 0, width: 0 };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height);\n\n        // If size has changed, let Grid know to re-render.\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent);\n\n// Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === 'function' ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes2.default.shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]).isRequired,\n  columnIndex: _propTypes2.default.number,\n  index: _propTypes2.default.number,\n  parent: _propTypes2.default.shape({\n    invalidateCellSizeAfterRender: _propTypes2.default.func,\n    recomputeGridSize: _propTypes2.default.func\n  }).isRequired,\n  rowIndex: _propTypes2.default.number\n};\nexports.default = CellMeasurer;\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types","~$module$node_modules$react_dom$index","~$module$node_modules$babel_runtime$helpers$possibleConstructorReturn","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$babel_runtime$helpers$inherits","~$module$node_modules$babel_runtime$core_js$object$get_prototype_of","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["columnIndex","width","__internalCellMeasurerFlag","index","height","key","parent","children","measure","__esModule","invalidateCellSizeAfterRender","recomputeGridSize","propTypes","cache","value","_measure","rowIndex","default"]],"~:compiled-at",1537791607665,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\\n\\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\\n\\nvar _inherits2 = require('babel-runtime/helpers/inherits');\\n\\nvar _inherits3 = _interopRequireDefault(_inherits2);\\n\\nvar _react = require('react');\\n\\nvar React = _interopRequireWildcard(_react);\\n\\nvar _reactDom = require('react-dom');\\n\\nvar _types = require('./types');\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Wraps a cell and measures its rendered content.\\n * Measurements are stored in a per-cell cache.\\n * Cached-content is not be re-measured.\\n */\\nvar CellMeasurer = function (_React$PureComponent) {\\n  (0, _inherits3.default)(CellMeasurer, _React$PureComponent);\\n\\n  function CellMeasurer() {\\n    var _ref;\\n\\n    var _temp, _this, _ret;\\n\\n    (0, _classCallCheck3.default)(this, CellMeasurer);\\n\\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CellMeasurer.__proto__ || (0, _getPrototypeOf2.default)(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\\n      var _this$props = _this.props,\\n          cache = _this$props.cache,\\n          _this$props$columnInd = _this$props.columnIndex,\\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\\n          parent = _this$props.parent,\\n          _this$props$rowIndex = _this$props.rowIndex,\\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\\n\\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\\n          height = _this$_getCellMeasure.height,\\n          width = _this$_getCellMeasure.width;\\n\\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\\n        cache.set(rowIndex, columnIndex, width, height);\\n\\n        if (parent && typeof parent.recomputeGridSize === 'function') {\\n          parent.recomputeGridSize({\\n            columnIndex: columnIndex,\\n            rowIndex: rowIndex\\n          });\\n        }\\n      }\\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\\n  }\\n\\n  (0, _createClass3.default)(CellMeasurer, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this._maybeMeasureCell();\\n    }\\n  }, {\\n    key: 'componentDidUpdate',\\n    value: function componentDidUpdate() {\\n      this._maybeMeasureCell();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var children = this.props.children;\\n\\n\\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\\n    }\\n  }, {\\n    key: '_getCellMeasurements',\\n    value: function _getCellMeasurements() {\\n      var cache = this.props.cache;\\n\\n\\n      var node = (0, _reactDom.findDOMNode)(this);\\n\\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\\n\\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\\n        var styleWidth = node.style.width;\\n        var styleHeight = node.style.height;\\n\\n        // If we are re-measuring a cell that has already been measured,\\n        // It will have a hard-coded width/height from the previous measurement.\\n        // The fact that we are measuring indicates this measurement is probably stale,\\n        // So explicitly clear it out (eg set to \\\"auto\\\") so we can recalculate.\\n        // See issue #593 for more info.\\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\\n        // eg top/left Grid renders before bottom/right Grid\\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\\n        if (!cache.hasFixedWidth()) {\\n          node.style.width = 'auto';\\n        }\\n        if (!cache.hasFixedHeight()) {\\n          node.style.height = 'auto';\\n        }\\n\\n        var height = Math.ceil(node.offsetHeight);\\n        var width = Math.ceil(node.offsetWidth);\\n\\n        // Reset after measuring to avoid breaking styles; see #660\\n        if (styleWidth) {\\n          node.style.width = styleWidth;\\n        }\\n        if (styleHeight) {\\n          node.style.height = styleHeight;\\n        }\\n\\n        return { height: height, width: width };\\n      } else {\\n        return { height: 0, width: 0 };\\n      }\\n    }\\n  }, {\\n    key: '_maybeMeasureCell',\\n    value: function _maybeMeasureCell() {\\n      var _props = this.props,\\n          cache = _props.cache,\\n          _props$columnIndex = _props.columnIndex,\\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\\n          parent = _props.parent,\\n          _props$rowIndex = _props.rowIndex,\\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\\n\\n\\n      if (!cache.has(rowIndex, columnIndex)) {\\n        var _getCellMeasurements2 = this._getCellMeasurements(),\\n            height = _getCellMeasurements2.height,\\n            width = _getCellMeasurements2.width;\\n\\n        cache.set(rowIndex, columnIndex, width, height);\\n\\n        // If size has changed, let Grid know to re-render.\\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\\n          parent.invalidateCellSizeAfterRender({\\n            columnIndex: columnIndex,\\n            rowIndex: rowIndex\\n          });\\n        }\\n      }\\n    }\\n  }]);\\n  return CellMeasurer;\\n}(React.PureComponent);\\n\\n// Used for DEV mode warning check\\n\\n\\nCellMeasurer.__internalCellMeasurerFlag = false;\\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\\n  cache: function cache() {\\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === 'function' ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes2.default.shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\\n  },\\n  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]).isRequired,\\n  columnIndex: _propTypes2.default.number,\\n  index: _propTypes2.default.number,\\n  parent: _propTypes2.default.shape({\\n    invalidateCellSizeAfterRender: _propTypes2.default.func,\\n    recomputeGridSize: _propTypes2.default.func\\n  }).isRequired,\\n  rowIndex: _propTypes2.default.number\\n};\\nexports.default = CellMeasurer;\\nif (process.env.NODE_ENV !== 'production') {\\n  CellMeasurer.__internalCellMeasurerFlag = true;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_getPrototypeOf\",\"_getPrototypeOf2\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_possibleConstructorReturn2\",\"_possibleConstructorReturn3\",\"_inherits2\",\"_inherits3\",\"React\",\"_interopRequireWildcard\",\"newObj\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"_react\",\"_reactDom\",\"_types\",\"_propTypes\",\"_propTypes2\",\"CellMeasurer\",\"_React$PureComponent\",\"_ref\",\"_temp\",\"_this\",\"_ret\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"__proto__\",\"apply\",\"concat\",\"_measure\",\"_this._measure\",\"_this$props\",\"props\",\"cache\",\"_this$props$columnInd\",\"columnIndex\",\"undefined\",\"parent\",\"_this$props$rowIndex\",\"rowIndex\",\"index\",\"_this$_getCellMeasure\",\"_getCellMeasurements\",\"height\",\"width\",\"getHeight\",\"getWidth\",\"set\",\"recomputeGridSize\",\"componentDidMount\",\"_maybeMeasureCell\",\"componentDidUpdate\",\"render\",\"children\",\"measure\",\"node\",\"findDOMNode\",\"ownerDocument\",\"defaultView\",\"HTMLElement\",\"styleWidth\",\"style\",\"styleHeight\",\"hasFixedWidth\",\"hasFixedHeight\",\"Math\",\"ceil\",\"offsetHeight\",\"offsetWidth\",\"_props\",\"_props$columnIndex\",\"_props$rowIndex\",\"has\",\"_getCellMeasurements2\",\"invalidateCellSizeAfterRender\",\"PureComponent\",\"__internalCellMeasurerFlag\",\"propTypes\",\"bpfrpt_proptype_CellMeasureCache\",\"isRequired\",\"shape\",\"oneOfType\",\"func\",\"number\"]\n}\n"]