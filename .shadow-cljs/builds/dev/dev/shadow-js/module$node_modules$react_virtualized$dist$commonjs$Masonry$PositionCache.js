["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Masonry/PositionCache.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$babel_runtime$helpers$slicedToArray\");var _slicedToArray3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$classCallCheck\");var _classCallCheck3=\n_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$createClass\");var _createClass3=_interopRequireDefault(global);require=require(\"module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree\");var _intervalTree2=_interopRequireDefault(require);require=function(){function PositionCache(){(0,_classCallCheck3.default)(this,PositionCache);this._columnSizeMap={};this._intervalTree=(0,_intervalTree2.default)();this._leftMap={}}(0,_createClass3.default)(PositionCache,\n[{key:\"estimateTotalHeight\",value:function(cellCount,columnCount,defaultCellHeight){return this.tallestColumnSize+Math.ceil((cellCount-this.count)/columnCount)*defaultCellHeight}},{key:\"range\",value:function(scrollTop,clientHeight,renderCallback){var _this=this;this._intervalTree.queryInterval(scrollTop,scrollTop+clientHeight,function(_ref){_ref=(0,_slicedToArray3.default)(_ref,3);var index=_ref[2];return renderCallback(index,_this._leftMap[index],_ref[0])})}},{key:\"setPosition\",value:function(index,\nleft,top,height){this._intervalTree.insert([top,top+height,index]);this._leftMap[index]=left;index=this._columnSizeMap;var columnHeight=index[left];index[left]=void 0===columnHeight?top+height:Math.max(columnHeight,top+height)}},{key:\"count\",get:function(){return this._intervalTree.count}},{key:\"shortestColumnSize\",get:function(){var columnSizeMap=this._columnSizeMap,size=0,i;for(i in columnSizeMap){var height=columnSizeMap[i];size=0===size?height:Math.min(size,height)}return size}},{key:\"tallestColumnSize\",\nget:function(){var columnSizeMap=this._columnSizeMap,size=0,i;for(i in columnSizeMap)size=Math.max(size,columnSizeMap[i]);return size}}]);return PositionCache}();exports.default=require}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _intervalTree = require('../vendor/intervalTree');\n\nvar _intervalTree2 = _interopRequireDefault(_intervalTree);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache = function () {\n  function PositionCache() {\n    (0, _classCallCheck3.default)(this, PositionCache);\n    this._columnSizeMap = {};\n    this._intervalTree = (0, _intervalTree2.default)();\n    this._leftMap = {};\n  }\n  // Tracks the height of each column\n\n\n  // Store tops and bottoms of each cell for fast intersection lookup.\n\n\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  (0, _createClass3.default)(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    }\n\n    // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = (0, _slicedToArray3.default)(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n      this._leftMap[index] = left;\n\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n  return PositionCache;\n}();\n\nexports.default = PositionCache;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$babel_runtime$helpers$slicedToArray","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass","~$module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree"]],"~:properties",["^5",["_leftMap","key","__esModule","value","get","_columnSizeMap","default","_intervalTree"]],"~:compiled-at",1537791607697,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Masonry/PositionCache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\\n\\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _intervalTree = require('../vendor/intervalTree');\\n\\nvar _intervalTree2 = _interopRequireDefault(_intervalTree);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// Position cache requirements:\\n//   O(log(n)) lookup of cells to render for a given viewport size\\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\\nvar PositionCache = function () {\\n  function PositionCache() {\\n    (0, _classCallCheck3.default)(this, PositionCache);\\n    this._columnSizeMap = {};\\n    this._intervalTree = (0, _intervalTree2.default)();\\n    this._leftMap = {};\\n  }\\n  // Tracks the height of each column\\n\\n\\n  // Store tops and bottoms of each cell for fast intersection lookup.\\n\\n\\n  // Maps cell index to x coordinates for quick lookup.\\n\\n\\n  (0, _createClass3.default)(PositionCache, [{\\n    key: 'estimateTotalHeight',\\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\\n      var unmeasuredCellCount = cellCount - this.count;\\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\\n    }\\n\\n    // Render all cells visible within the viewport range defined.\\n\\n  }, {\\n    key: 'range',\\n    value: function range(scrollTop, clientHeight, renderCallback) {\\n      var _this = this;\\n\\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\\n        var _ref2 = (0, _slicedToArray3.default)(_ref, 3),\\n            top = _ref2[0],\\n            _ = _ref2[1],\\n            index = _ref2[2];\\n\\n        return renderCallback(index, _this._leftMap[index], top);\\n      });\\n    }\\n  }, {\\n    key: 'setPosition',\\n    value: function setPosition(index, left, top, height) {\\n      this._intervalTree.insert([top, top + height, index]);\\n      this._leftMap[index] = left;\\n\\n      var columnSizeMap = this._columnSizeMap;\\n      var columnHeight = columnSizeMap[left];\\n      if (columnHeight === undefined) {\\n        columnSizeMap[left] = top + height;\\n      } else {\\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\\n      }\\n    }\\n  }, {\\n    key: 'count',\\n    get: function get() {\\n      return this._intervalTree.count;\\n    }\\n  }, {\\n    key: 'shortestColumnSize',\\n    get: function get() {\\n      var columnSizeMap = this._columnSizeMap;\\n\\n      var size = 0;\\n\\n      for (var i in columnSizeMap) {\\n        var height = columnSizeMap[i];\\n        size = size === 0 ? height : Math.min(size, height);\\n      }\\n\\n      return size;\\n    }\\n  }, {\\n    key: 'tallestColumnSize',\\n    get: function get() {\\n      var columnSizeMap = this._columnSizeMap;\\n\\n      var size = 0;\\n\\n      for (var i in columnSizeMap) {\\n        var height = columnSizeMap[i];\\n        size = Math.max(size, height);\\n      }\\n\\n      return size;\\n    }\\n  }]);\\n  return PositionCache;\\n}();\\n\\nexports.default = PositionCache;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_slicedToArray2\",\"_slicedToArray3\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_intervalTree\",\"_intervalTree2\",\"PositionCache\",\"_columnSizeMap\",\"_leftMap\",\"key\",\"estimateTotalHeight\",\"cellCount\",\"columnCount\",\"defaultCellHeight\",\"tallestColumnSize\",\"Math\",\"ceil\",\"count\",\"range\",\"scrollTop\",\"clientHeight\",\"renderCallback\",\"_this\",\"queryInterval\",\"_ref\",\"_ref2\",\"index\",\"top\",\"setPosition\",\"left\",\"height\",\"insert\",\"columnSizeMap\",\"columnHeight\",\"undefined\",\"max\",\"get\",\"size\",\"i\",\"min\"]\n}\n"]