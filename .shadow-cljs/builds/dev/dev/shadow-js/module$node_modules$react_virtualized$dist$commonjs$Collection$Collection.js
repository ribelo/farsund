["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Collection/Collection.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Collection$Collection=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$babel_runtime$helpers$extends\");var _extends3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$objectWithoutProperties\");var _objectWithoutProperties3=\n_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$core_js$object$get_prototype_of\");var _getPrototypeOf2=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$classCallCheck\");var _classCallCheck3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$createClass\");var _createClass3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$possibleConstructorReturn\");\nvar _possibleConstructorReturn3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$inherits\");var _inherits3=_interopRequireDefault(global);global=require(\"module$node_modules$prop_types$index\");global=_interopRequireDefault(global);var React=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);newObj.default=obj;return newObj}(require(\"module$node_modules$react$index\"));\nprocess=require(\"module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView\");var _CollectionView2=_interopRequireDefault(process);process=require(\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\");var _calculateSizeAndPositionData3=_interopRequireDefault(process);process=require(\"module$node_modules$react_virtualized$dist$commonjs$utils$getUpdatedOffsetForIndex\");var _getUpdatedOffsetForIndex2=_interopRequireDefault(process);require(\"module$node_modules$react_virtualized$dist$commonjs$Collection$types\");\nrequire=function(_React$PureComponent){function Collection(props,context){(0,_classCallCheck3.default)(this,Collection);props=(0,_possibleConstructorReturn3.default)(this,(Collection.__proto__||(0,_getPrototypeOf2.default)(Collection)).call(this,props,context));props._cellMetadata=[];props._lastRenderedCellIndices=[];props._cellCache=[];props._isScrollingChange=props._isScrollingChange.bind(props);props._setCollectionViewRef=props._setCollectionViewRef.bind(props);return props}(0,_inherits3.default)(Collection,\n_React$PureComponent);(0,_createClass3.default)(Collection,[{key:\"forceUpdate\",value:function(){void 0!==this._collectionView&&this._collectionView.forceUpdate()}},{key:\"recomputeCellSizesAndPositions\",value:function(){this._cellCache=[];this._collectionView.recomputeCellSizesAndPositions()}},{key:\"render\",value:function(){var props=(0,_objectWithoutProperties3.default)(this.props,[]);return React.createElement(_CollectionView2.default,(0,_extends3.default)({cellLayoutManager:this,isScrollingChange:this._isScrollingChange,\nref:this._setCollectionViewRef},props))}},{key:\"calculateSizeAndPositionData\",value:function(){var _props=this.props,cellCount=_props.cellCount,cellSizeAndPositionGetter=_props.cellSizeAndPositionGetter;_props=_props.sectionSize;cellCount=(0,_calculateSizeAndPositionData3.default)({cellCount:cellCount,cellSizeAndPositionGetter:cellSizeAndPositionGetter,sectionSize:_props});this._cellMetadata=cellCount.cellMetadata;this._sectionManager=cellCount.sectionManager;this._height=cellCount.height;this._width=\ncellCount.width}},{key:\"getLastRenderedIndices\",value:function(){return this._lastRenderedCellIndices}},{key:\"getScrollPositionForCell\",value:function(_ref){var align=_ref.align,cellIndex=_ref.cellIndex,height=_ref.height,scrollLeft=_ref.scrollLeft,scrollTop=_ref.scrollTop;_ref=_ref.width;var cellCount=this.props.cellCount;0<=cellIndex&&cellIndex<cellCount&&(cellCount=this._cellMetadata[cellIndex],scrollLeft=(0,_getUpdatedOffsetForIndex2.default)({align:align,cellOffset:cellCount.x,cellSize:cellCount.width,\ncontainerSize:_ref,currentOffset:scrollLeft,targetIndex:cellIndex}),scrollTop=(0,_getUpdatedOffsetForIndex2.default)({align:align,cellOffset:cellCount.y,cellSize:cellCount.height,containerSize:height,currentOffset:scrollTop,targetIndex:cellIndex}));return{scrollLeft:scrollLeft,scrollTop:scrollTop}}},{key:\"getTotalSize\",value:function(){return{height:this._height,width:this._width}}},{key:\"cellRenderers\",value:function(_ref2){var _this2=this,isScrolling=_ref2.isScrolling,_props2=this.props,cellGroupRenderer=\n_props2.cellGroupRenderer;_props2=_props2.cellRenderer;this._lastRenderedCellIndices=this._sectionManager.getCellIndices({height:_ref2.height,width:_ref2.width,x:_ref2.x,y:_ref2.y});return cellGroupRenderer({cellCache:this._cellCache,cellRenderer:_props2,cellSizeAndPositionGetter:function(_ref3){return _this2._sectionManager.getCellMetadata({index:_ref3.index})},indices:this._lastRenderedCellIndices,isScrolling:isScrolling})}},{key:\"_isScrollingChange\",value:function(isScrolling){isScrolling||(this._cellCache=\n[])}},{key:\"_setCollectionViewRef\",value:function(ref){this._collectionView=ref}}]);return Collection}(React.PureComponent);require.defaultProps={\"aria-label\":\"grid\",cellGroupRenderer:function(_ref4){var cellCache=_ref4.cellCache,cellRenderer=_ref4.cellRenderer,cellSizeAndPositionGetter=_ref4.cellSizeAndPositionGetter,isScrolling=_ref4.isScrolling;return _ref4.indices.map(function(index){var cellMetadata=cellSizeAndPositionGetter({index:index});cellMetadata={index:index,isScrolling:isScrolling,key:index,\nstyle:{height:cellMetadata.height,left:cellMetadata.x,position:\"absolute\",top:cellMetadata.y,width:cellMetadata.width}};return isScrolling?(index in cellCache||(cellCache[index]=cellRenderer(cellMetadata)),cellCache[index]):cellRenderer(cellMetadata)}).filter(function(renderedCell){return!!renderedCell})}};exports.default=require;require.propTypes={\"aria-label\":global.default.string,cellCount:global.default.number.isRequired,cellGroupRenderer:global.default.func.isRequired,cellRenderer:global.default.func.isRequired,\ncellSizeAndPositionGetter:global.default.func.isRequired,sectionSize:global.default.number}}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _CollectionView = require('./CollectionView');\n\nvar _CollectionView2 = _interopRequireDefault(_CollectionView);\n\nvar _calculateSizeAndPositionData2 = require('./utils/calculateSizeAndPositionData');\n\nvar _calculateSizeAndPositionData3 = _interopRequireDefault(_calculateSizeAndPositionData2);\n\nvar _getUpdatedOffsetForIndex = require('../utils/getUpdatedOffsetForIndex');\n\nvar _getUpdatedOffsetForIndex2 = _interopRequireDefault(_getUpdatedOffsetForIndex);\n\nvar _types = require('./types');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection = function (_React$PureComponent) {\n  (0, _inherits3.default)(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    (0, _classCallCheck3.default)(this, Collection);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Collection.__proto__ || (0, _getPrototypeOf2.default)(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = [];\n\n    // Cell cache during scroll (for perforamnce)\n    _this._cellCache = [];\n\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = (0, _objectWithoutProperties3.default)(this.props, []);\n\n\n      return React.createElement(_CollectionView2.default, (0, _extends3.default)({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n\n      var data = (0, _calculateSizeAndPositionData3.default)({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n\n        scrollLeft = (0, _getUpdatedOffsetForIndex2.default)({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n\n        scrollTop = (0, _getUpdatedOffsetForIndex2.default)({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer;\n\n      // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({ index: index });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexports.default = Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': _propTypes2.default.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: _propTypes2.default.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: _propTypes2.default.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: _propTypes2.default.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: _propTypes2.default.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: _propTypes2.default.number\n} : {};\n\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\n\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    };\n\n    // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Collection$types","~$module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData","~$module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView","~$module$node_modules$babel_runtime$helpers$possibleConstructorReturn","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$babel_runtime$helpers$inherits","~$module$node_modules$babel_runtime$core_js$object$get_prototype_of","~$module$node_modules$babel_runtime$helpers$objectWithoutProperties","~$module$node_modules$react_virtualized$dist$commonjs$utils$getUpdatedOffsetForIndex","~$module$node_modules$babel_runtime$helpers$extends","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["sectionSize","_lastRenderedCellIndices","_collectionView","width","align","top","targetIndex","index","cellLayoutManager","height","_cellMetadata","_setCollectionViewRef","scrollLeft","_sectionManager","key","x","__esModule","isScrolling","containerSize","propTypes","_isScrollingChange","_width","position","cellRenderer","style","value","cellSizeAndPositionGetter","_cellCache","_height","cellSize","cellCache","defaultProps","isScrollingChange","cellCount","y","cellOffset","ref","currentOffset","cellGroupRenderer","scrollTop","default","left","indices"]],"~:compiled-at",1537791607679,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection.js\",\n\"lineCount\":13,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Collection/Collection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends2 = require('babel-runtime/helpers/extends');\\n\\nvar _extends3 = _interopRequireDefault(_extends2);\\n\\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\\n\\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\\n\\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\\n\\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\\n\\nvar _inherits2 = require('babel-runtime/helpers/inherits');\\n\\nvar _inherits3 = _interopRequireDefault(_inherits2);\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = require('react');\\n\\nvar React = _interopRequireWildcard(_react);\\n\\nvar _CollectionView = require('./CollectionView');\\n\\nvar _CollectionView2 = _interopRequireDefault(_CollectionView);\\n\\nvar _calculateSizeAndPositionData2 = require('./utils/calculateSizeAndPositionData');\\n\\nvar _calculateSizeAndPositionData3 = _interopRequireDefault(_calculateSizeAndPositionData2);\\n\\nvar _getUpdatedOffsetForIndex = require('../utils/getUpdatedOffsetForIndex');\\n\\nvar _getUpdatedOffsetForIndex2 = _interopRequireDefault(_getUpdatedOffsetForIndex);\\n\\nvar _types = require('./types');\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Renders scattered or non-linear data.\\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\\n */\\nvar Collection = function (_React$PureComponent) {\\n  (0, _inherits3.default)(Collection, _React$PureComponent);\\n\\n  function Collection(props, context) {\\n    (0, _classCallCheck3.default)(this, Collection);\\n\\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Collection.__proto__ || (0, _getPrototypeOf2.default)(Collection)).call(this, props, context));\\n\\n    _this._cellMetadata = [];\\n    _this._lastRenderedCellIndices = [];\\n\\n    // Cell cache during scroll (for perforamnce)\\n    _this._cellCache = [];\\n\\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\\n    return _this;\\n  }\\n\\n  (0, _createClass3.default)(Collection, [{\\n    key: 'forceUpdate',\\n    value: function forceUpdate() {\\n      if (this._collectionView !== undefined) {\\n        this._collectionView.forceUpdate();\\n      }\\n    }\\n\\n    /** See Collection#recomputeCellSizesAndPositions */\\n\\n  }, {\\n    key: 'recomputeCellSizesAndPositions',\\n    value: function recomputeCellSizesAndPositions() {\\n      this._cellCache = [];\\n      this._collectionView.recomputeCellSizesAndPositions();\\n    }\\n\\n    /** React lifecycle methods */\\n\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var props = (0, _objectWithoutProperties3.default)(this.props, []);\\n\\n\\n      return React.createElement(_CollectionView2.default, (0, _extends3.default)({\\n        cellLayoutManager: this,\\n        isScrollingChange: this._isScrollingChange,\\n        ref: this._setCollectionViewRef\\n      }, props));\\n    }\\n\\n    /** CellLayoutManager interface */\\n\\n  }, {\\n    key: 'calculateSizeAndPositionData',\\n    value: function calculateSizeAndPositionData() {\\n      var _props = this.props,\\n          cellCount = _props.cellCount,\\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\\n          sectionSize = _props.sectionSize;\\n\\n\\n      var data = (0, _calculateSizeAndPositionData3.default)({\\n        cellCount: cellCount,\\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\\n        sectionSize: sectionSize\\n      });\\n\\n      this._cellMetadata = data.cellMetadata;\\n      this._sectionManager = data.sectionManager;\\n      this._height = data.height;\\n      this._width = data.width;\\n    }\\n\\n    /**\\n     * Returns the most recently rendered set of cell indices.\\n     */\\n\\n  }, {\\n    key: 'getLastRenderedIndices',\\n    value: function getLastRenderedIndices() {\\n      return this._lastRenderedCellIndices;\\n    }\\n\\n    /**\\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\\n     */\\n\\n  }, {\\n    key: 'getScrollPositionForCell',\\n    value: function getScrollPositionForCell(_ref) {\\n      var align = _ref.align,\\n          cellIndex = _ref.cellIndex,\\n          height = _ref.height,\\n          scrollLeft = _ref.scrollLeft,\\n          scrollTop = _ref.scrollTop,\\n          width = _ref.width;\\n      var cellCount = this.props.cellCount;\\n\\n\\n      if (cellIndex >= 0 && cellIndex < cellCount) {\\n        var cellMetadata = this._cellMetadata[cellIndex];\\n\\n        scrollLeft = (0, _getUpdatedOffsetForIndex2.default)({\\n          align: align,\\n          cellOffset: cellMetadata.x,\\n          cellSize: cellMetadata.width,\\n          containerSize: width,\\n          currentOffset: scrollLeft,\\n          targetIndex: cellIndex\\n        });\\n\\n        scrollTop = (0, _getUpdatedOffsetForIndex2.default)({\\n          align: align,\\n          cellOffset: cellMetadata.y,\\n          cellSize: cellMetadata.height,\\n          containerSize: height,\\n          currentOffset: scrollTop,\\n          targetIndex: cellIndex\\n        });\\n      }\\n\\n      return {\\n        scrollLeft: scrollLeft,\\n        scrollTop: scrollTop\\n      };\\n    }\\n  }, {\\n    key: 'getTotalSize',\\n    value: function getTotalSize() {\\n      return {\\n        height: this._height,\\n        width: this._width\\n      };\\n    }\\n  }, {\\n    key: 'cellRenderers',\\n    value: function cellRenderers(_ref2) {\\n      var _this2 = this;\\n\\n      var height = _ref2.height,\\n          isScrolling = _ref2.isScrolling,\\n          width = _ref2.width,\\n          x = _ref2.x,\\n          y = _ref2.y;\\n      var _props2 = this.props,\\n          cellGroupRenderer = _props2.cellGroupRenderer,\\n          cellRenderer = _props2.cellRenderer;\\n\\n      // Store for later calls to getLastRenderedIndices()\\n\\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\\n        height: height,\\n        width: width,\\n        x: x,\\n        y: y\\n      });\\n\\n      return cellGroupRenderer({\\n        cellCache: this._cellCache,\\n        cellRenderer: cellRenderer,\\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\\n          var index = _ref3.index;\\n          return _this2._sectionManager.getCellMetadata({ index: index });\\n        },\\n        indices: this._lastRenderedCellIndices,\\n        isScrolling: isScrolling\\n      });\\n    }\\n  }, {\\n    key: '_isScrollingChange',\\n    value: function _isScrollingChange(isScrolling) {\\n      if (!isScrolling) {\\n        this._cellCache = [];\\n      }\\n    }\\n  }, {\\n    key: '_setCollectionViewRef',\\n    value: function _setCollectionViewRef(ref) {\\n      this._collectionView = ref;\\n    }\\n  }]);\\n  return Collection;\\n}(React.PureComponent);\\n\\nCollection.defaultProps = {\\n  'aria-label': 'grid',\\n  cellGroupRenderer: defaultCellGroupRenderer\\n};\\nexports.default = Collection;\\nCollection.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  'aria-label': _propTypes2.default.string,\\n\\n  /**\\n   * Number of cells in Collection.\\n   */\\n  cellCount: _propTypes2.default.number.isRequired,\\n\\n  /**\\n   * Responsible for rendering a group of cells given their indices.\\n   * Should implement the following interface: ({\\n   *   cellSizeAndPositionGetter:Function,\\n   *   indices: Array<number>,\\n   *   cellRenderer: Function\\n   * }): Array<PropTypes.node>\\n   */\\n  cellGroupRenderer: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Responsible for rendering a cell given an row and column index.\\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\\n   */\\n  cellRenderer: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Callback responsible for returning size and offset/position information for a given cell (index).\\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\\n   */\\n  cellSizeAndPositionGetter: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Optionally override the size of the sections a Collection's cells are split into.\\n   */\\n  sectionSize: _propTypes2.default.number\\n} : {};\\n\\n\\nfunction defaultCellGroupRenderer(_ref4) {\\n  var cellCache = _ref4.cellCache,\\n      cellRenderer = _ref4.cellRenderer,\\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\\n      indices = _ref4.indices,\\n      isScrolling = _ref4.isScrolling;\\n\\n  return indices.map(function (index) {\\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\\n\\n    var cellRendererProps = {\\n      index: index,\\n      isScrolling: isScrolling,\\n      key: index,\\n      style: {\\n        height: cellMetadata.height,\\n        left: cellMetadata.x,\\n        position: 'absolute',\\n        top: cellMetadata.y,\\n        width: cellMetadata.width\\n      }\\n    };\\n\\n    // Avoid re-creating cells while scrolling.\\n    // This can lead to the same cell being created many times and can cause performance issues for \\\"heavy\\\" cells.\\n    // If a scroll is in progress- cache and reuse cells.\\n    // This cache will be thrown away once scrolling complets.\\n    if (isScrolling) {\\n      if (!(index in cellCache)) {\\n        cellCache[index] = cellRenderer(cellRendererProps);\\n      }\\n\\n      return cellCache[index];\\n    } else {\\n      return cellRenderer(cellRendererProps);\\n    }\\n  }).filter(function (renderedCell) {\\n    return !!renderedCell;\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_extends2\",\"_extends3\",\"_objectWithoutProperties2\",\"_objectWithoutProperties3\",\"_getPrototypeOf\",\"_getPrototypeOf2\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_possibleConstructorReturn2\",\"_possibleConstructorReturn3\",\"_inherits2\",\"_inherits3\",\"_propTypes\",\"_propTypes2\",\"React\",\"_interopRequireWildcard\",\"newObj\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"_react\",\"_CollectionView\",\"_CollectionView2\",\"_calculateSizeAndPositionData2\",\"_calculateSizeAndPositionData3\",\"_getUpdatedOffsetForIndex\",\"_getUpdatedOffsetForIndex2\",\"Collection\",\"_React$PureComponent\",\"props\",\"context\",\"_this\",\"__proto__\",\"_cellMetadata\",\"_lastRenderedCellIndices\",\"_cellCache\",\"_isScrollingChange\",\"bind\",\"_setCollectionViewRef\",\"forceUpdate\",\"undefined\",\"_collectionView\",\"recomputeCellSizesAndPositions\",\"render\",\"createElement\",\"cellLayoutManager\",\"isScrollingChange\",\"ref\",\"calculateSizeAndPositionData\",\"_props\",\"cellCount\",\"cellSizeAndPositionGetter\",\"sectionSize\",\"data\",\"cellMetadata\",\"_sectionManager\",\"sectionManager\",\"_height\",\"height\",\"_width\",\"width\",\"getLastRenderedIndices\",\"getScrollPositionForCell\",\"_ref\",\"align\",\"cellIndex\",\"scrollLeft\",\"scrollTop\",\"cellOffset\",\"x\",\"cellSize\",\"containerSize\",\"currentOffset\",\"targetIndex\",\"y\",\"getTotalSize\",\"cellRenderers\",\"_ref2\",\"_this2\",\"isScrolling\",\"_props2\",\"cellGroupRenderer\",\"cellRenderer\",\"getCellIndices\",\"cellCache\",\"_ref3\",\"getCellMetadata\",\"index\",\"indices\",\"PureComponent\",\"defaultProps\",\"defaultCellGroupRenderer\",\"_ref4\",\"map\",\"cellRendererProps\",\"style\",\"left\",\"position\",\"top\",\"filter\",\"renderedCell\",\"propTypes\",\"string\",\"number\",\"isRequired\",\"func\"]\n}\n"]