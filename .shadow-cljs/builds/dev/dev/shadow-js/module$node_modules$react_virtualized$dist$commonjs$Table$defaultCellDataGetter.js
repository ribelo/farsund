["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Table/defaultCellDataGetter.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(_ref){var dataKey=_ref.dataKey;_ref=_ref.rowData;return\"function\"===typeof _ref.get?_ref.get(dataKey):_ref[dataKey]};require(\"module$node_modules$react_virtualized$dist$commonjs$Table$types\")}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defaultCellDataGetter;\n\nvar _types = require('./types');\n\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nfunction defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Table$types","~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1537791607713,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,gFAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGjKC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,QAAA,CASAC,QAA8B,CAACC,IAAD,CAAO,CAAA,IAC/BC,QAAUD,IAAAC,QACVC,KAAAA,CAAUF,IAAAE,QAEd,OAA2B,UAA3B,GAAI,MAAOA,KAAAC,IAAX,CACSD,IAAAC,IAAA,CAAYF,OAAZ,CADT,CAGSC,IAAA,CAAQD,OAAR,CAP0B,CAPxBV,QAAA,CAAQ,iEAAR,CARoJ;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Table/defaultCellDataGetter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = defaultCellDataGetter;\\n\\nvar _types = require('./types');\\n\\n/**\\n * Default accessor for returning a cell value for a given attribute.\\n * This function expects to operate on either a vanilla Object or an Immutable Map.\\n * You should override the column's cellDataGetter if your data is some other type of object.\\n */\\nfunction defaultCellDataGetter(_ref) {\\n  var dataKey = _ref.dataKey,\\n      rowData = _ref.rowData;\\n\\n  if (typeof rowData.get === 'function') {\\n    return rowData.get(dataKey);\\n  } else {\\n    return rowData[dataKey];\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"default\",\"defaultCellDataGetter\",\"_ref\",\"dataKey\",\"rowData\",\"get\"]\n}\n"]