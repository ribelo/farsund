["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Masonry/createCellPositioner.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(_ref){function cellPositioner(index){for(var columnIndex=0,i=1;i<columnHeights.length;i++)columnHeights[i]<columnHeights[columnIndex]&&(columnIndex=i);i=columnIndex*(columnWidth+spacer);var top=columnHeights[columnIndex]||0;columnHeights[columnIndex]=top+cellMeasurerCache.getHeight(index)+\nspacer;return{left:i,top:top}}function initOrResetDerivedValues(){columnHeights=[];for(var i=0;i<columnCount;i++)columnHeights[i]=0}var cellMeasurerCache=_ref.cellMeasurerCache,columnCount=_ref.columnCount,columnWidth=_ref.columnWidth;_ref=_ref.spacer;var spacer=void 0===_ref?0:_ref,columnHeights=void 0;initOrResetDerivedValues();cellPositioner.reset=function(params){columnCount=params.columnCount;columnWidth=params.columnWidth;spacer=params.spacer;initOrResetDerivedValues()};return cellPositioner};\nrequire(\"module$node_modules$react_virtualized$dist$commonjs$Masonry$Masonry\")}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCellPositioner;\n\nvar _Masonry = require('./Masonry');\n\nfunction createCellPositioner(_ref) {\n  var cellMeasurerCache = _ref.cellMeasurerCache,\n      columnCount = _ref.columnCount,\n      columnWidth = _ref.columnWidth,\n      _ref$spacer = _ref.spacer,\n      spacer = _ref$spacer === undefined ? 0 : _ref$spacer;\n\n  var columnHeights = void 0;\n\n  initOrResetDerivedValues();\n\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function initOrResetDerivedValues() {\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n\n  function reset(params) {\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n\n    initOrResetDerivedValues();\n  }\n\n  cellPositioner.reset = reset;\n\n  return cellPositioner;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react_virtualized$dist$commonjs$Masonry$Masonry"]],"~:properties",["^5",["top","__esModule","reset","value","default","left"]],"~:compiled-at",1537791607700,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,iFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGlKC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,QAAA,CAIAC,QAA6B,CAACC,IAAD,CAAO,CAWlCC,QAASA,eAAc,CAACC,KAAD,CAAQ,CAG7B,IADA,IAAIC,YAAc,CAAlB,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,aAAAC,OAApB,CAA0CF,CAAA,EAA1C,CACMC,aAAA,CAAcD,CAAd,CAAJ,CAAuBC,aAAA,CAAcF,WAAd,CAAvB,GACEA,WADF,CACgBC,CADhB,CAKEG,EAAAA,CAAOJ,WAAPI,EAAsBC,WAAtBD,CAAoCE,MAApCF,CACJ,KAAIG,IAAML,aAAA,CAAcF,WAAd,CAANO,EAAoC,CAExCL,cAAA,CAAcF,WAAd,CAAA,CAA6BO,GAA7B,CAAmCC,iBAAAC,UAAA,CAA4BV,KAA5B,CAAnC;AAAwEO,MAExE,OAAO,CACLF,KAAMA,CADD,CAELG,IAAKA,GAFA,CAdsB,CAoB/BG,QAASA,yBAAwB,EAAG,CAGlCR,aAAA,CAAgB,EAChB,KAAK,IAAID,EAAI,CAAb,CAAgBA,CAAhB,CAAoBU,WAApB,CAAiCV,CAAA,EAAjC,CACEC,aAAA,CAAcD,CAAd,CAAA,CAAmB,CALa,CA/BF,IAC9BO,kBAAoBX,IAAAW,kBADU,CAE9BG,YAAcd,IAAAc,YAFgB,CAG9BN,YAAcR,IAAAQ,YACdO,KAAAA,CAAcf,IAAAS,OAHlB,KAIIA,OAAyBO,IAAAA,EAAhB,GAAAD,IAAA,CAA4B,CAA5B,CAAgCA,IAJ7C,CAMIV,cAAgB,IAAK,EAEzBQ,yBAAA,EAuCAZ,eAAAgB,MAAA,CARAA,QAAc,CAACC,MAAD,CAAS,CACrBJ,WAAA,CAAcI,MAAAJ,YACdN,YAAA,CAAcU,MAAAV,YACdC,OAAA,CAASS,MAAAT,OAETI,yBAAA,EALqB,CAUvB,OAAOZ,eAlD2B,CAFrBV;OAAA,CAAQ,qEAAR,CARmJ;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Masonry/createCellPositioner.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = createCellPositioner;\\n\\nvar _Masonry = require('./Masonry');\\n\\nfunction createCellPositioner(_ref) {\\n  var cellMeasurerCache = _ref.cellMeasurerCache,\\n      columnCount = _ref.columnCount,\\n      columnWidth = _ref.columnWidth,\\n      _ref$spacer = _ref.spacer,\\n      spacer = _ref$spacer === undefined ? 0 : _ref$spacer;\\n\\n  var columnHeights = void 0;\\n\\n  initOrResetDerivedValues();\\n\\n  function cellPositioner(index) {\\n    // Find the shortest column and use it.\\n    var columnIndex = 0;\\n    for (var i = 1; i < columnHeights.length; i++) {\\n      if (columnHeights[i] < columnHeights[columnIndex]) {\\n        columnIndex = i;\\n      }\\n    }\\n\\n    var left = columnIndex * (columnWidth + spacer);\\n    var top = columnHeights[columnIndex] || 0;\\n\\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\\n\\n    return {\\n      left: left,\\n      top: top\\n    };\\n  }\\n\\n  function initOrResetDerivedValues() {\\n    // Track the height of each column.\\n    // Layout algorithm below always inserts into the shortest column.\\n    columnHeights = [];\\n    for (var i = 0; i < columnCount; i++) {\\n      columnHeights[i] = 0;\\n    }\\n  }\\n\\n  function reset(params) {\\n    columnCount = params.columnCount;\\n    columnWidth = params.columnWidth;\\n    spacer = params.spacer;\\n\\n    initOrResetDerivedValues();\\n  }\\n\\n  cellPositioner.reset = reset;\\n\\n  return cellPositioner;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"default\",\"createCellPositioner\",\"_ref\",\"cellPositioner\",\"index\",\"columnIndex\",\"i\",\"columnHeights\",\"length\",\"left\",\"columnWidth\",\"spacer\",\"top\",\"cellMeasurerCache\",\"getHeight\",\"initOrResetDerivedValues\",\"columnCount\",\"_ref$spacer\",\"undefined\",\"reset\",\"params\"]\n}\n"]