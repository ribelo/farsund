["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/xquery.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$xquery=function(global,process,require,module,exports,shadow$shims){module.exports=function(hljs){hljs={begin:\"{\",end:\"}\"};var CONTAINS=[{begin:/\\$[a-zA-Z0-9\\-]+/},{className:\"string\",variants:[{begin:/\"/,end:/\"/,contains:[{begin:/\"\"/,relevance:0}]},{begin:/'/,end:/'/,contains:[{begin:/''/,relevance:0}]}]},{className:\"number\",begin:\"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",relevance:0},{className:\"comment\",\nbegin:\"\\\\(:\",end:\":\\\\)\",relevance:10,contains:[{className:\"doctag\",begin:\"@\\\\w+\"}]},{className:\"meta\",begin:\"%\\\\w+\"},hljs];hljs.contains=CONTAINS;return{aliases:[\"xpath\",\"xq\"],case_insensitive:!1,lexemes:/[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,illegal:/(proc)|(abstract)|(extends)|(until)|(#)/,keywords:{keyword:\"for let if while then else return where group by xquery encoding versionmodule namespace boundary-space preserve strip default collation base-uri orderingcopy-namespaces order declare import schema namespace function option in allowing emptyat tumbling window sliding window start when only end when previous next stable ascendingdescending empty greatest least some every satisfies switch case typeswitch try catch andor to union intersect instance of treat as castable cast map array delete insert intoreplace value rename copy modify update\",\nliteral:\"false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute\"},contains:CONTAINS}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$xquery\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = function(hljs) {\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\n    'replace value rename copy modify update';\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n  var VAR = {\n    begin: /\\$[a-zA-Z0-9\\-]+/\n  };\n\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n    ]\n  };\n\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '%\\\\w+'\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    begin: '\\\\(:', end: ':\\\\)',\n    relevance: 10,\n    contains: [\n      {\n        className: 'doctag', begin: '@\\\\w+'\n      }\n    ]\n  };\n\n  var METHOD = {\n    begin: '{', end: '}'\n  };\n\n  var CONTAINS = [\n    VAR,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    METHOD\n  ];\n  METHOD.contains = CONTAINS;\n\n\n  return {\n    aliases: ['xpath', 'xq'],\n    case_insensitive: false,\n    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","lexemes","variants","begin","aliases","className","contains","relevance","keyword","keywords","illegal","literal","end"]],"~:compiled-at",1537561386490,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$xquery.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC3IF,MAAAC,QAAA,CAAiBE,QAAQ,CAACC,IAAD,CAAO,CA2C1BC,IAAAA,CAAS,CACXC,MAAO,GADI,CACCC,IAAK,GADN,CAIb,KAAIC,SAAW,CAtCLC,CACRH,MAAO,kBADCG,CAsCK,CA5BFC,CACXC,UAAW,QADAD,CAEXE,SAAU,CACR,CAACN,MAAO,GAAR,CAAaC,IAAK,GAAlB,CAAuBM,SAAU,CAAC,CAACP,MAAO,IAAR,CAAcQ,UAAW,CAAzB,CAAD,CAAjC,CADQ,CAER,CAACR,MAAO,GAAR,CAAaC,IAAK,GAAlB,CAAuBM,SAAU,CAAC,CAACP,MAAO,IAAR,CAAcQ,UAAW,CAAzB,CAAD,CAAjC,CAFQ,CAFCJ,CA4BE,CAlCFK,CACXJ,UAAW,QADAI,CAEXT,MAAO,2EAFIS,CAGXD,UAAW,CAHAC,CAkCE,CAfDC,CACZL,UAAW,SADCK;AAEZV,MAAO,MAFKU,CAEGT,IAAK,MAFRS,CAGZF,UAAW,EAHCE,CAIZH,SAAU,CACR,CACEF,UAAW,QADb,CACuBL,MAAO,OAD9B,CADQ,CAJEU,CAeC,CApBEC,CACfN,UAAW,MADIM,CAEfX,MAAO,OAFQW,CAoBF,CAMbZ,IANa,CAQfA,KAAAQ,SAAA,CAAkBL,QAGlB,OAAO,CACLU,QAAS,CAAC,OAAD,CAAU,IAAV,CADJ,CAELC,iBAAkB,CAAA,CAFb,CAGLC,QAAS,4BAHJ,CAILC,QAAS,yCAJJ,CAKLC,SAAU,CACRC,QA/DWC,iiBA8DH;AAERC,QAzDUC,0JAuDF,CALL,CASLb,SAAUL,QATL,CA1DuB,CAD2G;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/xquery.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$xquery\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nmodule.exports = function(hljs) {\\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\\n    'replace value rename copy modify update';\\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\\n  var VAR = {\\n    begin: /\\\\$[a-zA-Z0-9\\\\-]+/\\n  };\\n\\n  var NUMBER = {\\n    className: 'number',\\n    begin: '(\\\\\\\\b0[0-7_]+)|(\\\\\\\\b0x[0-9a-fA-F_]+)|(\\\\\\\\b[1-9][0-9_]*(\\\\\\\\.[0-9_]+)?)|[0_]\\\\\\\\b',\\n    relevance: 0\\n  };\\n\\n  var STRING = {\\n    className: 'string',\\n    variants: [\\n      {begin: /\\\"/, end: /\\\"/, contains: [{begin: /\\\"\\\"/, relevance: 0}]},\\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\\n    ]\\n  };\\n\\n  var ANNOTATION = {\\n    className: 'meta',\\n    begin: '%\\\\\\\\w+'\\n  };\\n\\n  var COMMENT = {\\n    className: 'comment',\\n    begin: '\\\\\\\\(:', end: ':\\\\\\\\)',\\n    relevance: 10,\\n    contains: [\\n      {\\n        className: 'doctag', begin: '@\\\\\\\\w+'\\n      }\\n    ]\\n  };\\n\\n  var METHOD = {\\n    begin: '{', end: '}'\\n  };\\n\\n  var CONTAINS = [\\n    VAR,\\n    STRING,\\n    NUMBER,\\n    COMMENT,\\n    ANNOTATION,\\n    METHOD\\n  ];\\n  METHOD.contains = CONTAINS;\\n\\n\\n  return {\\n    aliases: ['xpath', 'xq'],\\n    case_insensitive: false,\\n    lexemes: /[a-zA-Z\\\\$][a-zA-Z0-9_:\\\\-]*/,\\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\\n    keywords: {\\n      keyword: KEYWORDS,\\n      literal: LITERAL\\n    },\\n    contains: CONTAINS\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"module.exports\",\"hljs\",\"METHOD\",\"begin\",\"end\",\"CONTAINS\",\"VAR\",\"STRING\",\"className\",\"variants\",\"contains\",\"relevance\",\"NUMBER\",\"COMMENT\",\"ANNOTATION\",\"aliases\",\"case_insensitive\",\"lexemes\",\"illegal\",\"keywords\",\"keyword\",\"KEYWORDS\",\"literal\",\"LITERAL\"]\n}\n"]