["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/elixir.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$elixir=function(global,process,require,module,exports,shadow$shims){module.exports=function(hljs){var SUBST={className:\"subst\",begin:\"#\\\\{\",end:\"}\",lexemes:\"[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?\",keywords:\"and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote\"},STRING={className:\"string\",contains:[hljs.BACKSLASH_ESCAPE,\nSUBST],variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/}]},FUNCTION={className:\"function\",beginKeywords:\"def defp defmacro\",end:/\\B\\b/,contains:[hljs.inherit(hljs.TITLE_MODE,{begin:\"[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?\",endsParent:!0})]},CLASS=hljs.inherit(FUNCTION,{className:\"class\",beginKeywords:\"defimpl defmodule defprotocol defrecord\",end:/\\bdo\\b|$|;/});hljs=[STRING,hljs.HASH_COMMENT_MODE,CLASS,FUNCTION,{className:\"symbol\",begin:\":(?!\\\\s)\",contains:[STRING,{begin:\"[a-zA-Z_]\\\\w*[!?\\x3d]?|[-+~]\\\\@|\\x3c\\x3c|\\x3e\\x3e|\\x3d~|\\x3d\\x3d\\x3d?|\\x3c\\x3d\\x3e|[\\x3c\\x3e]\\x3d?|\\\\*\\\\*|[-/+%^\\x26*~`|]|\\\\[\\\\]\\x3d?\"}],\nrelevance:0},{className:\"symbol\",begin:\"[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?:\",relevance:0},{className:\"number\",begin:\"(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b\",relevance:0},{className:\"variable\",begin:\"(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))\"},{begin:\"-\\x3e\"},{begin:\"(\"+hljs.RE_STARTERS_RE+\")\\\\s*\",contains:[hljs.HASH_COMMENT_MODE,{className:\"regexp\",illegal:\"\\\\n\",contains:[hljs.BACKSLASH_ESCAPE,SUBST],variants:[{begin:\"/\",end:\"/[a-z]*\"},{begin:\"%r\\\\[\",end:\"\\\\][a-z]*\"}]}],relevance:0}];\nSUBST.contains=hljs;return{lexemes:\"[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?\",keywords:\"and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote\",contains:hljs}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$elixir\"] = function(global,process,require,module,exports,shadow$shims) {\nmodule.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["lexemes","variants","begin","className","contains","relevance","endsParent","keywords","beginKeywords","illegal","end"]],"~:compiled-at",1537561386354,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$elixir.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC3IF,MAAAC,QAAA,CAAiBE,QAAQ,CAACC,IAAD,CAAO,CAO9B,IAAIC,MAAQ,CACVC,UAAW,OADD,CAEVC,MAAO,MAFG,CAEKC,IAAK,GAFV,CAGVC,QAToBC,kCAMV,CAIVC,SAPAC,+KAGU,CAAZ,CAMIC,OAAS,CACXP,UAAW,QADA,CAEXQ,SAAU,CAACV,IAAAW,iBAAD;AAAwBV,KAAxB,CAFC,CAGXW,SAAU,CACR,CACET,MAAO,GADT,CACcC,IAAK,GADnB,CADQ,CAIR,CACED,MAAO,GADT,CACcC,IAAK,GADnB,CAJQ,CAHC,CANb,CAkBIS,SAAW,CACbX,UAAW,UADE,CAEbY,cAAe,mBAFF,CAEuBV,IAAK,MAF5B,CAGbM,SAAU,CACRV,IAAAe,QAAA,CAAaf,IAAAgB,WAAb,CAA8B,CAC5Bb,MA7BgBG,kCA4BY,CAE5BW,WAAY,CAAA,CAFgB,CAA9B,CADQ,CAHG,CAlBf,CA4BIC,MAAQlB,IAAAe,QAAA,CAAaF,QAAb,CAAuB,CACjCX,UAAW,OADsB,CAEjCY,cAAe,yCAFkB,CAEyBV,IAAK,YAF9B,CAAvB,CAIRe,KAAAA,CAA0B,CAC5BV,MAD4B,CAE5BT,IAAAoB,kBAF4B,CAG5BF,KAH4B,CAI5BL,QAJ4B,CAK5B,CACEX,UAAW,QADb,CAEEC,MAAO,UAFT,CAGEO,SAAU,CAACD,MAAD,CAAS,CAACN,MA7CDkB,uIA6CA,CAAT,CAHZ;AAIEC,UAAW,CAJb,CAL4B,CAW5B,CACEpB,UAAW,QADb,CAEEC,MAAO,mCAFT,CAGEmB,UAAW,CAHb,CAX4B,CAgB5B,CACEpB,UAAW,QADb,CAEEC,MAAO,2EAFT,CAGEmB,UAAW,CAHb,CAhB4B,CAqB5B,CACEpB,UAAW,UADb,CAEEC,MAAO,gCAFT,CArB4B,CAyB5B,CACEA,MAAO,OADT,CAzB4B,CA4B5B,CACEA,MAAO,GAAPA,CAAaH,IAAAuB,eAAbpB,CAAmC,OADrC,CAEEO,SAAU,CACRV,IAAAoB,kBADQ,CAER,CACElB,UAAW,QADb,CAEEsB,QAAS,KAFX,CAGEd,SAAU,CAACV,IAAAW,iBAAD,CAAwBV,KAAxB,CAHZ,CAIEW,SAAU,CACR,CACET,MAAO,GADT,CACcC,IAAK,SADnB,CADQ,CAIR,CACED,MAAO,OADT,CACkBC,IAAK,WADvB,CAJQ,CAJZ,CAFQ,CAFZ,CAkBEkB,UAAW,CAlBb,CA5B4B,CAiD9BrB;KAAAS,SAAA,CAAiBS,IAEjB,OAAO,CACLd,QA1FoBC,kCAyFf,CAELC,SAxFAC,+KAsFK,CAGLE,SAAUS,IAHL,CA1FuB,CAD2G;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/elixir.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$elixir\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nmodule.exports = function(hljs) {\\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\\\\\!|\\\\\\\\?)?';\\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\\\\\w*[!?=]?|[-+~]\\\\\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\\\\\*\\\\\\\\*|[-/+%^&*~`|]|\\\\\\\\[\\\\\\\\]=?';\\n  var ELIXIR_KEYWORDS =\\n    'and false then defined module in return redo retry end for true self when ' +\\n    'next until do begin unless nil break not case cond alias while ensure or ' +\\n    'include use alias fn quote';\\n  var SUBST = {\\n    className: 'subst',\\n    begin: '#\\\\\\\\{', end: '}',\\n    lexemes: ELIXIR_IDENT_RE,\\n    keywords: ELIXIR_KEYWORDS\\n  };\\n  var STRING = {\\n    className: 'string',\\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\\n    variants: [\\n      {\\n        begin: /'/, end: /'/\\n      },\\n      {\\n        begin: /\\\"/, end: /\\\"/\\n      }\\n    ]\\n  };\\n  var FUNCTION = {\\n    className: 'function',\\n    beginKeywords: 'def defp defmacro', end: /\\\\B\\\\b/, // the mode is ended by the title\\n    contains: [\\n      hljs.inherit(hljs.TITLE_MODE, {\\n        begin: ELIXIR_IDENT_RE,\\n        endsParent: true\\n      })\\n    ]\\n  };\\n  var CLASS = hljs.inherit(FUNCTION, {\\n    className: 'class',\\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\\\bdo\\\\b|$|;/\\n  });\\n  var ELIXIR_DEFAULT_CONTAINS = [\\n    STRING,\\n    hljs.HASH_COMMENT_MODE,\\n    CLASS,\\n    FUNCTION,\\n    {\\n      className: 'symbol',\\n      begin: ':(?!\\\\\\\\s)',\\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\\n      relevance: 0\\n    },\\n    {\\n      className: 'symbol',\\n      begin: ELIXIR_IDENT_RE + ':',\\n      relevance: 0\\n    },\\n    {\\n      className: 'number',\\n      begin: '(\\\\\\\\b0[0-7_]+)|(\\\\\\\\b0x[0-9a-fA-F_]+)|(\\\\\\\\b[1-9][0-9_]*(\\\\\\\\.[0-9_]+)?)|[0_]\\\\\\\\b',\\n      relevance: 0\\n    },\\n    {\\n      className: 'variable',\\n      begin: '(\\\\\\\\$\\\\\\\\W)|((\\\\\\\\$|\\\\\\\\@\\\\\\\\@?)(\\\\\\\\w+))'\\n    },\\n    {\\n      begin: '->'\\n    },\\n    { // regexp container\\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\\\\\s*',\\n      contains: [\\n        hljs.HASH_COMMENT_MODE,\\n        {\\n          className: 'regexp',\\n          illegal: '\\\\\\\\n',\\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\\n          variants: [\\n            {\\n              begin: '/', end: '/[a-z]*'\\n            },\\n            {\\n              begin: '%r\\\\\\\\[', end: '\\\\\\\\][a-z]*'\\n            }\\n          ]\\n        }\\n      ],\\n      relevance: 0\\n    }\\n  ];\\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\\n\\n  return {\\n    lexemes: ELIXIR_IDENT_RE,\\n    keywords: ELIXIR_KEYWORDS,\\n    contains: ELIXIR_DEFAULT_CONTAINS\\n  };\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"module.exports\",\"hljs\",\"SUBST\",\"className\",\"begin\",\"end\",\"lexemes\",\"ELIXIR_IDENT_RE\",\"keywords\",\"ELIXIR_KEYWORDS\",\"STRING\",\"contains\",\"BACKSLASH_ESCAPE\",\"variants\",\"FUNCTION\",\"beginKeywords\",\"inherit\",\"TITLE_MODE\",\"endsParent\",\"CLASS\",\"ELIXIR_DEFAULT_CONTAINS\",\"HASH_COMMENT_MODE\",\"ELIXIR_METHOD_RE\",\"relevance\",\"RE_STARTERS_RE\",\"illegal\"]\n}\n"]