["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('clojure.zip');\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__44677 = zloc;\nvar G__44677__$1 = (((G__44677 == null))?null:clojure.zip.node(G__44677));\nif((G__44677__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44677__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__44677__$1));\n}\n});\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__44679 = zloc;\nvar G__44679__$1 = (((G__44679 == null))?null:clojure.zip.node(G__44679));\nif((G__44679__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44679__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__44679__$1));\n}\n});\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__44681 = zloc;\nvar G__44681__$1 = (((G__44681 == null))?null:clojure.zip.node(G__44681));\nif((G__44681__$1 == null)){\nreturn null;\n} else {\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__44681__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__44681__$1));\n}\n});\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__3938__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__3938__auto__;\n}\n});\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__44682 = zloc;\nvar G__44682__$1 = (((G__44682 == null))?null:clojure.zip.node(G__44682));\nif((G__44682__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__44682__$1);\n}\n});\n/**\n * Perform the given movement while the given predicate returns true.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Perform the given movement (default: `z/right`) until a non-whitespace/\n * non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__44686 = arguments.length;\nswitch (G__44686) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nrewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\n});\n\nrewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n});\n\nrewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2;\n\n/**\n * Move left until a non-whitespace/non-comment node is encountered.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\n});\n/**\n * Prepend a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__44689 = arguments.length;\nswitch (G__44689) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nrewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n});\n\nrewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n});\n\nrewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2;\n\n/**\n * Append a whitespace node representing the given number of spaces (default: 1).\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__44694 = arguments.length;\nswitch (G__44694) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nrewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n});\n\nrewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\n});\n\nrewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2;\n\n/**\n * Prepend a newlines node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__44697 = arguments.length;\nswitch (G__44697) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nrewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n});\n\nrewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n});\n\nrewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2;\n\n/**\n * Append a newline node representing the given number of newlines (default: 1).\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__44700 = arguments.length;\nswitch (G__44700) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nrewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n});\n\nrewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\n});\n\nrewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^M","~$node","^M","~$clojure.zip","^O","~$z","^O","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^H",["^W",["^S",["^M","~:as","^N"],["^O","^Y","~$z"]]]]],"~:flags",["^ ","^S",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^M","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1537561400529,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i6",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1:",47,"^1;",4],["^ ","^1:",0,"^1;",5]],"~i6",[["^ ","^1:",0,"^1;",4,"^G","rewrite-clj.zip.whitespace/whitespace?"]]],"~i7",["^ ","~i3",[["^ ","^1:",102,"^1;",4,"^G","zloc"]]],"~i8",["^ ","~i2",[["^ ","^1:",0,"^1;",5],["^ ","^1:",4,"^1;",5,"^G","G__44677"],["^ ","^1:",4,"^1;",6,"^G","G__44677"],["^ ","^1:",19,"^1;",6],["^ ","^1:",21,"^1;",6],["^ ","^1:",22,"^1;",6,"^G","G__44677"],["^ ","^1:",34,"^1;",6],["^ ","^1:",41,"^1;",6],["^ ","^1:",46,"^1;",6],["^ ","^1:",63,"^1;",6,"^G","G__44677"],["^ ","^1:",0,"^1;",7],["^ ","^1:",0,"^1;",7],["^ ","^1:",3,"^1;",7],["^ ","^1:",4,"^1;",7,"^G","G__44677"],["^ ","^1:",20,"^1;",7],["^ ","^1:",0,"^1;",8],["^ ","^1:",0,"^1;",10],["^ ","^1:",140,"^1;",10,"^G","G__44677"],["^ ","^1:",201,"^1;",10,"^G","G__44677"]],"~i10",[["^ ","^1:",15,"^1;",5,"^G","zloc"]],"~i15",[["^ ","^1:",46,"^1;",6,"^G","clojure.zip/node"]],"~i22",[["^ ","^1:",8,"^1;",10,"^G","rewrite-clj.node/whitespace?"],["^ ","^1:",75,"^1;",10,"^G","rewrite-clj.node/whitespace?"],["^ ","^1:",156,"^1;",10,"^G","rewrite-clj.node/whitespace?"]]],"^1<",["^ ","~i0",[["^ ","^1:",0,"^1;",13],["^ ","^1:",46,"^1;",13],["^ ","^1:",0,"^1;",14]],"~i6",[["^ ","^1:",0,"^1;",13,"^G","rewrite-clj.zip.whitespace/linebreak?"]]],"~i11",["^ ","~i3",[["^ ","^1:",100,"^1;",13,"^G","zloc"]]],"~i12",["^ ","~i2",[["^ ","^1:",0,"^1;",14],["^ ","^1:",4,"^1;",14,"^G","G__44679"],["^ ","^1:",4,"^1;",15,"^G","G__44679"],["^ ","^1:",19,"^1;",15],["^ ","^1:",21,"^1;",15],["^ ","^1:",22,"^1;",15,"^G","G__44679"],["^ ","^1:",34,"^1;",15],["^ ","^1:",41,"^1;",15],["^ ","^1:",46,"^1;",15],["^ ","^1:",63,"^1;",15,"^G","G__44679"],["^ ","^1:",0,"^1;",16],["^ ","^1:",0,"^1;",16],["^ ","^1:",3,"^1;",16],["^ ","^1:",4,"^1;",16,"^G","G__44679"],["^ ","^1:",20,"^1;",16],["^ ","^1:",0,"^1;",17],["^ ","^1:",0,"^1;",19],["^ ","^1:",138,"^1;",19,"^G","G__44679"],["^ ","^1:",198,"^1;",19,"^G","G__44679"]],"^1<",[["^ ","^1:",15,"^1;",14,"^G","zloc"]],"^1=",[["^ ","^1:",46,"^1;",15,"^G","clojure.zip/node"]],"^1>",[["^ ","^1:",8,"^1;",19,"^G","rewrite-clj.node/linebreak?"],["^ ","^1:",74,"^1;",19,"^G","rewrite-clj.node/linebreak?"],["^ ","^1:",154,"^1;",19,"^G","rewrite-clj.node/linebreak?"]]],"~i14",["^ ","~i0",[["^ ","^1:",0,"^1;",22],["^ ","^1:",44,"^1;",22],["^ ","^1:",0,"^1;",23]],"~i6",[["^ ","^1:",0,"^1;",22,"^G","rewrite-clj.zip.whitespace/comment?"]]],"^1=",["^ ","~i3",[["^ ","^1:",96,"^1;",22,"^G","zloc"]]],"~i16",["^ ","~i2",[["^ ","^1:",0,"^1;",23],["^ ","^1:",4,"^1;",23,"^G","G__44681"],["^ ","^1:",4,"^1;",24,"^G","G__44681"],["^ ","^1:",19,"^1;",24],["^ ","^1:",21,"^1;",24],["^ ","^1:",22,"^1;",24,"^G","G__44681"],["^ ","^1:",34,"^1;",24],["^ ","^1:",41,"^1;",24],["^ ","^1:",46,"^1;",24],["^ ","^1:",63,"^1;",24,"^G","G__44681"],["^ ","^1:",0,"^1;",25],["^ ","^1:",0,"^1;",25],["^ ","^1:",3,"^1;",25],["^ ","^1:",4,"^1;",25,"^G","G__44681"],["^ ","^1:",20,"^1;",25],["^ ","^1:",0,"^1;",26],["^ ","^1:",0,"^1;",28],["^ ","^1:",134,"^1;",28,"^G","G__44681"],["^ ","^1:",192,"^1;",28,"^G","G__44681"]],"^1<",[["^ ","^1:",15,"^1;",23,"^G","zloc"]],"^1=",[["^ ","^1:",46,"^1;",24,"^G","clojure.zip/node"]],"^1>",[["^ ","^1:",8,"^1;",28,"^G","rewrite-clj.node/comment?"],["^ ","^1:",72,"^1;",28,"^G","rewrite-clj.node/comment?"],["^ ","^1:",150,"^1;",28,"^G","rewrite-clj.node/comment?"]]],"~i18",["^ ","~i0",[["^ ","^1:",0,"^1;",31],["^ ","^1:",61,"^1;",31],["^ ","^1:",0,"^1;",32]],"~i6",[["^ ","^1:",0,"^1;",31,"^G","rewrite-clj.zip.whitespace/whitespace-not-linebreak?"]]],"~i19",["^ ","~i3",[["^ ","^1:",130,"^1;",31,"^G","zloc"]]],"~i20",["^ ","~i2",[["^ ","^1:",0,"^1;",32],["^ ","^1:",4,"^1;",32,"^G","and__3938__auto__"],["^ ","^1:",0,"^1;",33],["^ ","^1:",0,"^1;",33],["^ ","^1:",20,"^1;",33,"^G","and__3938__auto__"],["^ ","^1:",0,"^1;",36,"^G","and__3938__auto__"]]],"~i21",["^ ","~i3",[["^ ","^1:",24,"^1;",32]],"~i4",[["^ ","^1:",24,"^1;",32,"^G","rewrite-clj.zip.whitespace/whitespace?"]],"^1B",[["^ ","^1:",69,"^1;",32,"^G","zloc"]]],"^1>",["^ ","~i3",[["^ ","^1:",0,"^1;",34]],"~i4",[["^ ","^1:",7,"^1;",34,"^G","cljs.core/not"]],"~i8",[["^ ","^1:",21,"^1;",34]],"~i9",[["^ ","^1:",21,"^1;",34,"^G","rewrite-clj.zip.whitespace/linebreak?"]],"^1E",[["^ ","^1:",65,"^1;",34,"^G","zloc"]]],"~i24",["^ ","~i0",[["^ ","^1:",0,"^1;",39],["^ ","^1:",58,"^1;",39],["^ ","^1:",0,"^1;",40]],"~i6",[["^ ","^1:",0,"^1;",39,"^G","rewrite-clj.zip.whitespace/whitespace-or-comment?"]]],"~i25",["^ ","~i3",[["^ ","^1:",124,"^1;",39,"^G","zloc"]]],"~i26",["^ ","~i2",[["^ ","^1:",0,"^1;",40],["^ ","^1:",4,"^1;",40,"^G","G__44682"],["^ ","^1:",4,"^1;",41,"^G","G__44682"],["^ ","^1:",19,"^1;",41],["^ ","^1:",21,"^1;",41],["^ ","^1:",22,"^1;",41,"^G","G__44682"],["^ ","^1:",34,"^1;",41],["^ ","^1:",41,"^1;",41],["^ ","^1:",46,"^1;",41],["^ ","^1:",63,"^1;",41,"^G","G__44682"],["^ ","^1:",0,"^1;",42],["^ ","^1:",0,"^1;",42],["^ ","^1:",3,"^1;",42],["^ ","^1:",4,"^1;",42,"^G","G__44682"],["^ ","^1:",20,"^1;",42],["^ ","^1:",0,"^1;",43],["^ ","^1:",0,"^1;",45],["^ ","^1:",53,"^1;",45,"^G","G__44682"]],"^1<",[["^ ","^1:",15,"^1;",40,"^G","zloc"]],"^1=",[["^ ","^1:",46,"^1;",41,"^G","clojure.zip/node"]],"^1>",[["^ ","^1:",7,"^1;",45,"^G","rewrite-clj.node/whitespace-or-comment?"]]],"~i31",["^ ","~i0",[["^ ","^1:",0,"^1;",48],["^ ","^1:",34,"^1;",51],["^ ","^1:",0,"^1;",52]],"~i6",[["^ ","^1:",0,"^1;",51,"^G","rewrite-clj.zip.whitespace/skip"]]],"~i33",["^ ","~i3",[["^ ","^1:",76,"^1;",51,"^G","f"]],"~i5",[["^ ","^1:",78,"^1;",51,"^G","p?"]],"~i8",[["^ ","^1:",87,"^1;",51,"^G","zloc"]]],"~i34",["^ ","~i7",[["^ ","^1:",249,"^1;",52]],"~i8",[["^ ","^1:",249,"^1;",52,"^G","cljs.core/iterate"]],"^1B",[["^ ","^1:",267,"^1;",52,"^G","f"]],"^1C",[["^ ","^1:",269,"^1;",52,"^G","zloc"]]],"~i35",["^ ","~i7",[["^ ","^1:",179,"^1;",52]],"~i8",[["^ ","^1:",179,"^1;",52,"^G","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2"]],"^1D",[["^ ","^1:",230,"^1;",52,"^G","cljs.core/identity"]]],"~i36",["^ ","~i7",[["^ ","^1:",83,"^1;",52]],"~i8",[["^ ","^1:",83,"^1;",52,"^G","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2"]],"^1D",[["^ ","^1:",134,"^1;",52]],"^1E",[["^ ","^1:",134,"^1;",52,"^G","cljs.core/complement"]],"^1J",[["^ ","^1:",155,"^1;",52,"^G","clojure.zip/end?"]]],"~i37",["^ ","~i7",[["^ ","^1:",23,"^1;",52]],"~i8",[["^ ","^1:",23,"^1;",52,"^G","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2"]],"^1D",[["^ ","^1:",74,"^1;",52,"^G","p?"]]],"~i38",["^ ","~i7",[["^ ","^1:",0,"^1;",52]],"~i8",[["^ ","^1:",7,"^1;",52,"^G","cljs.core/first"]]],"~i40",["^ ","~i0",[["^ ","^1:",0,"^1;",54],["^ ","^1:",0,"^1;",54],["^ ","^1:",45,"^1;",58],["^ ","^1:",98,"^1;",58,"^G","var_args"],["^ ","^1:",0,"^1;",59],["^ ","^1:",0,"^1;",59],["^ ","^1:",4,"^1;",59,"^G","G__44686"],["^ ","^1:",15,"^1;",59],["^ ","^1:",15,"^1;",59],["^ ","^1:",0,"^1;",60],["^ ","^1:",0,"^1;",60],["^ ","^1:",8,"^1;",60,"^G","G__44686"],["^ ","^1:",5,"^1;",61],["^ ","^1:",0,"^1;",62],["^ ","^1:",7,"^1;",62,"^G","rewrite-clj.zip.whitespace/skip-whitespace"],["^ ","^1:",80,"^1;",62],["^ ","^1:",81,"^1;",62],["^ ","^1:",91,"^1;",62],["^ ","^1:",5,"^1;",65],["^ ","^1:",0,"^1;",66],["^ ","^1:",7,"^1;",66,"^G","rewrite-clj.zip.whitespace/skip-whitespace"],["^ ","^1:",80,"^1;",66],["^ ","^1:",81,"^1;",66],["^ ","^1:",91,"^1;",66],["^ ","^1:",97,"^1;",66],["^ ","^1:",98,"^1;",66],["^ ","^1:",108,"^1;",66],["^ ","^1:",0,"^1;",70],["^ ","^1:",6,"^1;",70],["^ ","^1:",11,"^1;",70,"^G","js/Error"],["^ ","^1:",17,"^1;",70],["^ ","^1:",18,"^1;",70],["^ ","^1:",80,"^1;",70],["^ ","^1:",80,"^1;",70],["^ ","^1:",0,"^1;",75],["^ ","^1:",0,"^1;",75],["^ ","^1:",75,"^1;",75],["^ ","^1:",0,"^1;",76],["^ ","^1:",0,"^1;",79],["^ ","^1:",0,"^1;",79],["^ ","^1:",75,"^1;",79],["^ ","^1:",0,"^1;",80],["^ ","^1:",0,"^1;",83],["^ ","^1:",0,"^1;",83],["^ ","^1:",69,"^1;",83],["^ ","^1:",0,"^1;",85]],"~i6",[["^ ","^1:",0,"^1;",58,"^G","rewrite-clj.zip.whitespace/skip-whitespace"],["^ ","^1:",0,"^1;",75,"^G","rewrite-clj.zip.whitespace/skip-whitespace"],["^ ","^1:",0,"^1;",79,"^G","rewrite-clj.zip.whitespace/skip-whitespace"],["^ ","^1:",0,"^1;",83,"^G","rewrite-clj.zip.whitespace/skip-whitespace"]]],"~i43",["^ ","~i4",[["^ ","^1:",86,"^1;",75,"^G","zloc"]],"^1<",[["^ ","^1:",0,"^1;",76]],"^1?",[["^ ","^1:",7,"^1;",76,"^G","rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1:",80,"^1;",76,"^G","clojure.zip/right"]],"^1M",[["^ ","^1:",98,"^1;",76,"^G","zloc"]]],"~i44",["^ ","~i4",[["^ ","^1:",86,"^1;",79,"^G","f"]],"~i6",[["^ ","^1:",88,"^1;",79,"^G","zloc"]],"^1@",[["^ ","^1:",0,"^1;",80]],"~i13",[["^ ","^1:",7,"^1;",80,"^G","rewrite-clj.zip.whitespace/skip"]],"^1C",[["^ ","^1:",39,"^1;",80,"^G","f"]],"^1E",[["^ ","^1:",41,"^1;",80,"^G","rewrite-clj.zip.whitespace/whitespace-or-comment?"]],"^1R",[["^ ","^1:",97,"^1;",80,"^G","zloc"]]],"~i46",["^ ","~i0",[["^ ","^1:",0,"^1;",85],["^ ","^1:",50,"^1;",88],["^ ","^1:",0,"^1;",89]],"~i6",[["^ ","^1:",0,"^1;",88,"^G","rewrite-clj.zip.whitespace/skip-whitespace-left"]]],"~i48",["^ ","~i3",[["^ ","^1:",108,"^1;",88,"^G","zloc"]]],"~i49",["^ ","~i2",[["^ ","^1:",0,"^1;",89]],"~i3",[["^ ","^1:",7,"^1;",89,"^G","rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2"]],"^1D",[["^ ","^1:",80,"^1;",89,"^G","clojure.zip/left"]],"^1I",[["^ ","^1:",97,"^1;",89,"^G","zloc"]]],"~i53",["^ ","~i0",[["^ ","^1:",0,"^1;",91],["^ ","^1:",0,"^1;",91],["^ ","^1:",43,"^1;",94],["^ ","^1:",94,"^1;",94,"^G","var_args"],["^ ","^1:",0,"^1;",95],["^ ","^1:",0,"^1;",95],["^ ","^1:",4,"^1;",95,"^G","G__44689"],["^ ","^1:",15,"^1;",95],["^ ","^1:",15,"^1;",95],["^ ","^1:",0,"^1;",96],["^ ","^1:",0,"^1;",96],["^ ","^1:",8,"^1;",96,"^G","G__44689"],["^ ","^1:",5,"^1;",97],["^ ","^1:",0,"^1;",98],["^ ","^1:",7,"^1;",98,"^G","rewrite-clj.zip.whitespace/prepend-space"],["^ ","^1:",78,"^1;",98],["^ ","^1:",79,"^1;",98],["^ ","^1:",89,"^1;",98],["^ ","^1:",5,"^1;",101],["^ ","^1:",0,"^1;",102],["^ ","^1:",7,"^1;",102,"^G","rewrite-clj.zip.whitespace/prepend-space"],["^ ","^1:",78,"^1;",102],["^ ","^1:",79,"^1;",102],["^ ","^1:",89,"^1;",102],["^ ","^1:",95,"^1;",102],["^ ","^1:",96,"^1;",102],["^ ","^1:",106,"^1;",102],["^ ","^1:",0,"^1;",106],["^ ","^1:",6,"^1;",106],["^ ","^1:",11,"^1;",106,"^G","js/Error"],["^ ","^1:",17,"^1;",106],["^ ","^1:",18,"^1;",106],["^ ","^1:",80,"^1;",106],["^ ","^1:",80,"^1;",106],["^ ","^1:",0,"^1;",111],["^ ","^1:",0,"^1;",111],["^ ","^1:",73,"^1;",111],["^ ","^1:",0,"^1;",112],["^ ","^1:",0,"^1;",115],["^ ","^1:",0,"^1;",115],["^ ","^1:",73,"^1;",115],["^ ","^1:",0,"^1;",116],["^ ","^1:",0,"^1;",119],["^ ","^1:",0,"^1;",119],["^ ","^1:",67,"^1;",119],["^ ","^1:",0,"^1;",121]],"~i6",[["^ ","^1:",0,"^1;",94,"^G","rewrite-clj.zip.whitespace/prepend-space"],["^ ","^1:",0,"^1;",111,"^G","rewrite-clj.zip.whitespace/prepend-space"],["^ ","^1:",0,"^1;",115,"^G","rewrite-clj.zip.whitespace/prepend-space"],["^ ","^1:",0,"^1;",119,"^G","rewrite-clj.zip.whitespace/prepend-space"]]],"~i55",["^ ","~i4",[["^ ","^1:",84,"^1;",111,"^G","zloc"]],"^1<",[["^ ","^1:",0,"^1;",112],["^ ","^1:",83,"^1;",112]],"^1?",[["^ ","^1:",7,"^1;",112,"^G","rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1:",78,"^1;",112,"^G","zloc"]]],"~i56",["^ ","~i4",[["^ ","^1:",84,"^1;",115,"^G","zloc"]],"~i9",[["^ ","^1:",89,"^1;",115,"^G","n"]]],"~i57",["^ ","~i3",[["^ ","^1:",0,"^1;",116]],"~i4",[["^ ","^1:",7,"^1;",116,"^G","clojure.zip/insert-left"]],"^1C",[["^ ","^1:",31,"^1;",116,"^G","zloc"]],"~i23",[["^ ","^1:",36,"^1;",116]],"^1G",[["^ ","^1:",37,"^1;",116,"^G","rewrite-clj.node/spaces"],["^ ","^1:",93,"^1;",116,"^G","rewrite-clj.node/spaces"],["^ ","^1:",152,"^1;",116,"^G","rewrite-clj.node/spaces"]],"^1N",[["^ ","^1:",147,"^1;",116,"^G","n"],["^ ","^1:",186,"^1;",116,"^G","n"]]],"~i59",["^ ","~i0",[["^ ","^1:",0,"^1;",121],["^ ","^1:",0,"^1;",121],["^ ","^1:",42,"^1;",124],["^ ","^1:",92,"^1;",124,"^G","var_args"],["^ ","^1:",0,"^1;",125],["^ ","^1:",0,"^1;",125],["^ ","^1:",4,"^1;",125,"^G","G__44694"],["^ ","^1:",15,"^1;",125],["^ ","^1:",15,"^1;",125],["^ ","^1:",0,"^1;",126],["^ ","^1:",0,"^1;",126],["^ ","^1:",8,"^1;",126,"^G","G__44694"],["^ ","^1:",5,"^1;",127],["^ ","^1:",0,"^1;",128],["^ ","^1:",7,"^1;",128,"^G","rewrite-clj.zip.whitespace/append-space"],["^ ","^1:",77,"^1;",128],["^ ","^1:",78,"^1;",128],["^ ","^1:",88,"^1;",128],["^ ","^1:",5,"^1;",131],["^ ","^1:",0,"^1;",132],["^ ","^1:",7,"^1;",132,"^G","rewrite-clj.zip.whitespace/append-space"],["^ ","^1:",77,"^1;",132],["^ ","^1:",78,"^1;",132],["^ ","^1:",88,"^1;",132],["^ ","^1:",94,"^1;",132],["^ ","^1:",95,"^1;",132],["^ ","^1:",105,"^1;",132],["^ ","^1:",0,"^1;",136],["^ ","^1:",6,"^1;",136],["^ ","^1:",11,"^1;",136,"^G","js/Error"],["^ ","^1:",17,"^1;",136],["^ ","^1:",18,"^1;",136],["^ ","^1:",80,"^1;",136],["^ ","^1:",80,"^1;",136],["^ ","^1:",0,"^1;",141],["^ ","^1:",0,"^1;",141],["^ ","^1:",72,"^1;",141],["^ ","^1:",0,"^1;",142],["^ ","^1:",0,"^1;",145],["^ ","^1:",0,"^1;",145],["^ ","^1:",72,"^1;",145],["^ ","^1:",0,"^1;",146],["^ ","^1:",0,"^1;",149],["^ ","^1:",0,"^1;",149],["^ ","^1:",66,"^1;",149],["^ ","^1:",0,"^1;",151]],"~i6",[["^ ","^1:",0,"^1;",124,"^G","rewrite-clj.zip.whitespace/append-space"],["^ ","^1:",0,"^1;",141,"^G","rewrite-clj.zip.whitespace/append-space"],["^ ","^1:",0,"^1;",145,"^G","rewrite-clj.zip.whitespace/append-space"],["^ ","^1:",0,"^1;",149,"^G","rewrite-clj.zip.whitespace/append-space"]]],"~i61",["^ ","~i4",[["^ ","^1:",83,"^1;",141,"^G","zloc"]],"^1<",[["^ ","^1:",0,"^1;",142],["^ ","^1:",82,"^1;",142]],"^1?",[["^ ","^1:",7,"^1;",142,"^G","rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2"]],"^1G",[["^ ","^1:",77,"^1;",142,"^G","zloc"]]],"~i62",["^ ","~i4",[["^ ","^1:",83,"^1;",145,"^G","zloc"]],"~i9",[["^ ","^1:",88,"^1;",145,"^G","n"]]],"~i63",["^ ","~i3",[["^ ","^1:",0,"^1;",146]],"~i4",[["^ ","^1:",7,"^1;",146,"^G","clojure.zip/insert-right"]],"^1D",[["^ ","^1:",32,"^1;",146,"^G","zloc"]],"^1G",[["^ ","^1:",37,"^1;",146]],"^1H",[["^ ","^1:",38,"^1;",146,"^G","rewrite-clj.node/spaces"],["^ ","^1:",94,"^1;",146,"^G","rewrite-clj.node/spaces"],["^ ","^1:",153,"^1;",146,"^G","rewrite-clj.node/spaces"]],"^1O",[["^ ","^1:",148,"^1;",146,"^G","n"],["^ ","^1:",187,"^1;",146,"^G","n"]]],"~i65",["^ ","~i0",[["^ ","^1:",0,"^1;",151],["^ ","^1:",0,"^1;",151],["^ ","^1:",45,"^1;",154],["^ ","^1:",98,"^1;",154,"^G","var_args"],["^ ","^1:",0,"^1;",155],["^ ","^1:",0,"^1;",155],["^ ","^1:",4,"^1;",155,"^G","G__44697"],["^ ","^1:",15,"^1;",155],["^ ","^1:",15,"^1;",155],["^ ","^1:",0,"^1;",156],["^ ","^1:",0,"^1;",156],["^ ","^1:",8,"^1;",156,"^G","G__44697"],["^ ","^1:",5,"^1;",157],["^ ","^1:",0,"^1;",158],["^ ","^1:",7,"^1;",158,"^G","rewrite-clj.zip.whitespace/prepend-newline"],["^ ","^1:",80,"^1;",158],["^ ","^1:",81,"^1;",158],["^ ","^1:",91,"^1;",158],["^ ","^1:",5,"^1;",161],["^ ","^1:",0,"^1;",162],["^ ","^1:",7,"^1;",162,"^G","rewrite-clj.zip.whitespace/prepend-newline"],["^ ","^1:",80,"^1;",162],["^ ","^1:",81,"^1;",162],["^ ","^1:",91,"^1;",162],["^ ","^1:",97,"^1;",162],["^ ","^1:",98,"^1;",162],["^ ","^1:",108,"^1;",162],["^ ","^1:",0,"^1;",166],["^ ","^1:",6,"^1;",166],["^ ","^1:",11,"^1;",166,"^G","js/Error"],["^ ","^1:",17,"^1;",166],["^ ","^1:",18,"^1;",166],["^ ","^1:",80,"^1;",166],["^ ","^1:",80,"^1;",166],["^ ","^1:",0,"^1;",171],["^ ","^1:",0,"^1;",171],["^ ","^1:",75,"^1;",171],["^ ","^1:",0,"^1;",172],["^ ","^1:",0,"^1;",175],["^ ","^1:",0,"^1;",175],["^ ","^1:",75,"^1;",175],["^ ","^1:",0,"^1;",176],["^ ","^1:",0,"^1;",179],["^ ","^1:",0,"^1;",179],["^ ","^1:",69,"^1;",179],["^ ","^1:",0,"^1;",181]],"~i6",[["^ ","^1:",0,"^1;",154,"^G","rewrite-clj.zip.whitespace/prepend-newline"],["^ ","^1:",0,"^1;",171,"^G","rewrite-clj.zip.whitespace/prepend-newline"],["^ ","^1:",0,"^1;",175,"^G","rewrite-clj.zip.whitespace/prepend-newline"],["^ ","^1:",0,"^1;",179,"^G","rewrite-clj.zip.whitespace/prepend-newline"]]],"~i67",["^ ","~i4",[["^ ","^1:",86,"^1;",171,"^G","zloc"]],"^1<",[["^ ","^1:",0,"^1;",172],["^ ","^1:",85,"^1;",172]],"^1?",[["^ ","^1:",7,"^1;",172,"^G","rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2"]],"^1S",[["^ ","^1:",80,"^1;",172,"^G","zloc"]]],"~i68",["^ ","~i4",[["^ ","^1:",86,"^1;",175,"^G","zloc"]],"~i9",[["^ ","^1:",91,"^1;",175,"^G","n"]]],"~i69",["^ ","~i3",[["^ ","^1:",0,"^1;",176]],"~i4",[["^ ","^1:",7,"^1;",176,"^G","clojure.zip/insert-left"]],"^1C",[["^ ","^1:",31,"^1;",176,"^G","zloc"]],"^21",[["^ ","^1:",36,"^1;",176]],"^1G",[["^ ","^1:",37,"^1;",176,"^G","rewrite-clj.node/newlines"],["^ ","^1:",95,"^1;",176,"^G","rewrite-clj.node/newlines"],["^ ","^1:",156,"^1;",176,"^G","rewrite-clj.node/newlines"]],"^1P",[["^ ","^1:",151,"^1;",176,"^G","n"],["^ ","^1:",192,"^1;",176,"^G","n"]]],"~i71",["^ ","~i0",[["^ ","^1:",0,"^1;",181],["^ ","^1:",0,"^1;",181],["^ ","^1:",44,"^1;",184],["^ ","^1:",96,"^1;",184,"^G","var_args"],["^ ","^1:",0,"^1;",185],["^ ","^1:",0,"^1;",185],["^ ","^1:",4,"^1;",185,"^G","G__44700"],["^ ","^1:",15,"^1;",185],["^ ","^1:",15,"^1;",185],["^ ","^1:",0,"^1;",186],["^ ","^1:",0,"^1;",186],["^ ","^1:",8,"^1;",186,"^G","G__44700"],["^ ","^1:",5,"^1;",187],["^ ","^1:",0,"^1;",188],["^ ","^1:",7,"^1;",188,"^G","rewrite-clj.zip.whitespace/append-newline"],["^ ","^1:",79,"^1;",188],["^ ","^1:",80,"^1;",188],["^ ","^1:",90,"^1;",188],["^ ","^1:",5,"^1;",191],["^ ","^1:",0,"^1;",192],["^ ","^1:",7,"^1;",192,"^G","rewrite-clj.zip.whitespace/append-newline"],["^ ","^1:",79,"^1;",192],["^ ","^1:",80,"^1;",192],["^ ","^1:",90,"^1;",192],["^ ","^1:",96,"^1;",192],["^ ","^1:",97,"^1;",192],["^ ","^1:",107,"^1;",192],["^ ","^1:",0,"^1;",196],["^ ","^1:",6,"^1;",196],["^ ","^1:",11,"^1;",196,"^G","js/Error"],["^ ","^1:",17,"^1;",196],["^ ","^1:",18,"^1;",196],["^ ","^1:",80,"^1;",196],["^ ","^1:",80,"^1;",196],["^ ","^1:",0,"^1;",201],["^ ","^1:",0,"^1;",201],["^ ","^1:",74,"^1;",201],["^ ","^1:",0,"^1;",202],["^ ","^1:",0,"^1;",205],["^ ","^1:",0,"^1;",205],["^ ","^1:",74,"^1;",205],["^ ","^1:",0,"^1;",206],["^ ","^1:",0,"^1;",209],["^ ","^1:",0,"^1;",209],["^ ","^1:",68,"^1;",209],["^ ","^1:",0,"^1;",211]],"~i6",[["^ ","^1:",0,"^1;",184,"^G","rewrite-clj.zip.whitespace/append-newline"],["^ ","^1:",0,"^1;",201,"^G","rewrite-clj.zip.whitespace/append-newline"],["^ ","^1:",0,"^1;",205,"^G","rewrite-clj.zip.whitespace/append-newline"],["^ ","^1:",0,"^1;",209,"^G","rewrite-clj.zip.whitespace/append-newline"]]],"~i73",["^ ","~i4",[["^ ","^1:",85,"^1;",201,"^G","zloc"]],"^1<",[["^ ","^1:",0,"^1;",202],["^ ","^1:",84,"^1;",202]],"^1?",[["^ ","^1:",7,"^1;",202,"^G","rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^1:",79,"^1;",202,"^G","zloc"]]],"~i74",["^ ","~i4",[["^ ","^1:",85,"^1;",205,"^G","zloc"]],"~i9",[["^ ","^1:",90,"^1;",205,"^G","n"]]],"~i75",["^ ","~i3",[["^ ","^1:",0,"^1;",206]],"~i4",[["^ ","^1:",7,"^1;",206,"^G","clojure.zip/insert-right"]],"^1D",[["^ ","^1:",32,"^1;",206,"^G","zloc"]],"^1G",[["^ ","^1:",37,"^1;",206]],"^1H",[["^ ","^1:",38,"^1;",206,"^G","rewrite-clj.node/newlines"],["^ ","^1:",96,"^1;",206,"^G","rewrite-clj.node/newlines"],["^ ","^1:",157,"^1;",206,"^G","rewrite-clj.node/newlines"]],"~i39",[["^ ","^1:",152,"^1;",206,"^G","n"],["^ ","^1:",193,"^1;",206,"^G","n"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^12","rewrite_clj/node/token.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.protocols"],["~:macro","^P"],[1533155342000],["^12","cljs/tools/reader/impl/utils.cljs"],[1533235982000,"^Q","^P","~$clojure.string","~$goog.string"],["^12","goog/math/math.js"],[1533155346000,"^Q","~$goog.array","~$goog.asserts"],["^12","goog/array/array.js"],[1533155346000,"^Q","^2G"],["^2C","~$cljs.tools.reader.reader-types"],[1533235982000],["^12","goog/debug/error.js"],[1533155346000,"^Q"],["^12","goog/dom/nodetype.js"],[1533155346000,"^Q"],["^12","cljs/tools/reader/impl/inspect.cljs"],[1533235982000,"^Q","^P"],["^12","cljs/tools/reader.cljs"],[1533235982000,"^Q","^P","^2H","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2F","^2E","~$goog.string.StringBuffer"],["^12","rewrite_clj/node/forms.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","goog/object/object.js"],[1533155346000,"^Q"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^12","goog/math/long.js"],[1533155346000,"^Q","^2G","~$goog.reflect"],["^12","rewrite_clj/node/reader_macro.cljs"],[1533155355000,"^Q","^P","^2B","~$rewrite-clj.node.whitespace"],["^12","goog/functions/functions.js"],[1533155346000,"^Q"],["^12","clojure/walk.cljs"],[1533155342000,"^Q","^P"],["^12","goog/structs/map.js"],[1533155346000,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^12","rewrite_clj/node/meta.cljs"],[1533155355000,"^Q","^P","^2B","^2O"],["^12","rewrite_clj/node/stringz.cljs"],[1533155355000,"^Q","^P","^2B","~$cljs.tools.reader","^2D"],["^12","rewrite_clj/node/comment.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","rewrite_clj/node/keyword.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","goog/asserts/asserts.js"],[1533155346000,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","^2E"],["^12","goog/uri/uri.js"],[1533155346000,"^Q","^2F","^2G","^2E","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^12","rewrite_clj/node/protocols.cljs"],[1533155355000,"^Q","^P","^2D"],["^12","rewrite_clj/node/seq.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","rewrite_clj/node/uneval.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","goog/base.js"],[1533155346000],["^12","goog/structs/structs.js"],[1533155346000,"^Q","^2F","^2R"],["^12","cljs/tools/reader/impl/errors.cljs"],[1533235982000,"^Q","^P","^2H","^2D","~$cljs.tools.reader.impl.inspect"],["^12","rewrite_clj/node/whitespace.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","rewrite_clj/node/coercer.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2B","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2O"],["^12","clojure/string.cljs"],[1533155342000,"^Q","^P","^2E","^2L"],["^12","goog/string/string.js"],[1533155346000,"^Q"],["^12","goog/reflect/reflect.js"],[1533155346000,"^Q"],["^12","rewrite_clj/node/fn.cljs"],[1533155355000,"^Q","^P","^2B","~$clojure.walk"],["^12","rewrite_clj/node.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.coercer","^2B","^32","^39","^2O","^3:","^30","^31","^36","^34","^38","^33","^35","^37"],["^12","clojure/zip.cljs"],[1533155342000,"^Q","^P"],["^12","goog/string/stringbuffer.js"],[1533155346000,"^Q"],["^12","cljs/tools/reader/reader_types.cljs"],[1533235982000,"^Q","^P","^2I","^2E","^2L"],["^12","goog/iter/iter.js"],[1533155346000,"^Q","^2F","^2G","~$goog.functions","~$goog.math"],["^12","rewrite_clj/node/quote.cljs"],[1533155355000,"^Q","^P","^2B"],["^12","cljs/tools/reader/impl/commons.cljs"],[1533235982000,"^Q","^P","^2K","^2H","^2I"],["^12","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^2E","^2R","^2F","~$goog.Uri","^2L"],["^12","goog/math/integer.js"],[1533155346000,"^Q"],["^12","goog/uri/utils.js"],[1533155346000,"^Q","^2F","^2G","^2E"],["^12","rewrite_clj/zip/whitespace.cljs"],[1533155355000,"^Q","^P","^M","^O"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","~$z","^O","^P","^P","^Q","^Q"],"^R",["^F",["^S"]],"~:shadow/js-access-global",["^F",["Error"]],"^T",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^W",["~$quote",["^W",[["~$zloc"]]]]]],"^G","~$rewrite-clj.zip.whitespace/whitespace?","~:variadic",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^W",[["^3I"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"^7",7,"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"~$linebreak?",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"^G","~$rewrite-clj.zip.whitespace/linebreak?","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^3L",["^W",[["^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",11,"^9",11,"^3O",1,"^3P",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"~$skip",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^3G",["^W",["^3H",["^W",[["~$f","~$p?","^3I"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^G","~$rewrite-clj.zip.whitespace/skip","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^3L",["^W",[["~$f","^3T","^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",32,"^9",32,"^3O",3,"^3P",true,"^3G",["^W",["^3H",["^W",[["~$f","^3T","^3I"]]]]],"^3U","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^3G",["^W",["^3H",["^W",[["^3I"],["^3I","~$n"]]]]],"^3U","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]]],"^G","~$rewrite-clj.zip.whitespace/prepend-space","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]],"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",54,"^9",54,"^3O",2,"^3P",true,"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3U","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^3G",["^W",["^3H",["^W",[["^3I"],["^3I","~$n"]]]]],"^3U","Append a newline node representing the given number of newlines (default: 1).","^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]]],"^G","~$rewrite-clj.zip.whitespace/append-newline","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]],"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",72,"^9",72,"^3O",2,"^3P",true,"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3U","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^3G",["^W",["^3H",["^W",[["^3I"],["^3I","~$n"]]]]],"^3U","Prepend a newlines node representing the given number of newlines (default: 1).","^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]]],"^G","~$rewrite-clj.zip.whitespace/prepend-newline","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]],"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",66,"^9",66,"^3O",2,"^3P",true,"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3U","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^3G",["^W",["^3H",["^W",[["^3I"],["^3I","~$n"]]]]],"^3U","Append a whitespace node representing the given number of spaces (default: 1).","^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]]],"^G","~$rewrite-clj.zip.whitespace/append-space","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3N",["^W",[null,null]]],"^3L",["^W",[["^3I"],["^3I","~$n"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",60,"^9",60,"^3O",2,"^3P",true,"^3G",["^W",[["^3I"],["^3I","~$n"]]],"^3U","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^3G",["^W",["^3H",["^W",[["^3I"]]]]],"^3U","Move left until a non-whitespace/non-comment node is encountered."],"^G","~$rewrite-clj.zip.whitespace/skip-whitespace-left","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^3L",["^W",[["^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",47,"^9",47,"^3O",1,"^3P",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]],"^3U","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^3G",["^W",["^3H",["^W",[["^3I"],["~$f","^3I"]]]]],"^3U","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["~$f","^3I"]]],"^3G",["^W",[["^3I"],["~$f","^3I"]]],"^3N",["^W",[null,null]]]],"^G","~$rewrite-clj.zip.whitespace/skip-whitespace","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^3X",["^ ","^3K",false,"^3O",2,"^3L",["^W",[["^3I"],["~$f","^3I"]]],"^3G",["^W",[["^3I"],["~$f","^3I"]]],"^3N",["^W",[null,null]]],"^3L",["^W",[["^3I"],["~$f","^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",41,"^9",41,"^3O",2,"^3P",true,"^3G",["^W",[["^3I"],["~$f","^3I"]]],"^3U","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"^G","~$rewrite-clj.zip.whitespace/comment?","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^3L",["^W",[["^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",15,"^9",15,"^3O",1,"^3P",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"~$whitespace-not-linebreak?",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"^G","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^3L",["^W",[["^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",19,"^9",19,"^3O",1,"^3P",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"~$whitespace-or-comment?",["^ ","^3F",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]],"^G","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","^3K",false,"^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^3L",["^W",[["^3I"]]],"^3M",null,"^3N",["^W",[null,null]],"^8",1,"^7",25,"^9",25,"^3O",1,"^3P",true,"^3G",["^W",["^3H",["^W",[["^3I"]]]]]]],"^U",["^ ","^P","^P"],"^Z",["^ ","^S",["^F",[]]],"^[",["^ "],"^10",["^Q","^P","^M","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2A",[["^4@","~:static-fns"],true,["^4@","~:elide-asserts"],false,["^4@","~:optimize-constants"],null,["^4@","~:external-config"],null,["^4@","~:tooling-config"],null,["^4@","~:emit-constants"],null,["^4@","~:infer-externs"],true,["^4@","^17"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4@","~:fn-invoke-direct"],null,["^4@","^19"],"/dev/null"]]]