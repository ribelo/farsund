["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.insert');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.zip.base');\ngoog.require('rewrite_clj.zip.whitespace');\ngoog.require('rewrite_clj.node');\ngoog.require('clojure.zip');\nrewrite_clj.zip.insert.space = (rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1((1)) : rewrite_clj.node.spaces.call(null,(1)));\n/**\n * Generic insertion helper. If the node reached by `move-fn`\n * is a whitespace, insert an additional space.\n */\nrewrite_clj.zip.insert.insert = (function rewrite_clj$zip$insert$insert(move_fn,insert_fn,prefix,zloc,item){\nvar item_node = (rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.coerce.cljs$core$IFn$_invoke$arity$1(item) : rewrite_clj.node.coerce.call(null,item));\nvar next_node = (move_fn.cljs$core$IFn$_invoke$arity$1 ? move_fn.cljs$core$IFn$_invoke$arity$1(zloc) : move_fn.call(null,zloc));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(insert_fn,zloc,(cljs.core.truth_((function (){var or__3949__auto__ = cljs.core.not(next_node);\nif(or__3949__auto__){\nreturn or__3949__auto__;\n} else {\nreturn rewrite_clj.zip.whitespace.whitespace_QMARK_(next_node);\n}\n})())?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [item_node], null),prefix):cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space,item_node], null),prefix)));\n});\n/**\n * Insert item to the right of the current location. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_right = (function rewrite_clj$zip$insert$insert_right(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.right,clojure.zip.insert_right,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);\n});\n/**\n * Insert item to the right of the left location. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_left = (function rewrite_clj$zip$insert$insert_left(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.left,clojure.zip.insert_left,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);\n});\n/**\n * Insert item as first child of the current node. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.insert_child = (function rewrite_clj$zip$insert$insert_child(zloc,item){\nreturn rewrite_clj.zip.insert.insert(clojure.zip.down,clojure.zip.insert_child,cljs.core.PersistentVector.EMPTY,zloc,item);\n});\n/**\n * Insert item as last child of the current node. Will insert a space if necessary.\n */\nrewrite_clj.zip.insert.append_child = (function rewrite_clj$zip$insert$append_child(zloc,item){\nreturn rewrite_clj.zip.insert.insert((function (p1__44843_SHARP_){\nvar G__44844 = p1__44843_SHARP_;\nvar G__44844__$1 = (((G__44844 == null))?null:clojure.zip.down(G__44844));\nif((G__44844__$1 == null)){\nreturn null;\n} else {\nreturn clojure.zip.rightmost(G__44844__$1);\n}\n}),clojure.zip.append_child,cljs.core.PersistentVector.EMPTY,zloc,item);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/insert.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",36,"~:no-doc",true],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.insert","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$base","~$rewrite-clj.zip.base","~$clojure.zip","^P","~$rewrite-clj.node","^Q","~$cljs.core","^R","~$ws","~$rewrite-clj.zip.whitespace","~$goog","^U","^T","^T","~$node","^Q","~$z","^P","^O","^O"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^I",["^10",["^X",["^O","~:as","^N"],["^T","^12","^S"],["^Q","^12","^V"],["^P","^12","~$z"]]]]],"~:flags",["^ ","^X",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^U","^R","^O","^T","^Q","^P"]],"^K","^I","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/insert.cljs"],"~:compiled-at",1537561400642,"~:resource-name","rewrite_clj/zip/insert.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.zip.insert\n  (:require [rewrite-clj.zip.base :as base]\n            [rewrite-clj.zip.whitespace :as ws]\n            [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n(def ^:private space\n  (node/spaces 1))\n\n(defn- insert\n  \"Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space.\"\n  [move-fn insert-fn prefix zloc item]\n  (let [item-node (node/coerce item)\n        next-node (move-fn zloc)]\n    (->> (if (or (not next-node) (ws/whitespace? next-node))\n           (concat [item-node] prefix)\n           (concat [space item-node] prefix))\n         (reduce insert-fn zloc))))\n\n(defn insert-right\n  \"Insert item to the right of the current location. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/right\n    z/insert-right\n    [space]\n    zloc item))\n\n(defn insert-left\n  \"Insert item to the right of the left location. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/left\n    z/insert-left\n    [space]\n    zloc item))\n\n(defn insert-child\n  \"Insert item as first child of the current node. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    z/down\n    z/insert-child\n    []\n    zloc item))\n\n(defn append-child\n  \"Insert item as last child of the current node. Will insert a space if necessary.\"\n  [zloc item]\n  (insert\n    #(some-> % z/down z/rightmost)\n    z/append-child\n    []\n    zloc item))\n","~:reader-features",["^G",["~:cljs"]],"~:source-map",["^ ","~i6",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",6]],"~i15",[["^ ","^1?",0,"^1@",6,"^H","rewrite-clj.zip.insert/space"]]],"~i7",["^ ","~i2",[["^ ","^1?",31,"^1@",6],["^ ","^1?",142,"^1@",6],["^ ","^1?",183,"^1@",6]],"~i3",[["^ ","^1?",32,"^1@",6,"^H","rewrite-clj.node/spaces"],["^ ","^1?",88,"^1@",6,"^H","rewrite-clj.node/spaces"],["^ ","^1?",149,"^1@",6,"^H","rewrite-clj.node/spaces"]]],"~i9",["^ ","~i0",[["^ ","^1?",0,"^1@",7],["^ ","^1?",32,"^1@",11],["^ ","^1?",0,"^1@",12]],"~i7",[["^ ","^1?",0,"^1@",11,"^H","rewrite-clj.zip.insert/insert"]]],"~i12",["^ ","~i3",[["^ ","^1?",72,"^1@",11,"^H","move-fn"]],"~i11",[["^ ","^1?",80,"^1@",11,"^H","insert-fn"]],"~i21",[["^ ","^1?",90,"^1@",11,"^H","prefix"]],"~i28",[["^ ","^1?",97,"^1@",11,"^H","zloc"]],"~i33",[["^ ","^1?",102,"^1@",11,"^H","item"]]],"~i13",["^ ","~i2",[["^ ","^1?",0,"^1@",12],["^ ","^1?",0,"^1@",14]],"~i8",[["^ ","^1?",4,"^1@",12,"^H","item-node"]],"~i18",[["^ ","^1?",16,"^1@",12]],"~i19",[["^ ","^1?",17,"^1@",12,"^H","rewrite-clj.node/coerce"],["^ ","^1?",73,"^1@",12,"^H","rewrite-clj.node/coerce"],["^ ","^1?",135,"^1@",12,"^H","rewrite-clj.node/coerce"]],"~i31",[["^ ","^1?",127,"^1@",12,"^H","item"],["^ ","^1?",169,"^1@",12,"^H","item"]]],"~i14",["^ ","~i8",[["^ ","^1?",4,"^1@",13,"^H","next-node"]],"^1H",[["^ ","^1?",16,"^1@",13]],"^1I",[["^ ","^1?",17,"^1@",13,"^H","move-fn"],["^ ","^1?",57,"^1@",13,"^H","move-fn"],["^ ","^1?",103,"^1@",13,"^H","move-fn"]],"~i27",[["^ ","^1?",95,"^1@",13,"^H","zloc"],["^ ","^1?",121,"^1@",13,"^H","zloc"]]],"^1A",["^ ","~i9",[["^ ","^1?",69,"^1@",14]],"^1G",[["^ ","^1?",87,"^1@",14],["^ ","^1?",104,"^1@",14,"^H","or__3949__auto__"],["^ ","^1?",0,"^1@",15],["^ ","^1?",0,"^1@",15],["^ ","^1?",3,"^1@",15,"^H","or__3949__auto__"],["^ ","^1?",0,"^1@",16,"^H","or__3949__auto__"]],"~i17",[["^ ","^1?",123,"^1@",14]],"^1H",[["^ ","^1?",123,"^1@",14,"^H","cljs.core/not"]],"~i22",[["^ ","^1?",137,"^1@",14,"^H","next-node"]],"^1F",[["^ ","^1?",0,"^1@",18]],"~i34",[["^ ","^1?",7,"^1@",18,"^H","rewrite-clj.zip.whitespace/whitespace?"]],"~i49",[["^ ","^1?",52,"^1@",18,"^H","next-node"]]],"~i16",["^ ","^1C",[["^ ","^1?",6,"^1@",20],["^ ","^1?",53,"^1@",20]],"^1B",[["^ ","^1?",6,"^1@",20,"^H","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"~i20",[["^ ","^1?",136,"^1@",20,"^H","item-node"]],"^1J",[["^ ","^1?",154,"^1@",20,"^H","prefix"]]],"^1M",["^ ","^1C",[["^ ","^1?",162,"^1@",20],["^ ","^1?",209,"^1@",20]],"^1B",[["^ ","^1?",162,"^1@",20,"^H","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^1R",[["^ ","^1?",292,"^1@",20,"^H","rewrite-clj.zip.insert/space"]],"~i26",[["^ ","^1?",321,"^1@",20,"^H","item-node"]],"~i37",[["^ ","^1?",339,"^1@",20,"^H","prefix"]]],"^1H",["^ ","~i9",[["^ ","^1?",0,"^1@",14]],"~i10",[["^ ","^1?",7,"^1@",14,"^H","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1M",[["^ ","^1?",54,"^1@",14,"^H","insert-fn"]],"^1L",[["^ ","^1?",64,"^1@",14,"^H","zloc"]]],"^1R",["^ ","~i0",[["^ ","^1?",0,"^1@",22],["^ ","^1?",38,"^1@",25],["^ ","^1?",0,"^1@",26]],"~i6",[["^ ","^1?",0,"^1@",25,"^H","rewrite-clj.zip.insert/insert-right"]]],"^1N",["^ ","~i3",[["^ ","^1?",84,"^1@",25,"^H","zloc"]],"~i8",[["^ ","^1?",89,"^1@",25,"^H","item"]]],"~i23",["^ ","~i2",[["^ ","^1?",0,"^1@",26],["^ ","^1?",80,"^1@",26]],"~i3",[["^ ","^1?",7,"^1@",26,"^H","rewrite-clj.zip.insert/insert"]]],"~i24",["^ ","~i4",[["^ ","^1?",37,"^1@",26,"^H","clojure.zip/right"]]],"~i25",["^ ","~i4",[["^ ","^1?",55,"^1@",26,"^H","clojure.zip/insert-right"]]],"^1S",["^ ","~i5",[["^ ","^1?",163,"^1@",26,"^H","rewrite-clj.zip.insert/space"]]],"^1L",["^ ","~i4",[["^ ","^1?",200,"^1@",26,"^H","zloc"]],"~i9",[["^ ","^1?",205,"^1@",26,"^H","item"]]],"~i29",["^ ","~i0",[["^ ","^1?",0,"^1@",28],["^ ","^1?",37,"^1@",31],["^ ","^1?",0,"^1@",32]],"~i6",[["^ ","^1?",0,"^1@",31,"^H","rewrite-clj.zip.insert/insert-left"]]],"^1J",["^ ","~i3",[["^ ","^1?",82,"^1@",31,"^H","zloc"]],"~i8",[["^ ","^1?",87,"^1@",31,"^H","item"]]],"~i32",["^ ","~i2",[["^ ","^1?",0,"^1@",32],["^ ","^1?",78,"^1@",32]],"~i3",[["^ ","^1?",7,"^1@",32,"^H","rewrite-clj.zip.insert/insert"]]],"^1F",["^ ","~i4",[["^ ","^1?",37,"^1@",32,"^H","clojure.zip/left"]]],"^1O",["^ ","~i4",[["^ ","^1?",54,"^1@",32,"^H","clojure.zip/insert-left"]]],"~i35",["^ ","~i5",[["^ ","^1?",161,"^1@",32,"^H","rewrite-clj.zip.insert/space"]]],"~i36",["^ ","~i4",[["^ ","^1?",198,"^1@",32,"^H","zloc"]],"~i9",[["^ ","^1?",203,"^1@",32,"^H","item"]]],"~i38",["^ ","~i0",[["^ ","^1?",0,"^1@",34],["^ ","^1?",38,"^1@",37],["^ ","^1?",0,"^1@",38]],"~i6",[["^ ","^1?",0,"^1@",37,"^H","rewrite-clj.zip.insert/insert-child"]]],"~i40",["^ ","~i3",[["^ ","^1?",84,"^1@",37,"^H","zloc"]],"~i8",[["^ ","^1?",89,"^1@",37,"^H","item"]]],"~i41",["^ ","~i2",[["^ ","^1?",0,"^1@",38],["^ ","^1?",79,"^1@",38]],"~i3",[["^ ","^1?",7,"^1@",38,"^H","rewrite-clj.zip.insert/insert"]]],"~i42",["^ ","~i4",[["^ ","^1?",37,"^1@",38,"^H","clojure.zip/down"]]],"~i43",["^ ","~i4",[["^ ","^1?",54,"^1@",38,"^H","clojure.zip/insert-child"]]],"~i45",["^ ","~i4",[["^ ","^1?",112,"^1@",38,"^H","zloc"]],"~i9",[["^ ","^1?",117,"^1@",38,"^H","item"]]],"~i47",["^ ","~i0",[["^ ","^1?",0,"^1@",40],["^ ","^1?",38,"^1@",43],["^ ","^1?",0,"^1@",44]],"~i6",[["^ ","^1?",0,"^1@",43,"^H","rewrite-clj.zip.insert/append-child"]]],"^1P",["^ ","~i3",[["^ ","^1?",84,"^1@",43,"^H","zloc"]],"~i8",[["^ ","^1?",89,"^1@",43,"^H","item"]]],"~i50",["^ ","~i2",[["^ ","^1?",0,"^1@",44],["^ ","^1?",37,"^1@",44],["^ ","^1?",48,"^1@",44,"^H","p1__44843#"],["^ ","^1?",0,"^1@",45],["^ ","^1?",28,"^1@",52]],"~i3",[["^ ","^1?",7,"^1@",44,"^H","rewrite-clj.zip.insert/insert"]]],"~i51",["^ ","~i5",[["^ ","^1?",0,"^1@",45],["^ ","^1?",4,"^1@",45,"^H","G__44844"],["^ ","^1?",15,"^1@",45,"^H","p1__44843#"],["^ ","^1?",4,"^1@",46,"^H","G__44844"],["^ ","^1?",19,"^1@",46],["^ ","^1?",21,"^1@",46],["^ ","^1?",22,"^1@",46,"^H","G__44844"],["^ ","^1?",34,"^1@",46],["^ ","^1?",41,"^1@",46],["^ ","^1?",46,"^1@",46],["^ ","^1?",63,"^1@",46,"^H","G__44844"],["^ ","^1?",0,"^1@",47],["^ ","^1?",0,"^1@",47],["^ ","^1?",3,"^1@",47],["^ ","^1?",4,"^1@",47,"^H","G__44844"],["^ ","^1?",20,"^1@",47],["^ ","^1?",0,"^1@",48],["^ ","^1?",0,"^1@",50],["^ ","^1?",29,"^1@",50,"^H","G__44844"]],"^1A",[["^ ","^1?",46,"^1@",46,"^H","clojure.zip/down"]],"^1N",[["^ ","^1?",7,"^1@",50,"^H","clojure.zip/rightmost"]]],"~i52",["^ ","~i4",[["^ ","^1?",3,"^1@",52,"^H","clojure.zip/append-child"]]],"~i54",["^ ","~i4",[["^ ","^1?",61,"^1@",52,"^H","zloc"]],"~i9",[["^ ","^1?",66,"^1@",52,"^H","item"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^17","rewrite_clj/node/token.cljs"],[1533155355000,"^U","^R","~$rewrite-clj.node.protocols"],["~:macro","^R"],[1533155342000],["^17","cljs/tools/reader/impl/utils.cljs"],[1533235982000,"^U","^R","~$clojure.string","~$goog.string"],["^17","goog/math/math.js"],[1533155346000,"^U","~$goog.array","~$goog.asserts"],["^17","rewrite_clj/parser/core.cljs"],[1533155355000,"^U","^R","^Q","~$rewrite-clj.reader","~$rewrite-clj.parser.keyword","~$rewrite-clj.parser.string","~$rewrite-clj.parser.token","~$rewrite-clj.parser.whitespace","~$cljs.tools.reader.reader-types"],["^17","rewrite_clj/parser/string.cljs"],[1533155355000,"^U","^R","^Q","^2E","^2B"],["^17","goog/array/array.js"],[1533155346000,"^U","^2D"],["^2@","^2J"],[1533235982000],["^17","goog/debug/error.js"],[1533155346000,"^U"],["^17","goog/dom/nodetype.js"],[1533155346000,"^U"],["^17","cljs/tools/reader/impl/inspect.cljs"],[1533235982000,"^U","^R"],["^17","cljs/tools/reader.cljs"],[1533235982000,"^U","^R","^2J","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2C","^2B","~$goog.string.StringBuffer"],["^17","rewrite_clj/node/forms.cljs"],[1533155355000,"^U","^R","^2?"],["^17","rewrite_clj/zip/insert.cljs"],[1533155355000,"^U","^R","^O","^T","^Q","^P"],["^17","goog/object/object.js"],[1533155346000,"^U"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^17","goog/math/long.js"],[1533155346000,"^U","^2D","~$goog.reflect"],["^17","rewrite_clj/node/reader_macro.cljs"],[1533155355000,"^U","^R","^2?","~$rewrite-clj.node.whitespace"],["^17","goog/functions/functions.js"],[1533155346000,"^U"],["^17","clojure/walk.cljs"],[1533155342000,"^U","^R"],["^17","goog/structs/map.js"],[1533155346000,"^U","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^17","rewrite_clj/node/meta.cljs"],[1533155355000,"^U","^R","^2?","^2Q"],["^17","rewrite_clj/node/stringz.cljs"],[1533155355000,"^U","^R","^2?","~$cljs.tools.reader","^2A"],["^17","rewrite_clj/node/comment.cljs"],[1533155355000,"^U","^R","^2?"],["^17","rewrite_clj/node/keyword.cljs"],[1533155355000,"^U","^R","^2?"],["^17","goog/asserts/asserts.js"],[1533155346000,"^U","~$goog.debug.Error","~$goog.dom.NodeType","^2B"],["^17","goog/uri/uri.js"],[1533155346000,"^U","^2C","^2D","^2B","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^17","rewrite_clj/node/protocols.cljs"],[1533155355000,"^U","^R","^2A"],["^17","rewrite_clj/node/seq.cljs"],[1533155355000,"^U","^R","^2?"],["^17","rewrite_clj/node/uneval.cljs"],[1533155355000,"^U","^R","^2?"],["^17","goog/base.js"],[1533155346000],["^17","goog/structs/structs.js"],[1533155346000,"^U","^2C","^2T"],["^17","cljs/tools/reader/impl/errors.cljs"],[1533235982000,"^U","^R","^2J","^2A","~$cljs.tools.reader.impl.inspect"],["^17","rewrite_clj/node/whitespace.cljs"],[1533155355000,"^U","^R","^2?"],["^17","rewrite_clj/node/coercer.cljs"],[1533155355000,"^U","^R","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2?","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2Q"],["^17","clojure/string.cljs"],[1533155342000,"^U","^R","^2B","^2N"],["^17","rewrite_clj/parser.cljs"],[1533155355000,"^U","^R","~$rewrite-clj.parser.core","^Q","^2E"],["^17","rewrite_clj/parser/keyword.cljs"],[1533155355000,"^U","^R","^Q","^2J","^2E"],["^17","rewrite_clj/parser/token.cljs"],[1533155355000,"^U","^R","^Q","^2E","^2B"],["^17","goog/string/string.js"],[1533155346000,"^U"],["^17","goog/reflect/reflect.js"],[1533155346000,"^U"],["^17","rewrite_clj/node/fn.cljs"],[1533155355000,"^U","^R","^2?","~$clojure.walk"],["^17","rewrite_clj/node.cljs"],[1533155355000,"^U","^R","~$rewrite-clj.node.coercer","^2?","^34","^3;","^2Q","^3<","^32","^33","^38","^36","^3:","^35","^37","^39"],["^17","clojure/zip.cljs"],[1533155342000,"^U","^R"],["^17","goog/string/stringbuffer.js"],[1533155346000,"^U"],["^17","cljs/tools/reader/reader_types.cljs"],[1533235982000,"^U","^R","^2K","^2B","^2N"],["^17","goog/iter/iter.js"],[1533155346000,"^U","^2C","^2D","~$goog.functions","~$goog.math"],["^17","rewrite_clj/reader.cljs"],[1533155355000,"^U","^R","^2U","^2J","^2L","^2B","^2?"],["^17","rewrite_clj/node/quote.cljs"],[1533155355000,"^U","^R","^2?"],["^17","cljs/tools/reader/impl/commons.cljs"],[1533235982000,"^U","^R","^2M","^2J","^2K"],["^17","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^2B","^2T","^2C","~$goog.Uri","^2N"],["^17","goog/math/integer.js"],[1533155346000,"^U"],["^17","goog/uri/utils.js"],[1533155346000,"^U","^2C","^2D","^2B"],["^17","rewrite_clj/zip/base.cljs"],[1533155355000,"^U","^R","^Q","~$rewrite-clj.parser","^T","^P"],["^17","rewrite_clj/zip/whitespace.cljs"],[1533155355000,"^U","^R","^Q","^P"],["^17","rewrite_clj/parser/whitespace.cljs"],[1533155355000,"^U","^R","^Q","^2E"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",1,"^8",14,"^9",1,"^:",36,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^L",null,"^M",["^ ","^N","^O","^P","^P","^Q","^Q","^R","^R","^S","^T","^U","^U","^T","^T","^V","^Q","~$z","^P","^O","^O"],"^W",["^G",["^X"]],"^Y",null,"~:defs",["^ ","~$space",["^ ","^H","~$rewrite-clj.zip.insert/space","^6","rewrite_clj/zip/insert.cljs","^7",7,"^8",1,"^9",7,"^:",21,"~:private",true,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",7,"^8",16,"^9",7,"^:",21,"^3J",true],"~:tag","~$any"],"~$insert",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",10,"^8",8,"^9",10,"^:",14,"^3J",true,"~:arglists",["^10",["~$quote",["^10",[["~$move-fn","~$insert-fn","~$prefix","~$zloc","~$item"]]]]],"~:doc","Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space."],"^3J",true,"^H","~$rewrite-clj.zip.insert/insert","~:variadic",false,"^6","rewrite_clj/zip/insert.cljs","^:",14,"~:method-params",["^10",[["^3Q","^3R","^3S","^3T","^3U"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^8",1,"^7",10,"^9",10,"~:max-fixed-arity",5,"~:fn-var",true,"^3O",["^10",["^3P",["^10",[["^3Q","^3R","^3S","^3T","^3U"]]]]],"^3V","Generic insertion helper. If the node reached by `move-fn`\n   is a whitespace, insert an additional space."],"~$insert-right",["^ ","^3N",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",21,"^8",7,"^9",21,"^:",19,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item to the right of the current location. Will insert a space if necessary."],"^H","~$rewrite-clj.zip.insert/insert-right","^3X",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^3Y",["^10",[["^3T","^3U"]]],"^3Z",null,"^3[",["^10",[null,null]],"^8",1,"^7",21,"^9",21,"^40",2,"^41",true,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item to the right of the current location. Will insert a space if necessary."],"~$insert-left",["^ ","^3N",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",30,"^8",7,"^9",30,"^:",18,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item to the right of the left location. Will insert a space if necessary."],"^H","~$rewrite-clj.zip.insert/insert-left","^3X",false,"^6","rewrite_clj/zip/insert.cljs","^:",18,"^3Y",["^10",[["^3T","^3U"]]],"^3Z",null,"^3[",["^10",[null,null]],"^8",1,"^7",30,"^9",30,"^40",2,"^41",true,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item to the right of the left location. Will insert a space if necessary."],"~$insert-child",["^ ","^3N",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item as first child of the current node. Will insert a space if necessary."],"^H","~$rewrite-clj.zip.insert/insert-child","^3X",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^3Y",["^10",[["^3T","^3U"]]],"^3Z",null,"^3[",["^10",[null,null]],"^8",1,"^7",39,"^9",39,"^40",2,"^41",true,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item as first child of the current node. Will insert a space if necessary."],"~$append-child",["^ ","^3N",null,"^5",["^ ","^6","rewrite_clj/zip/insert.cljs","^7",48,"^8",7,"^9",48,"^:",19,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item as last child of the current node. Will insert a space if necessary."],"^H","~$rewrite-clj.zip.insert/append-child","^3X",false,"^6","rewrite_clj/zip/insert.cljs","^:",19,"^3Y",["^10",[["^3T","^3U"]]],"^3Z",null,"^3[",["^10",[null,null]],"^8",1,"^7",48,"^9",48,"^40",2,"^41",true,"^3O",["^10",["^3P",["^10",[["^3T","^3U"]]]]],"^3V","Insert item as last child of the current node. Will insert a space if necessary."]],"^Z",["^ ","^R","^R"],"^13",["^ ","^X",["^G",[]]],"^14",["^ "],"^15",["^U","^R","^O","^T","^Q","^P"]],"^K","^I","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2>",[["^4<","~:static-fns"],true,["^4<","~:elide-asserts"],false,["^4<","~:optimize-constants"],null,["^4<","~:external-config"],null,["^4<","~:tooling-config"],null,["^4<","~:emit-constants"],null,["^4<","~:infer-externs"],true,["^4<","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4<","~:fn-invoke-direct"],null,["^4<","^1>"],"/dev/null"]]]