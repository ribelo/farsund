["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse as much whitespace as possible. The created node can either contain\n * only linebreaks or only space/tabs.\n */\nrewrite_clj.parser.whitespace.parse_whitespace = (function rewrite_clj$parser$whitespace$parse_whitespace(reader){\nif(rewrite_clj.reader.linebreak_QMARK_((rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1(reader) : rewrite_clj.reader.peek_char.call(null,reader)))){\nvar G__44537 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.linebreak_QMARK_);\nreturn (rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1(G__44537) : rewrite_clj.node.newline_node.call(null,G__44537));\n} else {\nvar G__44538 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.space_QMARK_);\nreturn (rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1(G__44538) : rewrite_clj.node.whitespace_node.call(null,G__44538));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^M","~$node","^M","~$rewrite-clj.reader","^O","~$r","^O","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^H",["^W",["^S",["^M","~:as","^N"],["^O","^Y","~$r"]]]]],"~:flags",["^ ","^S",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^M","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser/whitespace.cljs"],"~:compiled-at",1537561400276,"~:resource-name","rewrite_clj/parser/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i4",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1:",49,"^1;",8],["^ ","^1:",0,"^1;",9]],"~i6",[["^ ","^1:",0,"^1;",8,"^G","rewrite-clj.parser.whitespace/parse-whitespace"]]],"~i7",["^ ","~i15",[["^ ","^1:",106,"^1;",8,"^G","reader"]]],"~i8",["^ ","~i2",[["^ ","^1:",0,"^1;",9]],"~i6",[["^ ","^1:",3,"^1;",9]],"~i7",[["^ ","^1:",3,"^1;",9,"^G","rewrite-clj.reader/linebreak?"]],"~i20",[["^ ","^1:",39,"^1;",9]],"~i21",[["^ ","^1:",40,"^1;",9,"^G","rewrite-clj.reader/peek-char"],["^ ","^1:",101,"^1;",9,"^G","rewrite-clj.reader/peek-char"],["^ ","^1:",170,"^1;",9,"^G","rewrite-clj.reader/peek-char"]],"~i33",[["^ ","^1:",160,"^1;",9,"^G","reader"],["^ ","^1:",209,"^1;",9,"^G","reader"]]],"~i9",["^ ","~i4",[["^ ","^1:",0,"^1;",10],["^ ","^1:",4,"^1;",10,"^G","G__44537"],["^ ","^1:",0,"^1;",11],["^ ","^1:",0,"^1;",11],["^ ","^1:",130,"^1;",11,"^G","G__44537"],["^ ","^1:",182,"^1;",11,"^G","G__44537"]],"~i5",[["^ ","^1:",8,"^1;",11,"^G","rewrite-clj.node/newline-node"],["^ ","^1:",70,"^1;",11,"^G","rewrite-clj.node/newline-node"],["^ ","^1:",142,"^1;",11,"^G","rewrite-clj.node/newline-node"]]],"~i10",["^ ","~i6",[["^ ","^1:",15,"^1;",10]],"~i7",[["^ ","^1:",15,"^1;",10,"^G","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^1:",75,"^1;",10,"^G","reader"]],"~i27",[["^ ","^1:",82,"^1;",10,"^G","rewrite-clj.reader/linebreak?"]]],"~i11",["^ ","~i4",[["^ ","^1:",0,"^1;",13],["^ ","^1:",4,"^1;",13,"^G","G__44538"],["^ ","^1:",0,"^1;",14],["^ ","^1:",0,"^1;",14],["^ ","^1:",136,"^1;",14,"^G","G__44538"],["^ ","^1:",191,"^1;",14,"^G","G__44538"]],"~i5",[["^ ","^1:",8,"^1;",14,"^G","rewrite-clj.node/whitespace-node"],["^ ","^1:",73,"^1;",14,"^G","rewrite-clj.node/whitespace-node"],["^ ","^1:",148,"^1;",14,"^G","rewrite-clj.node/whitespace-node"]]],"~i12",["^ ","~i6",[["^ ","^1:",15,"^1;",13]],"~i7",[["^ ","^1:",15,"^1;",13,"^G","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^1:",75,"^1;",13,"^G","reader"]],"^1A",[["^ ","^1:",82,"^1;",13,"^G","rewrite-clj.reader/space?"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^12","rewrite_clj/node/token.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.protocols"],["~:macro","^P"],[1533155342000],["^12","cljs/tools/reader/impl/utils.cljs"],[1533235982000,"^Q","^P","~$clojure.string","~$goog.string"],["^12","goog/math/math.js"],[1533155346000,"^Q","~$goog.array","~$goog.asserts"],["^12","goog/array/array.js"],[1533155346000,"^Q","^1L"],["^1H","~$cljs.tools.reader.reader-types"],[1533235982000],["^12","goog/debug/error.js"],[1533155346000,"^Q"],["^12","goog/dom/nodetype.js"],[1533155346000,"^Q"],["^12","cljs/tools/reader/impl/inspect.cljs"],[1533235982000,"^Q","^P"],["^12","cljs/tools/reader.cljs"],[1533235982000,"^Q","^P","^1M","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1K","^1J","~$goog.string.StringBuffer"],["^12","rewrite_clj/node/forms.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","goog/object/object.js"],[1533155346000,"^Q"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^12","goog/math/long.js"],[1533155346000,"^Q","^1L","~$goog.reflect"],["^12","rewrite_clj/node/reader_macro.cljs"],[1533155355000,"^Q","^P","^1G","~$rewrite-clj.node.whitespace"],["^12","goog/functions/functions.js"],[1533155346000,"^Q"],["^12","clojure/walk.cljs"],[1533155342000,"^Q","^P"],["^12","goog/structs/map.js"],[1533155346000,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^12","rewrite_clj/node/meta.cljs"],[1533155355000,"^Q","^P","^1G","^1T"],["^12","rewrite_clj/node/stringz.cljs"],[1533155355000,"^Q","^P","^1G","~$cljs.tools.reader","^1I"],["^12","rewrite_clj/node/comment.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","rewrite_clj/node/keyword.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","goog/asserts/asserts.js"],[1533155346000,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","^1J"],["^12","goog/uri/uri.js"],[1533155346000,"^Q","^1K","^1L","^1J","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^12","rewrite_clj/node/protocols.cljs"],[1533155355000,"^Q","^P","^1I"],["^12","rewrite_clj/node/seq.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","rewrite_clj/node/uneval.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","goog/base.js"],[1533155346000],["^12","goog/structs/structs.js"],[1533155346000,"^Q","^1K","^1W"],["^12","cljs/tools/reader/impl/errors.cljs"],[1533235982000,"^Q","^P","^1M","^1I","~$cljs.tools.reader.impl.inspect"],["^12","rewrite_clj/node/whitespace.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","rewrite_clj/node/coercer.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1G","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1T"],["^12","clojure/string.cljs"],[1533155342000,"^Q","^P","^1J","^1Q"],["^12","goog/string/string.js"],[1533155346000,"^Q"],["^12","goog/reflect/reflect.js"],[1533155346000,"^Q"],["^12","rewrite_clj/node/fn.cljs"],[1533155355000,"^Q","^P","^1G","~$clojure.walk"],["^12","rewrite_clj/node.cljs"],[1533155355000,"^Q","^P","~$rewrite-clj.node.coercer","^1G","^27","^2>","^1T","^2?","^25","^26","^2;","^29","^2=","^28","^2:","^2<"],["^12","goog/string/stringbuffer.js"],[1533155346000,"^Q"],["^12","cljs/tools/reader/reader_types.cljs"],[1533235982000,"^Q","^P","^1N","^1J","^1Q"],["^12","goog/iter/iter.js"],[1533155346000,"^Q","^1K","^1L","~$goog.functions","~$goog.math"],["^12","rewrite_clj/reader.cljs"],[1533155355000,"^Q","^P","^1X","^1M","^1O","^1J","^1G"],["^12","rewrite_clj/node/quote.cljs"],[1533155355000,"^Q","^P","^1G"],["^12","cljs/tools/reader/impl/commons.cljs"],[1533235982000,"^Q","^P","^1P","^1M","^1N"],["^12","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^1J","^1W","^1K","~$goog.Uri","^1Q"],["^12","goog/math/integer.js"],[1533155346000,"^Q"],["^12","goog/uri/utils.js"],[1533155346000,"^Q","^1K","^1L","^1J"],["^12","rewrite_clj/parser/whitespace.cljs"],[1533155355000,"^Q","^P","^M","^O"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","~$r","^O","^P","^P","^Q","^Q"],"^R",["^F",["^S"]],"^T",null,"~:defs",["^ ","~$parse-whitespace",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",5,"^8",7,"^9",5,"^:",23,"~:arglists",["^W",["~$quote",["^W",[["~$reader"]]]]],"~:doc","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."],"^G","~$rewrite-clj.parser.whitespace/parse-whitespace","~:variadic",false,"^6","rewrite_clj/parser/whitespace.cljs","^:",23,"~:method-params",["^W",[["^2M"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"^7",5,"^9",5,"~:max-fixed-arity",1,"~:fn-var",true,"^2K",["^W",["^2L",["^W",[["^2M"]]]]],"^2N","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."]],"^U",["^ ","^P","^P"],"^Z",["^ ","^S",["^F",[]]],"^[",["^ "],"^10",["^Q","^P","^M","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1F",[["^2X","~:static-fns"],true,["^2X","~:elide-asserts"],false,["^2X","~:optimize-constants"],null,["^2X","~:external-config"],null,["^2X","~:tooling-config"],null,["^2X","~:emit-constants"],null,["^2X","~:infer-externs"],true,["^2X","^17"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2X","~:fn-invoke-direct"],null,["^2X","^19"],"/dev/null"]]]