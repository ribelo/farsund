["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.metamorphic');\ngoog.require('cljs.core');\n/**\n * Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\n */\nday8.re_frame_10x.metamorphic.id_between_xf = (function day8$re_frame_10x$metamorphic$id_between_xf(beginning,ending){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__46960_SHARP_){\nreturn (((beginning <= new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__46960_SHARP_))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(p1__46960_SHARP_) <= ending)));\n}));\n});\nday8.re_frame_10x.metamorphic.fsm_trigger_QMARK_ = (function day8$re_frame_10x$metamorphic$fsm_trigger_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.elapsed_time = (function day8$re_frame_10x$metamorphic$elapsed_time(ev1,ev2){\nvar start_of_epoch = new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(ev1);\nvar end_of_epoch = new cljs.core.Keyword(null,\"end\",\"end\",-268185958).cljs$core$IFn$_invoke$arity$1(ev2);\nif(((!((start_of_epoch == null))) && (!((end_of_epoch == null))))){\nreturn (end_of_epoch - start_of_epoch);\n} else {\nreturn null;\n}\n});\nday8.re_frame_10x.metamorphic.run_queue_QMARK_ = (function day8$re_frame_10x$metamorphic$run_queue_QMARK_(event){\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"scheduled\",\"scheduled\",553898551),new cljs.core.Keyword(null,\"run-queue\",\"run-queue\",-1701798027)], null));\n} else {\nreturn and__3938__auto__;\n}\n});\nday8.re_frame_10x.metamorphic.request_animation_frame_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf\",\"raf\",-1295410152),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.request_animation_frame_end_QMARK_ = (function day8$re_frame_10x$metamorphic$request_animation_frame_end_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"raf-end\",\"raf-end\",-220596864),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.summarise_event = (function day8$re_frame_10x$metamorphic$summarise_event(ev){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(ev,new cljs.core.Keyword(null,\"start\",\"start\",-355208981),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),new cljs.core.Keyword(null,\"end\",\"end\",-268185958),new cljs.core.Keyword(null,\"child-of\",\"child-of\",-903376662)], 0)),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.dissoc,new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964),new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951)], 0));\n});\nday8.re_frame_10x.metamorphic.summarise_match = (function day8$re_frame_10x$metamorphic$summarise_match(match){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.summarise_event,match);\n});\nday8.re_frame_10x.metamorphic.beginning_id = (function day8$re_frame_10x$metamorphic$beginning_id(match){\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\n});\nday8.re_frame_10x.metamorphic.ending_id = (function day8$re_frame_10x$metamorphic$ending_id(match){\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\n});\nday8.re_frame_10x.metamorphic.add_event_from_idle_QMARK_ = (function day8$re_frame_10x$metamorphic$add_event_from_idle_QMARK_(event){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"re-frame.router\",\"fsm-trigger\",\"re-frame.router/fsm-trigger\",1379787274),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"idle\",\"idle\",-2007156861),new cljs.core.Keyword(null,\"add-event\",\"add-event\",938429088)], null))));\n});\nday8.re_frame_10x.metamorphic.subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_QMARK_(trace){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"sub\",cljs.core.namespace(new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\n});\nday8.re_frame_10x.metamorphic.subscription_created_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_created_QMARK_(trace){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace))) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880)], null)))));\n});\nday8.re_frame_10x.metamorphic.subscription_re_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_re_run_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.subscription_destroyed_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_destroyed_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.subscription_not_run_QMARK_ = (function day8$re_frame_10x$metamorphic$subscription_not_run_QMARK_(trace){\nreturn false;\n});\n/**\n * Is this part of re-frame internals?\n */\nday8.re_frame_10x.metamorphic.low_level_re_frame_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_re_frame_trace_QMARK_(trace){\nvar G__46967 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\nvar G__46967__$1 = (((G__46967 instanceof cljs.core.Keyword))?G__46967.fqn:null);\nswitch (G__46967__$1) {\ncase \"re-frame.router/fsm-trigger\":\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\n/**\n * Is this part of reagent internals?\n */\nday8.re_frame_10x.metamorphic.low_level_reagent_trace_QMARK_ = (function day8$re_frame_10x$metamorphic$low_level_reagent_trace_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.render_QMARK_ = (function day8$re_frame_10x$metamorphic$render_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.unchanged_l2_subscription_QMARK_ = (function day8$re_frame_10x$metamorphic$unchanged_l2_subscription_QMARK_(sub){\nvar and__3938__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null));\nif(cljs.core.truth_(and__3938__auto__)){\nreturn ((cljs.core.not_any_QMARK_(((function (and__3938__auto__){\nreturn (function (p1__46974_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),p1__46974_SHARP_);\n});})(and__3938__auto__))\n,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256).cljs$core$IFn$_invoke$arity$1(sub))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.get.cljs$core$IFn$_invoke$arity$2(sub,new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)))));\n} else {\nreturn and__3938__auto__;\n}\n});\n/**\n * Marks the end of event processing running.\n */\nday8.re_frame_10x.metamorphic.finish_run_QMARK_ = (function day8$re_frame_10x$metamorphic$finish_run_QMARK_(event){\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.fsm_trigger_QMARK_(event);\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(event),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"running\",\"running\",1554969103),new cljs.core.Keyword(null,\"finish-run\",\"finish-run\",753148477)], null));\n} else {\nreturn and__3938__auto__;\n}\n});\nday8.re_frame_10x.metamorphic.event_run_QMARK_ = (function day8$re_frame_10x$metamorphic$event_run_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.event_handler_QMARK_ = (function day8$re_frame_10x$metamorphic$event_handler_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"handler\",\"event/handler\",-295903150),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\nday8.re_frame_10x.metamorphic.event_dofx_QMARK_ = (function day8$re_frame_10x$metamorphic$event_dofx_QMARK_(trace){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace));\n});\n/**\n * Detects the start of a re-frame epoch\n * \n *   Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\n */\nday8.re_frame_10x.metamorphic.start_of_epoch_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_QMARK_(event){\nvar or__3949__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\n}\n});\n/**\n * Detects that a new epoch has started and that the previous one ended on the previous event.\n * \n *   If multiple events are dispatched while processing the first event, each one is considered its\n *   own epoch.\n */\nday8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_ = (function day8$re_frame_10x$metamorphic$start_of_epoch_and_prev_end_QMARK_(event,state){\nvar or__3949__auto__ = day8.re_frame_10x.metamorphic.run_queue_QMARK_(event);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar and__3938__auto__ = day8.re_frame_10x.metamorphic.event_run_QMARK_(event);\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core.not(day8.re_frame_10x.metamorphic.run_queue_QMARK_(new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state)));\n} else {\nreturn and__3938__auto__;\n}\n}\n});\nday8.re_frame_10x.metamorphic.quiescent_QMARK_ = (function day8$re_frame_10x$metamorphic$quiescent_QMARK_(event){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"reagent\",\"quiescent\",\"reagent/quiescent\",-16138681),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(event));\n});\nday8.re_frame_10x.metamorphic.initial_parse_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null,new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),null,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.PersistentVector.EMPTY], null);\nday8.re_frame_10x.metamorphic.initial_sub_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),(0),new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),cljs.core.PersistentArrayMap.EMPTY], null);\nday8.re_frame_10x.metamorphic.parse_traces = (function day8$re_frame_10x$metamorphic$parse_traces(parse_state,traces){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,event){\nvar current_match = new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177).cljs$core$IFn$_invoke$arity$1(state);\nvar previous_event = new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509).cljs$core$IFn$_invoke$arity$1(state);\nvar no_match_QMARK_ = (current_match == null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(((no_match_QMARK_)?(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):state):(cljs.core.truth_(day8.re_frame_10x.metamorphic.quiescent_QMARK_(event))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),null):(cljs.core.truth_(day8.re_frame_10x.metamorphic.start_of_epoch_and_prev_end_QMARK_(event,state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"partitions\",\"partitions\",602979514),cljs.core.conj,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current_match,previous_event)),new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [event], null)):(cljs.core.truth_(day8.re_frame_10x.metamorphic.event_run_QMARK_(event))?cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(null,\"current-match\",\"current-match\",-551498177),cljs.core.conj,event):state\n)))),new cljs.core.Keyword(null,\"previous-event\",\"previous-event\",-726928509),event);\n}),parse_state,traces);\n});\nday8.re_frame_10x.metamorphic.matched_event = (function day8$re_frame_10x$metamorphic$matched_event(match){\nreturn cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.event_run_QMARK_,match));\n});\nday8.re_frame_10x.metamorphic.app_db_after = (function day8$re_frame_10x$metamorphic$app_db_after(event_trace){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-after\",\"app-db-after\",1477492964)], null));\n});\nday8.re_frame_10x.metamorphic.app_db_before = (function day8$re_frame_10x$metamorphic$app_db_before(event_trace){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(event_trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"app-db-before\",\"app-db-before\",-1442902645)], null));\n});\n/**\n * Collect information about the subscription that we'd like\n *   to know, like its layer.\n */\nday8.re_frame_10x.metamorphic.subscription_info = (function day8$re_frame_10x$metamorphic$subscription_info(initial_state,filtered_traces,app_db_id){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (state,trace){\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310).cljs$core$IFn$_invoke$arity$1(trace),new cljs.core.Keyword(null,\"layer\",\"layer\",-1601820589)], null),(cljs.core.truth_(cljs.core.some((function (p1__46981_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(app_db_id,p1__46981_SHARP_);\n}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497)], null))))?(2):(3)));\n}),initial_state,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.subscription_re_run_QMARK_,filtered_traces));\n});\n/**\n * Remove information about the subscription that is transient and specific to a single\n *   phase.\n */\nday8.re_frame_10x.metamorphic.reset_sub_state = (function day8$re_frame_10x$metamorphic$reset_sub_state(state){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (me){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522).cljs$core$IFn$_invoke$arity$1(cljs.core.val(me)))){\nreturn null;\n} else {\nreturn me;\n}\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__46983){\nvar vec__46984 = p__46983;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46984,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46984,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(v,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"created?\",\"created?\",850508195),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522),new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671)], 0))], null);\n}))),state);\n});\nday8.re_frame_10x.metamorphic.process_sub_traces = (function day8$re_frame_10x$metamorphic$process_sub_traces(initial_state,traces){\nvar first_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (init_state,trace){\nvar tags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(trace,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977));\nvar reaction_id = new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788).cljs$core$IFn$_invoke$arity$1(tags);\nvar state = cljs.core.assoc_in(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(init_state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\nvar new_state = (function (){var G__46989 = new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668).cljs$core$IFn$_invoke$arity$1(trace);\nvar G__46989__$1 = (((G__46989 instanceof cljs.core.Keyword))?G__46989.fqn:null);\nswitch (G__46989__$1) {\ncase \"sub/create\":\nreturn cljs.core.assoc_in(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"created?\",\"created?\",850508195)], null),true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182)], null),new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131).cljs$core$IFn$_invoke$arity$1(tags));\n\nbreak;\ncase \"sub/run\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(state,reaction_id,((function (G__46989,G__46989__$1,tags,reaction_id,state){\nreturn (function (sub_state){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state)):sub_state),new cljs.core.Keyword(null,\"run?\",\"run?\",752622859),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(tags)], 0));\n});})(G__46989,G__46989__$1,tags,reaction_id,state))\n);\n\nbreak;\ncase \"sub/dispose\":\nreturn cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reaction_id,new cljs.core.Keyword(null,\"disposed?\",\"disposed?\",1178302522)], null),true);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__46989__$1)].join('')));\n\n}\n})();\nif(cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id),new cljs.core.Keyword(null,\"subscription\",\"subscription\",1949009182))){\n} else {\nconsole.warn(trace,cljs.core.get.cljs$core$IFn$_invoke$arity$2(new_state,reaction_id));\n}\n\nreturn new_state;\n}),initial_state,traces);\nvar second_pass = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (first_pass){\nreturn (function (all_state,p__46990){\nvar vec__46991 = p__46990;\nvar sub_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46991,(0),null);\nvar sub_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46991,(1),null);\nif(((cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677))) && (cljs.core.contains_QMARK_(sub_state,new cljs.core.Keyword(null,\"value\",\"value\",305978217))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"previous-value\",\"previous-value\",-1638799677).cljs$core$IFn$_invoke$arity$1(sub_state),new cljs.core.Keyword(null,\"value\",\"value\",305978217).cljs$core$IFn$_invoke$arity$1(sub_state))))){\nreturn cljs.core.assoc_in(all_state,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sub_id,new cljs.core.Keyword(\"sub\",\"traits\",\"sub/traits\",1778340671),new cljs.core.Keyword(null,\"unchanged?\",\"unchanged?\",1212001763)], null),true);\n} else {\nreturn all_state;\n}\n});})(first_pass))\n,first_pass,first_pass);\nreturn second_pass;\n});\n/**\n * Build up the state of re-frame's running subscriptions over each matched epoch.\n *   Returns initial state as first item in list\n */\nday8.re_frame_10x.metamorphic.subscription_match_state = (function day8$re_frame_10x$metamorphic$subscription_match_state(sub_state,filtered_traces,new_matches){\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((function (state,match){\nvar previous_id = new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515).cljs$core$IFn$_invoke$arity$1(state);\nvar first_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.first(match));\nvar last_match_id = new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(cljs.core.last(match));\nvar pre_epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf((previous_id + (1)),(first_match_id - (1))),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\nvar epoch_traces = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.metamorphic.id_between_xf(first_match_id,last_match_id),cljs.core.filter.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.metamorphic.subscription_QMARK_)),filtered_traces);\nvar reaction_state = new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039).cljs$core$IFn$_invoke$arity$1(state);\nvar pre_epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(reaction_state),pre_epoch_traces);\nvar epoch_state = day8.re_frame_10x.metamorphic.process_sub_traces(day8.re_frame_10x.metamorphic.reset_sub_state(pre_epoch_state),epoch_traces);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"pre-epoch-state\",\"pre-epoch-state\",834094164),pre_epoch_state,new cljs.core.Keyword(null,\"reaction-state\",\"reaction-state\",958292039),epoch_state,new cljs.core.Keyword(null,\"first-matched-id\",\"first-matched-id\",-1052882417),first_match_id,new cljs.core.Keyword(null,\"last-matched-id\",\"last-matched-id\",1192489515),last_match_id,new cljs.core.Keyword(null,\"previous-matched-id\",\"previous-matched-id\",888670192),previous_id], null);\n}),sub_state,new_matches);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/metamorphic.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.metamorphic","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^M","~$goog","^N"],"~:seen",["^F",[]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^H"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^N","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/metamorphic.cljc"],"~:compiled-at",1537561403020,"~:resource-name","day8/re_frame_10x/metamorphic.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.metamorphic)\n\n(defn id-between-xf\n  ;; Copied here because I got undeclared Var warnings from figwheel when requiring a CLJC utils ns.\n  \"Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n;; What starts an epoch?\n\n;;; idle -> dispatch -> running\n;;; running -> dispatch -> handling new event\n\n;; What ends an epoch?\n\n;;; the start of a new epoch\n;;; a Reagent animation frame ending AND nothing else being scheduled\n\n;; Slight wrinkles\n\n;;; Any renders that run between epochs deserve their own epoch really.\n;;; Dispatch-sync's\n\n;;;\n\n;\n;(defn add-event-from-idle? [event history pattern-sequence pattern]\n;  #_(println @history event)\n;\n;  (and (= :re-frame.router/fsm-trigger (:op-type event))\n;       (= (:operation event)\n;          [:idle :add-event])))\n;\n;(defn event-run? [event history pattern-sequence pattern]\n;  (= :event (:op-type event)))\n;\n;(defn epoch-started? [event history pattern-sequence pattern]\n;  (or (add-event-from-idle? event history pattern-sequence pattern)\n;      (and (event-run? event history pattern-sequence pattern)\n;           (empty? @history))))\n;\n(defn fsm-trigger? [event]\n  (= :re-frame.router/fsm-trigger (:op-type event)))\n;\n;(defn redispatched-event? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :add-event])))\n;\n;(defn router-scheduled? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :scheduled (get-in event [:tags :new-state]))))\n;\n;(defn router-finished? [event history pattern-sequence pattern]\n;  (and (fsm-trigger? event)\n;       (= (:operation event)\n;          [:running :finish-run])\n;       (= :running (get-in event [:tags :current-state]))\n;       (= :idle (get-in event [:tags :new-state]))))\n;\n;(defn quiescent? [event _ _ _]\n;  (= :reagent/quiescent (:op-type event)))\n;\n;(defn epoch-ended? [event history pattern-sequence pattern]\n;  (or (quiescent? event history pattern-sequence pattern)\n;      (epoch-started? event history pattern-sequence pattern)))\n;\n\n(defn elapsed-time [ev1 ev2]\n  (let [start-of-epoch (:start ev1)\n        end-of-epoch   (:end ev2)]\n    (when (and (some? start-of-epoch) (some? end-of-epoch))\n      (- end-of-epoch start-of-epoch))))\n\n(defn run-queue? [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:scheduled :run-queue])))\n\n(defn request-animation-frame? [event]\n  (= :raf (:op-type event)))\n\n(defn request-animation-frame-end? [event]\n  (= :raf-end (:op-type event)))\n\n(defn summarise-event [ev]\n  (-> ev\n      (dissoc :start :duration :end :child-of)\n      (update :tags dissoc :app-db-before :app-db-after :effects :coeffects :interceptors)))\n\n\n(defn summarise-match [match]\n  (map summarise-event match))\n;\n(defn beginning-id [match]\n  (:id (first match)))\n\n(defn ending-id [match]\n  (:id (last match)))\n;\n;(defn parse-traces-metam\n;  \"Returns a metamorphic runtime\"\n;  [traces]\n;  (let [runtime (-> (m/new-pattern-sequence \"simple traces\")\n;                    (m/begin \"new-epoch-started\" epoch-started?)\n;                    #_(m/followed-by \"run-queue\" run-queue? {:optional? true})\n;                    ;(m/followed-by \"event-run\" event-run?)\n;                    #_(m/followed-by \"router-finished\" router-finished?)\n;                    ;(m/followed-by \"raf\" request-animation-frame?)\n;                    ;(m/followed-by \"raf-end\" request-animation-frame-end?)\n;                    (m/followed-by \"epoch-ended\" epoch-ended?)\n;                    (rt/initialize-runtime))\n;        rt      (reduce rt/evaluate-event runtime traces)]\n;    #_(println \"Count\"\n;               (count (:matches rt))\n;               (map count (:matches rt)))\n;    #_(map summarise-match (:matches rt))\n;    rt))\n\n;;;;;;\n\n;; TODO: this needs to be included too as a starting point.\n(defn add-event-from-idle? [event]\n  (and (= :re-frame.router/fsm-trigger (:op-type event))\n       (= (:operation event)\n          [:idle :add-event])))\n\n(defn subscription? [trace]\n  (and (= \"sub\" (namespace (:op-type trace)))\n       ;; TODO: should we remove cached checks?\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-created? [trace]\n  (and (= :sub/create (:op-type trace))\n       (not (get-in trace [:tags :cached?]))))\n\n(defn subscription-re-run? [trace]\n  (= :sub/run (:op-type trace)))\n\n(defn subscription-destroyed? [trace]\n  (= :sub/dispose (:op-type trace)))\n\n(defn subscription-not-run? [trace]\n  false)\n\n(defn low-level-re-frame-trace?\n  \"Is this part of re-frame internals?\"\n  [trace]\n  (case (:op-type trace)\n    (:re-frame.router/fsm-trigger) true\n    false))\n\n(defn low-level-reagent-trace?\n  \"Is this part of reagent internals?\"\n  [trace]\n  (= :componentWillUnmount (:op-type trace)))\n\n(defn render? [trace]\n  (= :render (:op-type trace)))\n\n(defn unchanged-l2-subscription? [sub]\n  (and (get-in sub [:sub/traits :unchanged?])\n       (not-any? #(= :sub/dispose %) (:order sub))\n       (= 2 (get sub :layer))))\n\n\n(defn finish-run?\n  \"Marks the end of event processing running.\"\n  [event]\n  (and (fsm-trigger? event)\n       (= (:operation event)\n          [:running :finish-run])))\n\n(defn event-run? [event]\n  (= :event (:op-type event)))\n\n(defn event-handler? [trace]\n  (= :event/handler (:op-type trace)))\n\n(defn event-dofx? [trace]\n  (= :event/do-fx (:op-type trace)))\n\n(defn start-of-epoch?\n  \"Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly.\"\n  [event]\n  (or (run-queue? event)\n      (event-run? event)))\n\n(defn start-of-epoch-and-prev-end?\n  \"Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch.\"\n  [event state]\n  (or (run-queue? event)\n      ;; An event ran, and the previous event was not\n      ;; a run-queue.\n      (and (event-run? event)\n           (not (run-queue? (:previous-event state))))))\n\n(defn quiescent? [event]\n  (= :reagent/quiescent (:op-type event)))\n\n(def initial-parse-state\n  {:current-match  nil\n   :previous-event nil\n   :partitions     []})\n\n(def initial-sub-state\n  {:last-matched-id 0\n   :pre-epoch-state {}\n   :reaction-state  {}})\n\n(defn parse-traces [parse-state traces]\n  (reduce\n    (fn [state event]\n      (let [current-match  (:current-match state)\n            previous-event (:previous-event state)\n            no-match?      (nil? current-match)]\n        (-> (cond\n\n              ;; No current match yet, check if this is the start of an epoch\n              no-match?\n              (if (start-of-epoch? event)\n                (assoc state :current-match [event])\n                state)\n\n              ;; We are in an epoch match, and reagent has gone to a quiescent state\n              (quiescent? event)\n              (-> state\n                  (update :partitions conj (conj current-match event))\n                  (assoc :current-match nil))\n\n              ;; We are in an epoch match, and we have started a new epoch\n              ;; The previously seen event was the last event of the old epoch,\n              ;; and we need to start a new one from this event.\n              (start-of-epoch-and-prev-end? event state)\n              (-> state\n                  (update :partitions conj (conj current-match previous-event))\n                  (assoc :current-match [event]))\n\n              (event-run? event)\n              (update state :current-match conj event)\n\n\n              :else\n              state\n              ;; Add a timeout/warning if a match goes on for more than a second?\n\n              )\n            (assoc :previous-event event))))\n    parse-state\n    traces))\n\n(defn matched-event [match]\n  (->> match\n       (filter event-run?)\n       (first)))\n\n(defn app-db-after [event-trace]\n  (get-in event-trace [:tags :app-db-after]))\n\n(defn app-db-before [event-trace]\n  (get-in event-trace [:tags :app-db-before]))\n\n(defn subscription-info\n  \"Collect information about the subscription that we'd like\n  to know, like its layer.\"\n  [initial-state filtered-traces app-db-id]\n  (->> filtered-traces\n       (filter subscription-re-run?)\n       (reduce (fn [state trace]\n                 ;; Can we take any shortcuts by assuming that a sub with\n                 ;; multiple input signals is a layer 3? I don't *think* so because\n                 ;; one of those input signals could be a naughty subscription to app-db\n                 ;; directly.\n                 ;; If we knew when subscription handlers were loaded/reloaded then\n                 ;; we could avoid doing most of this work, and only check the input\n                 ;; signals if we hadn't seen it before, or it had been reloaded.\n                 (assoc-in state\n                           [(:operation trace) :layer]\n                           ;; If any of the input signals are app-db, it is a layer 2 sub, else 3\n                           (if (some #(= app-db-id %) (get-in trace [:tags :input-signals]))\n                             2\n                             3)))\n               initial-state)))\n\n(defn reset-sub-state\n  \"Remove information about the subscription that is transient and specific to a single\n  phase.\"\n  [state]\n  (into {}\n        (comp\n          ;; Remove disposed subscriptions\n          (filter (fn [me] (when-not (:disposed? (val me)) me)))\n          ;; Remove transient state\n          (map (fn [[k v]]\n                 [k (dissoc v :order :created? :run? :disposed? :previous-value :sub/traits)])))\n        state))\n\n\n\n(defn process-sub-traces\n  [initial-state traces]\n  (let [first-pass  (reduce (fn [init-state trace]\n                              (let [tags        (get trace :tags)\n                                    reaction-id (:reaction tags)\n                                    state       (-> init-state\n                                                    (update-in [reaction-id :order] (fnil conj []) (:op-type trace))\n                                                    ;; In a perfect world we could provide this only in the :sub/create branch, but we have\n                                                    ;; zombie reactions roaming the DOM, so we re-add it on every trace in case a sub was\n                                                    ;; disposed of previously (and removed from the sub state).\n                                                    (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                    new-state\n                                                (case (:op-type trace)\n                                                  :sub/create (-> state\n                                                                  (assoc-in [reaction-id :created?] true)\n                                                                  (assoc-in [reaction-id :subscription] (:query-v tags)))\n                                                  :sub/run (update state reaction-id (fn [sub-state]\n                                                                                       ;; TODO: should we keep track of subscriptions that have been disposed\n                                                                                       ;; so we can detect zombies?\n\n                                                                                       ;; TODO: this should only update once per phase, even if a sub runs multiple times\n                                                                                       (-> (if (contains? sub-state :value)\n                                                                                             (assoc sub-state :previous-value (:value sub-state))\n                                                                                             sub-state)\n                                                                                           (assoc :run? true\n                                                                                                  :value (:value tags)))))\n                                                  :sub/dispose (assoc-in state [reaction-id :disposed?] true))]\n                                (when-not (contains? (get new-state reaction-id) :subscription)\n                                  #?(:cljs (js/console.warn trace (get new-state reaction-id))))\n\n\n                                new-state))\n                            initial-state\n                            traces)\n        second-pass (reduce (fn [all-state [sub-id sub-state]]\n                              ;; TODO: integrate this into the first pass for efficiency\n                              (if (and (contains? sub-state :previous-value)\n                                       (contains? sub-state :value)\n                                       (= (:previous-value sub-state) (:value sub-state)))\n                                (assoc-in all-state [sub-id :sub/traits :unchanged?] true)\n                                all-state))\n                            first-pass\n                            first-pass)]\n    second-pass))\n\n(defn subscription-match-state\n  \"Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list\"\n  [sub-state filtered-traces new-matches]\n  ;; For each match that we process there are two phases:\n  ;; - Phase 1: Update and collect the state of the subscriptions that have trace between the last epoch\n  ;;   and the new epoch. These traces can be from hover state, local ratom events, figwheel re-renders\n  ;;   or rft resetting app-db. Most of the time these traces are noisy and not interesting, but we do\n  ;;   need to use them to maintain our subscription state. We also want to show them down below the main\n  ;;   subs, in case someone is wondering where they went. If there are no sub traces to process then\n  ;;   this phase doesn't run.\n  ;; - Phase 2: Update and collect the state of the subscription traces within an epoch. These subscription\n  ;;   traces are going to be changing because of app-db changes.\n  ;; We collect and present the state for both phases for consumption in the subs panel\n\n  ;; If you look closely at the state of the subscriptions, and the traces they derive from, you will\n  ;; come to a disturbing realisation: Disposed reactions are resurrected and continue to be run.\n  ;; This is tracked in https://github.com/reagent-project/reagent/pull/270.\n\n  ;#?(:cljs (js/console.log \"New matches?\" (not (empty? new-matches))))\n  (reductions (fn [state match]\n                (let [previous-id      (:last-matched-id state)\n                      first-match-id   (:id (first match))\n                      last-match-id    (:id (last match))\n                      pre-epoch-traces (into []\n                                             (comp\n                                               (id-between-xf (inc previous-id)\n                                                              (dec first-match-id))\n                                               (filter subscription?))\n                                             filtered-traces)\n                      epoch-traces     (into []\n                                             (comp\n                                               (id-between-xf first-match-id last-match-id)\n                                               (filter subscription?))\n                                             filtered-traces)\n                      reaction-state   (:reaction-state state)\n                      pre-epoch-state  (-> reaction-state\n                                           (reset-sub-state)\n                                           (process-sub-traces pre-epoch-traces))\n                      epoch-state      (-> pre-epoch-state\n                                           (reset-sub-state)\n                                           (process-sub-traces epoch-traces))]\n                  {:pre-epoch-state     pre-epoch-state\n                   :reaction-state      epoch-state\n                   :first-matched-id    first-match-id\n                   :last-matched-id     last-match-id\n                   :previous-matched-id previous-id}))\n              sub-state\n              new-matches))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i2",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^15",46,"^16",5],["^ ","^15",0,"^16",6]],"~i6",[["^ ","^15",0,"^16",5,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]]],"~i5",["^ ","~i3",[["^ ","^15",100,"^16",5,"^G","beginning"]],"~i13",[["^ ","^15",110,"^16",5,"^G","ending"]]],"~i6",["^ ","~i2",[["^ ","^15",0,"^16",6],["^ ","^15",54,"^16",6],["^ ","^15",65,"^16",6,"^G","p1__46960#"],["^ ","^15",0,"^16",7]],"~i3",[["^ ","^15",7,"^16",6,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"~i11",[["^ ","^15",0,"^16",7],["^ ","^15",9,"^16",7],["^ ","^15",127,"^16",7]],"~i15",[["^ ","^15",10,"^16",7,"^G","beginning"]],"~i25",[["^ ","^15",23,"^16",7],["^ ","^15",23,"^16",7],["^ ","^15",103,"^16",7,"^G","p1__46960#"],["^ ","^15",128,"^16",7],["^ ","^15",128,"^16",7],["^ ","^15",208,"^16",7,"^G","p1__46960#"]],"~i33",[["^ ","^15",229,"^16",7,"^G","ending"]]],"~i41",["^ ","~i0",[["^ ","^15",0,"^16",10],["^ ","^15",51,"^16",10],["^ ","^15",0,"^16",11]],"~i6",[["^ ","^15",0,"^16",10,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i20",[["^ ","^15",110,"^16",10,"^G","event"]]],"~i42",["^ ","~i2",[["^ ","^15",0,"^16",11],["^ ","^15",52,"^16",11]],"~i3",[["^ ","^15",7,"^16",11,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i34",[["^ ","^15",148,"^16",11],["^ ","^15",148,"^16",11]],"~i44",[["^ ","^15",238,"^16",11,"^G","event"]]],"~i71",["^ ","~i0",[["^ ","^15",0,"^16",13],["^ ","^15",45,"^16",13],["^ ","^15",0,"^16",14]],"~i6",[["^ ","^15",0,"^16",13,"^G","day8.re-frame-10x.metamorphic/elapsed-time"]],"^1=",[["^ ","^15",98,"^16",13,"^G","ev1"]],"~i24",[["^ ","^15",102,"^16",13,"^G","ev2"]]],"~i72",["^ ","~i2",[["^ ","^15",0,"^16",14],["^ ","^15",0,"^16",16]],"~i8",[["^ ","^15",4,"^16",14,"^G","start-of-epoch"]],"~i23",[["^ ","^15",21,"^16",14],["^ ","^15",21,"^16",14]],"~i31",[["^ ","^15",106,"^16",14,"^G","ev1"]]],"~i73",["^ ","~i8",[["^ ","^15",4,"^16",15,"^G","end-of-epoch"]],"^1D",[["^ ","^15",19,"^16",15],["^ ","^15",19,"^16",15]],"~i29",[["^ ","^15",100,"^16",15,"^G","ev2"]]],"~i74",["^ ","~i4",[["^ ","^15",0,"^16",16],["^ ","^15",0,"^16",17],["^ ","^15",0,"^16",19]],"~i10",[["^ ","^15",3,"^16",16]],"^19",[["^ ","^15",5,"^16",16],["^ ","^15",7,"^16",16],["^ ","^15",26,"^16",16]],"~i22",[["^ ","^15",8,"^16",16,"^G","start-of-epoch"]],"~i38",[["^ ","^15",38,"^16",16],["^ ","^15",40,"^16",16],["^ ","^15",57,"^16",16]],"~i45",[["^ ","^15",41,"^16",16,"^G","end-of-epoch"]]],"~i75",["^ ","~i6",[["^ ","^15",0,"^16",17]],"~i9",[["^ ","^15",8,"^16",17,"^G","end-of-epoch"]],"^1J",[["^ ","^15",23,"^16",17,"^G","start-of-epoch"]]],"~i77",["^ ","~i0",[["^ ","^15",0,"^16",22],["^ ","^15",49,"^16",22],["^ ","^15",0,"^16",23]],"~i6",[["^ ","^15",0,"^16",22,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"~i18",[["^ ","^15",106,"^16",22,"^G","event"]]],"~i78",["^ ","~i2",[["^ ","^15",0,"^16",23],["^ ","^15",4,"^16",23,"^G","and__3938__auto__"],["^ ","^15",0,"^16",24],["^ ","^15",0,"^16",24],["^ ","^15",20,"^16",24,"^G","and__3938__auto__"],["^ ","^15",0,"^16",27,"^G","and__3938__auto__"]],"~i7",[["^ ","^15",24,"^16",23]],"~i8",[["^ ","^15",24,"^16",23,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"~i21",[["^ ","^15",73,"^16",23,"^G","event"]]],"~i79",["^ ","~i7",[["^ ","^15",0,"^16",25],["^ ","^15",153,"^16",25],["^ ","^15",236,"^16",25],["^ ","^15",298,"^16",25]],"~i8",[["^ ","^15",7,"^16",25,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",52,"^16",25],["^ ","^15",52,"^16",25]],"^1J",[["^ ","^15",146,"^16",25,"^G","event"]]],"~i82",["^ ","~i0",[["^ ","^15",0,"^16",30],["^ ","^15",63,"^16",30],["^ ","^15",0,"^16",31]],"~i6",[["^ ","^15",0,"^16",30,"^G","day8.re-frame-10x.metamorphic/request-animation-frame?"]],"~i32",[["^ ","^15",134,"^16",30,"^G","event"]]],"~i83",["^ ","~i2",[["^ ","^15",0,"^16",31],["^ ","^15",52,"^16",31]],"~i3",[["^ ","^15",7,"^16",31,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",104,"^16",31],["^ ","^15",104,"^16",31]],"^1=",[["^ ","^15",194,"^16",31,"^G","event"]]],"~i85",["^ ","~i0",[["^ ","^15",0,"^16",33],["^ ","^15",67,"^16",33],["^ ","^15",0,"^16",34]],"~i6",[["^ ","^15",0,"^16",33,"^G","day8.re-frame-10x.metamorphic/request-animation-frame-end?"]],"~i36",[["^ ","^15",142,"^16",33,"^G","event"]]],"~i86",["^ ","~i2",[["^ ","^15",0,"^16",34],["^ ","^15",52,"^16",34]],"~i3",[["^ ","^15",7,"^16",34,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i14",[["^ ","^15",111,"^16",34],["^ ","^15",111,"^16",34]],"^1B",[["^ ","^15",201,"^16",34,"^G","event"]]],"~i88",["^ ","~i0",[["^ ","^15",0,"^16",36],["^ ","^15",48,"^16",36],["^ ","^15",0,"^16",37]],"~i6",[["^ ","^15",0,"^16",36,"^G","day8.re-frame-10x.metamorphic/summarise-event"]],"^1D",[["^ ","^15",104,"^16",36,"^G","ev"]]],"~i89",["^ ","~i6",[["^ ","^15",115,"^16",37,"^G","ev"]]],"~i90",["^ ","~i6",[["^ ","^15",61,"^16",37],["^ ","^15",118,"^16",37],["^ ","^15",223,"^16",37],["^ ","^15",284,"^16",37],["^ ","^15",335,"^16",37]],"~i7",[["^ ","^15",61,"^16",37,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i91",["^ ","~i6",[["^ ","^15",0,"^16",37],["^ ","^15",402,"^16",37],["^ ","^15",472,"^16",37],["^ ","^15",544,"^16",37],["^ ","^15",613,"^16",37],["^ ","^15",722,"^16",37],["^ ","^15",784,"^16",37]],"~i7",[["^ ","^15",7,"^16",37,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$variadic"]],"^1=",[["^ ","^15",455,"^16",37,"^G","cljs.core/dissoc"]]],"~i94",["^ ","~i0",[["^ ","^15",0,"^16",39],["^ ","^15",48,"^16",39],["^ ","^15",0,"^16",40]],"~i6",[["^ ","^15",0,"^16",39,"^G","day8.re-frame-10x.metamorphic/summarise-match"]],"^1D",[["^ ","^15",104,"^16",39,"^G","match"]]],"~i95",["^ ","~i2",[["^ ","^15",0,"^16",40]],"~i3",[["^ ","^15",7,"^16",40,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^15",51,"^16",40,"^G","day8.re-frame-10x.metamorphic/summarise-event"]],"^1D",[["^ ","^15",97,"^16",40,"^G","match"]]],"~i97",["^ ","~i0",[["^ ","^15",0,"^16",42],["^ ","^15",45,"^16",42],["^ ","^15",0,"^16",43]],"~i6",[["^ ","^15",0,"^16",42,"^G","day8.re-frame-10x.metamorphic/beginning-id"]],"^1=",[["^ ","^15",98,"^16",42,"^G","match"]]],"~i98",["^ ","~i2",[["^ ","^15",0,"^16",43],["^ ","^15",7,"^16",43]],"~i7",[["^ ","^15",87,"^16",43]],"~i8",[["^ ","^15",87,"^16",43,"^G","cljs.core/first"]],"^1Y",[["^ ","^15",103,"^16",43,"^G","match"]]],"~i100",["^ ","~i0",[["^ ","^15",0,"^16",45],["^ ","^15",42,"^16",45],["^ ","^15",0,"^16",46]],"~i6",[["^ ","^15",0,"^16",45,"^G","day8.re-frame-10x.metamorphic/ending-id"]],"~i17",[["^ ","^15",92,"^16",45,"^G","match"]]],"~i101",["^ ","~i2",[["^ ","^15",0,"^16",46],["^ ","^15",7,"^16",46]],"~i7",[["^ ","^15",87,"^16",46]],"~i8",[["^ ","^15",87,"^16",46,"^G","cljs.core/last"]],"^17",[["^ ","^15",102,"^16",46,"^G","match"]]],"~i125",["^ ","~i0",[["^ ","^15",0,"^16",48],["^ ","^15",59,"^16",48],["^ ","^15",0,"^16",49]],"~i6",[["^ ","^15",0,"^16",48,"^G","day8.re-frame-10x.metamorphic/add-event-from-idle?"]],"~i28",[["^ ","^15",126,"^16",48,"^G","event"]]],"~i126",["^ ","~i2",[["^ ","^15",0,"^16",49]],"~i7",[["^ ","^15",9,"^16",49],["^ ","^15",54,"^16",49]],"~i8",[["^ ","^15",9,"^16",49,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i39",[["^ ","^15",150,"^16",49],["^ ","^15",150,"^16",49]],"~i49",[["^ ","^15",240,"^16",49,"^G","event"]]],"~i127",["^ ","~i7",[["^ ","^15",253,"^16",49],["^ ","^15",399,"^16",49],["^ ","^15",482,"^16",49],["^ ","^15",536,"^16",49]],"~i8",[["^ ","^15",253,"^16",49,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",298,"^16",49],["^ ","^15",298,"^16",49]],"^1J",[["^ ","^15",392,"^16",49,"^G","event"]]],"~i130",["^ ","~i0",[["^ ","^15",0,"^16",51],["^ ","^15",52,"^16",51],["^ ","^15",0,"^16",52]],"~i6",[["^ ","^15",0,"^16",51,"^G","day8.re-frame-10x.metamorphic/subscription?"]],"^1Q",[["^ ","^15",112,"^16",51,"^G","trace"]]],"~i131",["^ ","~i2",[["^ ","^15",0,"^16",52]],"~i7",[["^ ","^15",9,"^16",52],["^ ","^15",54,"^16",52]],"~i8",[["^ ","^15",9,"^16",52,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i16",[["^ ","^15",60,"^16",52]],"^27",[["^ ","^15",60,"^16",52,"^G","cljs.core/namespace"]],"~i27",[["^ ","^15",80,"^16",52],["^ ","^15",80,"^16",52]],"~i37",[["^ ","^15",170,"^16",52,"^G","trace"]]],"~i133",["^ ","~i7",[["^ ","^15",184,"^16",52]],"~i8",[["^ ","^15",184,"^16",52,"^G","cljs.core/not"]],"~i12",[["^ ","^15",198,"^16",52],["^ ","^15",251,"^16",52],["^ ","^15",334,"^16",52],["^ ","^15",387,"^16",52]],"^17",[["^ ","^15",198,"^16",52,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^15",245,"^16",52,"^G","trace"]]],"~i135",["^ ","~i0",[["^ ","^15",0,"^16",54],["^ ","^15",60,"^16",54],["^ ","^15",0,"^16",55]],"~i6",[["^ ","^15",0,"^16",54,"^G","day8.re-frame-10x.metamorphic/subscription-created?"]],"^1G",[["^ ","^15",128,"^16",54,"^G","trace"]]],"~i136",["^ ","~i2",[["^ ","^15",0,"^16",55]],"~i7",[["^ ","^15",9,"^16",55],["^ ","^15",54,"^16",55]],"~i8",[["^ ","^15",9,"^16",55,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1J",[["^ ","^15",117,"^16",55],["^ ","^15",117,"^16",55]],"^1T",[["^ ","^15",207,"^16",55,"^G","trace"]]],"~i137",["^ ","~i7",[["^ ","^15",220,"^16",55]],"~i8",[["^ ","^15",220,"^16",55,"^G","cljs.core/not"]],"^2E",[["^ ","^15",234,"^16",55],["^ ","^15",287,"^16",55],["^ ","^15",370,"^16",55],["^ ","^15",423,"^16",55]],"^17",[["^ ","^15",234,"^16",55,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^15",281,"^16",55,"^G","trace"]]],"~i139",["^ ","~i0",[["^ ","^15",0,"^16",57],["^ ","^15",59,"^16",57],["^ ","^15",0,"^16",58]],"~i6",[["^ ","^15",0,"^16",57,"^G","day8.re-frame-10x.metamorphic/subscription-re-run?"]],"^2:",[["^ ","^15",126,"^16",57,"^G","trace"]]],"~i140",["^ ","~i2",[["^ ","^15",0,"^16",58],["^ ","^15",52,"^16",58]],"~i3",[["^ ","^15",7,"^16",58,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1Y",[["^ ","^15",109,"^16",58],["^ ","^15",109,"^16",58]],"^1B",[["^ ","^15",199,"^16",58,"^G","trace"]]],"~i142",["^ ","~i0",[["^ ","^15",0,"^16",60],["^ ","^15",62,"^16",60],["^ ","^15",0,"^16",61]],"~i6",[["^ ","^15",0,"^16",60,"^G","day8.re-frame-10x.metamorphic/subscription-destroyed?"]],"^1E",[["^ ","^15",132,"^16",60,"^G","trace"]]],"~i143",["^ ","~i2",[["^ ","^15",0,"^16",61],["^ ","^15",52,"^16",61]],"~i3",[["^ ","^15",7,"^16",61,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1O",[["^ ","^15",115,"^16",61],["^ ","^15",115,"^16",61]],"^2:",[["^ ","^15",205,"^16",61,"^G","trace"]]],"~i145",["^ ","~i0",[["^ ","^15",0,"^16",63],["^ ","^15",60,"^16",63],["^ ","^15",0,"^16",64],["^ ","^15",0,"^16",64]],"~i6",[["^ ","^15",0,"^16",63,"^G","day8.re-frame-10x.metamorphic/subscription-not-run?"]],"^1G",[["^ ","^15",128,"^16",63,"^G","trace"]]],"~i148",["^ ","~i0",[["^ ","^15",0,"^16",66],["^ ","^15",64,"^16",69],["^ ","^15",0,"^16",70]],"~i6",[["^ ","^15",0,"^16",69,"^G","day8.re-frame-10x.metamorphic/low-level-re-frame-trace?"]]],"~i150",["^ ","~i3",[["^ ","^15",136,"^16",69,"^G","trace"]]],"~i151",["^ ","~i2",[["^ ","^15",0,"^16",70],["^ ","^15",4,"^16",70,"^G","G__46967"],["^ ","^15",4,"^16",71,"^G","G__46967"],["^ ","^15",19,"^16",71],["^ ","^15",21,"^16",71],["^ ","^15",22,"^16",71,"^G","G__46967"],["^ ","^15",42,"^16",71,"^G","cljs.core/Keyword"],["^ ","^15",62,"^16",71],["^ ","^15",62,"^16",71,"^G","G__46967"],["^ ","^15",75,"^16",71],["^ ","^15",0,"^16",72],["^ ","^15",0,"^16",72],["^ ","^15",8,"^16",72,"^G","G__46967"],["^ ","^15",5,"^16",73],["^ ","^15",0,"^16",74],["^ ","^15",0,"^16",78]],"~i8",[["^ ","^15",15,"^16",70],["^ ","^15",15,"^16",70]],"^1O",[["^ ","^15",105,"^16",70,"^G","trace"]]],"~i155",["^ ","~i0",[["^ ","^15",0,"^16",82],["^ ","^15",63,"^16",85],["^ ","^15",0,"^16",86]],"~i6",[["^ ","^15",0,"^16",85,"^G","day8.re-frame-10x.metamorphic/low-level-reagent-trace?"]]],"~i157",["^ ","~i3",[["^ ","^15",134,"^16",85,"^G","trace"]]],"~i158",["^ ","~i2",[["^ ","^15",0,"^16",86],["^ ","^15",52,"^16",86]],"~i3",[["^ ","^15",7,"^16",86,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^15",137,"^16",86],["^ ","^15",137,"^16",86]],"^2C",[["^ ","^15",227,"^16",86,"^G","trace"]]],"~i160",["^ ","~i0",[["^ ","^15",0,"^16",88],["^ ","^15",46,"^16",88],["^ ","^15",0,"^16",89]],"~i6",[["^ ","^15",0,"^16",88,"^G","day8.re-frame-10x.metamorphic/render?"]],"^19",[["^ ","^15",100,"^16",88,"^G","trace"]]],"~i161",["^ ","~i2",[["^ ","^15",0,"^16",89],["^ ","^15",52,"^16",89]],"~i3",[["^ ","^15",7,"^16",89,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^17",[["^ ","^15",110,"^16",89],["^ ","^15",110,"^16",89]],"^1D",[["^ ","^15",200,"^16",89,"^G","trace"]]],"~i163",["^ ","~i0",[["^ ","^15",0,"^16",91],["^ ","^15",65,"^16",91],["^ ","^15",0,"^16",92]],"~i6",[["^ ","^15",0,"^16",91,"^G","day8.re-frame-10x.metamorphic/unchanged-l2-subscription?"]],"^1?",[["^ ","^15",138,"^16",91,"^G","sub"]]],"~i164",["^ ","~i2",[["^ ","^15",0,"^16",92],["^ ","^15",4,"^16",92,"^G","and__3938__auto__"],["^ ","^15",0,"^16",93],["^ ","^15",0,"^16",93],["^ ","^15",20,"^16",93,"^G","and__3938__auto__"],["^ ","^15",0,"^16",94],["^ ","^15",0,"^16",100,"^G","and__3938__auto__"]],"~i7",[["^ ","^15",24,"^16",92],["^ ","^15",75,"^16",92],["^ ","^15",158,"^16",92],["^ ","^15",220,"^16",92]],"~i8",[["^ ","^15",24,"^16",92,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^19",[["^ ","^15",71,"^16",92,"^G","sub"]]],"~i165",["^ ","~i7",[["^ ","^15",9,"^16",94],["^ ","^15",34,"^16",94],["^ ","^15",18,"^16",95,"^G","p1__46974#"],["^ ","^15",0,"^16",96]],"~i8",[["^ ","^15",9,"^16",94,"^G","cljs.core/not-any?"]],"^1O",[["^ ","^15",0,"^16",96],["^ ","^15",52,"^16",96],["^ ","^15",115,"^16",96,"^G","p1__46974#"]],"~i19",[["^ ","^15",7,"^16",96,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2C",[["^ ","^15",1,"^16",98],["^ ","^15",1,"^16",98]],"^1L",[["^ ","^15",87,"^16",98,"^G","sub"]]],"~i166",["^ ","~i7",[["^ ","^15",98,"^16",98],["^ ","^15",143,"^16",98]],"~i8",[["^ ","^15",98,"^16",98,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2E",[["^ ","^15",147,"^16",98],["^ ","^15",195,"^16",98]],"^17",[["^ ","^15",147,"^16",98,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^15",191,"^16",98,"^G","sub"]]],"~i169",["^ ","~i0",[["^ ","^15",0,"^16",103],["^ ","^15",50,"^16",106],["^ ","^15",0,"^16",107]],"~i6",[["^ ","^15",0,"^16",106,"^G","day8.re-frame-10x.metamorphic/finish-run?"]]],"~i171",["^ ","~i3",[["^ ","^15",108,"^16",106,"^G","event"]]],"~i172",["^ ","~i2",[["^ ","^15",0,"^16",107],["^ ","^15",4,"^16",107,"^G","and__3938__auto__"],["^ ","^15",0,"^16",108],["^ ","^15",0,"^16",108],["^ ","^15",20,"^16",108,"^G","and__3938__auto__"],["^ ","^15",0,"^16",111,"^G","and__3938__auto__"]],"~i7",[["^ ","^15",24,"^16",107]],"~i8",[["^ ","^15",24,"^16",107,"^G","day8.re-frame-10x.metamorphic/fsm-trigger?"]],"^1Q",[["^ ","^15",73,"^16",107,"^G","event"]]],"~i173",["^ ","~i7",[["^ ","^15",0,"^16",109],["^ ","^15",153,"^16",109],["^ ","^15",236,"^16",109],["^ ","^15",295,"^16",109]],"~i8",[["^ ","^15",7,"^16",109,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",52,"^16",109],["^ ","^15",52,"^16",109]],"^1J",[["^ ","^15",146,"^16",109,"^G","event"]]],"~i176",["^ ","~i0",[["^ ","^15",0,"^16",114],["^ ","^15",49,"^16",114],["^ ","^15",0,"^16",115]],"~i6",[["^ ","^15",0,"^16",114,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1O",[["^ ","^15",106,"^16",114,"^G","event"]]],"~i177",["^ ","~i2",[["^ ","^15",0,"^16",115],["^ ","^15",52,"^16",115]],"~i3",[["^ ","^15",7,"^16",115,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2E",[["^ ","^15",106,"^16",115],["^ ","^15",106,"^16",115]],"^1J",[["^ ","^15",196,"^16",115,"^G","event"]]],"~i179",["^ ","~i0",[["^ ","^15",0,"^16",117],["^ ","^15",53,"^16",117],["^ ","^15",0,"^16",118]],"~i6",[["^ ","^15",0,"^16",117,"^G","day8.re-frame-10x.metamorphic/event-handler?"]],"^1J",[["^ ","^15",114,"^16",117,"^G","trace"]]],"~i180",["^ ","~i2",[["^ ","^15",0,"^16",118],["^ ","^15",52,"^16",118]],"~i3",[["^ ","^15",7,"^16",118,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1=",[["^ ","^15",120,"^16",118],["^ ","^15",120,"^16",118]],"~i30",[["^ ","^15",210,"^16",118,"^G","trace"]]],"~i182",["^ ","~i0",[["^ ","^15",0,"^16",120],["^ ","^15",50,"^16",120],["^ ","^15",0,"^16",121]],"~i6",[["^ ","^15",0,"^16",120,"^G","day8.re-frame-10x.metamorphic/event-dofx?"]],"^2Y",[["^ ","^15",108,"^16",120,"^G","trace"]]],"~i183",["^ ","~i2",[["^ ","^15",0,"^16",121],["^ ","^15",52,"^16",121]],"~i3",[["^ ","^15",7,"^16",121,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1O",[["^ ","^15",116,"^16",121],["^ ","^15",116,"^16",121]],"^2:",[["^ ","^15",206,"^16",121,"^G","trace"]]],"~i185",["^ ","~i0",[["^ ","^15",0,"^16",123],["^ ","^15",54,"^16",128],["^ ","^15",0,"^16",129]],"~i6",[["^ ","^15",0,"^16",128,"^G","day8.re-frame-10x.metamorphic/start-of-epoch?"]]],"~i189",["^ ","~i3",[["^ ","^15",116,"^16",128,"^G","event"]]],"~i190",["^ ","~i2",[["^ ","^15",0,"^16",129],["^ ","^15",4,"^16",129,"^G","or__3949__auto__"],["^ ","^15",0,"^16",130],["^ ","^15",0,"^16",130],["^ ","^15",20,"^16",130,"^G","or__3949__auto__"],["^ ","^15",0,"^16",131,"^G","or__3949__auto__"]],"~i6",[["^ ","^15",23,"^16",129]],"~i7",[["^ ","^15",23,"^16",129,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^1O",[["^ ","^15",70,"^16",129,"^G","event"]]],"~i191",["^ ","~i6",[["^ ","^15",0,"^16",133]],"~i7",[["^ ","^15",7,"^16",133,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1O",[["^ ","^15",54,"^16",133,"^G","event"]]],"~i193",["^ ","~i0",[["^ ","^15",0,"^16",136],["^ ","^15",67,"^16",142],["^ ","^15",0,"^16",143]],"~i6",[["^ ","^15",0,"^16",142,"^G","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]]],"~i198",["^ ","~i3",[["^ ","^15",142,"^16",142,"^G","event"]],"~i9",[["^ ","^15",148,"^16",142,"^G","state"]]],"~i199",["^ ","~i2",[["^ ","^15",0,"^16",143],["^ ","^15",4,"^16",143,"^G","or__3949__auto__"],["^ ","^15",0,"^16",144],["^ ","^15",0,"^16",144],["^ ","^15",20,"^16",144,"^G","or__3949__auto__"],["^ ","^15",0,"^16",145,"^G","or__3949__auto__"]],"~i6",[["^ ","^15",23,"^16",143]],"~i7",[["^ ","^15",23,"^16",143,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^1O",[["^ ","^15",70,"^16",143,"^G","event"]]],"~i202",["^ ","~i6",[["^ ","^15",0,"^16",147],["^ ","^15",4,"^16",147,"^G","and__3938__auto__"],["^ ","^15",0,"^16",148],["^ ","^15",0,"^16",148],["^ ","^15",20,"^16",148,"^G","and__3938__auto__"],["^ ","^15",0,"^16",151,"^G","and__3938__auto__"]],"^18",[["^ ","^15",24,"^16",147]],"^2E",[["^ ","^15",24,"^16",147,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^1D",[["^ ","^15",71,"^16",147,"^G","event"]]],"~i203",["^ ","^18",[["^ ","^15",0,"^16",149]],"^2E",[["^ ","^15",7,"^16",149,"^G","cljs.core/not"]],"^2A",[["^ ","^15",21,"^16",149]],"^27",[["^ ","^15",21,"^16",149,"^G","day8.re-frame-10x.metamorphic/run-queue?"]],"^2:",[["^ ","^15",68,"^16",149],["^ ","^15",68,"^16",149]],"^1L",[["^ ","^15",171,"^16",149,"^G","state"]]],"~i205",["^ ","~i0",[["^ ","^15",0,"^16",155],["^ ","^15",49,"^16",155],["^ ","^15",0,"^16",156]],"~i6",[["^ ","^15",0,"^16",155,"^G","day8.re-frame-10x.metamorphic/quiescent?"]],"^1O",[["^ ","^15",106,"^16",155,"^G","event"]]],"~i206",["^ ","~i2",[["^ ","^15",0,"^16",156],["^ ","^15",52,"^16",156]],"~i3",[["^ ","^15",7,"^16",156,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^15",127,"^16",156],["^ ","^15",127,"^16",156]],"^1?",[["^ ","^15",217,"^16",156,"^G","event"]]],"~i208",["^ ","~i0",[["^ ","^15",0,"^16",158],["^ ","^15",52,"^16",158],["^ ","^15",95,"^16",158],["^ ","^15",166,"^16",158],["^ ","^15",171,"^16",158],["^ ","^15",244,"^16",158],["^ ","^15",249,"^16",158],["^ ","^15",313,"^16",158]],"~i5",[["^ ","^15",0,"^16",158,"^G","day8.re-frame-10x.metamorphic/initial-parse-state"]]],"~i213",["^ ","~i0",[["^ ","^15",0,"^16",159],["^ ","^15",50,"^16",159],["^ ","^15",93,"^16",159],["^ ","^15",168,"^16",159],["^ ","^15",172,"^16",159],["^ ","^15",246,"^16",159],["^ ","^15",281,"^16",159],["^ ","^15",353,"^16",159]],"~i5",[["^ ","^15",0,"^16",159,"^G","day8.re-frame-10x.metamorphic/initial-sub-state"]]],"~i218",["^ ","~i0",[["^ ","^15",0,"^16",160],["^ ","^15",45,"^16",160],["^ ","^15",0,"^16",161]],"~i6",[["^ ","^15",0,"^16",160,"^G","day8.re-frame-10x.metamorphic/parse-traces"]],"^1=",[["^ ","^15",98,"^16",160,"^G","parse-state"]],"^1T",[["^ ","^15",110,"^16",160,"^G","traces"]]],"~i219",["^ ","~i2",[["^ ","^15",0,"^16",161]],"~i3",[["^ ","^15",7,"^16",161,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]]],"~i220",["^ ","~i4",[["^ ","^15",54,"^16",161],["^ ","^15",0,"^16",162]],"~i9",[["^ ","^15",65,"^16",161,"^G","state"]],"^19",[["^ ","^15",71,"^16",161,"^G","event"]]],"~i221",["^ ","~i6",[["^ ","^15",0,"^16",162],["^ ","^15",0,"^16",165]],"^2E",[["^ ","^15",4,"^16",162,"^G","current-match"]],"^2B",[["^ ","^15",20,"^16",162],["^ ","^15",20,"^16",162]],"~i43",[["^ ","^15",121,"^16",162,"^G","state"]]],"~i222",["^ ","^2E",[["^ ","^15",4,"^16",163,"^G","previous-event"]],"^2B",[["^ ","^15",21,"^16",163],["^ ","^15",21,"^16",163]],"^1@",[["^ ","^15",124,"^16",163,"^G","state"]]],"~i223",["^ ","^2E",[["^ ","^15",4,"^16",164,"^G","no-match?"]],"^2B",[["^ ","^15",22,"^16",164],["^ ","^15",40,"^16",164]],"^1;",[["^ ","^15",23,"^16",164,"^G","current-match"]]],"~i224",["^ ","^2E",[["^ ","^15",53,"^16",165],["^ ","^15",378,"^16",165],["^ ","^15",773,"^16",165],["^ ","^15",1293,"^16",165],["^ ","^15",1512,"^16",165]]],"~i227",["^ ","^1Y",[["^ ","^15",55,"^16",165,"^G","no-match?"]]],"~i228",["^ ","^1Y",[["^ ","^15",72,"^16",165]],"^1O",[["^ ","^15",90,"^16",165]],"^2Y",[["^ ","^15",90,"^16",165,"^G","day8.re-frame-10x.metamorphic/start-of-epoch?"]],"~i35",[["^ ","^15",142,"^16",165,"^G","event"]]],"~i229",["^ ","^2A",[["^ ","^15",150,"^16",165],["^ ","^15",202,"^16",165],["^ ","^15",273,"^16",165]],"^27",[["^ ","^15",150,"^16",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1D",[["^ ","^15",196,"^16",165,"^G","state"]],"^1L",[["^ ","^15",356,"^16",165,"^G","event"]]],"~i230",["^ ","^2A",[["^ ","^15",371,"^16",165,"^G","state"]]],"~i233",["^ ","^1Y",[["^ ","^15",396,"^16",165]],"^19",[["^ ","^15",396,"^16",165,"^G","day8.re-frame-10x.metamorphic/quiescent?"]],"~i26",[["^ ","^15",443,"^16",165,"^G","event"]]],"~i234",["^ ","^1O",[["^ ","^15",544,"^16",165,"^G","state"]]],"~i235",["^ ","^1O",[["^ ","^15",497,"^16",165],["^ ","^15",550,"^16",165]],"^2Y",[["^ ","^15",497,"^16",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1K",[["^ ","^15",614,"^16",165,"^G","cljs.core/conj"]],"^3K",[["^ ","^15",629,"^16",165]],"^1@",[["^ ","^15",629,"^16",165,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2=",[["^ ","^15",674,"^16",165,"^G","current-match"]],"~i63",[["^ ","^15",688,"^16",165,"^G","event"]]],"~i236",["^ ","^1O",[["^ ","^15",451,"^16",165],["^ ","^15",696,"^16",165],["^ ","^15",767,"^16",165]],"^2Y",[["^ ","^15",451,"^16",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]]],"~i241",["^ ","^1Y",[["^ ","^15",791,"^16",165]],"^19",[["^ ","^15",791,"^16",165,"^G","day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?"]],"^1@",[["^ ","^15",856,"^16",165,"^G","event"]],"~i50",[["^ ","^15",862,"^16",165,"^G","state"]]],"~i242",["^ ","^1O",[["^ ","^15",963,"^16",165,"^G","state"]]],"~i243",["^ ","^1O",[["^ ","^15",916,"^16",165],["^ ","^15",969,"^16",165]],"^2Y",[["^ ","^15",916,"^16",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1K",[["^ ","^15",1033,"^16",165,"^G","cljs.core/conj"]],"^3K",[["^ ","^15",1048,"^16",165]],"^1@",[["^ ","^15",1048,"^16",165,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"^2=",[["^ ","^15",1093,"^16",165,"^G","current-match"]],"^3X",[["^ ","^15",1107,"^16",165,"^G","previous-event"]]],"~i244",["^ ","^1O",[["^ ","^15",870,"^16",165],["^ ","^15",1124,"^16",165],["^ ","^15",1195,"^16",165]],"^2Y",[["^ ","^15",870,"^16",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^1<",[["^ ","^15",1278,"^16",165,"^G","event"]]],"~i246",["^ ","^1Y",[["^ ","^15",1311,"^16",165]],"^19",[["^ ","^15",1311,"^16",165,"^G","day8.re-frame-10x.metamorphic/event-run?"]],"^3U",[["^ ","^15",1358,"^16",165,"^G","event"]]],"~i247",["^ ","^1Y",[["^ ","^15",1366,"^16",165],["^ ","^15",1419,"^16",165]],"^19",[["^ ","^15",1366,"^16",165,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1J",[["^ ","^15",1413,"^16",165,"^G","state"]],"^3K",[["^ ","^15",1490,"^16",165,"^G","cljs.core/conj"]],"~i48",[["^ ","^15",1505,"^16",165,"^G","event"]]],"~i251",["^ ","^1Y",[["^ ","^15",1512,"^16",165,"^G","state"]]],"~i255",["^ ","^2E",[["^ ","^15",0,"^16",165],["^ ","^15",5,"^16",166]],"^17",[["^ ","^15",7,"^16",165,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^3Q",[["^ ","^15",78,"^16",166,"^G","event"]]],"~i256",["^ ","~i4",[["^ ","^15",3,"^16",167,"^G","parse-state"]]],"~i257",["^ ","~i4",[["^ ","^15",15,"^16",167,"^G","traces"]]],"~i259",["^ ","~i0",[["^ ","^15",0,"^16",169],["^ ","^15",46,"^16",169],["^ ","^15",0,"^16",170]],"~i6",[["^ ","^15",0,"^16",169,"^G","day8.re-frame-10x.metamorphic/matched-event"]],"^1Q",[["^ ","^15",100,"^16",169,"^G","match"]]],"~i260",["^ ","~i7",[["^ ","^15",117,"^16",170,"^G","match"]]],"~i261",["^ ","~i7",[["^ ","^15",23,"^16",170]],"~i8",[["^ ","^15",23,"^16",170,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^19",[["^ ","^15",70,"^16",170,"^G","day8.re-frame-10x.metamorphic/event-run?"]]],"~i262",["^ ","~i7",[["^ ","^15",0,"^16",170]],"~i8",[["^ ","^15",7,"^16",170,"^G","cljs.core/first"]]],"~i264",["^ ","~i0",[["^ ","^15",0,"^16",172],["^ ","^15",45,"^16",172],["^ ","^15",0,"^16",173]],"~i6",[["^ ","^15",0,"^16",172,"^G","day8.re-frame-10x.metamorphic/app-db-after"]],"^1=",[["^ ","^15",98,"^16",172,"^G","event-trace"]]],"~i265",["^ ","~i2",[["^ ","^15",0,"^16",173],["^ ","^15",66,"^16",173],["^ ","^15",149,"^16",173],["^ ","^15",202,"^16",173]],"~i3",[["^ ","^15",7,"^16",173,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",54,"^16",173,"^G","event-trace"]]],"~i267",["^ ","~i0",[["^ ","^15",0,"^16",175],["^ ","^15",46,"^16",175],["^ ","^15",0,"^16",176]],"~i6",[["^ ","^15",0,"^16",175,"^G","day8.re-frame-10x.metamorphic/app-db-before"]],"^1Q",[["^ ","^15",100,"^16",175,"^G","event-trace"]]],"~i268",["^ ","~i2",[["^ ","^15",0,"^16",176],["^ ","^15",66,"^16",176],["^ ","^15",149,"^16",176],["^ ","^15",202,"^16",176]],"~i3",[["^ ","^15",7,"^16",176,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^15",54,"^16",176,"^G","event-trace"]]],"~i270",["^ ","~i0",[["^ ","^15",0,"^16",178],["^ ","^15",50,"^16",182],["^ ","^15",0,"^16",183]],"~i6",[["^ ","^15",0,"^16",182,"^G","day8.re-frame-10x.metamorphic/subscription-info"]]],"~i273",["^ ","~i3",[["^ ","^15",108,"^16",182,"^G","initial-state"]],"^27",[["^ ","^15",122,"^16",182,"^G","filtered-traces"]],"^1;",[["^ ","^15",138,"^16",182,"^G","app-db-id"]]],"~i274",["^ ","~i7",[["^ ","^15",121,"^16",187,"^G","filtered-traces"]]],"~i275",["^ ","~i7",[["^ ","^15",17,"^16",187]],"~i8",[["^ ","^15",17,"^16",187,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$2"]],"^19",[["^ ","^15",64,"^16",187,"^G","day8.re-frame-10x.metamorphic/subscription-re-run?"]]],"~i276",["^ ","~i7",[["^ ","^15",0,"^16",183]],"~i8",[["^ ","^15",7,"^16",183,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^19",[["^ ","^15",54,"^16",183],["^ ","^15",0,"^16",184]],"^1=",[["^ ","^15",65,"^16",183,"^G","state"]],"^3U",[["^ ","^15",71,"^16",183,"^G","trace"]]],"~i284",["^ ","^27",[["^ ","^15",0,"^16",184],["^ ","^15",32,"^16",184],["^ ","^15",216,"^16",184]],"^1O",[["^ ","^15",7,"^16",184,"^G","cljs.core/assoc-in"]],"^2B",[["^ ","^15",26,"^16",184,"^G","state"]]],"~i285",["^ ","^2:",[["^ ","^15",115,"^16",184],["^ ","^15",115,"^16",184]],"~i40",[["^ ","^15",209,"^16",184,"^G","trace"]]],"~i287",["^ ","^2B",[["^ ","^15",280,"^16",184],["^ ","^15",273,"^16",186],["^ ","^15",277,"^16",186]],"^1E",[["^ ","^15",298,"^16",184],["^ ","^15",313,"^16",184],["^ ","^15",324,"^16",184,"^G","p1__46981#"],["^ ","^15",0,"^16",185]],"^1T",[["^ ","^15",298,"^16",184,"^G","cljs.core/some"]],"^1K",[["^ ","^15",0,"^16",185],["^ ","^15",62,"^16",185,"^G","p1__46981#"]],"^2<",[["^ ","^15",7,"^16",185,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1<",[["^ ","^15",52,"^16",185,"^G","app-db-id"]],"~i54",[["^ ","^15",3,"^16",186],["^ ","^15",56,"^16",186],["^ ","^15",139,"^16",186],["^ ","^15",192,"^16",186]],"~i55",[["^ ","^15",3,"^16",186,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"~i62",[["^ ","^15",50,"^16",186,"^G","trace"]]],"~i290",["^ ","^19",[["^ ","^15",3,"^16",187,"^G","initial-state"]]],"~i292",["^ ","~i0",[["^ ","^15",0,"^16",189],["^ ","^15",48,"^16",193],["^ ","^15",0,"^16",194]],"~i6",[["^ ","^15",0,"^16",193,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i295",["^ ","~i3",[["^ ","^15",104,"^16",193,"^G","state"]]],"~i296",["^ ","~i2",[["^ ","^15",0,"^16",194],["^ ","^15",52,"^16",194]],"~i3",[["^ ","^15",7,"^16",194,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i297",["^ ","~i8",[["^ ","^15",87,"^16",194]],"~i9",[["^ ","^15",87,"^16",194,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i299",["^ ","^1I",[["^ ","^15",132,"^16",194]],"^18",[["^ ","^15",132,"^16",194,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^1O",[["^ ","^15",179,"^16",194],["^ ","^15",0,"^16",195]],"^1D",[["^ ","^15",190,"^16",194,"^G","me"]],"^2B",[["^ ","^15",0,"^16",195],["^ ","^15",0,"^16",196],["^ ","^15",0,"^16",198]],"^2C",[["^ ","^15",20,"^16",195],["^ ","^15",20,"^16",195]],"^2=",[["^ ","^15",113,"^16",195]],"^3[",[["^ ","^15",113,"^16",195,"^G","cljs.core/val"]],"^4K",[["^ ","^15",127,"^16",195,"^G","me"]],"~i59",[["^ ","^15",0,"^16",198,"^G","me"]]],"~i301",["^ ","^1I",[["^ ","^15",4,"^16",200]],"^18",[["^ ","^15",4,"^16",200,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^19",[["^ ","^15",48,"^16",200],["^ ","^15",59,"^16",200,"^G","p__46983"],["^ ","^15",0,"^16",201],["^ ","^15",0,"^16",201],["^ ","^15",4,"^16",201,"^G","vec__46984"],["^ ","^15",17,"^16",201,"^G","p__46983"],["^ ","^15",8,"^16",202],["^ ","^15",8,"^16",202,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^15",52,"^16",202,"^G","vec__46984"],["^ ","^15",63,"^16",202],["^ ","^15",67,"^16",202],["^ ","^15",8,"^16",203],["^ ","^15",8,"^16",203,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^15",52,"^16",203,"^G","vec__46984"],["^ ","^15",63,"^16",203],["^ ","^15",67,"^16",203],["^ ","^15",0,"^16",204],["^ ","^15",0,"^16",204]],"^1Q",[["^ ","^15",4,"^16",202,"^G","k"]],"^1D",[["^ ","^15",4,"^16",203,"^G","v"]]],"~i302",["^ ","^1O",[["^ ","^15",90,"^16",204,"^G","k"]],"^1=",[["^ ","^15",92,"^16",204],["^ ","^15",148,"^16",204],["^ ","^15",254,"^16",204],["^ ","^15",314,"^16",204],["^ ","^15",366,"^16",204],["^ ","^15",429,"^16",204],["^ ","^15",503,"^16",204]],"^1Q",[["^ ","^15",92,"^16",204,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic"]],"^2:",[["^ ","^15",146,"^16",204,"^G","v"]]],"~i303",["^ ","~i8",[["^ ","^15",5,"^16",205,"^G","state"]]],"~i307",["^ ","~i0",[["^ ","^15",0,"^16",207],["^ ","^15",51,"^16",207],["^ ","^15",0,"^16",208]],"~i6",[["^ ","^15",0,"^16",207,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]]],"~i308",["^ ","~i3",[["^ ","^15",110,"^16",207,"^G","initial-state"]],"^27",[["^ ","^15",124,"^16",207,"^G","traces"]]],"~i309",["^ ","~i2",[["^ ","^15",0,"^16",208],["^ ","^15",0,"^16",255]],"~i8",[["^ ","^15",4,"^16",208,"^G","first-pass"]],"^1=",[["^ ","^15",17,"^16",208]],"^1Q",[["^ ","^15",17,"^16",208,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2:",[["^ ","^15",64,"^16",208],["^ ","^15",0,"^16",209]],"^1;",[["^ ","^15",75,"^16",208,"^G","init-state"]],"^1@",[["^ ","^15",86,"^16",208,"^G","trace"]]],"~i310",["^ ","^37",[["^ ","^15",0,"^16",209],["^ ","^15",0,"^16",236]],"^1W",[["^ ","^15",4,"^16",209,"^G","tags"]],"^45",[["^ ","^15",11,"^16",209],["^ ","^15",61,"^16",209]],"^2=",[["^ ","^15",11,"^16",209,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i53",[["^ ","^15",55,"^16",209,"^G","trace"]]],"~i311",["^ ","^1W",[["^ ","^15",4,"^16",210,"^G","reaction-id"]],"^45",[["^ ","^15",18,"^16",210],["^ ","^15",18,"^16",210]],"^4T",[["^ ","^15",108,"^16",210,"^G","tags"]]],"~i312",["^ ","^1W",[["^ ","^15",4,"^16",211,"^G","state"]],"~i52",[["^ ","^15",81,"^16",211,"^G","init-state"]]],"~i313",["^ ","^53",[["^ ","^15",31,"^16",211],["^ ","^15",92,"^16",211],["^ ","^15",187,"^16",211]],"^50",[["^ ","^15",31,"^16",211,"^G","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4"]],"~i64",[["^ ","^15",175,"^16",211,"^G","reaction-id"]],"~i84",[["^ ","^15",251,"^16",211],["^ ","^15",311,"^16",211]],"^1V",[["^ ","^15",251,"^16",211,"^G","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^20",[["^ ","^15",296,"^16",211,"^G","cljs.core/conj"]],"~i99",[["^ ","^15",345,"^16",211],["^ ","^15",345,"^16",211]],"~i109",[["^ ","^15",435,"^16",211,"^G","trace"]]],"~i317",["^ ","^53",[["^ ","^15",12,"^16",211],["^ ","^15",443,"^16",211],["^ ","^15",538,"^16",211]],"^50",[["^ ","^15",12,"^16",211,"^G","cljs.core/assoc-in"]],"^3X",[["^ ","^15",526,"^16",211,"^G","reaction-id"]],"^20",[["^ ","^15",615,"^16",211],["^ ","^15",615,"^16",211]],"^26",[["^ ","^15",705,"^16",211,"^G","tags"]]],"~i318",["^ ","^1W",[["^ ","^15",4,"^16",212,"^G","new-state"]]],"~i319",["^ ","^45",[["^ ","^15",16,"^16",212],["^ ","^15",33,"^16",212,"^G","G__46989"],["^ ","^15",4,"^16",213,"^G","G__46989"],["^ ","^15",19,"^16",213],["^ ","^15",21,"^16",213],["^ ","^15",22,"^16",213,"^G","G__46989"],["^ ","^15",42,"^16",213,"^G","cljs.core/Keyword"],["^ ","^15",62,"^16",213],["^ ","^15",62,"^16",213,"^G","G__46989"],["^ ","^15",75,"^16",213],["^ ","^15",0,"^16",214],["^ ","^15",0,"^16",214],["^ ","^15",8,"^16",214,"^G","G__46989"],["^ ","^15",5,"^16",215],["^ ","^15",5,"^16",219],["^ ","^15",5,"^16",227],["^ ","^15",0,"^16",232],["^ ","^15",6,"^16",232],["^ ","^15",11,"^16",232,"^G","js/Error"],["^ ","^15",17,"^16",232],["^ ","^15",18,"^16",232],["^ ","^15",85,"^16",232,"^G","G__46989"]],"^4K",[["^ ","^15",44,"^16",212],["^ ","^15",44,"^16",212]],"^55",[["^ ","^15",134,"^16",212,"^G","trace"]]],"~i320",["^ ","~i66",[["^ ","^15",45,"^16",216,"^G","state"]]],"~i321",["^ ","^5=",[["^ ","^15",26,"^16",216],["^ ","^15",51,"^16",216],["^ ","^15",146,"^16",216],["^ ","^15",214,"^16",216]],"~i67",[["^ ","^15",26,"^16",216,"^G","cljs.core/assoc-in"]],"^1N",[["^ ","^15",134,"^16",216,"^G","reaction-id"]]],"~i322",["^ ","^5=",[["^ ","^15",0,"^16",216],["^ ","^15",220,"^16",216],["^ ","^15",315,"^16",216]],"^5?",[["^ ","^15",7,"^16",216,"^G","cljs.core/assoc-in"]],"^1N",[["^ ","^15",303,"^16",216,"^G","reaction-id"]],"~i104",[["^ ","^15",392,"^16",216],["^ ","^15",392,"^16",216]],"~i114",[["^ ","^15",482,"^16",216,"^G","tags"]]],"~i323",["^ ","^4T",[["^ ","^15",0,"^16",220]],"~i60",[["^ ","^15",7,"^16",220,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$3"]],"^5?",[["^ ","^15",54,"^16",220,"^G","state"]],"^1F",[["^ ","^15",60,"^16",220,"^G","reaction-id"]],"^1V",[["^ ","^15",72,"^16",220],["^ ","^15",0,"^16",222]],"^20",[["^ ","^15",18,"^16",221,"^G","sub-state"]]],"~i328",["^ ","^21",[["^ ","^15",60,"^16",222]],"^23",[["^ ","^15",62,"^16",222],["^ ","^15",98,"^16",222]],"~i96",[["^ ","^15",62,"^16",222,"^G","cljs.core/contains?"]],"~i106",[["^ ","^15",88,"^16",222,"^G","sub-state"]]],"~i329",["^ ","~i93",[["^ ","^15",154,"^16",222],["^ ","^15",210,"^16",222]],"^22",[["^ ","^15",154,"^16",222,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^26",[["^ ","^15",200,"^16",222,"^G","sub-state"]],"^2;",[["^ ","^15",284,"^16",222],["^ ","^15",284,"^16",222]],"~i134",[["^ ","^15",368,"^16",222,"^G","sub-state"]]],"~i330",["^ ","^5I",[["^ ","^15",380,"^16",222,"^G","sub-state"]]],"~i331",["^ ","^21",[["^ ","^15",0,"^16",222],["^ ","^15",391,"^16",222],["^ ","^15",443,"^16",222],["^ ","^15",498,"^16",222]],"~i92",[["^ ","^15",7,"^16",222,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]]],"~i332",["^ ","~i105",[["^ ","^15",552,"^16",222],["^ ","^15",552,"^16",222]],"~i113",[["^ ","^15",636,"^16",222,"^G","tags"]]],"~i333",["^ ","^3X",[["^ ","^15",0,"^16",228],["^ ","^15",32,"^16",228],["^ ","^15",127,"^16",228],["^ ","^15",198,"^16",228]],"^55",[["^ ","^15",7,"^16",228,"^G","cljs.core/assoc-in"]],"^1F",[["^ ","^15",26,"^16",228,"^G","state"]],"~i80",[["^ ","^15",115,"^16",228,"^G","reaction-id"]]],"~i334",["^ ","^1T",[["^ ","^15",0,"^16",236],["^ ","^15",0,"^16",237],["^ ","^15",0,"^16",238]],"^1>",[["^ ","^15",3,"^16",236],["^ ","^15",96,"^16",236]],"^3K",[["^ ","^15",3,"^16",236,"^G","cljs.core/contains?"]],"^50",[["^ ","^15",29,"^16",236]],"^4K",[["^ ","^15",29,"^16",236,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i58",[["^ ","^15",73,"^16",236,"^G","new-state"]],"~i68",[["^ ","^15",83,"^16",236,"^G","reaction-id"]]],"~i335",["^ ","^3K",[["^ ","^15",0,"^16",238]],"^1@",[["^ ","^15",0,"^16",238,"^G","js/console.warn"]],"^5D",[["^ ","^15",13,"^16",238,"^G","trace"]],"^5=",[["^ ","^15",19,"^16",238]],"^5?",[["^ ","^15",19,"^16",238,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^15",63,"^16",238,"^G","new-state"]],"~i81",[["^ ","^15",73,"^16",238,"^G","reaction-id"]]],"~i338",["^ ","^1T",[["^ ","^15",0,"^16",241,"^G","new-state"]]],"~i339",["^ ","^2:",[["^ ","^15",3,"^16",242,"^G","initial-state"]]],"~i340",["^ ","^2:",[["^ ","^15",17,"^16",242,"^G","traces"]]],"~i341",["^ ","~i8",[["^ ","^15",4,"^16",243,"^G","second-pass"]],"^1=",[["^ ","^15",18,"^16",243]],"^1Q",[["^ ","^15",18,"^16",243,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^2:",[["^ ","^15",65,"^16",243],["^ ","^15",28,"^16",244,"^G","p__46990"],["^ ","^15",0,"^16",245],["^ ","^15",0,"^16",245],["^ ","^15",4,"^16",245,"^G","vec__46991"],["^ ","^15",17,"^16",245,"^G","p__46990"],["^ ","^15",13,"^16",246],["^ ","^15",13,"^16",246,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^15",57,"^16",246,"^G","vec__46991"],["^ ","^15",68,"^16",246],["^ ","^15",72,"^16",246],["^ ","^15",16,"^16",247],["^ ","^15",16,"^16",247,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^15",60,"^16",247,"^G","vec__46991"],["^ ","^15",71,"^16",247],["^ ","^15",75,"^16",247],["^ ","^15",0,"^16",248]],"^1;",[["^ ","^15",18,"^16",244,"^G","all-state"]],"^1@",[["^ ","^15",4,"^16",246,"^G","sub-id"]],"~i51",[["^ ","^15",4,"^16",247,"^G","sub-state"]]],"~i343",["^ ","^37",[["^ ","^15",0,"^16",248]],"^1?",[["^ ","^15",3,"^16",248]],"^2<",[["^ ","^15",5,"^16",248],["^ ","^15",41,"^16",248]],"^4I",[["^ ","^15",5,"^16",248,"^G","cljs.core/contains?"]],"^3[",[["^ ","^15",31,"^16",248,"^G","sub-state"]]],"~i344",["^ ","^2<",[["^ ","^15",121,"^16",248],["^ ","^15",157,"^16",248]],"^4I",[["^ ","^15",121,"^16",248,"^G","cljs.core/contains?"]],"^3[",[["^ ","^15",147,"^16",248,"^G","sub-state"]]],"~i345",["^ ","^2<",[["^ ","^15",217,"^16",248]],"^4I",[["^ ","^15",217,"^16",248,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1>",[["^ ","^15",262,"^16",248],["^ ","^15",262,"^16",248]],"^4T",[["^ ","^15",366,"^16",248,"^G","sub-state"]],"~i70",[["^ ","^15",377,"^16",248],["^ ","^15",377,"^16",248]],"^1P",[["^ ","^15",461,"^16",248,"^G","sub-state"]]],"~i346",["^ ","^1T",[["^ ","^15",0,"^16",249],["^ ","^15",36,"^16",249],["^ ","^15",126,"^16",249],["^ ","^15",188,"^16",249],["^ ","^15",261,"^16",249]],"^1;",[["^ ","^15",7,"^16",249,"^G","cljs.core/assoc-in"]],"^1>",[["^ ","^15",26,"^16",249,"^G","all-state"]],"^50",[["^ ","^15",119,"^16",249,"^G","sub-id"]]],"~i347",["^ ","^1T",[["^ ","^15",0,"^16",251,"^G","all-state"]]],"~i348",["^ ","^2:",[["^ ","^15",1,"^16",254,"^G","first-pass"]]],"~i349",["^ ","^2:",[["^ ","^15",12,"^16",254,"^G","first-pass"]]],"~i350",["^ ","~i4",[["^ ","^15",0,"^16",255,"^G","second-pass"]]],"~i352",["^ ","~i0",[["^ ","^15",0,"^16",257],["^ ","^15",57,"^16",261],["^ ","^15",0,"^16",262]],"~i6",[["^ ","^15",0,"^16",261,"^G","day8.re-frame-10x.metamorphic/subscription-match-state"]]],"~i355",["^ ","~i3",[["^ ","^15",122,"^16",261,"^G","sub-state"]],"^17",[["^ ","^15",132,"^16",261,"^G","filtered-traces"]],"^1G",[["^ ","^15",148,"^16",261,"^G","new-matches"]]],"~i372",["^ ","~i2",[["^ ","^15",0,"^16",262]],"~i3",[["^ ","^15",7,"^16",262,"^G","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3"]],"^1Y",[["^ ","^15",58,"^16",262],["^ ","^15",0,"^16",263]],"^2Y",[["^ ","^15",69,"^16",262,"^G","state"]],"^1:",[["^ ","^15",75,"^16",262,"^G","match"]]],"~i373",["^ ","^2A",[["^ ","^15",0,"^16",263],["^ ","^15",0,"^16",271],["^ ","^15",0,"^16",271],["^ ","^15",50,"^16",271],["^ ","^15",140,"^16",271],["^ ","^15",224,"^16",271],["^ ","^15",317,"^16",271],["^ ","^15",406,"^16",271]],"^1J",[["^ ","^15",4,"^16",263,"^G","previous-id"]],"^2<",[["^ ","^15",18,"^16",263],["^ ","^15",18,"^16",263]],"~i57",[["^ ","^15",123,"^16",263,"^G","state"]]],"~i374",["^ ","^1J",[["^ ","^15",4,"^16",264,"^G","first-match-id"]],"^2<",[["^ ","^15",21,"^16",264],["^ ","^15",21,"^16",264]],"^1@",[["^ ","^15",101,"^16",264]],"^1L",[["^ ","^15",101,"^16",264,"^G","cljs.core/first"]],"^60",[["^ ","^15",117,"^16",264,"^G","match"]]],"~i375",["^ ","^1J",[["^ ","^15",4,"^16",265,"^G","last-match-id"]],"^2<",[["^ ","^15",20,"^16",265],["^ ","^15",20,"^16",265]],"^1@",[["^ ","^15",100,"^16",265]],"^1L",[["^ ","^15",100,"^16",265,"^G","cljs.core/last"]],"^3[",[["^ ","^15",115,"^16",265,"^G","match"]]],"~i376",["^ ","^1J",[["^ ","^15",4,"^16",266,"^G","pre-epoch-traces"]],"^2<",[["^ ","^15",23,"^16",266],["^ ","^15",68,"^16",266]],"^4I",[["^ ","^15",23,"^16",266,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i377",["^ ","^1L",[["^ ","^15",101,"^16",266]],"~i46",[["^ ","^15",101,"^16",266,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i378",["^ ","~i47",[["^ ","^15",146,"^16",266]],"^45",[["^ ","^15",146,"^16",266,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4M",[["^ ","^15",190,"^16",266],["^ ","^15",205,"^16",266]],"^5?",[["^ ","^15",191,"^16",266,"^G","previous-id"]]],"~i379",["^ ","^4M",[["^ ","^15",210,"^16",266],["^ ","^15",228,"^16",266]],"^5?",[["^ ","^15",211,"^16",266,"^G","first-match-id"]]],"~i380",["^ ","^6E",[["^ ","^15",234,"^16",266]],"^45",[["^ ","^15",234,"^16",266,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4L",[["^ ","^15",281,"^16",266,"^G","day8.re-frame-10x.metamorphic/subscription?"]]],"~i381",["^ ","^1L",[["^ ","^15",333,"^16",266,"^G","filtered-traces"]]],"~i382",["^ ","^1J",[["^ ","^15",4,"^16",267,"^G","epoch-traces"]],"^2<",[["^ ","^15",19,"^16",267],["^ ","^15",64,"^16",267]],"^4I",[["^ ","^15",19,"^16",267,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]]],"~i383",["^ ","^1L",[["^ ","^15",97,"^16",267]],"^6C",[["^ ","^15",97,"^16",267,"^G","cljs.core.comp.cljs$core$IFn$_invoke$arity$2"]]],"~i384",["^ ","^6E",[["^ ","^15",142,"^16",267]],"^45",[["^ ","^15",142,"^16",267,"^G","day8.re-frame-10x.metamorphic/id-between-xf"]],"^4M",[["^ ","^15",186,"^16",267,"^G","first-match-id"]],"^1N",[["^ ","^15",201,"^16",267,"^G","last-match-id"]]],"~i385",["^ ","^6E",[["^ ","^15",216,"^16",267]],"^45",[["^ ","^15",216,"^16",267,"^G","cljs.core.filter.cljs$core$IFn$_invoke$arity$1"]],"^4L",[["^ ","^15",263,"^16",267,"^G","day8.re-frame-10x.metamorphic/subscription?"]]],"~i386",["^ ","^1L",[["^ ","^15",315,"^16",267,"^G","filtered-traces"]]],"~i387",["^ ","^1J",[["^ ","^15",4,"^16",268,"^G","reaction-state"]],"^2<",[["^ ","^15",21,"^16",268],["^ ","^15",21,"^16",268]],"~i56",[["^ ","^15",123,"^16",268,"^G","state"]]],"~i388",["^ ","^1J",[["^ ","^15",4,"^16",269,"^G","pre-epoch-state"]],"^3K",[["^ ","^15",117,"^16",269,"^G","reaction-state"]]],"~i389",["^ ","^3K",[["^ ","^15",71,"^16",269]],"^1@",[["^ ","^15",71,"^16",269,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i390",["^ ","^3K",[["^ ","^15",22,"^16",269]],"^1@",[["^ ","^15",22,"^16",269,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3X",[["^ ","^15",133,"^16",269,"^G","pre-epoch-traces"]]],"~i391",["^ ","^1J",[["^ ","^15",4,"^16",270,"^G","epoch-state"]],"^3K",[["^ ","^15",113,"^16",270,"^G","pre-epoch-state"]]],"~i392",["^ ","^3K",[["^ ","^15",67,"^16",270]],"^1@",[["^ ","^15",67,"^16",270,"^G","day8.re-frame-10x.metamorphic/reset-sub-state"]]],"~i393",["^ ","^3K",[["^ ","^15",18,"^16",270]],"^1@",[["^ ","^15",18,"^16",270,"^G","day8.re-frame-10x.metamorphic/process-sub-traces"]],"^3X",[["^ ","^15",130,"^16",270,"^G","epoch-traces"]]],"~i394",["^ ","^4I",[["^ ","^15",124,"^16",271,"^G","pre-epoch-state"]]],"~i395",["^ ","^4I",[["^ ","^15",212,"^16",271,"^G","epoch-state"]]],"~i396",["^ ","^4I",[["^ ","^15",302,"^16",271,"^G","first-match-id"]]],"~i397",["^ ","^4I",[["^ ","^15",392,"^16",271,"^G","last-match-id"]]],"~i398",["^ ","^4I",[["^ ","^15",488,"^16",271,"^G","previous-id"]]],"~i399",["^ ","^1Y",[["^ ","^15",3,"^16",272,"^G","sub-state"]]],"~i400",["^ ","^1Y",[["^ ","^15",13,"^16",272,"^G","new-matches"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^M"],[1533155342000],["^Y","goog/math/math.js"],[1533155346000,"^N","~$goog.array","~$goog.asserts"],["^Y","goog/array/array.js"],[1533155346000,"^N","^76"],["^Y","goog/debug/error.js"],[1533155346000,"^N"],["^Y","day8/re_frame_10x/metamorphic.cljc"],[1533155354000,"^N","^M"],["^Y","goog/dom/nodetype.js"],[1533155346000,"^N"],["^Y","goog/object/object.js"],[1533155346000,"^N"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^Y","goog/math/long.js"],[1533155346000,"^N","^76","~$goog.reflect"],["^Y","goog/functions/functions.js"],[1533155346000,"^N"],["^Y","goog/structs/map.js"],[1533155346000,"^N","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^Y","goog/asserts/asserts.js"],[1533155346000,"^N","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^Y","goog/uri/uri.js"],[1533155346000,"^N","^75","^76","^7>","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^Y","goog/base.js"],[1533155346000],["^Y","goog/structs/structs.js"],[1533155346000,"^N","^75","^7;"],["^Y","goog/string/string.js"],[1533155346000,"^N"],["^Y","goog/reflect/reflect.js"],[1533155346000,"^N"],["^Y","goog/string/stringbuffer.js"],[1533155346000,"^N"],["^Y","goog/iter/iter.js"],[1533155346000,"^N","^75","^76","~$goog.functions","~$goog.math"],["^Y","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^7>","^7;","^75","~$goog.Uri","~$goog.string.StringBuffer"],["^Y","goog/math/integer.js"],[1533155346000,"^N"],["^Y","goog/uri/utils.js"],[1533155346000,"^N","^75","^76","^7>"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N"],"^O",["^F",[]],"~:shadow/js-access-global",["^F",["Error"]],"^P",null,"~:defs",["^ ","~$subscription?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",131,"^8",7,"^9",131,"^:",20,"~:arglists",["^S",["~$quote",["^S",[["~$trace"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription?","~:variadic",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"~:method-params",["^S",[["^7Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"^7",131,"^9",131,"~:max-fixed-arity",1,"~:fn-var",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$start-of-epoch-and-prev-end?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",194,"^8",7,"^9",194,"^:",35,"^7O",["^S",["^7P",["^S",[["~$event","~$state"]]]]],"~:doc","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"^G","~$day8.re-frame-10x.metamorphic/start-of-epoch-and-prev-end?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7T",["^S",[["^7Z","^7["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",194,"^9",194,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z","^7["]]]]],"^80","Detects that a new epoch has started and that the previous one ended on the previous event.\n\n  If multiple events are dispatched while processing the first event, each one is considered its\n  own epoch."],"~$subscription-destroyed?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",143,"^8",7,"^9",143,"^:",30,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-destroyed?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",30,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",143,"^9",143,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$low-level-reagent-trace?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",156,"^8",7,"^9",156,"^:",31,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of reagent internals?"],"^G","~$day8.re-frame-10x.metamorphic/low-level-reagent-trace?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",156,"^9",156,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of reagent internals?"],"~$request-animation-frame-end?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",86,"^8",7,"^9",86,"^:",35,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/request-animation-frame-end?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",35,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",86,"^9",86,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$event-handler?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",180,"^8",7,"^9",180,"^:",21,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-handler?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",21,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",180,"^9",180,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$subscription-created?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",136,"^8",7,"^9",136,"^:",28,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-created?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",136,"^9",136,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$subscription-match-state",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",353,"^8",7,"^9",353,"^:",31,"^7O",["^S",["^7P",["^S",[["~$sub-state","~$filtered-traces","~$new-matches"]]]]],"^80","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"^G","~$day8.re-frame-10x.metamorphic/subscription-match-state","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^8=","^8>","^8?"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",353,"^9",353,"^7W",3,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8=","^8>","^8?"]]]]],"^80","Build up the state of re-frame's running subscriptions over each matched epoch.\n  Returns initial state as first item in list"],"~$quiescent?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",206,"^8",7,"^9",206,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/quiescent?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",206,"^9",206,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$add-event-from-idle?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",126,"^8",7,"^9",126,"^:",27,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/add-event-from-idle?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",126,"^9",126,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$summarise-event",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",89,"^8",7,"^9",89,"^:",22,"^7O",["^S",["^7P",["^S",[["~$ev"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/summarise-event","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^8F"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",89,"^9",89,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8F"]]]]]],"~$unchanged-l2-subscription?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",164,"^8",7,"^9",164,"^:",33,"^7O",["^S",["^7P",["^S",[["~$sub"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/unchanged-l2-subscription?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",33,"^7T",["^S",[["^8I"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",164,"^9",164,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8I"]]]]]],"~$summarise-match",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",95,"^8",7,"^9",95,"^:",22,"^7O",["^S",["^7P",["^S",[["~$match"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/summarise-match","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",95,"^9",95,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$run-queue?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",78,"^8",7,"^9",78,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/run-queue?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",78,"^9",78,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$finish-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",170,"^8",7,"^9",170,"^:",18,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Marks the end of event processing running."],"^G","~$day8.re-frame-10x.metamorphic/finish-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",170,"^9",170,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Marks the end of event processing running."],"~$beginning-id",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",98,"^8",7,"^9",98,"^:",19,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/beginning-id","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",98,"^9",98,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$initial-sub-state",["^ ","^G","~$day8.re-frame-10x.metamorphic/initial-sub-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",1,"^9",214,"^:",23,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",214,"^8",6,"^9",214,"^:",23],"~:tag","~$cljs.core/IMap"],"~$subscription-info",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",271,"^8",7,"^9",271,"^:",24,"^7O",["^S",["^7P",["^S",[["~$initial-state","^8>","~$app-db-id"]]]]],"^80","Collect information about the subscription that we'd like\n  to know, like its layer."],"^G","~$day8.re-frame-10x.metamorphic/subscription-info","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",24,"^7T",["^S",[["^8Y","^8>","^8Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",271,"^9",271,"^7W",3,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8Y","^8>","^8Z"]]]]],"^80","Collect information about the subscription that we'd like\n  to know, like its layer."],"~$app-db-after",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",265,"^8",7,"^9",265,"^:",19,"^7O",["^S",["^7P",["^S",[["~$event-trace"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/app-db-after","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^91"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",265,"^9",265,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"~$parse-traces",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",219,"^8",7,"^9",219,"^:",19,"^7O",["^S",["^7P",["^S",[["~$parse-state","~$traces"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/parse-traces","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^94","^95"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",219,"^9",219,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^94","^95"]]]]]],"~$id-between-xf",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",3,"^8",7,"^9",3,"^:",20,"^7O",["^S",["^7P",["^S",[["~$beginning","~$ending"]]]]],"^80","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"^G","~$day8.re-frame-10x.metamorphic/id-between-xf","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^98","^99"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",3,"^9",3,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^98","^99"]]]]],"^80","Returns a transducer that filters for :id between beginning and ending. Inclusive on both ends."],"~$initial-parse-state",["^ ","^G","~$day8.re-frame-10x.metamorphic/initial-parse-state","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",1,"^9",209,"^:",25,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",209,"^8",6,"^9",209,"^:",25],"^8V","^8W"],"~$event-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",177,"^8",7,"^9",177,"^:",17,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",17,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",177,"^9",177,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$ending-id",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",101,"^8",7,"^9",101,"^:",16,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/ending-id","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",16,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",101,"^9",101,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$app-db-before",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",268,"^8",7,"^9",268,"^:",20,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/app-db-before","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^91"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",268,"^9",268,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^91"]]]]]],"~$subscription-not-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",146,"^8",7,"^9",146,"^:",28,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-not-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",28,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",146,"^9",146,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$event-dofx?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",183,"^8",7,"^9",183,"^:",18,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/event-dofx?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",18,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",183,"^9",183,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$render?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",161,"^8",7,"^9",161,"^:",14,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/render?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",14,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",161,"^9",161,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$matched-event",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",260,"^8",7,"^9",260,"^:",20,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/matched-event","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",20,"^7T",["^S",[["^8L"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",260,"^9",260,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8L"]]]]]],"~$request-animation-frame?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",83,"^8",7,"^9",83,"^:",31,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/request-animation-frame?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",31,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",83,"^9",83,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$reset-sub-state",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",293,"^8",7,"^9",293,"^:",22,"^7O",["^S",["^7P",["^S",[["^7["]]]]],"^80","Remove information about the subscription that is transient and specific to a single\n  phase."],"^G","~$day8.re-frame-10x.metamorphic/reset-sub-state","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^7["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",293,"^9",293,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7["]]]]],"^80","Remove information about the subscription that is transient and specific to a single\n  phase."],"~$start-of-epoch?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",186,"^8",7,"^9",186,"^:",22,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"^G","~$day8.re-frame-10x.metamorphic/start-of-epoch?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",22,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",186,"^9",186,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]],"^80","Detects the start of a re-frame epoch\n\n  Normally an epoch would always start with the queue being run, but with a dispatch-sync, the event is run directly."],"~$low-level-re-frame-trace?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",149,"^8",7,"^9",149,"^:",32,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of re-frame internals?"],"^G","~$day8.re-frame-10x.metamorphic/low-level-re-frame-trace?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",32,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",149,"^9",149,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]],"^80","Is this part of re-frame internals?"],"~$process-sub-traces",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",308,"^8",7,"^9",308,"^:",25,"^7O",["^S",["^7P",["^S",[["^8Y","^95"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/process-sub-traces","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",25,"^7T",["^S",[["^8Y","^95"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",308,"^9",308,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^8Y","^95"]]]]]],"~$subscription-re-run?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",140,"^8",7,"^9",140,"^:",27,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/subscription-re-run?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",27,"^7T",["^S",[["^7Q"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",140,"^9",140,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Q"]]]]]],"~$fsm-trigger?",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",42,"^8",7,"^9",42,"^:",19,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/fsm-trigger?","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^7Z"]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",42,"^9",42,"^7W",1,"^7X",true,"^7O",["^S",["^7P",["^S",[["^7Z"]]]]]],"~$elapsed-time",["^ ","^7N",null,"^5",["^ ","^6","day8/re_frame_10x/metamorphic.cljc","^7",72,"^8",7,"^9",72,"^:",19,"^7O",["^S",["^7P",["^S",[["~$ev1","~$ev2"]]]]]],"^G","~$day8.re-frame-10x.metamorphic/elapsed-time","^7S",false,"^6","day8/re_frame_10x/metamorphic.cljc","^:",19,"^7T",["^S",[["^9Z","^9["]]],"^7U",null,"^7V",["^S",[null,null]],"^8",1,"^7",72,"^9",72,"^7W",2,"^7X",true,"^7O",["^S",["^7P",["^S",[["^9Z","^9["]]]]]]],"^Q",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^F",["~:raf-end","~:add-event","~:tags","~:created?","~:unchanged?","~:sub/run","~:previous-value","~:idle","~:previous-event","~:app-db-after","~:else","~:reaction-state","~:reagent/quiescent","~:sub/create","~:value","~:child-of","~:re-frame.router/fsm-trigger","~:operation","~:start","~:run?","~:app-db-before","~:last-matched-id","~:duration","~:query-v","~:componentWillUnmount","~:first-matched-id","~:running","~:previous-matched-id","~:event/handler","~:render","~:event","~:layer","~:event/do-fx","~:pre-epoch-state","~:id","~:effects","~:run-queue","~:scheduled","~:raf","~:order","~:cached?","~:sub/dispose","~:coeffects","~:input-signals","~:interceptors","~:disposed?","~:partitions","~:end","~:reaction","~:op-type","~:finish-run","~:subscription","~:current-match","~:sub/traits"]],"^:Y",["^:T","^:B","^;7","^:D","^;5","^:C","^:W","^:V","^:X","^:2","^:H","^:A","^:4","^:F","^:;","^:U","^;0","^;2","^:9","^:3","^:Z","^:?","^:7","^:[","^:J","^:O","^;;","^:6","^:Y","^:Q","^:L","^;8","^:P","^:N","^:R","^::","^:>","^;:","^;4","^:G","^:S","^:=","^:<","^;1","^;3","^:5","^:E","^:8","^;6","^;9","^:I","^:@","^:K","^:M"]],"^U",["^ "],"^V",["^ "],"^W",["^N","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^73",[["^;>","~:static-fns"],true,["^;>","~:elide-asserts"],false,["^;>","~:optimize-constants"],null,["^;>","~:external-config"],null,["^;>","~:tooling-config"],null,["^;>","~:emit-constants"],null,["^;>","~:infer-externs"],true,["^;>","^12"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;>","~:fn-invoke-direct"],null,["^;>","^14"],"/dev/null"]]]