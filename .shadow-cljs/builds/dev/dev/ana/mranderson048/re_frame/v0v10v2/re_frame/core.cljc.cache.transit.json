["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v2.re_frame.core');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.events');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.subs');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interop');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.db');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.fx');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.cofx');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.router');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.loggers');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.registrar');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.std_interceptors');\ngoog.require('clojure.set');\nmranderson048.re_frame.v0v10v2.re_frame.core.dispatch = mranderson048.re_frame.v0v10v2.re_frame.router.dispatch;\nmranderson048.re_frame.v0v10v2.re_frame.core.dispatch_sync = mranderson048.re_frame.v0v10v2.re_frame.router.dispatch_sync;\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_sub = mranderson048.re_frame.v0v10v2.re_frame.subs.reg_sub;\nmranderson048.re_frame.v0v10v2.re_frame.core.subscribe = mranderson048.re_frame.v0v10v2.re_frame.subs.subscribe;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_sub = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.subs.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_subscription_cache_BANG_ = mranderson048.re_frame.v0v10v2.re_frame.subs.clear_subscription_cache_BANG_;\n/**\n * This is a low level, advanced function.  You should probably be\n *   using reg-sub instead.\n *   Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_sub_raw = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_sub_raw(query_id,handler_fn){\nreturn mranderson048.re_frame.v0v10v2.re_frame.registrar.register_handler(mranderson048.re_frame.v0v10v2.re_frame.subs.kind,query_id,handler_fn);\n});\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_fx = mranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_fx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.fx.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_cofx = mranderson048.re_frame.v0v10v2.re_frame.cofx.reg_cofx;\nmranderson048.re_frame.v0v10v2.re_frame.core.inject_cofx = mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_cofx;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_cofx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.cofx.kind);\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (db event) -> db\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of this\n * chain.\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_db(var_args){\nvar G__42918 = arguments.length;\nswitch (G__42918) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (coeffects-map event-vector) -> effects-map\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of the\n * interceptor chain.  These interceptors inject the value of app-db into coeffects,\n * and, later, action effects.\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_fx(var_args){\nvar G__42921 = arguments.length;\nswitch (G__42921) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (context-map event-vector) -> context-map\n * \n *   This form of registration is almost never used. \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_ctx(var_args){\nvar G__42924 = arguments.length;\nswitch (G__42924) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity = 3;\n\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.events.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.debug = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.debug;\nmranderson048.re_frame.v0v10v2.re_frame.core.path = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.path;\nmranderson048.re_frame.v0v10v2.re_frame.core.enrich = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.enrich;\nmranderson048.re_frame.v0v10v2.re_frame.core.trim_v = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.trim_v;\nmranderson048.re_frame.v0v10v2.re_frame.core.after = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.after;\nmranderson048.re_frame.v0v10v2.re_frame.core.on_changes = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.on_changes;\nmranderson048.re_frame.v0v10v2.re_frame.core.__GT_interceptor = mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor;\nmranderson048.re_frame.v0v10v2.re_frame.core.get_coeffect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect;\nmranderson048.re_frame.v0v10v2.re_frame.core.assoc_coeffect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect;\nmranderson048.re_frame.v0v10v2.re_frame.core.get_effect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect;\nmranderson048.re_frame.v0v10v2.re_frame.core.assoc_effect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_effect;\nmranderson048.re_frame.v0v10v2.re_frame.core.enqueue = mranderson048.re_frame.v0v10v2.re_frame.interceptor.enqueue;\nmranderson048.re_frame.v0v10v2.re_frame.core.set_loggers_BANG_ = mranderson048.re_frame.v0v10v2.re_frame.loggers.set_loggers_BANG_;\nmranderson048.re_frame.v0v10v2.re_frame.core.console = mranderson048.re_frame.v0v10v2.re_frame.loggers.console;\n/**\n * Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n *   later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n * \n *   Checkpoint includes app-db, all registered handlers and all subscriptions.\n *   \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.make_restore_fn = (function mranderson048$re_frame$v0v10v2$re_frame$core$make_restore_fn(){\nvar handlers = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler);\nvar app_db = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.db.app_db);\nvar subs_cache = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.subs.query__GT_reaction);\nreturn ((function (handlers,app_db,subs_cache){\nreturn (function (){\nvar original_subs_42930 = cljs.core.set(cljs.core.vals(subs_cache));\nvar current_subs_42931 = cljs.core.set(cljs.core.vals(cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.subs.query__GT_reaction)));\nvar seq__42926_42932 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_42931,original_subs_42930));\nvar chunk__42927_42933 = null;\nvar count__42928_42934 = (0);\nvar i__42929_42935 = (0);\nwhile(true){\nif((i__42929_42935 < count__42928_42934)){\nvar sub_42936 = chunk__42927_42933.cljs$core$IIndexed$_nth$arity$2(null,i__42929_42935);\nmranderson048.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_42936);\n\n\nvar G__42937 = seq__42926_42932;\nvar G__42938 = chunk__42927_42933;\nvar G__42939 = count__42928_42934;\nvar G__42940 = (i__42929_42935 + (1));\nseq__42926_42932 = G__42937;\nchunk__42927_42933 = G__42938;\ncount__42928_42934 = G__42939;\ni__42929_42935 = G__42940;\ncontinue;\n} else {\nvar temp__5457__auto___42941 = cljs.core.seq(seq__42926_42932);\nif(temp__5457__auto___42941){\nvar seq__42926_42942__$1 = temp__5457__auto___42941;\nif(cljs.core.chunked_seq_QMARK_(seq__42926_42942__$1)){\nvar c__4351__auto___42943 = cljs.core.chunk_first(seq__42926_42942__$1);\nvar G__42944 = cljs.core.chunk_rest(seq__42926_42942__$1);\nvar G__42945 = c__4351__auto___42943;\nvar G__42946 = cljs.core.count(c__4351__auto___42943);\nvar G__42947 = (0);\nseq__42926_42932 = G__42944;\nchunk__42927_42933 = G__42945;\ncount__42928_42934 = G__42946;\ni__42929_42935 = G__42947;\ncontinue;\n} else {\nvar sub_42948 = cljs.core.first(seq__42926_42942__$1);\nmranderson048.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_42948);\n\n\nvar G__42949 = cljs.core.next(seq__42926_42942__$1);\nvar G__42950 = null;\nvar G__42951 = (0);\nvar G__42952 = (0);\nseq__42926_42932 = G__42949;\nchunk__42927_42933 = G__42950;\ncount__42928_42934 = G__42951;\ni__42929_42935 = G__42952;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler,handlers);\n\ncljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.db.app_db,app_db);\n\nreturn null;\n});\n;})(handlers,app_db,subs_cache))\n});\n/**\n * Registers a function `f` to be called after each event is processed\n * `f` will be called with two arguments:\n *  - `event`: a vector. The event just processed.\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n * \n * This is useful in advanced cases like:\n *   - you are implementing a complex bootstrap pipeline\n *   - you want to create your own handling infrastructure, with perhaps multiple\n *     handlers for the one event, etc.  Hook in here.\n *   - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n * \n *   'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n *   be used at \"remove time\" to get rid of the right callback.\n *   \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback = (function mranderson048$re_frame$v0v10v2$re_frame$core$add_post_event_callback(var_args){\nvar G__42954 = arguments.length;\nswitch (G__42954) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 = (function (id,f){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.add_post_event_callback(mranderson048.re_frame.v0v10v2.re_frame.router.event_queue,id,f);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity = 2;\n\nmranderson048.re_frame.v0v10v2.re_frame.core.remove_post_event_callback = (function mranderson048$re_frame$v0v10v2$re_frame$core$remove_post_event_callback(id){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.remove_post_event_callback(mranderson048.re_frame.v0v10v2.re_frame.router.event_queue,id);\n});\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler = (function mranderson048$re_frame$v0v10v2$re_frame$core$register_handler(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___42961 = arguments.length;\nvar i__4532__auto___42962 = (0);\nwhile(true){\nif((i__4532__auto___42962 < len__4531__auto___42961)){\nargs__4534__auto__.push((arguments[i__4532__auto___42962]));\n\nvar G__42963 = (i__4532__auto___42962 + (1));\ni__4532__auto___42962 = G__42963;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__42957_42964 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__42958_42965 = \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \";\nvar G__42959_42966 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args))].join('');\nvar G__42960_42967 = \")\";\n(mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__42957_42964,G__42958_42965,G__42959_42966,G__42960_42967) : mranderson048.re_frame.v0v10v2.re_frame.core.console.call(null,G__42957_42964,G__42958_42965,G__42959_42966,G__42960_42967));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db,args);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$applyTo = (function (seq42956){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq42956));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub = (function mranderson048$re_frame$v0v10v2$re_frame$core$register_sub(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___42973 = arguments.length;\nvar i__4532__auto___42974 = (0);\nwhile(true){\nif((i__4532__auto___42974 < len__4531__auto___42973)){\nargs__4534__auto__.push((arguments[i__4532__auto___42974]));\n\nvar G__42975 = (i__4532__auto___42974 + (1));\ni__4532__auto___42974 = G__42975;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__42969_42976 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__42970_42977 = \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \";\nvar G__42971_42978 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args))].join('');\nvar G__42972_42979 = \")\";\n(mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__42969_42976,G__42970_42977,G__42971_42978,G__42972_42979) : mranderson048.re_frame.v0v10v2.re_frame.core.console.call(null,G__42969_42976,G__42970_42977,G__42971_42978,G__42972_42979));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.core.reg_sub_raw,args);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$applyTo = (function (seq42968){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq42968));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",49],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v2.re-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$subs","~$mranderson048.re-frame.v0v10v2.re-frame.subs","~$set","~$clojure.set","~$cofx","~$mranderson048.re-frame.v0v10v2.re-frame.cofx","~$fx","~$mranderson048.re-frame.v0v10v2.re-frame.fx","~$loggers","~$mranderson048.re-frame.v0v10v2.re-frame.loggers","^V","^V","~$cljs.core","^W","~$interceptor","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor","~$goog","^Z","~$mranderson048.re-frame.v0v10v2.re-frame.db","^[","~$router","~$mranderson048.re-frame.v0v10v2.re-frame.router","~$mranderson048.re-frame.v0v10v2.re-frame.std-interceptors","^12","~$db","^[","~$registrar","~$mranderson048.re-frame.v0v10v2.re-frame.registrar","^Y","^Y","^15","^15","^P","^P","~$events","~$mranderson048.re-frame.v0v10v2.re-frame.events","^R","^R","^11","^11","^N","^N","^T","^T","^17","^17","~$interop","~$mranderson048.re-frame.v0v10v2.re-frame.interop","~$std-interceptors","^12","^19","^19"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$db-handler->interceptor","^12","~$fx-handler->interceptor","^12","~$ctx-handler->interceptor","^12"],"~:require-macros",["^ ","^W","^W"],"~:form",["~#list",["~$ns","^H",["^1C",["^1<",["^17","~:as","^16"],["^N","^1E","^M"],["^19","^1E","^18"],["^[","^1E","^13"],["^T","^1E","^S"],["^R","^1E","^Q"],["^11","^1E","^10"],["^V","^1E","^U"],["^15","^1E","^14"],["^Y","^1E","^X"],["^12","^1E","^1:","~:refer",["^1>","^1?","^1@"]],["^P","^1E","^O"]]]]],"~:flags",["^ ","^1<",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v2/re_frame/core.cljc"],"~:compiled-at",1537561398984,"~:resource-name","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v2.re-frame.core\n  (:require\n    [mranderson048.re-frame.v0v10v2.re-frame.events           :as events]\n    [mranderson048.re-frame.v0v10v2.re-frame.subs             :as subs]\n    [mranderson048.re-frame.v0v10v2.re-frame.interop          :as interop]\n    [mranderson048.re-frame.v0v10v2.re-frame.db               :as db]\n    [mranderson048.re-frame.v0v10v2.re-frame.fx               :as fx]\n    [mranderson048.re-frame.v0v10v2.re-frame.cofx             :as cofx]\n    [mranderson048.re-frame.v0v10v2.re-frame.router           :as router]\n    [mranderson048.re-frame.v0v10v2.re-frame.loggers          :as loggers]\n    [mranderson048.re-frame.v0v10v2.re-frame.registrar        :as registrar]\n    [mranderson048.re-frame.v0v10v2.re-frame.interceptor      :as interceptor]\n    [mranderson048.re-frame.v0v10v2.re-frame.std-interceptors :as std-interceptors :refer [db-handler->interceptor\n                                                             fx-handler->interceptor\n                                                             ctx-handler->interceptor]]\n    [clojure.set               :as set]))\n\n\n;; -- API ---------------------------------------------------------------------\n;;\n;; This namespace represents the mranderson048.re-frame.v0v10v2.re-frame API\n;;\n;; Below, you'll see we've used this technique:\n;;   (def  api-name-for-fn    deeper.namespace/where-the-defn-is)\n;;\n;; So, we promote a `defn` in a deeper namespace \"up\" to the API\n;; via a `def` in this namespace.\n;;\n;; Turns out, this approach makes it hard:\n;;   - to auto-generate API docs\n;;   - for IDEs to provide code completion on functions in the API\n;;\n;; Which is annoying. But there are pros and cons and we haven't\n;; yet revisited the decision.  To compensate, we've added more nudity\n;; to the docs.\n;;\n\n\n;; -- dispatch ----------------------------------------------------------------\n(def dispatch       router/dispatch)\n(def dispatch-sync  router/dispatch-sync)\n\n\n;; -- subscriptions -----------------------------------------------------------\n(def reg-sub        subs/reg-sub)\n(def subscribe      subs/subscribe)\n\n(def clear-sub (partial registrar/clear-handlers subs/kind))  ;; think unreg-sub\n(def clear-subscription-cache! subs/clear-subscription-cache!)\n\n(defn reg-sub-raw\n  \"This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\"\n  [query-id handler-fn]\n  (registrar/register-handler subs/kind query-id handler-fn))\n\n\n;; -- effects -----------------------------------------------------------------\n(def reg-fx      fx/reg-fx)\n(def clear-fx    (partial registrar/clear-handlers fx/kind))  ;; think unreg-fx\n\n;; -- coeffects ---------------------------------------------------------------\n(def reg-cofx    cofx/reg-cofx)\n(def inject-cofx cofx/inject-cofx)\n(def clear-cofx (partial registrar/clear-handlers cofx/kind)) ;; think unreg-cofx\n\n\n;; -- Events ------------------------------------------------------------------\n\n(defn reg-event-db\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.\"\n  ([id handler]\n    (reg-event-db id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (db-handler->interceptor handler)])))\n\n\n(defn reg-event-fx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.\"\n  ([id handler]\n   (reg-event-fx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (fx-handler->interceptor handler)])))\n\n\n(defn reg-event-ctx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. \"\n  ([id handler]\n   (reg-event-ctx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (ctx-handler->interceptor handler)])))\n\n(def clear-event (partial registrar/clear-handlers events/kind)) ;; think unreg-event-*\n\n;; -- interceptors ------------------------------------------------------------\n\n;; Standard interceptors.\n;; Detailed docs on each in std-interceptors.cljs\n(def debug       std-interceptors/debug)\n(def path        std-interceptors/path)\n(def enrich      std-interceptors/enrich)\n(def trim-v      std-interceptors/trim-v)\n(def after       std-interceptors/after)\n(def on-changes  std-interceptors/on-changes)\n\n\n;; Utility functions for creating your own interceptors\n;;\n;;  (def my-interceptor\n;;     (->interceptor                ;; used to create an interceptor\n;;       :id     :my-interceptor     ;; an id - decorative only\n;;       :before (fn [context]                         ;; you normally want to change :coeffects\n;;                  ... use get-coeffect  and assoc-coeffect\n;;                       )\n;;       :after  (fn [context]                         ;; you normally want to change :effects\n;;                 (let [db (get-effect context :db)]  ;; (get-in context [:effects :db])\n;;                   (assoc-effect context :http-ajax {...}])))))\n;;\n(def ->interceptor   interceptor/->interceptor)\n(def get-coeffect    interceptor/get-coeffect)\n(def assoc-coeffect  interceptor/assoc-coeffect)\n(def get-effect      interceptor/get-effect)\n(def assoc-effect    interceptor/assoc-effect)\n(def enqueue         interceptor/enqueue)\n\n\n;; --  logging ----------------------------------------------------------------\n;; Internally, mranderson048.re-frame.v0v10v2.re-frame uses the logging functions: warn, log, error, group and groupEnd\n;; By default, these functions map directly to the js/console implementations,\n;; but you can override with your own fns (set or subset).\n;; Example Usage:\n;;   (defn my-fn [& args]  (post-it-somewhere (apply str args)))  ;; here is my alternative\n;;   (mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!  {:warn my-fn :log my-fn})       ;; override the defaults with mine\n(def set-loggers! loggers/set-loggers!)\n\n;; If you are writing an extension to re-frame, like perhaps\n;; an effects handler, you may want to use mranderson048.re-frame.v0v10v2.re-frame logging.\n;;\n;; usage: (console :error \"Oh, dear God, it happened: \" a-var \" and \" another)\n;;        (console :warn \"Possible breach of containment wall at: \" dt)\n(def console loggers/console)\n\n\n;; -- unit testing ------------------------------------------------------------\n\n(defn make-restore-fn\n  \"Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  \"\n  []\n  (let [handlers @registrar/kind->id->handler\n        app-db   @db/app-db\n\t\t\t\tsubs-cache @subs/query->reaction]\n    (fn []\n\t\t\t;; call `dispose!` on all current subscriptions which\n\t\t\t;; didn't originally exist.\n      (let [original-subs (set (vals subs-cache))\n            current-subs  (set (vals @subs/query->reaction))]\n        (doseq [sub (set/difference current-subs original-subs)]\n          (interop/dispose! sub)))\n\n      ;; Reset the atoms\n      ;; We don't need to reset subs/query->reaction, as\n      ;; disposing of the subs removes them from the cache anyway\n      (reset! registrar/kind->id->handler handlers)\n      (reset! db/app-db app-db)\n      nil)))\n\n\n;; -- Event Processing Callbacks  ---------------------------------------------\n\n(defn add-post-event-callback\n  \"Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \\\"add time\\\" so it can subsequently\n  be used at \\\"remove time\\\" to get rid of the right callback.\n  \"\n  ([f]\n   (add-post-event-callback f f))   ;; use f as its own identifier\n  ([id f]\n   (router/add-post-event-callback mranderson048.re-frame.v0v10v2.re-frame.router/event-queue id f)))\n\n\n(defn remove-post-event-callback\n  [id]\n  (router/remove-post-event-callback mranderson048.re-frame.v0v10v2.re-frame.router/event-queue id))\n\n\n;; --  Deprecation ------------------------------------------------------------\n;; Assisting the v0.7.x ->  v0.8.x transition.\n(defn register-handler\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-event-db args))\n\n(defn register-sub\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-sub-raw args))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i39",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",14]],"~i5",[["^ ","^1T",0,"^1U",14,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/dispatch"]],"~i20",[["^ ","^1T",56,"^1U",14,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch"]]],"~i40",["^ ","~i0",[["^ ","^1T",0,"^1U",15]],"~i5",[["^ ","^1T",0,"^1U",15,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/dispatch-sync"]],"^1V",[["^ ","^1T",61,"^1U",15,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch-sync"]]],"~i44",["^ ","~i0",[["^ ","^1T",0,"^1U",16]],"~i5",[["^ ","^1T",0,"^1U",16,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub"]],"^1V",[["^ ","^1T",55,"^1U",16,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/reg-sub"]]],"~i45",["^ ","~i0",[["^ ","^1T",0,"^1U",17]],"~i5",[["^ ","^1T",0,"^1U",17,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/subscribe"]],"^1V",[["^ ","^1T",57,"^1U",17,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/subscribe"]]],"~i47",["^ ","~i0",[["^ ","^1T",0,"^1U",18]],"~i5",[["^ ","^1T",0,"^1U",18,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/clear-sub"]],"~i15",[["^ ","^1T",57,"^1U",18]],"~i16",[["^ ","^1T",57,"^1U",18,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i24",[["^ ","^1T",105,"^1U",18,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"~i49",[["^ ","^1T",170,"^1U",18,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/kind"]]],"~i48",["^ ","~i0",[["^ ","^1T",0,"^1U",19]],"~i5",[["^ ","^1T",0,"^1U",19,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!"]],"~i31",[["^ ","^1T",78,"^1U",19,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/clear-subscription-cache!"]]],"~i50",["^ ","~i0",[["^ ","^1T",0,"^1U",20],["^ ","^1T",59,"^1U",25],["^ ","^1T",0,"^1U",26]],"~i6",[["^ ","^1T",0,"^1U",25,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub-raw"]]],"~i54",["^ ","~i3",[["^ ","^1T",126,"^1U",25,"^G","query-id"]],"~i12",[["^ ","^1T",135,"^1U",25,"^G","handler-fn"]]],"~i55",["^ ","~i2",[["^ ","^1T",0,"^1U",26]],"~i3",[["^ ","^1T",7,"^1U",26,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/register-handler"]],"~i30",[["^ ","^1T",74,"^1U",26,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/kind"]],"^1W",[["^ ","^1T",124,"^1U",26,"^G","query-id"]],"^22",[["^ ","^1T",133,"^1U",26,"^G","handler-fn"]]],"~i59",["^ ","~i0",[["^ ","^1T",0,"^1U",28]],"~i5",[["^ ","^1T",0,"^1U",28,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-fx"]],"~i17",[["^ ","^1T",54,"^1U",28,"^G","mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx"]]],"~i60",["^ ","~i0",[["^ ","^1T",0,"^1U",29]],"~i5",[["^ ","^1T",0,"^1U",29,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/clear-fx"]],"^2;",[["^ ","^1T",56,"^1U",29]],"~i18",[["^ ","^1T",56,"^1U",29,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i26",[["^ ","^1T",104,"^1U",29,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"~i51",[["^ ","^1T",169,"^1U",29,"^G","mranderson048.re-frame.v0v10v2.re-frame.fx/kind"]]],"~i63",["^ ","~i0",[["^ ","^1T",0,"^1U",30]],"~i5",[["^ ","^1T",0,"^1U",30,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-cofx"]],"^2;",[["^ ","^1T",56,"^1U",30,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/reg-cofx"]]],"~i64",["^ ","~i0",[["^ ","^1T",0,"^1U",31]],"~i5",[["^ ","^1T",0,"^1U",31,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/inject-cofx"]],"^2;",[["^ ","^1T",59,"^1U",31,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-cofx"]]],"~i65",["^ ","~i0",[["^ ","^1T",0,"^1U",32]],"~i5",[["^ ","^1T",0,"^1U",32,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/clear-cofx"]],"^20",[["^ ","^1T",58,"^1U",32]],"^2;",[["^ ","^1T",58,"^1U",32,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"~i25",[["^ ","^1T",106,"^1U",32,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"^25",[["^ ","^1T",171,"^1U",32,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/kind"]]],"~i70",["^ ","~i0",[["^ ","^1T",0,"^1U",33],["^ ","^1T",0,"^1U",33],["^ ","^1T",60,"^1U",44],["^ ","^1T",128,"^1U",44,"^G","var_args"],["^ ","^1T",0,"^1U",45],["^ ","^1T",0,"^1U",45],["^ ","^1T",4,"^1U",45,"^G","G__42918"],["^ ","^1T",15,"^1U",45],["^ ","^1T",15,"^1U",45],["^ ","^1T",0,"^1U",46],["^ ","^1T",0,"^1U",46],["^ ","^1T",8,"^1U",46,"^G","G__42918"],["^ ","^1T",5,"^1U",47],["^ ","^1T",0,"^1U",48],["^ ","^1T",7,"^1U",48,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1T",95,"^1U",48],["^ ","^1T",96,"^1U",48],["^ ","^1T",106,"^1U",48],["^ ","^1T",112,"^1U",48],["^ ","^1T",113,"^1U",48],["^ ","^1T",123,"^1U",48],["^ ","^1T",5,"^1U",51],["^ ","^1T",0,"^1U",52],["^ ","^1T",7,"^1U",52,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1T",95,"^1U",52],["^ ","^1T",96,"^1U",52],["^ ","^1T",106,"^1U",52],["^ ","^1T",112,"^1U",52],["^ ","^1T",113,"^1U",52],["^ ","^1T",123,"^1U",52],["^ ","^1T",129,"^1U",52],["^ ","^1T",130,"^1U",52],["^ ","^1T",140,"^1U",52],["^ ","^1T",0,"^1U",56],["^ ","^1T",6,"^1U",56],["^ ","^1T",11,"^1U",56,"^G","js/Error"],["^ ","^1T",17,"^1U",56],["^ ","^1T",18,"^1U",56],["^ ","^1T",80,"^1U",56],["^ ","^1T",80,"^1U",56],["^ ","^1T",0,"^1U",61],["^ ","^1T",0,"^1U",61],["^ ","^1T",90,"^1U",61],["^ ","^1T",0,"^1U",62],["^ ","^1T",0,"^1U",65],["^ ","^1T",0,"^1U",65],["^ ","^1T",90,"^1U",65],["^ ","^1T",0,"^1U",66],["^ ","^1T",0,"^1U",69],["^ ","^1T",0,"^1U",69],["^ ","^1T",84,"^1U",69],["^ ","^1T",0,"^1U",71]],"~i6",[["^ ","^1T",0,"^1U",44,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1T",0,"^1U",61,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1T",0,"^1U",65,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"],["^ ","^1T",0,"^1U",69,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"]]],"~i80",["^ ","~i4",[["^ ","^1T",101,"^1U",61,"^G","id"]],"~i7",[["^ ","^1T",104,"^1U",61,"^G","handler"]]],"~i81",["^ ","~i4",[["^ ","^1T",0,"^1U",62],["^ ","^1T",98,"^1U",62]],"~i5",[["^ ","^1T",7,"^1U",62,"^G","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3"]],"^2=",[["^ ","^1T",95,"^1U",62,"^G","id"]],"^2C",[["^ ","^1T",103,"^1U",62,"^G","handler"]]],"~i82",["^ ","~i4",[["^ ","^1T",101,"^1U",65,"^G","id"]],"~i7",[["^ ","^1T",104,"^1U",65,"^G","interceptors"]],"^1V",[["^ ","^1T",117,"^1U",65,"^G","handler"]]],"~i83",["^ ","~i3",[["^ ","^1T",0,"^1U",66],["^ ","^1T",66,"^1U",66]],"~i4",[["^ ","^1T",7,"^1U",66,"^G","mranderson048.re-frame.v0v10v2.re-frame.events/register"]],"^1V",[["^ ","^1T",63,"^1U",66,"^G","id"]],"^21",[["^ ","^1T",149,"^1U",66,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1S",[["^ ","^1T",204,"^1U",66,"^G","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^23",[["^ ","^1T",253,"^1U",66,"^G","interceptors"]],"~i61",[["^ ","^1T",266,"^1U",66]],"~i62",[["^ ","^1T",266,"^1U",66,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/db-handler->interceptor"]],"~i86",[["^ ","^1T",350,"^1U",66,"^G","handler"]]],"^2K",["^ ","~i0",[["^ ","^1T",0,"^1U",71],["^ ","^1T",0,"^1U",71],["^ ","^1T",60,"^1U",83],["^ ","^1T",128,"^1U",83,"^G","var_args"],["^ ","^1T",0,"^1U",84],["^ ","^1T",0,"^1U",84],["^ ","^1T",4,"^1U",84,"^G","G__42921"],["^ ","^1T",15,"^1U",84],["^ ","^1T",15,"^1U",84],["^ ","^1T",0,"^1U",85],["^ ","^1T",0,"^1U",85],["^ ","^1T",8,"^1U",85,"^G","G__42921"],["^ ","^1T",5,"^1U",86],["^ ","^1T",0,"^1U",87],["^ ","^1T",7,"^1U",87,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1T",95,"^1U",87],["^ ","^1T",96,"^1U",87],["^ ","^1T",106,"^1U",87],["^ ","^1T",112,"^1U",87],["^ ","^1T",113,"^1U",87],["^ ","^1T",123,"^1U",87],["^ ","^1T",5,"^1U",90],["^ ","^1T",0,"^1U",91],["^ ","^1T",7,"^1U",91,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1T",95,"^1U",91],["^ ","^1T",96,"^1U",91],["^ ","^1T",106,"^1U",91],["^ ","^1T",112,"^1U",91],["^ ","^1T",113,"^1U",91],["^ ","^1T",123,"^1U",91],["^ ","^1T",129,"^1U",91],["^ ","^1T",130,"^1U",91],["^ ","^1T",140,"^1U",91],["^ ","^1T",0,"^1U",95],["^ ","^1T",6,"^1U",95],["^ ","^1T",11,"^1U",95,"^G","js/Error"],["^ ","^1T",17,"^1U",95],["^ ","^1T",18,"^1U",95],["^ ","^1T",80,"^1U",95],["^ ","^1T",80,"^1U",95],["^ ","^1T",0,"^1U",100],["^ ","^1T",0,"^1U",100],["^ ","^1T",90,"^1U",100],["^ ","^1T",0,"^1U",101],["^ ","^1T",0,"^1U",104],["^ ","^1T",0,"^1U",104],["^ ","^1T",90,"^1U",104],["^ ","^1T",0,"^1U",105],["^ ","^1T",0,"^1U",108],["^ ","^1T",0,"^1U",108],["^ ","^1T",84,"^1U",108],["^ ","^1T",0,"^1U",110]],"~i6",[["^ ","^1T",0,"^1U",83,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1T",0,"^1U",100,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1T",0,"^1U",104,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"],["^ ","^1T",0,"^1U",108,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx"]]],"~i97",["^ ","~i4",[["^ ","^1T",101,"^1U",100,"^G","id"]],"~i7",[["^ ","^1T",104,"^1U",100,"^G","handler"]]],"~i98",["^ ","~i3",[["^ ","^1T",0,"^1U",101],["^ ","^1T",98,"^1U",101]],"~i4",[["^ ","^1T",7,"^1U",101,"^G","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3"]],"^2;",[["^ ","^1T",95,"^1U",101,"^G","id"]],"^21",[["^ ","^1T",103,"^1U",101,"^G","handler"]]],"~i99",["^ ","~i4",[["^ ","^1T",101,"^1U",104,"^G","id"]],"~i7",[["^ ","^1T",104,"^1U",104,"^G","interceptors"]],"^1V",[["^ ","^1T",117,"^1U",104,"^G","handler"]]],"~i100",["^ ","~i3",[["^ ","^1T",0,"^1U",105],["^ ","^1T",66,"^1U",105]],"~i4",[["^ ","^1T",7,"^1U",105,"^G","mranderson048.re-frame.v0v10v2.re-frame.events/register"]],"^1V",[["^ ","^1T",63,"^1U",105,"^G","id"]],"^21",[["^ ","^1T",149,"^1U",105,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1S",[["^ ","^1T",204,"^1U",105,"^G","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^23",[["^ ","^1T",253,"^1U",105,"^G","interceptors"]],"^2I",[["^ ","^1T",266,"^1U",105]],"^2J",[["^ ","^1T",266,"^1U",105,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/fx-handler->interceptor"]],"^2K",[["^ ","^1T",350,"^1U",105,"^G","handler"]]],"~i103",["^ ","~i0",[["^ ","^1T",0,"^1U",110],["^ ","^1T",0,"^1U",110],["^ ","^1T",61,"^1U",118],["^ ","^1T",130,"^1U",118,"^G","var_args"],["^ ","^1T",0,"^1U",119],["^ ","^1T",0,"^1U",119],["^ ","^1T",4,"^1U",119,"^G","G__42924"],["^ ","^1T",15,"^1U",119],["^ ","^1T",15,"^1U",119],["^ ","^1T",0,"^1U",120],["^ ","^1T",0,"^1U",120],["^ ","^1T",8,"^1U",120,"^G","G__42924"],["^ ","^1T",5,"^1U",121],["^ ","^1T",0,"^1U",122],["^ ","^1T",7,"^1U",122,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1T",96,"^1U",122],["^ ","^1T",97,"^1U",122],["^ ","^1T",107,"^1U",122],["^ ","^1T",113,"^1U",122],["^ ","^1T",114,"^1U",122],["^ ","^1T",124,"^1U",122],["^ ","^1T",5,"^1U",125],["^ ","^1T",0,"^1U",126],["^ ","^1T",7,"^1U",126,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1T",96,"^1U",126],["^ ","^1T",97,"^1U",126],["^ ","^1T",107,"^1U",126],["^ ","^1T",113,"^1U",126],["^ ","^1T",114,"^1U",126],["^ ","^1T",124,"^1U",126],["^ ","^1T",130,"^1U",126],["^ ","^1T",131,"^1U",126],["^ ","^1T",141,"^1U",126],["^ ","^1T",0,"^1U",130],["^ ","^1T",6,"^1U",130],["^ ","^1T",11,"^1U",130,"^G","js/Error"],["^ ","^1T",17,"^1U",130],["^ ","^1T",18,"^1U",130],["^ ","^1T",80,"^1U",130],["^ ","^1T",80,"^1U",130],["^ ","^1T",0,"^1U",135],["^ ","^1T",0,"^1U",135],["^ ","^1T",91,"^1U",135],["^ ","^1T",0,"^1U",136],["^ ","^1T",0,"^1U",139],["^ ","^1T",0,"^1U",139],["^ ","^1T",91,"^1U",139],["^ ","^1T",0,"^1U",140],["^ ","^1T",0,"^1U",143],["^ ","^1T",0,"^1U",143],["^ ","^1T",85,"^1U",143],["^ ","^1T",0,"^1U",145]],"~i6",[["^ ","^1T",0,"^1U",118,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1T",0,"^1U",135,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1T",0,"^1U",139,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"],["^ ","^1T",0,"^1U",143,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx"]]],"~i110",["^ ","~i4",[["^ ","^1T",102,"^1U",135,"^G","id"]],"~i7",[["^ ","^1T",105,"^1U",135,"^G","handler"]]],"~i111",["^ ","~i3",[["^ ","^1T",0,"^1U",136],["^ ","^1T",99,"^1U",136]],"~i4",[["^ ","^1T",7,"^1U",136,"^G","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3"]],"^2=",[["^ ","^1T",96,"^1U",136,"^G","id"]],"^2C",[["^ ","^1T",104,"^1U",136,"^G","handler"]]],"~i112",["^ ","~i4",[["^ ","^1T",102,"^1U",139,"^G","id"]],"~i7",[["^ ","^1T",105,"^1U",139,"^G","interceptors"]],"^1V",[["^ ","^1T",118,"^1U",139,"^G","handler"]]],"~i113",["^ ","~i3",[["^ ","^1T",0,"^1U",140],["^ ","^1T",66,"^1U",140]],"~i4",[["^ ","^1T",7,"^1U",140,"^G","mranderson048.re-frame.v0v10v2.re-frame.events/register"]],"^1V",[["^ ","^1T",63,"^1U",140,"^G","id"]],"^21",[["^ ","^1T",149,"^1U",140,"^G","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-db"]],"^1S",[["^ ","^1T",204,"^1U",140,"^G","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx"]],"^23",[["^ ","^1T",253,"^1U",140,"^G","interceptors"]],"^2I",[["^ ","^1T",266,"^1U",140]],"^2J",[["^ ","^1T",266,"^1U",140,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/ctx-handler->interceptor"]],"~i87",[["^ ","^1T",351,"^1U",140,"^G","handler"]]],"~i115",["^ ","~i0",[["^ ","^1T",0,"^1U",145]],"~i5",[["^ ","^1T",0,"^1U",145,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/clear-event"]],"^2;",[["^ ","^1T",59,"^1U",145]],"^2=",[["^ ","^1T",59,"^1U",145,"^G","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^2>",[["^ ","^1T",107,"^1U",145,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers"]],"^2?",[["^ ","^1T",172,"^1U",145,"^G","mranderson048.re-frame.v0v10v2.re-frame.events/kind"]]],"~i121",["^ ","~i0",[["^ ","^1T",0,"^1U",146]],"~i5",[["^ ","^1T",0,"^1U",146,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/debug"]],"^2;",[["^ ","^1T",53,"^1U",146,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/debug"]]],"~i122",["^ ","~i0",[["^ ","^1T",0,"^1U",147]],"~i5",[["^ ","^1T",0,"^1U",147,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/path"]],"^2;",[["^ ","^1T",52,"^1U",147,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/path"]]],"~i123",["^ ","~i0",[["^ ","^1T",0,"^1U",148]],"~i5",[["^ ","^1T",0,"^1U",148,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/enrich"]],"^2;",[["^ ","^1T",54,"^1U",148,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/enrich"]]],"~i124",["^ ","~i0",[["^ ","^1T",0,"^1U",149]],"~i5",[["^ ","^1T",0,"^1U",149,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/trim-v"]],"^2;",[["^ ","^1T",54,"^1U",149,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/trim-v"]]],"~i125",["^ ","~i0",[["^ ","^1T",0,"^1U",150]],"~i5",[["^ ","^1T",0,"^1U",150,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/after"]],"^2;",[["^ ","^1T",53,"^1U",150,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/after"]]],"~i126",["^ ","~i0",[["^ ","^1T",0,"^1U",151]],"~i5",[["^ ","^1T",0,"^1U",151,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/on-changes"]],"^2;",[["^ ","^1T",58,"^1U",151,"^G","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/on-changes"]]],"~i141",["^ ","~i0",[["^ ","^1T",0,"^1U",152]],"~i5",[["^ ","^1T",0,"^1U",152,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/->interceptor"]],"~i21",[["^ ","^1T",64,"^1U",152,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"]]],"~i142",["^ ","~i0",[["^ ","^1T",0,"^1U",153]],"~i5",[["^ ","^1T",0,"^1U",153,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/get-coeffect"]],"^32",[["^ ","^1T",60,"^1U",153,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"]]],"~i143",["^ ","~i0",[["^ ","^1T",0,"^1U",154]],"~i5",[["^ ","^1T",0,"^1U",154,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/assoc-coeffect"]],"^32",[["^ ","^1T",62,"^1U",154,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]]],"~i144",["^ ","~i0",[["^ ","^1T",0,"^1U",155]],"~i5",[["^ ","^1T",0,"^1U",155,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/get-effect"]],"^32",[["^ ","^1T",58,"^1U",155,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"]]],"~i145",["^ ","~i0",[["^ ","^1T",0,"^1U",156]],"~i5",[["^ ","^1T",0,"^1U",156,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/assoc-effect"]],"^32",[["^ ","^1T",60,"^1U",156,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-effect"]]],"~i146",["^ ","~i0",[["^ ","^1T",0,"^1U",157]],"~i5",[["^ ","^1T",0,"^1U",157,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/enqueue"]],"^32",[["^ ","^1T",55,"^1U",157,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue"]]],"~i156",["^ ","~i0",[["^ ","^1T",0,"^1U",158]],"~i5",[["^ ","^1T",0,"^1U",158,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!"]],"^2=",[["^ ","^1T",65,"^1U",158,"^G","mranderson048.re-frame.v0v10v2.re-frame.loggers/set-loggers!"]]],"~i163",["^ ","~i0",[["^ ","^1T",0,"^1U",159]],"~i5",[["^ ","^1T",0,"^1U",159,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"]],"~i13",[["^ ","^1T",55,"^1U",159,"^G","mranderson048.re-frame.v0v10v2.re-frame.loggers/console"]]],"~i168",["^ ","~i0",[["^ ","^1T",0,"^1U",160],["^ ","^1T",63,"^1U",167],["^ ","^1T",0,"^1U",168]],"~i6",[["^ ","^1T",0,"^1U",167,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/make-restore-fn"]]],"~i175",["^ ","~i2",[["^ ","^1T",0,"^1U",168],["^ ","^1T",15,"^1U",168],["^ ","^1T",15,"^1U",168,"^G","cljs.core/deref"],["^ ","^1T",13,"^1U",169],["^ ","^1T",13,"^1U",169,"^G","cljs.core/deref"],["^ ","^1T",17,"^1U",170],["^ ","^1T",17,"^1U",170,"^G","cljs.core/deref"],["^ ","^1T",0,"^1U",171]],"~i8",[["^ ","^1T",4,"^1U",168,"^G","handlers"]],"^2=",[["^ ","^1T",31,"^1U",168,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/kind->id->handler"]]],"~i176",["^ ","~i8",[["^ ","^1T",4,"^1U",169,"^G","app-db"]],"^2=",[["^ ","^1T",29,"^1U",169,"^G","mranderson048.re-frame.v0v10v2.re-frame.db/app-db"]]],"~i177",["^ ","~i4",[["^ ","^1T",4,"^1U",170,"^G","subs-cache"]],"^20",[["^ ","^1T",33,"^1U",170,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/query->reaction"]]],"~i178",["^ ","~i4",[["^ ","^1T",0,"^1U",171],["^ ","^1T",0,"^1U",173],["^ ","^1T",0,"^1U",234]]],"~i181",["^ ","~i6",[["^ ","^1T",0,"^1U",173],["^ ","^1T",0,"^1U",175]],"^27",[["^ ","^1T",4,"^1U",173,"^G","original-subs"]],"^2>",[["^ ","^1T",26,"^1U",173]],"~i27",[["^ ","^1T",26,"^1U",173,"^G","cljs.core/set"]],"^24",[["^ ","^1T",40,"^1U",173]],"~i32",[["^ ","^1T",40,"^1U",173,"^G","cljs.core/vals"]],"~i37",[["^ ","^1T",55,"^1U",173,"^G","subs-cache"]]],"~i182",["^ ","^27",[["^ ","^1T",4,"^1U",174,"^G","current-subs"]],"^2>",[["^ ","^1T",25,"^1U",174]],"^3A",[["^ ","^1T",25,"^1U",174,"^G","cljs.core/set"]],"^24",[["^ ","^1T",39,"^1U",174],["^ ","^1T",54,"^1U",174],["^ ","^1T",54,"^1U",174,"^G","cljs.core/deref"]],"^3B",[["^ ","^1T",39,"^1U",174,"^G","cljs.core/vals"]],"~i38",[["^ ","^1T",70,"^1U",174,"^G","mranderson048.re-frame.v0v10v2.re-frame.subs/query->reaction"]]],"~i183",["^ ","~i8",[["^ ","^1T",0,"^1U",175],["^ ","^1T",4,"^1U",175,"^G","seq__42926"],["^ ","^1T",23,"^1U",175],["^ ","^1T",23,"^1U",175,"^G","cljs.core/seq"],["^ ","^1T",4,"^1U",176,"^G","chunk__42927"],["^ ","^1T",25,"^1U",176],["^ ","^1T",4,"^1U",177,"^G","count__42928"],["^ ","^1T",25,"^1U",177],["^ ","^1T",4,"^1U",178,"^G","i__42929"],["^ ","^1T",21,"^1U",178],["^ ","^1T",0,"^1U",180],["^ ","^1T",0,"^1U",180],["^ ","^1T",3,"^1U",180],["^ ","^1T",3,"^1U",180],["^ ","^1T",4,"^1U",180,"^G","i__42929"],["^ ","^1T",21,"^1U",180,"^G","count__42928"],["^ ","^1T",0,"^1U",181],["^ ","^1T",16,"^1U",181],["^ ","^1T",16,"^1U",181,"^G","chunk__42927"],["^ ","^1T",72,"^1U",181,"^G","i__42929"],["^ ","^1T",0,"^1U",182],["^ ","^1T",0,"^1U",182],["^ ","^1T",0,"^1U",184],["^ ","^1T",0,"^1U",185],["^ ","^1T",15,"^1U",185,"^G","seq__42926"],["^ ","^1T",15,"^1U",186,"^G","chunk__42927"],["^ ","^1T",15,"^1U",187,"^G","count__42928"],["^ ","^1T",15,"^1U",188],["^ ","^1T",16,"^1U",188,"^G","i__42929"],["^ ","^1T",33,"^1U",188],["^ ","^1T",0,"^1U",195],["^ ","^1T",4,"^1U",195,"^G","temp__5457__auto__"],["^ ","^1T",31,"^1U",195],["^ ","^1T",31,"^1U",195,"^G","cljs.core/seq"],["^ ","^1T",45,"^1U",195,"^G","seq__42926"],["^ ","^1T",0,"^1U",196],["^ ","^1T",0,"^1U",196],["^ ","^1T",3,"^1U",196,"^G","temp__5457__auto__"],["^ ","^1T",0,"^1U",197],["^ ","^1T",0,"^1U",197],["^ ","^1T",4,"^1U",197,"^G","seq__42926"],["^ ","^1T",27,"^1U",197,"^G","temp__5457__auto__"],["^ ","^1T",0,"^1U",198],["^ ","^1T",0,"^1U",198],["^ ","^1T",3,"^1U",198],["^ ","^1T",3,"^1U",198,"^G","cljs.core/chunked-seq?"],["^ ","^1T",32,"^1U",198,"^G","seq__42926"],["^ ","^1T",0,"^1U",199],["^ ","^1T",4,"^1U",199,"^G","c__4351__auto__"],["^ ","^1T",28,"^1U",199],["^ ","^1T",28,"^1U",199,"^G","cljs.core/chunk-first"],["^ ","^1T",50,"^1U",199,"^G","seq__42926"],["^ ","^1T",0,"^1U",200],["^ ","^1T",0,"^1U",200],["^ ","^1T",15,"^1U",200],["^ ","^1T",15,"^1U",200,"^G","cljs.core/chunk-rest"],["^ ","^1T",36,"^1U",200,"^G","seq__42926"],["^ ","^1T",15,"^1U",201,"^G","c__4351__auto__"],["^ ","^1T",15,"^1U",202],["^ ","^1T",15,"^1U",202,"^G","cljs.core/count"],["^ ","^1T",31,"^1U",202,"^G","c__4351__auto__"],["^ ","^1T",15,"^1U",203],["^ ","^1T",0,"^1U",210],["^ ","^1T",16,"^1U",210],["^ ","^1T",16,"^1U",210,"^G","cljs.core/first"],["^ ","^1T",32,"^1U",210,"^G","seq__42926"],["^ ","^1T",0,"^1U",211],["^ ","^1T",0,"^1U",211],["^ ","^1T",0,"^1U",213],["^ ","^1T",0,"^1U",214],["^ ","^1T",15,"^1U",214],["^ ","^1T",15,"^1U",214,"^G","cljs.core/next"],["^ ","^1T",30,"^1U",214,"^G","seq__42926"],["^ ","^1T",15,"^1U",215],["^ ","^1T",15,"^1U",216],["^ ","^1T",15,"^1U",217],["^ ","^1T",0,"^1U",225]],"^20",[["^ ","^1T",4,"^1U",181,"^G","sub"],["^ ","^1T",4,"^1U",210,"^G","sub"]],"^1V",[["^ ","^1T",37,"^1U",175]],"^32",[["^ ","^1T",37,"^1U",175,"^G","clojure.set.difference.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1T",90,"^1U",175,"^G","current-subs"]],"^22",[["^ ","^1T",109,"^1U",175,"^G","original-subs"]]],"~i184",["^ ","~i10",[["^ ","^1T",0,"^1U",182],["^ ","^1T",0,"^1U",211]],"~i11",[["^ ","^1T",0,"^1U",182,"^G","mranderson048.re-frame.v0v10v2.re-frame.interop/dispose!"],["^ ","^1T",0,"^1U",211,"^G","mranderson048.re-frame.v0v10v2.re-frame.interop/dispose!"]],"~i28",[["^ ","^1T",62,"^1U",182,"^G","sub"],["^ ","^1T",62,"^1U",211,"^G","sub"]]],"~i189",["^ ","~i6",[["^ ","^1T",0,"^1U",230]],"~i7",[["^ ","^1T",0,"^1U",230,"^G","cljs.core/reset!"]],"~i14",[["^ ","^1T",22,"^1U",230,"^G","mranderson048.re-frame.v0v10v2.re-frame.registrar/kind->id->handler"]],"~i42",[["^ ","^1T",96,"^1U",230,"^G","handlers"]]],"~i190",["^ ","~i6",[["^ ","^1T",0,"^1U",232]],"~i7",[["^ ","^1T",0,"^1U",232,"^G","cljs.core/reset!"]],"^3M",[["^ ","^1T",22,"^1U",232,"^G","mranderson048.re-frame.v0v10v2.re-frame.db/app-db"]],"^21",[["^ ","^1T",72,"^1U",232,"^G","app-db"]]],"~i196",["^ ","~i0",[["^ ","^1T",0,"^1U",238],["^ ","^1T",0,"^1U",238],["^ ","^1T",71,"^1U",254],["^ ","^1T",150,"^1U",254,"^G","var_args"],["^ ","^1T",0,"^1U",255],["^ ","^1T",0,"^1U",255],["^ ","^1T",4,"^1U",255,"^G","G__42954"],["^ ","^1T",15,"^1U",255],["^ ","^1T",15,"^1U",255],["^ ","^1T",0,"^1U",256],["^ ","^1T",0,"^1U",256],["^ ","^1T",8,"^1U",256,"^G","G__42954"],["^ ","^1T",5,"^1U",257],["^ ","^1T",0,"^1U",258],["^ ","^1T",7,"^1U",258,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1T",106,"^1U",258],["^ ","^1T",107,"^1U",258],["^ ","^1T",117,"^1U",258],["^ ","^1T",5,"^1U",261],["^ ","^1T",0,"^1U",262],["^ ","^1T",7,"^1U",262,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1T",106,"^1U",262],["^ ","^1T",107,"^1U",262],["^ ","^1T",117,"^1U",262],["^ ","^1T",123,"^1U",262],["^ ","^1T",124,"^1U",262],["^ ","^1T",134,"^1U",262],["^ ","^1T",0,"^1U",266],["^ ","^1T",6,"^1U",266],["^ ","^1T",11,"^1U",266,"^G","js/Error"],["^ ","^1T",17,"^1U",266],["^ ","^1T",18,"^1U",266],["^ ","^1T",80,"^1U",266],["^ ","^1T",80,"^1U",266],["^ ","^1T",0,"^1U",271],["^ ","^1T",0,"^1U",271],["^ ","^1T",101,"^1U",271],["^ ","^1T",0,"^1U",272],["^ ","^1T",0,"^1U",275],["^ ","^1T",0,"^1U",275],["^ ","^1T",101,"^1U",275],["^ ","^1T",0,"^1U",276],["^ ","^1T",0,"^1U",279],["^ ","^1T",0,"^1U",279],["^ ","^1T",95,"^1U",279],["^ ","^1T",0,"^1U",281]],"~i6",[["^ ","^1T",0,"^1U",254,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1T",0,"^1U",271,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1T",0,"^1U",275,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"],["^ ","^1T",0,"^1U",279,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback"]]],"~i211",["^ ","~i4",[["^ ","^1T",112,"^1U",271,"^G","f"]]],"~i212",["^ ","~i3",[["^ ","^1T",0,"^1U",272]],"~i4",[["^ ","^1T",7,"^1U",272,"^G","mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2"]],"^3K",[["^ ","^1T",106,"^1U",272,"^G","f"]],"^29",[["^ ","^1T",108,"^1U",272,"^G","f"]]],"~i213",["^ ","~i4",[["^ ","^1T",112,"^1U",275,"^G","id"]],"~i7",[["^ ","^1T",115,"^1U",275,"^G","f"]]],"~i214",["^ ","~i3",[["^ ","^1T",0,"^1U",276]],"~i4",[["^ ","^1T",7,"^1U",276,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/add-post-event-callback"]],"~i35",[["^ ","^1T",78,"^1U",276,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/event-queue"]],"~i94",[["^ ","^1T",137,"^1U",276,"^G","id"]],"^2L",[["^ ","^1T",140,"^1U",276,"^G","f"]]],"~i217",["^ ","~i0",[["^ ","^1T",0,"^1U",281],["^ ","^1T",74,"^1U",281],["^ ","^1T",0,"^1U",282]],"~i6",[["^ ","^1T",0,"^1U",281,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/remove-post-event-callback"]]],"~i218",["^ ","~i3",[["^ ","^1T",156,"^1U",281,"^G","id"]]],"~i219",["^ ","~i2",[["^ ","^1T",0,"^1U",282]],"~i3",[["^ ","^1T",7,"^1U",282,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/remove-post-event-callback"]],"^3C",[["^ ","^1T",81,"^1U",282,"^G","mranderson048.re-frame.v0v10v2.re-frame.router/event-queue"]],"~i96",[["^ ","^1T",140,"^1U",282,"^G","id"]]],"~i224",["^ ","~i0",[["^ ","^1T",0,"^1U",284],["^ ","^1T",0,"^1U",284],["^ ","^1T",64,"^1U",284],["^ ","^1T",136,"^1U",284,"^G","var_args"],["^ ","^1T",0,"^1U",285],["^ ","^1T",0,"^1U",285],["^ ","^1T",4,"^1U",285,"^G","args__4534__auto__"],["^ ","^1T",25,"^1U",285],["^ ","^1T",0,"^1U",286],["^ ","^1T",0,"^1U",286],["^ ","^1T",4,"^1U",286,"^G","len__4531__auto__"],["^ ","^1T",30,"^1U",286],["^ ","^1T",30,"^1U",286],["^ ","^1T",0,"^1U",287],["^ ","^1T",0,"^1U",287],["^ ","^1T",4,"^1U",287,"^G","i__4532__auto__"],["^ ","^1T",28,"^1U",287],["^ ","^1T",0,"^1U",289],["^ ","^1T",0,"^1U",289],["^ ","^1T",3,"^1U",289],["^ ","^1T",4,"^1U",289,"^G","i__4532__auto__"],["^ ","^1T",28,"^1U",289,"^G","len__4531__auto__"],["^ ","^1T",0,"^1U",290],["^ ","^1T",0,"^1U",290],["^ ","^1T",0,"^1U",290,"^G","args__4534__auto__"],["^ ","^1T",24,"^1U",290],["^ ","^1T",25,"^1U",290],["^ ","^1T",35,"^1U",290,"^G","i__4532__auto__"],["^ ","^1T",0,"^1U",292],["^ ","^1T",15,"^1U",292],["^ ","^1T",16,"^1U",292,"^G","i__4532__auto__"],["^ ","^1T",40,"^1U",292],["^ ","^1T",0,"^1U",296],["^ ","^1T",0,"^1U",300],["^ ","^1T",4,"^1U",300,"^G","argseq__4535__auto__"],["^ ","^1T",27,"^1U",300],["^ ","^1T",29,"^1U",300],["^ ","^1T",30,"^1U",300],["^ ","^1T",36,"^1U",300],["^ ","^1T",36,"^1U",300,"^G","args__4534__auto__"],["^ ","^1T",64,"^1U",300],["^ ","^1T",64,"^1U",300],["^ ","^1T",69,"^1U",300,"^G","cljs.core/IndexedSeq"],["^ ","^1T",90,"^1U",300],["^ ","^1T",90,"^1U",300,"^G","args__4534__auto__"],["^ ","^1T",115,"^1U",300],["^ ","^1T",120,"^1U",300],["^ ","^1T",124,"^1U",300],["^ ","^1T",131,"^1U",300],["^ ","^1T",0,"^1U",301],["^ ","^1T",0,"^1U",301],["^ ","^1T",7,"^1U",301,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1T",106,"^1U",301,"^G","argseq__4535__auto__"],["^ ","^1T",0,"^1U",304],["^ ","^1T",0,"^1U",304],["^ ","^1T",0,"^1U",304],["^ ","^1T",0,"^1U",304,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1T",101,"^1U",304],["^ ","^1T",0,"^1U",305],["^ ","^1T",0,"^1U",314],["^ ","^1T",0,"^1U",314],["^ ","^1T",0,"^1U",314,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1T",88,"^1U",314],["^ ","^1T",0,"^1U",316],["^ ","^1T",0,"^1U",317],["^ ","^1T",0,"^1U",317],["^ ","^1T",0,"^1U",317,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler"],["^ ","^1T",82,"^1U",317],["^ ","^1T",93,"^1U",317,"^G","seq42956"],["^ ","^1T",0,"^1U",318],["^ ","^1T",0,"^1U",318],["^ ","^1T",4,"^1U",318,"^G","self__4519__auto__"],["^ ","^1T",25,"^1U",318],["^ ","^1T",0,"^1U",319],["^ ","^1T",0,"^1U",319],["^ ","^1T",7,"^1U",319,"^G","self__4519__auto__"],["^ ","^1T",63,"^1U",319],["^ ","^1T",63,"^1U",319,"^G","cljs.core/seq"],["^ ","^1T",77,"^1U",319,"^G","seq42956"],["^ ","^1T",0,"^1U",322]],"~i6",[["^ ","^1T",0,"^1U",284,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler"]]],"~i225",["^ ","~i5",[["^ ","^1T",112,"^1U",304,"^G","args"]]],"~i226",["^ ","~i2",[["^ ","^1T",0,"^1U",305],["^ ","^1T",4,"^1U",305,"^G","G__42957"],["^ ","^1T",21,"^1U",305],["^ ","^1T",4,"^1U",306,"^G","G__42958"],["^ ","^1T",21,"^1U",306],["^ ","^1T",4,"^1U",307,"^G","G__42959"],["^ ","^1T",4,"^1U",308,"^G","G__42960"],["^ ","^1T",21,"^1U",308],["^ ","^1T",0,"^1U",309],["^ ","^1T",0,"^1U",309],["^ ","^1T",169,"^1U",309,"^G","G__42957"],["^ ","^1T",184,"^1U",309,"^G","G__42958"],["^ ","^1T",199,"^1U",309,"^G","G__42959"],["^ ","^1T",214,"^1U",309,"^G","G__42960"],["^ ","^1T",295,"^1U",309,"^G","G__42957"],["^ ","^1T",310,"^1U",309,"^G","G__42958"],["^ ","^1T",325,"^1U",309,"^G","G__42959"],["^ ","^1T",340,"^1U",309,"^G","G__42960"]],"~i3",[["^ ","^1T",1,"^1U",309,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1T",86,"^1U",309,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1T",232,"^1U",309,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"]],"^2T",[["^ ","^1T",21,"^1U",307]],"~i118",[["^ ","^1T",66,"^1U",307]],"~i119",[["^ ","^1T",66,"^1U",307,"^G","cljs.core/first"]],"^2[",[["^ ","^1T",82,"^1U",307,"^G","args"]]],"~i227",["^ ","~i2",[["^ ","^1T",0,"^1U",311]],"~i3",[["^ ","^1T",7,"^1U",311,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1T",53,"^1U",311,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db"]],"~i22",[["^ ","^1T",111,"^1U",311,"^G","args"]]],"~i229",["^ ","~i0",[["^ ","^1T",0,"^1U",322],["^ ","^1T",0,"^1U",322],["^ ","^1T",60,"^1U",322],["^ ","^1T",128,"^1U",322,"^G","var_args"],["^ ","^1T",0,"^1U",323],["^ ","^1T",0,"^1U",323],["^ ","^1T",4,"^1U",323,"^G","args__4534__auto__"],["^ ","^1T",25,"^1U",323],["^ ","^1T",0,"^1U",324],["^ ","^1T",0,"^1U",324],["^ ","^1T",4,"^1U",324,"^G","len__4531__auto__"],["^ ","^1T",30,"^1U",324],["^ ","^1T",30,"^1U",324],["^ ","^1T",0,"^1U",325],["^ ","^1T",0,"^1U",325],["^ ","^1T",4,"^1U",325,"^G","i__4532__auto__"],["^ ","^1T",28,"^1U",325],["^ ","^1T",0,"^1U",327],["^ ","^1T",0,"^1U",327],["^ ","^1T",3,"^1U",327],["^ ","^1T",4,"^1U",327,"^G","i__4532__auto__"],["^ ","^1T",28,"^1U",327,"^G","len__4531__auto__"],["^ ","^1T",0,"^1U",328],["^ ","^1T",0,"^1U",328],["^ ","^1T",0,"^1U",328,"^G","args__4534__auto__"],["^ ","^1T",24,"^1U",328],["^ ","^1T",25,"^1U",328],["^ ","^1T",35,"^1U",328,"^G","i__4532__auto__"],["^ ","^1T",0,"^1U",330],["^ ","^1T",15,"^1U",330],["^ ","^1T",16,"^1U",330,"^G","i__4532__auto__"],["^ ","^1T",40,"^1U",330],["^ ","^1T",0,"^1U",334],["^ ","^1T",0,"^1U",338],["^ ","^1T",4,"^1U",338,"^G","argseq__4535__auto__"],["^ ","^1T",27,"^1U",338],["^ ","^1T",29,"^1U",338],["^ ","^1T",30,"^1U",338],["^ ","^1T",36,"^1U",338],["^ ","^1T",36,"^1U",338,"^G","args__4534__auto__"],["^ ","^1T",64,"^1U",338],["^ ","^1T",64,"^1U",338],["^ ","^1T",69,"^1U",338,"^G","cljs.core/IndexedSeq"],["^ ","^1T",90,"^1U",338],["^ ","^1T",90,"^1U",338,"^G","args__4534__auto__"],["^ ","^1T",115,"^1U",338],["^ ","^1T",120,"^1U",338],["^ ","^1T",124,"^1U",338],["^ ","^1T",131,"^1U",338],["^ ","^1T",0,"^1U",339],["^ ","^1T",0,"^1U",339],["^ ","^1T",7,"^1U",339,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1T",102,"^1U",339,"^G","argseq__4535__auto__"],["^ ","^1T",0,"^1U",342],["^ ","^1T",0,"^1U",342],["^ ","^1T",0,"^1U",342],["^ ","^1T",0,"^1U",342,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1T",97,"^1U",342],["^ ","^1T",0,"^1U",343],["^ ","^1T",0,"^1U",352],["^ ","^1T",0,"^1U",352],["^ ","^1T",0,"^1U",352,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1T",84,"^1U",352],["^ ","^1T",0,"^1U",354],["^ ","^1T",0,"^1U",355],["^ ","^1T",0,"^1U",355],["^ ","^1T",0,"^1U",355,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub"],["^ ","^1T",78,"^1U",355],["^ ","^1T",89,"^1U",355,"^G","seq42968"],["^ ","^1T",0,"^1U",356],["^ ","^1T",0,"^1U",356],["^ ","^1T",4,"^1U",356,"^G","self__4519__auto__"],["^ ","^1T",25,"^1U",356],["^ ","^1T",0,"^1U",357],["^ ","^1T",0,"^1U",357],["^ ","^1T",7,"^1U",357,"^G","self__4519__auto__"],["^ ","^1T",63,"^1U",357],["^ ","^1T",63,"^1U",357,"^G","cljs.core/seq"],["^ ","^1T",77,"^1U",357,"^G","seq42968"],["^ ","^1T",0,"^1U",360]],"~i6",[["^ ","^1T",0,"^1U",322,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub"]]],"~i230",["^ ","~i5",[["^ ","^1T",108,"^1U",342,"^G","args"]]],"~i231",["^ ","~i2",[["^ ","^1T",0,"^1U",343],["^ ","^1T",4,"^1U",343,"^G","G__42969"],["^ ","^1T",21,"^1U",343],["^ ","^1T",4,"^1U",344,"^G","G__42970"],["^ ","^1T",21,"^1U",344],["^ ","^1T",4,"^1U",345,"^G","G__42971"],["^ ","^1T",4,"^1U",346,"^G","G__42972"],["^ ","^1T",21,"^1U",346],["^ ","^1T",0,"^1U",347],["^ ","^1T",0,"^1U",347],["^ ","^1T",169,"^1U",347,"^G","G__42969"],["^ ","^1T",184,"^1U",347,"^G","G__42970"],["^ ","^1T",199,"^1U",347,"^G","G__42971"],["^ ","^1T",214,"^1U",347,"^G","G__42972"],["^ ","^1T",295,"^1U",347,"^G","G__42969"],["^ ","^1T",310,"^1U",347,"^G","G__42970"],["^ ","^1T",325,"^1U",347,"^G","G__42971"],["^ ","^1T",340,"^1U",347,"^G","G__42972"]],"~i3",[["^ ","^1T",1,"^1U",347,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1T",86,"^1U",347,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"],["^ ","^1T",232,"^1U",347,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/console"]],"^2Q",[["^ ","^1T",21,"^1U",345]],"^2V",[["^ ","^1T",66,"^1U",345]],"~i116",[["^ ","^1T",66,"^1U",345,"^G","cljs.core/first"]],"^2X",[["^ ","^1T",82,"^1U",345,"^G","args"]]],"~i232",["^ ","~i2",[["^ ","^1T",0,"^1U",349]],"~i3",[["^ ","^1T",7,"^1U",349,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1T",53,"^1U",349,"^G","mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub-raw"]],"^32",[["^ ","^1T",110,"^1U",349,"^G","args"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1537460974000,1537389904000,"~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"],["^1K","goog/dom/tagname.js"],[1533155346000,"^Z","~$goog.dom.HtmlElement"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/loggers.cljc"],[1533155354000,"^Z","^W","^P"],["~:macro","^W"],[1533155342000],["^4C","~$mranderson048.reagent.v0v8v0.reagent.core"],[1533155354000],["^1K","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],[1533155354000,"^Z","^W","^11","^[","^Y","^19","^17","^15","^V"],["^1K","goog/math/math.js"],[1533155346000,"^Z","~$goog.array","~$goog.asserts"],["^4>","node_modules/schedule/cjs/schedule.production.min.js"],[1537460974000,1537389904000,"^4?"],["^1K","goog/labs/useragent/browser.js"],[1533155346000,"^Z","^4E","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1K","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1533155354000,"^Z","^W","^=","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"],["^4>","node_modules/schedule/cjs/schedule-tracing.production.min.js"],[1537460974000,1537389904000,"^4?"],["^1K","goog/array/array.js"],[1533155346000,"^Z","^4F"],["^4>","node_modules/prop-types/checkPropTypes.js"],[1537460974000,1534609634000,"^4?","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^4C","~$net.cgrand.macrovich"],[1533155354000],["^4>","node_modules/fbjs/lib/emptyFunction.js"],[1537460974000,1534609635000,"^4?"],["^1K","goog/debug/error.js"],[1533155346000,"^Z"],["^1K","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1533155354000,"^Z","^W","^A","^4L","^4J","^4M","^4N","^4O","^4P"],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1533155354000,"^Z","^W","^?","^=","^4L","^4M","^4N","^4P","^4O"],["^4>","node_modules/fbjs/lib/emptyObject.js"],[1537460974000,1534609635000,"^4?"],["^1K","goog/dom/nodetype.js"],[1533155346000,"^Z"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/core.cljc"],[1533155354000,"^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/std_interceptors.cljc"],[1533155354000,"^Z","^W","^Y","^V","^15","^[","~$clojure.data","^R","~$mranderson048.re-frame.v0v10v2.re-frame.utils"],["^4>","node_modules/create-react-class/factory.js"],[1537460974000,1534609635000,"^4?","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"],["^4>","node_modules/react/index.js"],[1537460974000,1537389904000,"^4?","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1K","shadow/js.js"],[1537460974000,"^Z"],["^1K","goog/object/object.js"],[1533155346000,"^Z"],["^4>","node_modules/react-dom/cjs/react-dom.production.min.js"],[1537460974000,1537389904000,"^4?","^=","^4V","~$module$node_modules$schedule$index"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^4>","node_modules/react/cjs/react.development.js"],[1537460974000,1537389904000,"^4?","^4V","~$module$node_modules$prop_types$checkPropTypes"],["^4C","^4P"],[1533155354000],["^1K","goog/math/long.js"],[1533155346000,"^Z","^4F","~$goog.reflect"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/subs.cljc"],[1533155354000,"^Z","^W","^[","^19","^V","^4U","^15","~$mranderson048.re-frame.v0v10v2.re-frame.trace"],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1533155354000,"^Z","^W","^4O","^4P","^4L","~$clojure.string"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/cofx.cljc"],[1533155354000,"^Z","^W","^[","^Y","^15","^V"],["^4>","node_modules/fbjs/lib/warning.js"],[1537460974000,1534609635000,"^4?","~$module$node_modules$fbjs$lib$emptyFunction"],["^1K","goog/functions/functions.js"],[1533155346000,"^Z"],["^1K","clojure/walk.cljs"],[1533155342000,"^Z","^W"],["^4C","^54"],[1533155354000],["^1K","goog/structs/map.js"],[1533155346000,"^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration","^4H"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/router.cljc"],[1533155354000,"^Z","^W","^17","^19","^V","^54"],["^1K","goog/labs/useragent/engine.js"],[1533155346000,"^Z","^4E","^4G","^4I"],["^4C","^4N"],[1533155354000],["^1K","goog/asserts/asserts.js"],[1533155346000,"^Z","~$goog.debug.Error","~$goog.dom.NodeType","^4I"],["^1K","goog/uri/uri.js"],[1533155346000,"^Z","^4E","^4F","^4I","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1K","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1533155354000,"^Z","^W","^4L","^4O","^4M","^P"],["^1K","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1533155354000,"^Z","^W"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/registrar.cljc"],[1533155354000,"^Z","^W","^19","^V"],["^4>","node_modules/object-assign/index.js"],[1537460974000,1534609614000,"^4?"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/events.cljc"],[1533155354000,"^Z","^W","^[","^4U","^19","^15","^V","^Y","^54"],["^4>","node_modules/schedule/tracing.js"],[1537460974000,1537389904000,"^4?","~$module$node_modules$schedule$cjs$schedule_tracing_production_min","~$module$node_modules$schedule$cjs$schedule_tracing_development"],["^1K","goog/base.js"],[1533155346000],["^1K","goog/structs/structs.js"],[1533155346000,"^Z","^4E","^4H"],["^1K","clojure/string.cljs"],[1533155342000,"^Z","^W","^4I","~$goog.string.StringBuffer"],["^4>","node_modules/create-react-class/index.js"],[1537460974000,1534609635000,"^4?","^=","~$module$node_modules$create_react_class$factory"],["^4>","node_modules/schedule/cjs/schedule.development.js"],[1537460974000,1537389904000,"^4?"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1533155354000,"^Z","^W","^V","^19","^P"],["^4>","node_modules/react/cjs/react.production.min.js"],[1537460974000,1537389904000,"^4?","^4V"],["^1K","goog/debug/entrypointregistry.js"],[1533155346000,"^Z","^4F"],["^1K","goog/string/string.js"],[1533155346000,"^Z"],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1533155354000,"^Z","^W","^=","^55","~$clojure.walk","^4L","^4K","^4M","^4N","^4P","^4O"],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1533155354000,"^Z","^W","^4O","^4P","^55"],["^4>","node_modules/schedule/cjs/schedule-tracing.development.js"],[1537460974000,1537389904000,"^4?"],["^1K","clojure/data.cljs"],[1533155342000,"^Z","^W","^P"],["^1K","goog/reflect/reflect.js"],[1533155346000,"^Z"],["^1K","goog/labs/useragent/util.js"],[1533155346000,"^Z","^4I"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/trace.cljc"],[1533155354000,"^Z","^W","^19","^V"],["^1K","goog/string/stringbuffer.js"],[1533155346000,"^Z"],["^1K","goog/iter/iter.js"],[1533155346000,"^Z","^4E","^4F","~$goog.functions","~$goog.math"],["^1K","goog/async/nexttick.js"],[1533155346000,"^Z","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^5E","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^4>","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537460974000,1534609634000,"^4?"],["^1K","goog/dom/htmlelement.js"],[1533155346000,"^Z"],["^1K","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^4I","^4H","^4E","~$goog.Uri","^5B"],["^1K","goog/math/integer.js"],[1533155346000,"^Z"],["^1K","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1533155354000,"^Z","^W"],["^4>","node_modules/react-dom/cjs/react-dom.development.js"],[1537460974000,1537389904000,"^4?","^=","^4V","^52","^50","~$module$node_modules$schedule$tracing"],["^1K","clojure/set.cljs"],[1533155342000,"^Z","^W"],["^1K","goog/uri/utils.js"],[1533155346000,"^Z","^4E","^4F","^4I"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/interop.cljs"],[1533155354000,"^Z","^W","~$goog.async.nextTick","^4D","^4N"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/utils.cljc"],[1533155354000,"^Z","^W","^V"],["^1K","mranderson048/re_frame/v0v10v2/re_frame/db.cljc"],[1533155354000,"^Z","^W","^19"],["^4>","node_modules/schedule/index.js"],[1537460974000,1537389904000,"^4?","~$module$node_modules$schedule$cjs$schedule_production_min","~$module$node_modules$schedule$cjs$schedule_development"],["^4>","node_modules/fbjs/lib/invariant.js"],[1537460974000,1534609635000,"^4?"],["^4C","^4O"],[1533155354000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",49],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^N","^O","^P","^Q","^R","^S","^T","^U","^V","^V","^V","^W","^W","^X","^Y","^Z","^Z","^[","^[","^10","^11","^12","^12","^13","^[","^14","^15","^Y","^Y","^15","^15","^P","^P","^16","^17","^R","^R","^11","^11","^N","^N","^T","^T","^17","^17","^18","^19","^1:","^12","^19","^19"],"^1;",["^F",["^1<"]],"~:shadow/js-access-global",["^F",["Error"]],"^1=",["^ ","^1>","^12","^1?","^12","^1@","^12"],"~:defs",["^ ","~$console",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/console","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",1,"^9",164,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",6,"^9",164,"^:",13]],"~$on-changes",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/on-changes","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",1,"^9",127,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",6,"^9",127,"^:",16]],"~$enrich",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/enrich","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",1,"^9",124,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",6,"^9",124,"^:",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",18,"~:arglists",["^1C",["~$quote",["^1C",[["~$query-id","~$handler-fn"]]]]],"~:doc","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub-raw","~:variadic",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",18,"~:method-params",["^1C",[["^63","^64"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"^7",51,"^9",51,"~:max-fixed-arity",2,"~:fn-var",true,"^61",["^1C",["^62",["^1C",[["^63","^64"]]]]],"^65","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"~$subscribe",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/subscribe","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",1,"^9",46,"^:",15,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",6,"^9",46,"^:",15]],"~$assoc-coeffect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/assoc-coeffect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",1,"^9",144,"^:",20,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",6,"^9",144,"^:",20]],"~$register-sub",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",230,"^8",7,"^9",230,"^:",19,"^61",["^1C",["^62",["^1C",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^67",true,"^6;",0,"^68",[["^1C",["^6B"]]],"^61",["^1C",[["~$&","^6B"]]],"^6:",["^1C",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/register-sub","^67",true,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6C",["^ ","^67",true,"^6;",0,"^68",[["^1C",["^6B"]]],"^61",["^1C",[["~$&","^6B"]]],"^6:",["^1C",[null]]],"^68",[["^1C",["^6B"]]],"^69",null,"^6:",["^1C",[null]],"^8",1,"^7",230,"^9",230,"^6;",0,"^6<",true,"^61",["^1C",[["~$&","^6B"]]]],"~$remove-post-event-callback",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",218,"^8",7,"^9",218,"^:",33,"^61",["^1C",["^62",["^1C",[["~$id"]]]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/remove-post-event-callback","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",33,"^68",["^1C",[["^6F"]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",218,"^9",218,"^6;",1,"^6<",true,"^61",["^1C",["^62",["^1C",[["^6F"]]]]]],"~$path",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/path","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",1,"^9",123,"^:",10,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",6,"^9",123,"^:",10]],"~$reg-sub",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",1,"^9",45,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",6,"^9",45,"^:",13]],"~$make-restore-fn",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",169,"^8",7,"^9",169,"^:",22,"^61",["^1C",["^62",["^1C",[[]]]]],"^65","Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/make-restore-fn","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",22,"^68",["^1C",[[]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",169,"^9",169,"^6;",0,"^6<",true,"^61",["^1C",["^62",["^1C",[[]]]]],"^65","Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",1,"^9",61,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",6,"^9",61,"^:",14],"~:tag","~$any"],"~$get-effect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/get-effect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",1,"^9",145,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",6,"^9",145,"^:",16]],"~$reg-event-db",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",71,"^8",7,"^9",71,"^:",19,"^61",["^1C",["^62",["^1C",[["^6F","~$handler"],["^6F","~$interceptors","^6U"]]]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.","^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]],"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",71,"^9",71,"^6;",3,"^6<",true,"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain."],"~$dispatch-sync",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/dispatch-sync","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",1,"^9",41,"^:",19,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",6,"^9",41,"^:",19]],"~$clear-event",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-event","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",1,"^9",116,"^:",17,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",6,"^9",116,"^:",17],"^6P","^6Q"],"~$->interceptor",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/->interceptor","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",1,"^9",142,"^:",19,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",6,"^9",142,"^:",19]],"~$set-loggers!",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",1,"^9",157,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",6,"^9",157,"^:",18]],"~$inject-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/inject-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",1,"^9",65,"^:",17,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",6,"^9",65,"^:",17]],"~$get-coeffect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/get-coeffect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",1,"^9",143,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",6,"^9",143,"^:",18]],"~$debug",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/debug","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",1,"^9",122,"^:",11,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",6,"^9",122,"^:",11],"^6P","^6Q"],"~$assoc-effect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/assoc-effect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",1,"^9",146,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",6,"^9",146,"^:",18]],"~$enqueue",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/enqueue","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",1,"^9",147,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",6,"^9",147,"^:",13]],"~$clear-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",1,"^9",66,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",6,"^9",66,"^:",16],"^6P","^6Q"],"~$reg-event-ctx",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",104,"^8",7,"^9",104,"^:",20,"^61",["^1C",["^62",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. ","^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",20,"^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]],"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",104,"^9",104,"^6;",3,"^6<",true,"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. "],"~$reg-fx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",1,"^9",60,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",6,"^9",60,"^:",12]],"~$trim-v",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/trim-v","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",1,"^9",125,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",6,"^9",125,"^:",12],"^6P","^6Q"],"~$clear-sub",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-sub","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",1,"^9",48,"^:",15,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",6,"^9",48,"^:",15],"^6P","^6Q"],"~$dispatch",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/dispatch","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",1,"^9",40,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",6,"^9",40,"^:",14]],"~$after",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/after","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",1,"^9",126,"^:",11,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",6,"^9",126,"^:",11]],"~$add-post-event-callback",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",197,"^8",7,"^9",197,"^:",30,"^61",["^1C",["^62",["^1C",[["~$f"],["^6F","~$f"]]]]],"^65","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^6C",["^ ","^67",false,"^6;",2,"^68",["^1C",[["~$f"],["^6F","~$f"]]],"^61",["^1C",[["~$f"],["^6F","~$f"]]],"^6:",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",30,"^6C",["^ ","^67",false,"^6;",2,"^68",["^1C",[["~$f"],["^6F","~$f"]]],"^61",["^1C",[["~$f"],["^6F","~$f"]]],"^6:",["^1C",[null,null]]],"^68",["^1C",[["~$f"],["^6F","~$f"]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",197,"^9",197,"^6;",2,"^6<",true,"^61",["^1C",[["~$f"],["^6F","~$f"]]],"^65","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",1,"^9",64,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",6,"^9",64,"^:",14]],"~$reg-event-fx",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",87,"^8",7,"^9",87,"^:",19,"^61",["^1C",["^62",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.","^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx","^67",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^6C",["^ ","^67",false,"^6;",3,"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^6:",["^1C",[null,null]]],"^68",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^69",null,"^6:",["^1C",[null,null]],"^8",1,"^7",87,"^9",87,"^6;",3,"^6<",true,"^61",["^1C",[["^6F","^6U"],["^6F","^6V","^6U"]]],"^65","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects."],"~$register-handler",["^ ","^60",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",225,"^8",7,"^9",225,"^:",23,"^61",["^1C",["^62",["^1C",[["~$&","^6B"]]]]],"^6C",["^ ","^67",true,"^6;",0,"^68",[["^1C",["^6B"]]],"^61",["^1C",[["~$&","^6B"]]],"^6:",["^1C",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/register-handler","^67",true,"^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",23,"^6C",["^ ","^67",true,"^6;",0,"^68",[["^1C",["^6B"]]],"^61",["^1C",[["~$&","^6B"]]],"^6:",["^1C",[null]]],"^68",[["^1C",["^6B"]]],"^69",null,"^6:",["^1C",[null]],"^8",1,"^7",225,"^9",225,"^6;",0,"^6<",true,"^61",["^1C",[["~$&","^6B"]]]],"~$clear-subscription-cache!",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",1,"^9",49,"^:",31,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",6,"^9",49,"^:",31]]],"^1A",["^ ","^W","^W"],"~:cljs.analyzer/constants",["^ ","^1;",["^F",["~:warn"]],"~:order",["^7W"]],"^1G",["^ ","^1<",["^F",[]]],"^1H",["^ "],"^1I",["^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4=",[["^7[","~:static-fns"],true,["^7[","~:elide-asserts"],false,["^7[","~:optimize-constants"],null,["^7[","~:external-config"],null,["^7[","~:tooling-config"],null,["^7[","~:emit-constants"],null,["^7[","~:infer-externs"],true,["^7[","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7[","~:fn-invoke-direct"],null,["^7[","^1R"],"/dev/null"]]]