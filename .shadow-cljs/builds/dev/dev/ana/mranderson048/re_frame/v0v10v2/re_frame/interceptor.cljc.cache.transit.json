["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.loggers');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interop');\ngoog.require('clojure.set');\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"after\",\"after\",594996914),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),null], null), null);\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.interceptor_QMARK_ = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\n/**\n * Create an interceptor from named arguments\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$__GT_interceptor(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___42177 = arguments.length;\nvar i__4532__auto___42178 = (0);\nwhile(true){\nif((i__4532__auto___42178 < len__4531__auto___42177)){\nargs__4534__auto__.push((arguments[i__4532__auto___42178]));\n\nvar G__42179 = (i__4532__auto___42178 + (1));\ni__4532__auto___42178 = G__42179;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic = (function (p__42174){\nvar map__42175 = p__42174;\nvar map__42175__$1 = ((((!((map__42175 == null)))?(((((map__42175.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42175.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42175):map__42175);\nvar m = map__42175__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42175__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42175__$1,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388));\nvar after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42175__$1,new cljs.core.Keyword(null,\"after\",\"after\",594996914));\nif(mranderson048.re_frame.v0v10v2.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5455__auto___42184 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),mranderson048.re_frame.v0v10v2.re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5455__auto___42184){\nvar unknown_keys_42185 = temp__5455__auto___42184;\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ->interceptor \",m,\" has unknown keys:\",unknown_keys_42185], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(function (){var or__3949__auto__ = id;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"unnamed\",\"unnamed\",-26044928);\n}\n})(),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),before,new cljs.core.Keyword(null,\"after\",\"after\",594996914),after], null);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo = (function (seq42172){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq42172));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$get_effect(var_args){\nvar G__42190 = arguments.length;\nswitch (G__42190) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),not_found);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect.cljs$lang$maxFixedArity = 3;\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_effect = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),value);\n});\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$get_coeffect(var_args){\nvar G__42208 = arguments.length;\nswitch (G__42208) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985).cljs$core$IFn$_invoke$arity$1(context);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),not_found);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity = 3;\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),value);\n});\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.update_coeffect = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$update_coeffect(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___42229 = arguments.length;\nvar i__4532__auto___42230 = (0);\nwhile(true){\nif((i__4532__auto___42230 < len__4531__auto___42229)){\nargs__4534__auto__.push((arguments[i__4532__auto___42230]));\n\nvar G__42231 = (i__4532__auto___42230 + (1));\ni__4532__auto___42230 = G__42231;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((3) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((3)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4535__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),f,args);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity = (3);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.update_coeffect.cljs$lang$applyTo = (function (seq42225){\nvar G__42226 = cljs.core.first(seq42225);\nvar seq42225__$1 = cljs.core.next(seq42225);\nvar G__42227 = cljs.core.first(seq42225__$1);\nvar seq42225__$2 = cljs.core.next(seq42225__$1);\nvar G__42228 = cljs.core.first(seq42225__$2);\nvar seq42225__$3 = cljs.core.next(seq42225__$2);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__42226,G__42227,G__42228,seq42225__$3);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptor_fn = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar f = temp__5455__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context's `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor's `:before` function will (if present)\n *   add to a `context's` `:coeffects`, while it's `:after` function\n *   will modify the `context`'s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 = context;\nwhile(true){\nvar queue = new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor = cljs.core.peek(queue);\nvar stack = new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__42257 = mranderson048.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 = G__42257;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n *   Returns the updated `context`.\n * \n *   In an advanced case, this function could allow an interceptor to add new\n *   interceptors to the `:queue` of a context.\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.enqueue = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,mranderson048.re_frame.v0v10v2.re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.context = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$context(var_args){\nvar G__42264 = arguments.length;\nswitch (G__42264) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 = (function (event,interceptors){\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.enqueue(mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event),interceptors);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 = (function (event,interceptors,db){\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect(mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\"db\",\"db\",993250759),db);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$lang$maxFixedArity = 3;\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain's `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what's currently in `:stack`\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.change_direction = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$change_direction(context){\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of iterceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \"handle\n * the given event\".\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    <original contents of app-db>}\n *    :effects   {:db    <new value for app-db>\n *                :dispatch  [:an-event-id :param1]}\n *    :queue     <a collection of further interceptors>\n *    :stack     <a collection of interceptors already walked>}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat anologous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \"prime\" the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nmranderson048.re_frame.v0v10v2.re_frame.interceptor.execute = (function mranderson048$re_frame$v0v10v2$re_frame$interceptor$execute(event_v,interceptors){\nreturn mranderson048.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors(mranderson048.re_frame.v0v10v2.re_frame.interceptor.change_direction(mranderson048.re_frame.v0v10v2.re_frame.interceptor.invoke_interceptors(mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388))),new cljs.core.Keyword(null,\"after\",\"after\",594996914));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",56],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson048.re-frame.v0v10v2.re-frame.loggers","^M","~$mranderson048.re-frame.v0v10v2.re-frame.interop","^N","~$clojure.set","^O","~$set","^O","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$console","^M","~$empty-queue","^N","~$debug-enabled?","^N"],"~:require-macros",["^ ","^Q","^Q"],"~:form",["~#list",["~$ns","^H",["^[",["^T",["^M","~:refer",["^V"]],["^N","^11",["^W","^X"]],["^O","~:as","^P"]]]]],"~:flags",["^ ","^T",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^M","^N","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],"~:compiled-at",1537561398651,"~:resource-name","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v2.re-frame.interceptor\n  (:require\n    [mranderson048.re-frame.v0v10v2.re-frame.loggers :refer [console]]\n    [mranderson048.re-frame.v0v10v2.re-frame.interop :refer [empty-queue debug-enabled?]]\n    [clojure.set :as set]))\n\n\n(def mandatory-interceptor-keys #{:id :after :before})\n\n(defn interceptor?\n  [m]\n  (and (map? m)\n       (= mandatory-interceptor-keys (-> m keys set))))\n\n\n(defn ->interceptor\n  \"Create an interceptor from named arguments\"\n  [& {:as m :keys [id before after]}]\n  (when debug-enabled?\n    (if-let [unknown-keys (seq (set/difference\n                                (-> m keys set)\n                                mandatory-interceptor-keys))]\n      (console :error \"re-frame: ->interceptor \" m \" has unknown keys:\" unknown-keys)))\n  {:id     (or id :unnamed)\n   :before before\n   :after  after })\n\n;; -- Effect Helpers  -----------------------------------------------------------------------------\n\n(defn get-effect\n  ([context]\n   (:effects context))\n  ([context key]\n   (get-in context [:effects key]))\n  ([context key not-found]\n   (get-in context [:effects key] not-found)))\n\n\n(defn assoc-effect\n  [context key value]\n  (assoc-in context [:effects key] value))\n\n;; -- CoEffect Helpers  ---------------------------------------------------------------------------\n\n(defn get-coeffect\n  ([context]\n   (:coeffects context))\n  ([context key]\n   (get-in context [:coeffects key]))\n  ([context key not-found]\n   (get-in context [:coeffects key] not-found)))\n\n(defn assoc-coeffect\n  [context key value]\n  (assoc-in context [:coeffects key] value))\n\n(defn update-coeffect\n  [context key f & args]\n  (apply update-in context [:coeffects key] f args))\n\n;; -- Execute Interceptor Chain  ------------------------------------------------------------------\n\n\n(defn- invoke-interceptor-fn\n  [context interceptor direction]\n  (if-let [f (get interceptor direction)]\n    (f context)\n    context))\n\n\n(defn- invoke-interceptors\n  \"Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement.\"\n  ([context direction]\n   (loop [context context]\n     (let [queue (:queue context)]        ;; future interceptors\n       (if (empty? queue)\n         context\n         (let [interceptor (peek queue)   ;; next interceptor to call\n               stack (:stack context)]    ;; already completed interceptors\n           (recur (-> context\n                      (assoc :queue (pop queue)\n                             :stack (conj stack interceptor))\n                      (invoke-interceptor-fn interceptor direction)))))))))\n\n\n(defn enqueue\n  \"Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context.\"\n  [context interceptors]\n  (update context :queue\n          (fnil into empty-queue)\n          interceptors))\n\n\n(defn- context\n  \"Create a fresh context\"\n  ([event interceptors]\n  (-> {}\n      (assoc-coeffect :event event)\n      (enqueue interceptors)))\n  ([event interceptors db]      ;; only used in tests, probably a hack, remove ?  XXX\n   (-> (context event interceptors)\n       (assoc-coeffect :db db))))\n\n\n(defn- change-direction\n  \"Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`\"\n  [context]\n  (-> context\n      (dissoc :queue)\n      (enqueue (:stack context))))\n\n\n(defn execute\n  \"Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \\\"handle\n   the given event\\\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \\\"prime\\\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded.\"\n  [event-v interceptors]\n  (-> (context event-v interceptors)\n      (invoke-interceptors :before)\n      change-direction\n      (invoke-interceptors :after)))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i7",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",5],["^ ","^1?",81,"^1@",5],["^ ","^1?",162,"^1@",5],["^ ","^1?",221,"^1@",5],["^ ","^1?",276,"^1@",5]],"~i5",[["^ ","^1?",0,"^1@",5,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]]],"~i9",["^ ","~i0",[["^ ","^1?",0,"^1@",6],["^ ","^1?",73,"^1@",6],["^ ","^1?",0,"^1@",7]],"~i6",[["^ ","^1?",0,"^1@",6,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/interceptor?"]]],"~i10",["^ ","~i3",[["^ ","^1?",154,"^1@",6,"^G","m"]]],"~i11",["^ ","~i2",[["^ ","^1?",0,"^1@",7]],"~i7",[["^ ","^1?",9,"^1@",7]],"~i8",[["^ ","^1?",9,"^1@",7,"^G","cljs.core/map?"]],"~i13",[["^ ","^1?",30,"^1@",7,"^G","m"]]],"~i12",["^ ","~i7",[["^ ","^1?",38,"^1@",7]],"~i8",[["^ ","^1?",38,"^1@",7,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1A",[["^ ","^1?",83,"^1@",7,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]],"~i37",[["^ ","^1?",162,"^1@",7],["^ ","^1?",176,"^1@",7]],"~i41",[["^ ","^1?",191,"^1@",7,"^G","m"]],"~i43",[["^ ","^1?",176,"^1@",7,"^G","cljs.core/keys"]],"~i48",[["^ ","^1?",162,"^1@",7,"^G","cljs.core/set"]]],"~i15",["^ ","~i0",[["^ ","^1?",0,"^1@",9],["^ ","^1?",0,"^1@",9],["^ ","^1?",71,"^1@",12],["^ ","^1?",150,"^1@",12,"^G","var_args"],["^ ","^1?",0,"^1@",13],["^ ","^1?",0,"^1@",13],["^ ","^1?",4,"^1@",13,"^G","args__4534__auto__"],["^ ","^1?",25,"^1@",13],["^ ","^1?",0,"^1@",14],["^ ","^1?",0,"^1@",14],["^ ","^1?",4,"^1@",14,"^G","len__4531__auto__"],["^ ","^1?",30,"^1@",14],["^ ","^1?",30,"^1@",14],["^ ","^1?",0,"^1@",15],["^ ","^1?",0,"^1@",15],["^ ","^1?",4,"^1@",15,"^G","i__4532__auto__"],["^ ","^1?",28,"^1@",15],["^ ","^1?",0,"^1@",17],["^ ","^1?",0,"^1@",17],["^ ","^1?",3,"^1@",17],["^ ","^1?",4,"^1@",17,"^G","i__4532__auto__"],["^ ","^1?",28,"^1@",17,"^G","len__4531__auto__"],["^ ","^1?",0,"^1@",18],["^ ","^1?",0,"^1@",18],["^ ","^1?",0,"^1@",18,"^G","args__4534__auto__"],["^ ","^1?",24,"^1@",18],["^ ","^1?",25,"^1@",18],["^ ","^1?",35,"^1@",18,"^G","i__4532__auto__"],["^ ","^1?",0,"^1@",20],["^ ","^1?",15,"^1@",20],["^ ","^1?",16,"^1@",20,"^G","i__4532__auto__"],["^ ","^1?",40,"^1@",20],["^ ","^1?",0,"^1@",24],["^ ","^1?",0,"^1@",28],["^ ","^1?",4,"^1@",28,"^G","argseq__4535__auto__"],["^ ","^1?",27,"^1@",28],["^ ","^1?",29,"^1@",28],["^ ","^1?",30,"^1@",28],["^ ","^1?",36,"^1@",28],["^ ","^1?",36,"^1@",28,"^G","args__4534__auto__"],["^ ","^1?",64,"^1@",28],["^ ","^1?",64,"^1@",28],["^ ","^1?",69,"^1@",28,"^G","cljs.core/IndexedSeq"],["^ ","^1?",90,"^1@",28],["^ ","^1?",90,"^1@",28,"^G","args__4534__auto__"],["^ ","^1?",115,"^1@",28],["^ ","^1?",120,"^1@",28],["^ ","^1?",124,"^1@",28],["^ ","^1?",131,"^1@",28],["^ ","^1?",0,"^1@",29],["^ ","^1?",0,"^1@",29],["^ ","^1?",7,"^1@",29,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1?",113,"^1@",29,"^G","argseq__4535__auto__"],["^ ","^1?",0,"^1@",32],["^ ","^1?",0,"^1@",32],["^ ","^1?",0,"^1@",32],["^ ","^1?",0,"^1@",32,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1?",108,"^1@",32],["^ ","^1?",119,"^1@",32,"^G","p__42174"],["^ ","^1?",0,"^1@",33],["^ ","^1?",0,"^1@",33],["^ ","^1?",4,"^1@",33,"^G","map__42175"],["^ ","^1?",17,"^1@",33,"^G","p__42174"],["^ ","^1?",4,"^1@",34,"^G","map__42175"],["^ ","^1?",21,"^1@",34],["^ ","^1?",23,"^1@",34],["^ ","^1?",25,"^1@",34],["^ ","^1?",27,"^1@",34],["^ ","^1?",28,"^1@",34,"^G","map__42175"],["^ ","^1?",42,"^1@",34],["^ ","^1?",50,"^1@",34],["^ ","^1?",52,"^1@",34],["^ ","^1?",54,"^1@",34],["^ ","^1?",55,"^1@",34],["^ ","^1?",55,"^1@",34,"^G","map__42175"],["^ ","^1?",104,"^1@",34],["^ ","^1?",115,"^1@",34],["^ ","^1?",116,"^1@",34,"^G","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1?",148,"^1@",34],["^ ","^1?",148,"^1@",34,"^G","map__42175"],["^ ","^1?",179,"^1@",34],["^ ","^1?",184,"^1@",34],["^ ","^1?",191,"^1@",34],["^ ","^1?",199,"^1@",34],["^ ","^1?",199,"^1@",34,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1?",245,"^1@",34,"^G","cljs.core/hash-map"],["^ ","^1?",264,"^1@",34,"^G","map__42175"],["^ ","^1?",276,"^1@",34,"^G","map__42175"],["^ ","^1?",8,"^1@",35,"^G","map__42175"],["^ ","^1?",9,"^1@",36],["^ ","^1?",9,"^1@",36,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1?",53,"^1@",36,"^G","map__42175"],["^ ","^1?",68,"^1@",36],["^ ","^1?",13,"^1@",37],["^ ","^1?",13,"^1@",37,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1?",57,"^1@",37,"^G","map__42175"],["^ ","^1?",72,"^1@",37],["^ ","^1?",12,"^1@",38],["^ ","^1?",12,"^1@",38,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1?",56,"^1@",38,"^G","map__42175"],["^ ","^1?",71,"^1@",38],["^ ","^1?",0,"^1@",39],["^ ","^1?",0,"^1@",49],["^ ","^1?",50,"^1@",49],["^ ","^1?",5,"^1@",55],["^ ","^1?",70,"^1@",55],["^ ","^1?",0,"^1@",58],["^ ","^1?",0,"^1@",58],["^ ","^1?",0,"^1@",58,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1?",95,"^1@",58],["^ ","^1?",0,"^1@",60],["^ ","^1?",0,"^1@",61],["^ ","^1?",0,"^1@",61],["^ ","^1?",0,"^1@",61,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"],["^ ","^1?",89,"^1@",61],["^ ","^1?",100,"^1@",61,"^G","seq42172"],["^ ","^1?",0,"^1@",62],["^ ","^1?",0,"^1@",62],["^ ","^1?",4,"^1@",62,"^G","self__4519__auto__"],["^ ","^1?",25,"^1@",62],["^ ","^1?",0,"^1@",63],["^ ","^1?",0,"^1@",63],["^ ","^1?",7,"^1@",63,"^G","self__4519__auto__"],["^ ","^1?",63,"^1@",63],["^ ","^1?",63,"^1@",63,"^G","cljs.core/seq"],["^ ","^1?",77,"^1@",63,"^G","seq42172"],["^ ","^1?",0,"^1@",66]],"~i6",[["^ ","^1?",0,"^1@",12,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor"]]],"~i17",["^ ","^1A",[["^ ","^1?",4,"^1@",35,"^G","m"]],"~i19",[["^ ","^1?",4,"^1@",36,"^G","id"]],"~i22",[["^ ","^1?",4,"^1@",37,"^G","before"]],"~i29",[["^ ","^1?",4,"^1@",38,"^G","after"]]],"~i18",["^ ","~i2",[["^ ","^1?",0,"^1@",39],["^ ","^1?",0,"^1@",40],["^ ","^1?",0,"^1@",47]],"~i8",[["^ ","^1?",3,"^1@",39,"^G","mranderson048.re-frame.v0v10v2.re-frame.interop/debug-enabled?"]]],"^1K",["^ ","~i4",[["^ ","^1?",0,"^1@",40],["^ ","^1?",4,"^1@",40,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",41],["^ ","^1?",0,"^1@",41],["^ ","^1?",3,"^1@",41,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",42],["^ ","^1?",25,"^1@",42,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",43],["^ ","^1?",0,"^1@",45]],"^1C",[["^ ","^1?",4,"^1@",42,"^G","unknown-keys"]],"~i26",[["^ ","^1?",31,"^1@",40]],"~i27",[["^ ","^1?",31,"^1@",40,"^G","cljs.core/seq"]],"~i31",[["^ ","^1?",45,"^1@",40]],"~i32",[["^ ","^1?",45,"^1@",40,"^G","clojure.set.difference.cljs$core$IFn$_invoke$arity$2"]]],"~i20",["^ ","^1R",[["^ ","^1?",98,"^1@",40],["^ ","^1?",112,"^1@",40]],"~i36",[["^ ","^1?",127,"^1@",40,"^G","m"]],"~i38",[["^ ","^1?",112,"^1@",40,"^G","cljs.core/keys"]],"^1G",[["^ ","^1?",98,"^1@",40,"^G","cljs.core/set"]]],"~i21",["^ ","^1R",[["^ ","^1?",131,"^1@",40,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys"]]],"^1L",["^ ","~i6",[["^ ","^1?",0,"^1@",43],["^ ","^1?",93,"^1@",43],["^ ","^1?",198,"^1@",43],["^ ","^1?",227,"^1@",43]],"~i7",[["^ ","^1?",0,"^1@",43,"^G","mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i49",[["^ ","^1?",225,"^1@",43,"^G","m"]],"~i72",[["^ ","^1?",248,"^1@",43,"^G","unknown-keys"]]],"~i23",["^ ","^1B",[["^ ","^1?",100,"^1@",49],["^ ","^1?",117,"^1@",49,"^G","or__3949__auto__"],["^ ","^1?",0,"^1@",50],["^ ","^1?",0,"^1@",50],["^ ","^1?",20,"^1@",50,"^G","or__3949__auto__"],["^ ","^1?",0,"^1@",51,"^G","or__3949__auto__"],["^ ","^1?",0,"^1@",53]],"^1I",[["^ ","^1?",136,"^1@",49,"^G","id"]]],"~i24",["^ ","^1B",[["^ ","^1?",63,"^1@",55,"^G","before"]]],"~i25",["^ ","^1B",[["^ ","^1?",124,"^1@",55,"^G","after"]]],"^1M",["^ ","~i0",[["^ ","^1?",0,"^1@",66],["^ ","^1?",0,"^1@",66],["^ ","^1?",65,"^1@",66],["^ ","^1?",138,"^1@",66,"^G","var_args"],["^ ","^1?",0,"^1@",67],["^ ","^1?",0,"^1@",67],["^ ","^1?",4,"^1@",67,"^G","G__42190"],["^ ","^1?",15,"^1@",67],["^ ","^1?",15,"^1@",67],["^ ","^1?",0,"^1@",68],["^ ","^1?",0,"^1@",68],["^ ","^1?",8,"^1@",68,"^G","G__42190"],["^ ","^1?",5,"^1@",69],["^ ","^1?",0,"^1@",70],["^ ","^1?",7,"^1@",70,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",100,"^1@",70],["^ ","^1?",101,"^1@",70],["^ ","^1?",111,"^1@",70],["^ ","^1?",5,"^1@",73],["^ ","^1?",0,"^1@",74],["^ ","^1?",7,"^1@",74,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",100,"^1@",74],["^ ","^1?",101,"^1@",74],["^ ","^1?",111,"^1@",74],["^ ","^1?",117,"^1@",74],["^ ","^1?",118,"^1@",74],["^ ","^1?",128,"^1@",74],["^ ","^1?",5,"^1@",77],["^ ","^1?",0,"^1@",78],["^ ","^1?",7,"^1@",78,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",100,"^1@",78],["^ ","^1?",101,"^1@",78],["^ ","^1?",111,"^1@",78],["^ ","^1?",117,"^1@",78],["^ ","^1?",118,"^1@",78],["^ ","^1?",128,"^1@",78],["^ ","^1?",134,"^1@",78],["^ ","^1?",135,"^1@",78],["^ ","^1?",145,"^1@",78],["^ ","^1?",0,"^1@",82],["^ ","^1?",6,"^1@",82],["^ ","^1?",11,"^1@",82,"^G","js/Error"],["^ ","^1?",17,"^1@",82],["^ ","^1?",18,"^1@",82],["^ ","^1?",80,"^1@",82],["^ ","^1?",80,"^1@",82],["^ ","^1?",0,"^1@",87],["^ ","^1?",0,"^1@",87],["^ ","^1?",95,"^1@",87],["^ ","^1?",0,"^1@",88],["^ ","^1?",0,"^1@",91],["^ ","^1?",0,"^1@",91],["^ ","^1?",95,"^1@",91],["^ ","^1?",0,"^1@",92],["^ ","^1?",0,"^1@",95],["^ ","^1?",0,"^1@",95],["^ ","^1?",95,"^1@",95],["^ ","^1?",0,"^1@",96],["^ ","^1?",0,"^1@",99],["^ ","^1?",0,"^1@",99],["^ ","^1?",89,"^1@",99],["^ ","^1?",0,"^1@",101]],"~i6",[["^ ","^1?",0,"^1@",66,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",0,"^1@",87,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",0,"^1@",91,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",0,"^1@",95,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"],["^ ","^1?",0,"^1@",99,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect"]]],"~i30",["^ ","~i4",[["^ ","^1?",106,"^1@",87,"^G","context"]]],"^1Q",["^ ","~i3",[["^ ","^1?",0,"^1@",88],["^ ","^1?",7,"^1@",88]],"^1C",[["^ ","^1?",96,"^1@",88,"^G","context"]]],"^1R",["^ ","~i4",[["^ ","^1?",106,"^1@",91,"^G","context"]],"^1D",[["^ ","^1?",114,"^1@",91,"^G","key"]]],"~i33",["^ ","~i3",[["^ ","^1?",0,"^1@",92],["^ ","^1?",62,"^1@",92],["^ ","^1?",145,"^1@",92]],"~i4",[["^ ","^1?",7,"^1@",92,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^1?",54,"^1@",92,"^G","context"]],"^1M",[["^ ","^1?",204,"^1@",92,"^G","key"]]],"~i34",["^ ","~i4",[["^ ","^1?",106,"^1@",95,"^G","context"]],"^1D",[["^ ","^1?",114,"^1@",95,"^G","key"]],"~i16",[["^ ","^1?",118,"^1@",95,"^G","not-found"]]],"~i35",["^ ","~i3",[["^ ","^1?",0,"^1@",96],["^ ","^1?",62,"^1@",96],["^ ","^1?",145,"^1@",96]],"~i4",[["^ ","^1?",7,"^1@",96,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]],"^1B",[["^ ","^1?",54,"^1@",96,"^G","context"]],"^1M",[["^ ","^1?",204,"^1@",96,"^G","key"]],"^22",[["^ ","^1?",216,"^1@",96,"^G","not-found"]]],"^1U",["^ ","~i0",[["^ ","^1?",0,"^1@",101],["^ ","^1?",67,"^1@",101],["^ ","^1?",0,"^1@",102]],"~i6",[["^ ","^1?",0,"^1@",101,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-effect"]]],"~i39",["^ ","~i3",[["^ ","^1?",142,"^1@",101,"^G","context"]],"^1B",[["^ ","^1?",150,"^1@",101,"^G","key"]],"^1I",[["^ ","^1?",154,"^1@",101,"^G","value"]]],"~i40",["^ ","~i2",[["^ ","^1?",0,"^1@",102],["^ ","^1?",34,"^1@",102],["^ ","^1?",117,"^1@",102]],"~i3",[["^ ","^1?",7,"^1@",102,"^G","cljs.core/assoc-in"]],"^1D",[["^ ","^1?",26,"^1@",102,"^G","context"]],"^20",[["^ ","^1?",176,"^1@",102,"^G","key"]],"^24",[["^ ","^1?",188,"^1@",102,"^G","value"]]],"~i44",["^ ","~i0",[["^ ","^1?",0,"^1@",104],["^ ","^1?",0,"^1@",104],["^ ","^1?",67,"^1@",104],["^ ","^1?",142,"^1@",104,"^G","var_args"],["^ ","^1?",0,"^1@",105],["^ ","^1?",0,"^1@",105],["^ ","^1?",4,"^1@",105,"^G","G__42208"],["^ ","^1?",15,"^1@",105],["^ ","^1?",15,"^1@",105],["^ ","^1?",0,"^1@",106],["^ ","^1?",0,"^1@",106],["^ ","^1?",8,"^1@",106,"^G","G__42208"],["^ ","^1?",5,"^1@",107],["^ ","^1?",0,"^1@",108],["^ ","^1?",7,"^1@",108,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",102,"^1@",108],["^ ","^1?",103,"^1@",108],["^ ","^1?",113,"^1@",108],["^ ","^1?",5,"^1@",111],["^ ","^1?",0,"^1@",112],["^ ","^1?",7,"^1@",112,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",102,"^1@",112],["^ ","^1?",103,"^1@",112],["^ ","^1?",113,"^1@",112],["^ ","^1?",119,"^1@",112],["^ ","^1?",120,"^1@",112],["^ ","^1?",130,"^1@",112],["^ ","^1?",5,"^1@",115],["^ ","^1?",0,"^1@",116],["^ ","^1?",7,"^1@",116,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",102,"^1@",116],["^ ","^1?",103,"^1@",116],["^ ","^1?",113,"^1@",116],["^ ","^1?",119,"^1@",116],["^ ","^1?",120,"^1@",116],["^ ","^1?",130,"^1@",116],["^ ","^1?",136,"^1@",116],["^ ","^1?",137,"^1@",116],["^ ","^1?",147,"^1@",116],["^ ","^1?",0,"^1@",120],["^ ","^1?",6,"^1@",120],["^ ","^1?",11,"^1@",120,"^G","js/Error"],["^ ","^1?",17,"^1@",120],["^ ","^1?",18,"^1@",120],["^ ","^1?",80,"^1@",120],["^ ","^1?",80,"^1@",120],["^ ","^1?",0,"^1@",125],["^ ","^1?",0,"^1@",125],["^ ","^1?",97,"^1@",125],["^ ","^1?",0,"^1@",126],["^ ","^1?",0,"^1@",129],["^ ","^1?",0,"^1@",129],["^ ","^1?",97,"^1@",129],["^ ","^1?",0,"^1@",130],["^ ","^1?",0,"^1@",133],["^ ","^1?",0,"^1@",133],["^ ","^1?",97,"^1@",133],["^ ","^1?",0,"^1@",134],["^ ","^1?",0,"^1@",137],["^ ","^1?",0,"^1@",137],["^ ","^1?",91,"^1@",137],["^ ","^1?",0,"^1@",139]],"~i6",[["^ ","^1?",0,"^1@",104,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",0,"^1@",125,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",0,"^1@",129,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",0,"^1@",133,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"],["^ ","^1?",0,"^1@",137,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect"]]],"~i45",["^ ","~i4",[["^ ","^1?",108,"^1@",125,"^G","context"]]],"~i46",["^ ","~i3",[["^ ","^1?",0,"^1@",126],["^ ","^1?",7,"^1@",126]],"^1I",[["^ ","^1?",99,"^1@",126,"^G","context"]]],"~i47",["^ ","~i4",[["^ ","^1?",108,"^1@",129,"^G","context"]],"^1D",[["^ ","^1?",116,"^1@",129,"^G","key"]]],"^1H",["^ ","~i3",[["^ ","^1?",0,"^1@",130],["^ ","^1?",62,"^1@",130],["^ ","^1?",145,"^1@",130]],"~i4",[["^ ","^1?",7,"^1@",130,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2"]],"^1B",[["^ ","^1?",54,"^1@",130,"^G","context"]],"^1Q",[["^ ","^1?",207,"^1@",130,"^G","key"]]],"^1W",["^ ","~i4",[["^ ","^1?",108,"^1@",133,"^G","context"]],"^1D",[["^ ","^1?",116,"^1@",133,"^G","key"]],"^23",[["^ ","^1?",120,"^1@",133,"^G","not-found"]]],"~i50",["^ ","~i3",[["^ ","^1?",0,"^1@",134],["^ ","^1?",62,"^1@",134],["^ ","^1?",145,"^1@",134]],"~i4",[["^ ","^1?",7,"^1@",134,"^G","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3"]],"^1B",[["^ ","^1?",54,"^1@",134,"^G","context"]],"^1Q",[["^ ","^1?",207,"^1@",134,"^G","key"]],"^1T",[["^ ","^1?",219,"^1@",134,"^G","not-found"]]],"~i52",["^ ","~i0",[["^ ","^1?",0,"^1@",139],["^ ","^1?",69,"^1@",139],["^ ","^1?",0,"^1@",140]],"~i6",[["^ ","^1?",0,"^1@",139,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]]],"~i53",["^ ","~i3",[["^ ","^1?",146,"^1@",139,"^G","context"]],"^1B",[["^ ","^1?",154,"^1@",139,"^G","key"]],"^1I",[["^ ","^1?",158,"^1@",139,"^G","value"]]],"~i54",["^ ","~i2",[["^ ","^1?",0,"^1@",140],["^ ","^1?",34,"^1@",140],["^ ","^1?",117,"^1@",140]],"~i3",[["^ ","^1?",7,"^1@",140,"^G","cljs.core/assoc-in"]],"^1D",[["^ ","^1?",26,"^1@",140,"^G","context"]],"^1R",[["^ ","^1?",179,"^1@",140,"^G","key"]],"^1E",[["^ ","^1?",191,"^1@",140,"^G","value"]]],"~i56",["^ ","~i0",[["^ ","^1?",0,"^1@",142],["^ ","^1?",0,"^1@",142],["^ ","^1?",70,"^1@",142],["^ ","^1?",148,"^1@",142,"^G","var_args"],["^ ","^1?",0,"^1@",143],["^ ","^1?",0,"^1@",143],["^ ","^1?",4,"^1@",143,"^G","args__4534__auto__"],["^ ","^1?",25,"^1@",143],["^ ","^1?",0,"^1@",144],["^ ","^1?",0,"^1@",144],["^ ","^1?",4,"^1@",144,"^G","len__4531__auto__"],["^ ","^1?",30,"^1@",144],["^ ","^1?",30,"^1@",144],["^ ","^1?",0,"^1@",145],["^ ","^1?",0,"^1@",145],["^ ","^1?",4,"^1@",145,"^G","i__4532__auto__"],["^ ","^1?",28,"^1@",145],["^ ","^1?",0,"^1@",147],["^ ","^1?",0,"^1@",147],["^ ","^1?",3,"^1@",147],["^ ","^1?",4,"^1@",147,"^G","i__4532__auto__"],["^ ","^1?",28,"^1@",147,"^G","len__4531__auto__"],["^ ","^1?",0,"^1@",148],["^ ","^1?",0,"^1@",148],["^ ","^1?",0,"^1@",148,"^G","args__4534__auto__"],["^ ","^1?",24,"^1@",148],["^ ","^1?",25,"^1@",148],["^ ","^1?",35,"^1@",148,"^G","i__4532__auto__"],["^ ","^1?",0,"^1@",150],["^ ","^1?",15,"^1@",150],["^ ","^1?",16,"^1@",150,"^G","i__4532__auto__"],["^ ","^1?",40,"^1@",150],["^ ","^1?",0,"^1@",154],["^ ","^1?",0,"^1@",158],["^ ","^1?",4,"^1@",158,"^G","argseq__4535__auto__"],["^ ","^1?",27,"^1@",158],["^ ","^1?",29,"^1@",158],["^ ","^1?",30,"^1@",158],["^ ","^1?",36,"^1@",158],["^ ","^1?",36,"^1@",158,"^G","args__4534__auto__"],["^ ","^1?",64,"^1@",158],["^ ","^1?",64,"^1@",158],["^ ","^1?",69,"^1@",158,"^G","cljs.core/IndexedSeq"],["^ ","^1?",90,"^1@",158],["^ ","^1?",90,"^1@",158,"^G","args__4534__auto__"],["^ ","^1?",115,"^1@",158],["^ ","^1?",120,"^1@",158],["^ ","^1?",124,"^1@",158],["^ ","^1?",131,"^1@",158],["^ ","^1?",0,"^1@",159],["^ ","^1?",0,"^1@",159],["^ ","^1?",7,"^1@",159,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1?",112,"^1@",159],["^ ","^1?",113,"^1@",159],["^ ","^1?",123,"^1@",159],["^ ","^1?",129,"^1@",159],["^ ","^1?",130,"^1@",159],["^ ","^1?",140,"^1@",159],["^ ","^1?",146,"^1@",159],["^ ","^1?",147,"^1@",159],["^ ","^1?",157,"^1@",159],["^ ","^1?",163,"^1@",159,"^G","argseq__4535__auto__"],["^ ","^1?",0,"^1@",162],["^ ","^1?",0,"^1@",162],["^ ","^1?",0,"^1@",162],["^ ","^1?",0,"^1@",162,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1?",107,"^1@",162],["^ ","^1?",0,"^1@",163],["^ ","^1?",0,"^1@",166],["^ ","^1?",0,"^1@",166],["^ ","^1?",0,"^1@",166,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1?",94,"^1@",166],["^ ","^1?",0,"^1@",168],["^ ","^1?",0,"^1@",169],["^ ","^1?",0,"^1@",169],["^ ","^1?",0,"^1@",169,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"],["^ ","^1?",88,"^1@",169],["^ ","^1?",99,"^1@",169,"^G","seq42225"],["^ ","^1?",0,"^1@",170],["^ ","^1?",0,"^1@",170],["^ ","^1?",4,"^1@",170,"^G","G__42226"],["^ ","^1?",15,"^1@",170],["^ ","^1?",15,"^1@",170,"^G","cljs.core/first"],["^ ","^1?",31,"^1@",170,"^G","seq42225"],["^ ","^1?",4,"^1@",171,"^G","seq42225"],["^ ","^1?",19,"^1@",171],["^ ","^1?",19,"^1@",171,"^G","cljs.core/next"],["^ ","^1?",34,"^1@",171,"^G","seq42225"],["^ ","^1?",4,"^1@",172,"^G","G__42227"],["^ ","^1?",15,"^1@",172],["^ ","^1?",15,"^1@",172,"^G","cljs.core/first"],["^ ","^1?",31,"^1@",172,"^G","seq42225"],["^ ","^1?",4,"^1@",173,"^G","seq42225"],["^ ","^1?",19,"^1@",173],["^ ","^1?",19,"^1@",173,"^G","cljs.core/next"],["^ ","^1?",34,"^1@",173,"^G","seq42225"],["^ ","^1?",4,"^1@",174,"^G","G__42228"],["^ ","^1?",15,"^1@",174],["^ ","^1?",15,"^1@",174,"^G","cljs.core/first"],["^ ","^1?",31,"^1@",174,"^G","seq42225"],["^ ","^1?",4,"^1@",175,"^G","seq42225"],["^ ","^1?",19,"^1@",175],["^ ","^1?",19,"^1@",175,"^G","cljs.core/next"],["^ ","^1?",34,"^1@",175,"^G","seq42225"],["^ ","^1?",0,"^1@",176],["^ ","^1?",0,"^1@",176],["^ ","^1?",4,"^1@",176,"^G","self__4518__auto__"],["^ ","^1?",25,"^1@",176],["^ ","^1?",0,"^1@",177],["^ ","^1?",0,"^1@",177],["^ ","^1?",7,"^1@",177,"^G","self__4518__auto__"],["^ ","^1?",63,"^1@",177,"^G","G__42226"],["^ ","^1?",72,"^1@",177,"^G","G__42227"],["^ ","^1?",81,"^1@",177,"^G","G__42228"],["^ ","^1?",90,"^1@",177,"^G","seq42225"],["^ ","^1?",0,"^1@",180]],"~i6",[["^ ","^1?",0,"^1@",142,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect"]]],"~i57",["^ ","~i3",[["^ ","^1?",118,"^1@",162,"^G","context"]],"^1B",[["^ ","^1?",126,"^1@",162,"^G","key"]],"^1I",[["^ ","^1?",130,"^1@",162,"^G","f"]],"^1K",[["^ ","^1?",132,"^1@",162,"^G","args"]]],"~i58",["^ ","~i2",[["^ ","^1?",0,"^1@",163],["^ ","^1?",81,"^1@",163],["^ ","^1?",164,"^1@",163]],"~i3",[["^ ","^1?",7,"^1@",163,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$5"]],"~i9",[["^ ","^1?",53,"^1@",163,"^G","cljs.core/update-in"]],"^1K",[["^ ","^1?",73,"^1@",163,"^G","context"]],"^25",[["^ ","^1?",226,"^1@",163,"^G","key"]],"^27",[["^ ","^1?",238,"^1@",163,"^G","f"]],"^29",[["^ ","^1?",240,"^1@",163,"^G","args"]]],"~i63",["^ ","~i0",[["^ ","^1?",0,"^1@",180],["^ ","^1?",76,"^1@",180],["^ ","^1?",0,"^1@",181]],"~i7",[["^ ","^1?",0,"^1@",180,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn"]]],"~i64",["^ ","~i3",[["^ ","^1?",160,"^1@",180,"^G","context"]],"^1B",[["^ ","^1?",168,"^1@",180,"^G","interceptor"]],"^1Y",[["^ ","^1?",180,"^1@",180,"^G","direction"]]],"~i65",["^ ","~i2",[["^ ","^1?",0,"^1@",181],["^ ","^1?",4,"^1@",181,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",182],["^ ","^1?",0,"^1@",182],["^ ","^1?",20,"^1@",182,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",183],["^ ","^1?",8,"^1@",183,"^G","temp__5455__auto__"],["^ ","^1?",0,"^1@",184]],"^1B",[["^ ","^1?",4,"^1@",183,"^G","f"]],"^1C",[["^ ","^1?",25,"^1@",181]],"~i14",[["^ ","^1?",25,"^1@",181,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^1?",69,"^1@",181,"^G","interceptor"]],"^20",[["^ ","^1?",81,"^1@",181,"^G","direction"]]],"~i66",["^ ","~i4",[["^ ","^1?",0,"^1@",184]],"~i5",[["^ ","^1?",8,"^1@",184,"^G","f"],["^ ","^1?",42,"^1@",184,"^G","f"],["^ ","^1?",85,"^1@",184,"^G","f"]],"~i7",[["^ ","^1?",74,"^1@",184,"^G","context"],["^ ","^1?",97,"^1@",184,"^G","context"]]],"~i67",["^ ","~i4",[["^ ","^1?",0,"^1@",186,"^G","context"]]],"~i70",["^ ","~i0",[["^ ","^1?",0,"^1@",189],["^ ","^1?",74,"^1@",214],["^ ","^1?",0,"^1@",215]],"~i7",[["^ ","^1?",0,"^1@",214,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]],"~i94",["^ ","~i4",[["^ ","^1?",156,"^1@",214,"^G","context"]],"^1D",[["^ ","^1?",164,"^1@",214,"^G","direction"]]],"~i95",["^ ","~i3",[["^ ","^1?",0,"^1@",215],["^ ","^1?",0,"^1@",217]],"^1A",[["^ ","^1?",4,"^1@",215,"^G","context"]],"^1N",[["^ ","^1?",18,"^1@",215,"^G","context"]]],"~i96",["^ ","~i5",[["^ ","^1?",0,"^1@",217],["^ ","^1?",0,"^1@",218]],"^1B",[["^ ","^1?",4,"^1@",217,"^G","queue"]],"^1J",[["^ ","^1?",12,"^1@",217],["^ ","^1?",12,"^1@",217]],"^1[",[["^ ","^1?",97,"^1@",217,"^G","context"]]],"~i97",["^ ","~i7",[["^ ","^1?",0,"^1@",218]],"^1B",[["^ ","^1?",3,"^1@",218]],"^1D",[["^ ","^1?",3,"^1@",218,"^G","cljs.core/empty?"]],"^1K",[["^ ","^1?",26,"^1@",218,"^G","queue"]]],"~i98",["^ ","~i9",[["^ ","^1?",0,"^1@",219,"^G","context"]]],"~i99",["^ ","~i9",[["^ ","^1?",0,"^1@",221],["^ ","^1?",0,"^1@",223]],"^1I",[["^ ","^1?",4,"^1@",221,"^G","interceptor"]],"^1P",[["^ ","^1?",18,"^1@",221]],"~i28",[["^ ","^1?",18,"^1@",221,"^G","cljs.core/peek"]],"^21",[["^ ","^1?",33,"^1@",221,"^G","queue"]]],"~i100",["^ ","^1I",[["^ ","^1?",4,"^1@",222,"^G","stack"]],"^1V",[["^ ","^1?",12,"^1@",222],["^ ","^1?",12,"^1@",222]],"^1M",[["^ ","^1?",97,"^1@",222,"^G","context"]]],"~i101",["^ ","^1B",[["^ ","^1?",0,"^1@",223]],"^1L",[["^ ","^1?",142,"^1@",223,"^G","context"]]],"~i102",["^ ","^1L",[["^ ","^1?",89,"^1@",223],["^ ","^1?",154,"^1@",223],["^ ","^1?",280,"^1@",223]],"^1Y",[["^ ","^1?",89,"^1@",223,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"]],"^1T",[["^ ","^1?",209,"^1@",223]],"^1E",[["^ ","^1?",209,"^1@",223,"^G","cljs.core/pop"]],"^1F",[["^ ","^1?",223,"^1@",223,"^G","queue"]]],"~i103",["^ ","^1T",[["^ ","^1?",335,"^1@",223]],"^1E",[["^ ","^1?",335,"^1@",223,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i42",[["^ ","^1?",380,"^1@",223,"^G","stack"]],"^1H",[["^ ","^1?",386,"^1@",223,"^G","interceptor"]]],"~i104",["^ ","^1L",[["^ ","^1?",15,"^1@",223]],"^1Y",[["^ ","^1?",15,"^1@",223,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn"]],"^28",[["^ ","^1?",405,"^1@",223,"^G","interceptor"]],"^2@",[["^ ","^1?",417,"^1@",223,"^G","direction"]]],"~i107",["^ ","~i0",[["^ ","^1?",0,"^1@",230],["^ ","^1?",62,"^1@",237],["^ ","^1?",0,"^1@",238]],"~i6",[["^ ","^1?",0,"^1@",237,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue"]]],"~i113",["^ ","~i3",[["^ ","^1?",132,"^1@",237,"^G","context"]],"^1B",[["^ ","^1?",140,"^1@",237,"^G","interceptors"]]],"~i114",["^ ","~i2",[["^ ","^1?",0,"^1@",238],["^ ","^1?",62,"^1@",238]],"~i3",[["^ ","^1?",7,"^1@",238,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"]],"^1A",[["^ ","^1?",54,"^1@",238,"^G","context"]]],"~i115",["^ ","^1A",[["^ ","^1?",117,"^1@",238]],"^1B",[["^ ","^1?",117,"^1@",238,"^G","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1?",162,"^1@",238,"^G","cljs.core/into"]],"^1V",[["^ ","^1?",177,"^1@",238,"^G","mranderson048.re-frame.v0v10v2.re-frame.interop/empty-queue"]]],"~i116",["^ ","^1A",[["^ ","^1?",238,"^1@",238,"^G","interceptors"]]],"~i119",["^ ","~i0",[["^ ","^1?",0,"^1@",240],["^ ","^1?",0,"^1@",240],["^ ","^1?",62,"^1@",243],["^ ","^1?",132,"^1@",243,"^G","var_args"],["^ ","^1?",0,"^1@",244],["^ ","^1?",0,"^1@",244],["^ ","^1?",4,"^1@",244,"^G","G__42264"],["^ ","^1?",15,"^1@",244],["^ ","^1?",15,"^1@",244],["^ ","^1?",0,"^1@",245],["^ ","^1?",0,"^1@",245],["^ ","^1?",8,"^1@",245,"^G","G__42264"],["^ ","^1?",5,"^1@",246],["^ ","^1?",0,"^1@",247],["^ ","^1?",7,"^1@",247,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1?",97,"^1@",247],["^ ","^1?",98,"^1@",247],["^ ","^1?",108,"^1@",247],["^ ","^1?",114,"^1@",247],["^ ","^1?",115,"^1@",247],["^ ","^1?",125,"^1@",247],["^ ","^1?",5,"^1@",250],["^ ","^1?",0,"^1@",251],["^ ","^1?",7,"^1@",251,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1?",97,"^1@",251],["^ ","^1?",98,"^1@",251],["^ ","^1?",108,"^1@",251],["^ ","^1?",114,"^1@",251],["^ ","^1?",115,"^1@",251],["^ ","^1?",125,"^1@",251],["^ ","^1?",131,"^1@",251],["^ ","^1?",132,"^1@",251],["^ ","^1?",142,"^1@",251],["^ ","^1?",0,"^1@",255],["^ ","^1?",6,"^1@",255],["^ ","^1?",11,"^1@",255,"^G","js/Error"],["^ ","^1?",17,"^1@",255],["^ ","^1?",18,"^1@",255],["^ ","^1?",80,"^1@",255],["^ ","^1?",80,"^1@",255],["^ ","^1?",0,"^1@",260],["^ ","^1?",0,"^1@",260],["^ ","^1?",92,"^1@",260],["^ ","^1?",0,"^1@",261],["^ ","^1?",0,"^1@",264],["^ ","^1?",0,"^1@",264],["^ ","^1?",92,"^1@",264],["^ ","^1?",0,"^1@",265],["^ ","^1?",0,"^1@",268],["^ ","^1?",0,"^1@",268],["^ ","^1?",86,"^1@",268],["^ ","^1?",0,"^1@",270]],"~i7",[["^ ","^1?",0,"^1@",243,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1?",0,"^1@",260,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1?",0,"^1@",264,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"],["^ ","^1?",0,"^1@",268,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/context"]]],"~i121",["^ ","~i4",[["^ ","^1?",103,"^1@",260,"^G","event"]],"^1A",[["^ ","^1?",109,"^1@",260,"^G","interceptors"]]],"~i123",["^ ","~i6",[["^ ","^1?",67,"^1@",261],["^ ","^1?",134,"^1@",261],["^ ","^1?",169,"^1@",261]],"~i7",[["^ ","^1?",67,"^1@",261,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]],"^1M",[["^ ","^1?",223,"^1@",261,"^G","event"]]],"~i124",["^ ","~i6",[["^ ","^1?",0,"^1@",261]],"~i7",[["^ ","^1?",7,"^1@",261,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue"]],"^1I",[["^ ","^1?",230,"^1@",261,"^G","interceptors"]]],"~i125",["^ ","~i4",[["^ ","^1?",103,"^1@",264,"^G","event"]],"^1A",[["^ ","^1?",109,"^1@",264,"^G","interceptors"]],"^1Y",[["^ ","^1?",122,"^1@",264,"^G","db"]]],"~i126",["^ ","~i7",[["^ ","^1?",74,"^1@",265]],"~i8",[["^ ","^1?",74,"^1@",265,"^G","mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1?",164,"^1@",265,"^G","event"]],"^1L",[["^ ","^1?",170,"^1@",265,"^G","interceptors"]]],"~i127",["^ ","~i7",[["^ ","^1?",0,"^1@",265],["^ ","^1?",184,"^1@",265]],"~i8",[["^ ","^1?",7,"^1@",265,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect"]],"^1P",[["^ ","^1?",232,"^1@",265,"^G","db"]]],"~i130",["^ ","~i0",[["^ ","^1?",0,"^1@",270],["^ ","^1?",71,"^1@",279],["^ ","^1?",0,"^1@",280]],"~i7",[["^ ","^1?",0,"^1@",279,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/change-direction"]]],"~i138",["^ ","~i3",[["^ ","^1?",150,"^1@",279,"^G","context"]]],"~i139",["^ ","~i6",[["^ ","^1?",114,"^1@",280,"^G","context"]]],"~i140",["^ ","~i6",[["^ ","^1?",67,"^1@",280],["^ ","^1?",122,"^1@",280]],"~i7",[["^ ","^1?",67,"^1@",280,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]]],"~i141",["^ ","~i6",[["^ ","^1?",0,"^1@",280]],"~i7",[["^ ","^1?",7,"^1@",280,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue"]],"^1I",[["^ ","^1?",178,"^1@",280],["^ ","^1?",178,"^1@",280]],"^1Y",[["^ ","^1?",263,"^1@",280,"^G","context"]]],"~i144",["^ ","~i0",[["^ ","^1?",0,"^1@",282],["^ ","^1?",62,"^1@",332],["^ ","^1?",0,"^1@",333]],"~i6",[["^ ","^1?",0,"^1@",332,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/execute"]]],"~i193",["^ ","~i3",[["^ ","^1?",132,"^1@",332,"^G","event-v"]],"^1B",[["^ ","^1?",140,"^1@",332,"^G","interceptors"]]],"~i194",["^ ","~i6",[["^ ","^1?",220,"^1@",333]],"~i7",[["^ ","^1?",220,"^1@",333,"^G","mranderson048.re_frame.v0v10v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^1?",310,"^1@",333,"^G","event-v"]],"^1Y",[["^ ","^1?",318,"^1@",333,"^G","interceptors"]]],"~i195",["^ ","~i6",[["^ ","^1?",148,"^1@",333],["^ ","^1?",332,"^1@",333]],"~i7",[["^ ","^1?",148,"^1@",333,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]],"~i196",["^ ","~i6",[["^ ","^1?",79,"^1@",333,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/change-direction"]]],"~i197",["^ ","~i6",[["^ ","^1?",0,"^1@",333],["^ ","^1?",79,"^1@",333],["^ ","^1?",392,"^1@",333]],"~i7",[["^ ","^1?",7,"^1@",333,"^G","mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1537460974000,1537389904000,"~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"],["^17","goog/dom/tagname.js"],[1533155346000,"^R","~$goog.dom.HtmlElement"],["^17","mranderson048/re_frame/v0v10v2/re_frame/loggers.cljc"],[1533155354000,"^R","^Q","^O"],["~:macro","^Q"],[1533155342000],["^3I","~$mranderson048.reagent.v0v8v0.reagent.core"],[1533155354000],["^17","goog/math/math.js"],[1533155346000,"^R","~$goog.array","~$goog.asserts"],["^3D","node_modules/schedule/cjs/schedule.production.min.js"],[1537460974000,1537389904000,"^3E"],["^17","goog/labs/useragent/browser.js"],[1533155346000,"^R","^3K","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^17","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1533155354000,"^R","^Q","^=","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"],["^3D","node_modules/schedule/cjs/schedule-tracing.production.min.js"],[1537460974000,1537389904000,"^3E"],["^17","goog/array/array.js"],[1533155346000,"^R","^3L"],["^3D","node_modules/prop-types/checkPropTypes.js"],[1537460974000,1534609634000,"^3E","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^3D","node_modules/fbjs/lib/emptyFunction.js"],[1537460974000,1534609635000,"^3E"],["^17","goog/debug/error.js"],[1533155346000,"^R"],["^17","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1533155354000,"^R","^Q","^A","^3R","^3P","^3S","^3T","^3U","^3V"],["^17","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1533155354000,"^R","^Q","^?","^=","^3R","^3S","^3T","^3V","^3U"],["^3D","node_modules/fbjs/lib/emptyObject.js"],[1537460974000,1534609635000,"^3E"],["^17","goog/dom/nodetype.js"],[1533155346000,"^R"],["^3D","node_modules/create-react-class/factory.js"],[1537460974000,1534609635000,"^3E","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"],["^3D","node_modules/react/index.js"],[1537460974000,1537389904000,"^3E","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^17","shadow/js.js"],[1537460974000,"^R"],["^17","goog/object/object.js"],[1533155346000,"^R"],["^3D","node_modules/react-dom/cjs/react-dom.production.min.js"],[1537460974000,1537389904000,"^3E","^=","^3Y","~$module$node_modules$schedule$index"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^3D","node_modules/react/cjs/react.development.js"],[1537460974000,1537389904000,"^3E","^3Y","~$module$node_modules$prop_types$checkPropTypes"],["^3I","^3V"],[1533155354000],["^17","goog/math/long.js"],[1533155346000,"^R","^3L","~$goog.reflect"],["^17","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1533155354000,"^R","^Q","^3U","^3V","^3R","~$clojure.string"],["^3D","node_modules/fbjs/lib/warning.js"],[1537460974000,1534609635000,"^3E","~$module$node_modules$fbjs$lib$emptyFunction"],["^17","goog/functions/functions.js"],[1533155346000,"^R"],["^17","clojure/walk.cljs"],[1533155342000,"^R","^Q"],["^17","goog/structs/map.js"],[1533155346000,"^R","~$goog.iter.Iterator","~$goog.iter.StopIteration","^3N"],["^17","goog/labs/useragent/engine.js"],[1533155346000,"^R","^3K","^3M","^3O"],["^3I","^3T"],[1533155354000],["^17","goog/asserts/asserts.js"],[1533155346000,"^R","~$goog.debug.Error","~$goog.dom.NodeType","^3O"],["^17","goog/uri/uri.js"],[1533155346000,"^R","^3K","^3L","^3O","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^17","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1533155354000,"^R","^Q","^3R","^3U","^3S","^O"],["^17","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1533155354000,"^R","^Q"],["^3D","node_modules/object-assign/index.js"],[1537460974000,1534609614000,"^3E"],["^3D","node_modules/schedule/tracing.js"],[1537460974000,1537389904000,"^3E","~$module$node_modules$schedule$cjs$schedule_tracing_production_min","~$module$node_modules$schedule$cjs$schedule_tracing_development"],["^17","goog/base.js"],[1533155346000],["^17","goog/structs/structs.js"],[1533155346000,"^R","^3K","^3N"],["^17","clojure/string.cljs"],[1533155342000,"^R","^Q","^3O","~$goog.string.StringBuffer"],["^3D","node_modules/create-react-class/index.js"],[1537460974000,1534609635000,"^3E","^=","~$module$node_modules$create_react_class$factory"],["^3D","node_modules/schedule/cjs/schedule.development.js"],[1537460974000,1537389904000,"^3E"],["^17","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1533155354000,"^R","^Q","^M","^N","^O"],["^3D","node_modules/react/cjs/react.production.min.js"],[1537460974000,1537389904000,"^3E","^3Y"],["^17","goog/debug/entrypointregistry.js"],[1533155346000,"^R","^3L"],["^17","goog/string/string.js"],[1533155346000,"^R"],["^17","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1533155354000,"^R","^Q","^=","^47","~$clojure.walk","^3R","^3Q","^3S","^3T","^3V","^3U"],["^17","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1533155354000,"^R","^Q","^3U","^3V","^47"],["^3D","node_modules/schedule/cjs/schedule-tracing.development.js"],[1537460974000,1537389904000,"^3E"],["^17","goog/reflect/reflect.js"],[1533155346000,"^R"],["^17","goog/labs/useragent/util.js"],[1533155346000,"^R","^3O"],["^17","goog/string/stringbuffer.js"],[1533155346000,"^R"],["^17","goog/iter/iter.js"],[1533155346000,"^R","^3K","^3L","~$goog.functions","~$goog.math"],["^17","goog/async/nexttick.js"],[1533155346000,"^R","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^4G","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^3D","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537460974000,1534609634000,"^3E"],["^17","goog/dom/htmlelement.js"],[1533155346000,"^R"],["^17","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^3O","^3N","^3K","~$goog.Uri","^4D"],["^17","goog/math/integer.js"],[1533155346000,"^R"],["^17","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1533155354000,"^R","^Q"],["^3D","node_modules/react-dom/cjs/react-dom.development.js"],[1537460974000,1537389904000,"^3E","^=","^3Y","^45","^43","~$module$node_modules$schedule$tracing"],["^17","clojure/set.cljs"],[1533155342000,"^R","^Q"],["^17","goog/uri/utils.js"],[1533155346000,"^R","^3K","^3L","^3O"],["^17","mranderson048/re_frame/v0v10v2/re_frame/interop.cljs"],[1533155354000,"^R","^Q","~$goog.async.nextTick","^3J","^3T"],["^3D","node_modules/schedule/index.js"],[1537460974000,1537389904000,"^3E","~$module$node_modules$schedule$cjs$schedule_production_min","~$module$node_modules$schedule$cjs$schedule_development"],["^3D","node_modules/fbjs/lib/invariant.js"],[1537460974000,1534609635000,"^3E"],["^3I","^3U"],[1533155354000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",1,"^8",5,"^9",1,"^:",56],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^O","^Q","^Q","^R","^R"],"^S",["^F",["^T"]],"~:shadow/js-access-global",["^F",["Error"]],"^U",["^ ","^V","^M","^W","^N","^X","^N"],"~:defs",["^ ","~$invoke-interceptors",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",71,"^8",8,"^9",71,"^:",27,"~:private",true,"~:arglists",["^[",["~$quote",["^[",[["~$context","~$direction"]]]]],"~:doc","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"^4Y",true,"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptors","~:variadic",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",27,"~:method-params",["^[",[["^50","^51"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"^7",71,"^9",71,"~:max-fixed-arity",2,"~:fn-var",true,"^4Z",["^[",["^4[",["^[",[["^50","^51"]]]]],"^52","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"~$assoc-coeffect",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",53,"^8",7,"^9",53,"^:",21,"^4Z",["^[",["^4[",["^[",[["^50","~$key","~$value"]]]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",21,"^55",["^[",[["^50","^5;","^5<"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",53,"^9",53,"^58",3,"^59",true,"^4Z",["^[",["^4[",["^[",[["^50","^5;","^5<"]]]]]],"~$update-coeffect",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",57,"^8",7,"^9",57,"^:",22,"^4Z",["^[",["^4[",["^[",[["^50","^5;","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^54",true,"^58",3,"^55",[["^[",["^50","^5;","~$f","^5?"]]],"^4Z",["^[",[["^50","^5;","~$f","~$&","^5?"]]],"^57",["^[",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/update-coeffect","^54",true,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",22,"^5@",["^ ","^54",true,"^58",3,"^55",[["^[",["^50","^5;","~$f","^5?"]]],"^4Z",["^[",[["^50","^5;","~$f","~$&","^5?"]]],"^57",["^[",[null]]],"^55",[["^[",["^50","^5;","~$f","^5?"]]],"^56",null,"^57",["^[",[null]],"^8",1,"^7",57,"^9",57,"^58",3,"^59",true,"^4Z",["^[",[["^50","^5;","~$f","~$&","^5?"]]]],"~$invoke-interceptor-fn",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",64,"^8",8,"^9",64,"^:",29,"^4Y",true,"^4Z",["^[",["^4[",["^[",[["^50","~$interceptor","^51"]]]]]],"^4Y",true,"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/invoke-interceptor-fn","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",29,"^55",["^[",[["^50","^5C","^51"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",64,"^9",64,"^58",3,"^59",true,"^4Z",["^[",["^4[",["^[",[["^50","^5C","^51"]]]]]],"~$get-effect",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",30,"^8",7,"^9",30,"^:",17,"^4Z",["^[",["^4[",["^[",[["^50"],["^50","^5;"],["^50","^5;","~$not-found"]]]]],"^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^57",["^[",[null,null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",17,"^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^57",["^[",[null,null,null]]],"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^56",null,"^57",["^[",[null,null,null]],"^8",1,"^7",30,"^9",30,"^58",3,"^59",true,"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]]],"~$->interceptor",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",16,"^8",7,"^9",16,"^:",20,"^4Z",["^[",["^4[",["^[",[["~$&",["^ ","^12","~$m","~:keys",["~$id","~$before","~$after"]]]]]]],"^52","Create an interceptor from named arguments","^5@",["^ ","^54",true,"^58",0,"^55",[["^[",[["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^4Z",["^[",[["~$&",["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^57",["^[",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor","^54",true,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",20,"^5@",["^ ","^54",true,"^58",0,"^55",[["^[",[["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^4Z",["^[",[["~$&",["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^57",["^[",[null]]],"^55",[["^[",[["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^56",null,"^57",["^[",[null]],"^8",1,"^7",16,"^9",16,"^58",0,"^59",true,"^4Z",["^[",[["~$&",["^ ","^12","~$m","^5I",["^5J","^5K","^5L"]]]]],"^52","Create an interceptor from named arguments"],"~$get-coeffect",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",45,"^8",7,"^9",45,"^:",19,"^4Z",["^[",["^4[",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]]]],"^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^57",["^[",[null,null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^57",["^[",[null,null,null]]],"^55",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]],"^56",null,"^57",["^[",[null,null,null]],"^8",1,"^7",45,"^9",45,"^58",3,"^59",true,"^4Z",["^[",[["^50"],["^50","^5;"],["^50","^5;","^5F"]]]],"~$execute",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",145,"^8",7,"^9",145,"^:",14,"^4Z",["^[",["^4[",["^[",[["~$event-v","~$interceptors"]]]]],"^52","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/execute","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",14,"^55",["^[",[["^5Q","^5R"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",145,"^9",145,"^58",2,"^59",true,"^4Z",["^[",["^4[",["^[",[["^5Q","^5R"]]]]],"^52","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of iterceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat anologous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"~$assoc-effect",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",39,"^8",7,"^9",39,"^:",19,"^4Z",["^[",["^4[",["^[",[["^50","^5;","^5<"]]]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-effect","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^55",["^[",[["^50","^5;","^5<"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",39,"^9",39,"^58",3,"^59",true,"^4Z",["^[",["^4[",["^[",[["^50","^5;","^5<"]]]]]],"~$enqueue",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",108,"^8",7,"^9",108,"^:",14,"^4Z",["^[",["^4[",["^[",[["^50","^5R"]]]]],"^52","Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context."],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",14,"^55",["^[",[["^50","^5R"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",108,"^9",108,"^58",2,"^59",true,"^4Z",["^[",["^4[",["^[",[["^50","^5R"]]]]],"^52","Add a collection of `interceptors` to the end of `context's` execution `:queue`.\n  Returns the updated `context`.\n\n  In an advanced case, this function could allow an interceptor to add new\n  interceptors to the `:queue` of a context."],"~$mandatory-interceptor-keys",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/mandatory-interceptor-keys","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",8,"^8",1,"^9",8,"^:",32,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",8,"^8",6,"^9",8,"^:",32],"~:tag","~$cljs.core/ISet"],"~$interceptor?",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",10,"^8",7,"^9",10,"^:",19,"^4Z",["^[",["^4[",["^[",[["~$m"]]]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/interceptor?","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",19,"^55",["^[",[["~$m"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",10,"^9",10,"^58",1,"^59",true,"^4Z",["^[",["^4[",["^[",[["~$m"]]]]]],"~$change-direction",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",131,"^8",8,"^9",131,"^:",24,"^4Y",true,"^4Z",["^[",["^4[",["^[",[["^50"]]]]],"^52","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^4Y",true,"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/change-direction","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",24,"^55",["^[",[["^50"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",131,"^9",131,"^58",1,"^59",true,"^4Z",["^[",["^4[",["^[",[["^50"]]]]],"^52","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^50",["^ ","^4X",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^7",120,"^8",8,"^9",120,"^:",15,"^4Y",true,"^4Z",["^[",["^4[",["^[",[["~$event","^5R"],["^64","^5R","~$db"]]]]],"^52","Create a fresh context","^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^4Z",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^57",["^[",[null,null]]]],"^4Y",true,"^G","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor/context","^54",false,"^6","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc","^:",15,"^5@",["^ ","^54",false,"^58",3,"^55",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^4Z",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^57",["^[",[null,null]]],"^55",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^56",null,"^57",["^[",[null,null]],"^8",1,"^7",120,"^9",120,"^58",3,"^59",true,"^4Z",["^[",[["^64","^5R"],["^64","^5R","^65"]]],"^52","Create a fresh context"]],"^Y",["^ ","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^F",["~:unnamed","~:db","~:queue","~:event","~:after","~:id","~:effects","~:stack","~:error","~:coeffects","~:before"]],"~:order",["^6<","^6=","^6B","^6@","^68","^6>","^6A","^6:","^6?","^6;","^69"]],"^13",["^ ","^T",["^F",[]]],"^14",["^ "],"^15",["^R","^Q","^M","^N","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^3C",[["^6F","~:static-fns"],true,["^6F","~:elide-asserts"],false,["^6F","~:optimize-constants"],null,["^6F","~:external-config"],null,["^6F","~:tooling-config"],null,["^6F","~:emit-constants"],null,["^6F","~:infer-externs"],true,["^6F","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6F","~:fn-invoke-direct"],null,["^6F","^1>"],"/dev/null"]]]