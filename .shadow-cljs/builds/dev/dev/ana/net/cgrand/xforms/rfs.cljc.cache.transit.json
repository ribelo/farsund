["^ ","~:output",["^ ","~:js","goog.provide('net.cgrand.xforms.rfs');\ngoog.require('cljs.core');\ngoog.require('goog.string.StringBuffer');\nnet.cgrand.xforms.rfs.cmp = (function net$cgrand$xforms$rfs$cmp(f,a,b){\nvar r = (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a,b) : f.call(null,a,b));\nif(typeof r === 'number'){\nreturn r;\n} else {\nif(cljs.core.truth_(r)){\nreturn (-1);\n} else {\nif(cljs.core.truth_((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(b,a) : f.call(null,b,a)))){\nreturn (1);\n} else {\nreturn (0);\n\n}\n}\n}\n});\n\nnet.cgrand.xforms.rfs.minimum = (function net$cgrand$xforms$rfs$minimum(var_args){\nvar G__46594 = arguments.length;\nswitch (G__46594) {\ncase 1:\nreturn net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1 = (function (comparator){\nreturn (function() {\nvar G__46613 = null;\nvar G__46613__0 = (function (){\nreturn null;\n});\nvar G__46613__1 = (function (x){\nreturn x;\n});\nvar G__46613__2 = (function (a,b){\nif((a == null)){\nreturn b;\n} else {\nif((b == null)){\nreturn a;\n} else {\nif((net.cgrand.xforms.rfs.cmp(comparator,a,b) > (0))){\nreturn b;\n} else {\nreturn a;\n\n}\n}\n}\n});\nG__46613 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__46613__0.call(this);\ncase 1:\nreturn G__46613__1.call(this,a);\ncase 2:\nreturn G__46613__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__46613.cljs$core$IFn$_invoke$arity$0 = G__46613__0;\nG__46613.cljs$core$IFn$_invoke$arity$1 = G__46613__1;\nG__46613.cljs$core$IFn$_invoke$arity$2 = G__46613__2;\nreturn G__46613;\n})()\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$2 = (function (comparator,absolute_maximum){\nreturn (function() {\nvar G__46614 = null;\nvar G__46614__0 = (function (){\nreturn new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567);\n});\nvar G__46614__1 = (function (x){\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567),x)){\nreturn absolute_maximum;\n} else {\nreturn x;\n}\n});\nvar G__46614__2 = (function (a,b){\nif(((cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567),a)) || ((net.cgrand.xforms.rfs.cmp(comparator,a,b) > (0))))){\nreturn b;\n} else {\nreturn a;\n}\n});\nG__46614 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__46614__0.call(this);\ncase 1:\nreturn G__46614__1.call(this,a);\ncase 2:\nreturn G__46614__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__46614.cljs$core$IFn$_invoke$arity$0 = G__46614__0;\nG__46614.cljs$core$IFn$_invoke$arity$1 = G__46614__1;\nG__46614.cljs$core$IFn$_invoke$arity$2 = G__46614__2;\nreturn G__46614;\n})()\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$lang$maxFixedArity = 2;\n\n\nnet.cgrand.xforms.rfs.maximum = (function net$cgrand$xforms$rfs$maximum(var_args){\nvar G__46596 = arguments.length;\nswitch (G__46596) {\ncase 1:\nreturn net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1 = (function (comparator){\nreturn (function() {\nvar G__46616 = null;\nvar G__46616__0 = (function (){\nreturn null;\n});\nvar G__46616__1 = (function (x){\nreturn x;\n});\nvar G__46616__2 = (function (a,b){\nif((a == null)){\nreturn b;\n} else {\nif((b == null)){\nreturn a;\n} else {\nif((net.cgrand.xforms.rfs.cmp(comparator,a,b) < (0))){\nreturn b;\n} else {\nreturn a;\n\n}\n}\n}\n});\nG__46616 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__46616__0.call(this);\ncase 1:\nreturn G__46616__1.call(this,a);\ncase 2:\nreturn G__46616__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__46616.cljs$core$IFn$_invoke$arity$0 = G__46616__0;\nG__46616.cljs$core$IFn$_invoke$arity$1 = G__46616__1;\nG__46616.cljs$core$IFn$_invoke$arity$2 = G__46616__2;\nreturn G__46616;\n})()\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$2 = (function (comparator,absolute_minimum){\nreturn (function() {\nvar G__46617 = null;\nvar G__46617__0 = (function (){\nreturn new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277);\n});\nvar G__46617__1 = (function (x){\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277),x)){\nreturn absolute_minimum;\n} else {\nreturn x;\n}\n});\nvar G__46617__2 = (function (a,b){\nif(((cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277),a)) || ((net.cgrand.xforms.rfs.cmp(comparator,a,b) < (0))))){\nreturn b;\n} else {\nreturn a;\n}\n});\nG__46617 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__46617__0.call(this);\ncase 1:\nreturn G__46617__1.call(this,a);\ncase 2:\nreturn G__46617__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__46617.cljs$core$IFn$_invoke$arity$0 = G__46617__0;\nG__46617.cljs$core$IFn$_invoke$arity$1 = G__46617__1;\nG__46617.cljs$core$IFn$_invoke$arity$2 = G__46617__2;\nreturn G__46617;\n})()\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$lang$maxFixedArity = 2;\n\n\nnet.cgrand.xforms.rfs.min = net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1(cljs.core.compare);\n\nnet.cgrand.xforms.rfs.max = net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1(cljs.core.compare);\n\n/**\n * Reducing fn to compute the arithmetic mean.\n */\nnet.cgrand.xforms.rfs.avg = (function net$cgrand$xforms$rfs$avg(var_args){\nvar G__46598 = arguments.length;\nswitch (G__46598) {\ncase 0:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$1 = (function (acc){\nif(cljs.core.truth_(acc)){\nreturn ((acc[(1)]) / (acc[(0)]));\n} else {\nreturn null;\n}\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$2 = (function (acc,x){\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3(acc,x,(1));\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3 = (function (acc,x,w){\nvar acc__$1 = (function (){var or__3949__auto__ = acc;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn [0.0,0.0];\n}\n})();\nvar G__46599 = acc__$1;\n(G__46599[(0)] = ((acc__$1[(0)]) + w));\n\n(G__46599[(1)] = ((acc__$1[(1)]) + (w * x)));\n\nreturn G__46599;\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$lang$maxFixedArity = 3;\n\n\n/**\n * Reducing fn to compute the standard deviation. Returns 0 if no or only one item.\n */\nnet.cgrand.xforms.rfs.sd = (function net$cgrand$xforms$rfs$sd(var_args){\nvar G__46601 = arguments.length;\nswitch (G__46601) {\ncase 0:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn [0.0,0.0,0.0];\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$1 = (function (a){\nvar s = (a[(0)]);\nvar n = (a[(2)]);\nif(((1) < n)){\nvar G__46602 = (s / (n - (1)));\nreturn Math.sqrt(G__46602);\n} else {\nreturn 0.0;\n}\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$2 = (function (a,x){\nvar s = (a[(0)]);\nvar m = (a[(1)]);\nvar n = (a[(2)]);\nvar d = (x - m);\nvar n__$1 = (n + (1));\nvar m_SINGLEQUOTE_ = (m + (d / n__$1));\nvar G__46603 = a;\n(G__46603[(0)] = (s + (d * (x - m_SINGLEQUOTE_))));\n\n(G__46603[(1)] = m_SINGLEQUOTE_);\n\n(G__46603[(2)] = n__$1);\n\nreturn G__46603;\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function that returns the last value.\n */\nnet.cgrand.xforms.rfs.last = (function net$cgrand$xforms$rfs$last(var_args){\nvar G__46605 = arguments.length;\nswitch (G__46605) {\ncase 0:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$2 = (function (_,x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function that returns the first logical true value.\n */\nnet.cgrand.xforms.rfs.some = (function net$cgrand$xforms$rfs$some(var_args){\nvar G__46607 = arguments.length;\nswitch (G__46607) {\ncase 0:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$2 = (function (_,x){\nif(cljs.core.truth_(x)){\nreturn cljs.core.reduced(x);\n} else {\nreturn null;\n}\n});\n\nnet.cgrand.xforms.rfs.some.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Like xforms/str but returns a StringBuilder.\n */\nnet.cgrand.xforms.rfs.str_BANG_ = (function net$cgrand$xforms$rfs$str_BANG_(var_args){\nvar G__46609 = arguments.length;\nswitch (G__46609) {\ncase 0:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn (new goog.string.StringBuffer());\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (sb){\nvar x_46610 = sb;\nif((x_46610 instanceof goog.string.StringBuffer)){\nreturn x_46610;\n} else {\nreturn (new goog.string.StringBuffer([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join('')));\n}\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (sb,x){\nreturn (function (){var x_46611 = sb;\nif((x_46611 instanceof goog.string.StringBuffer)){\nreturn x_46611;\n} else {\nreturn (new goog.string.StringBuffer([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)].join('')));\n}\n})().append(x);\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.\n */\nnet.cgrand.xforms.rfs.str = cljs.core.completing.cljs$core$IFn$_invoke$arity$2(net.cgrand.xforms.rfs.str_BANG_,cljs.core.str);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Christophe Grand","~:file","net/cgrand/xforms/rfs.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$or-instance?","~$net.cgrand.xforms.rfs"],"~:excludes",["~#set",["~$last","~$min","~$some","~$str","~$max"]],"~:macros",["^ "],"~:name","^G","~:op","~:ns","~:imports",["^ ","~$StringBuffer","~$goog.string.StringBuffer"],"~:requires",["^ ","~$cljs.core","^W","~$core","^W","^U","^U","^T","^U","~$goog","^Y"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^10",["^ ","~$net.cgrand.macrovich","^12","~$macros","^12","^G","^G","^W","^W","^X","^W"],"~:form",["~#list",["~$ns","^G",["^ ","^6","Christophe Grand"],["^15",["~:refer-clojure","~:exclude",["^M","^J","^K","^N","^L"]]],["^15",["^10",["^12","~:as","^13"],["^G","~:refer",["^F"]]]],["^15",["^[",["^W","^19","^X"]]],["^15",["~:import",["~$goog.string","^T"]]]]],"~:flags",["^ ","^10",["^I",[]],"^[",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^W","^U"]],"^R","^G","~:resource-id",["~:shadow.build.classpath/resource","net/cgrand/xforms/rfs.cljc"],"~:compiled-at",1537786424166,"~:resource-name","net/cgrand/xforms/rfs.cljc","~:warnings",[],"~:source","(ns net.cgrand.xforms.rfs\n  {:author \"Christophe Grand\"}\n  (:refer-clojure :exclude [str last min max some])\n  #?(:cljs (:require-macros\n             [net.cgrand.macrovich :as macros]\n             [net.cgrand.xforms.rfs :refer [or-instance?]])\n      :clj (:require [net.cgrand.macrovich :as macros]))\n  (:require [#?(:clj clojure.core :cljs cljs.core) :as core])\n  #?(:cljs (:import [goog.string StringBuffer])))\n\n(macros/deftime\n  (defmacro ^:private or-instance? [class x y]\n    (let [xsym (gensym 'x_)]\n      `(let [~xsym ~x]\n         (if (instance? ~class ~xsym) ~(with-meta xsym {:tag class}) ~y)))))\n\n(declare str!)\n\n(macros/usetime\n\n#? (:cljs\n     (defn ^:private cmp [f a b]\n       (let [r (f a b)]\n         (cond\n           (number? r) r\n           r -1\n           (f b a) 1\n           :else 0))))\n  \n(defn minimum\n ([comparator]\n   (fn\n     ([] nil)\n     ([x] x)\n     ([a b] (cond\n              (nil? a) b\n              (nil? b) a\n              (pos? (#?(:clj .compare :cljs cmp) comparator a b)) b\n              :else a))))\n ([#?(:clj ^java.util.Comparator comparator :cljs comparator) absolute-maximum]\n   (fn\n     ([] ::+∞)\n     ([x] (if (#?(:clj identical? :cljs keyword-identical?) ::+∞ x)\n            absolute-maximum\n            x))\n     ([a b] (if (or (#?(:clj identical? :cljs keyword-identical?) ::+∞ a) (pos? (#?(:clj .compare :cljs cmp) comparator a b))) b a)))))\n\n(defn maximum\n  ([comparator]\n    (fn\n     ([] nil)\n     ([x] x)\n     ([a b] (cond\n              (nil? a) b\n              (nil? b) a\n              (neg? (#?(:clj .compare :cljs cmp) comparator a b)) b\n              :else a))))\n  ([#?(:clj ^java.util.Comparator comparator :cljs comparator) absolute-minimum]\n    (fn\n      ([] ::-∞)\n      ([x] (if (#?(:clj identical? :cljs keyword-identical?) ::-∞ x)\n             absolute-minimum\n             x))\n      ([a b] (if (or (#?(:clj identical? :cljs keyword-identical?) ::-∞ a) (neg? (#?(:clj .compare :cljs cmp) comparator a b))) b a)))))\n\n(def min (minimum compare))\n\n(def max (maximum compare))\n\n(defn avg\n  \"Reducing fn to compute the arithmetic mean.\"\n  ([] nil)\n  ([^doubles acc] (when acc (/ (aget acc 1) (aget acc 0))))\n  ([acc x] (avg acc x 1))\n  ([^doubles acc x w] ; weighted mean\n    (let [acc (or acc #?(:clj (double-array 3) :cljs #js [0.0 0.0]))]\n      (doto acc\n        (aset 0 (+ (aget acc 0) w))\n        (aset 1 (+ (aget acc 1) (* w x)))))))\n\n(defn sd\n  \"Reducing fn to compute the standard deviation. Returns 0 if no or only one item.\"\n  ([] #?(:clj (double-array 3) :cljs #js [0.0 0.0 0.0]))\n  ([^doubles a]\n    (let [s (aget a 0) n (aget a 2)]\n      (if (< 1 n)\n        (Math/sqrt (/ s (dec n)))\n        0.0)))\n  ([^doubles a x]\n    (let [s (aget a 0) m (aget a 1) n (aget a 2)\n          d (- x m)\n          n (inc n)\n          m' (+ m (/ d n))]\n      (doto a\n        (aset 0 (+ s (* d (- x m'))))\n        (aset 1 m')\n        (aset 2 n)))))\n\n(defn last\n  \"Reducing function that returns the last value.\"\n  ([] nil)\n  ([x] x)\n  ([_ x] x))\n\n(defn some\n  \"Reducing function that returns the first logical true value.\"\n  ([] nil)\n  ([x] x)\n  ([_ x] (when x (reduced x))))\n\n(defn str!\n  \"Like xforms/str but returns a StringBuilder.\"\n  ([] (#?(:clj StringBuilder. :cljs StringBuffer.)))\n  ([sb] (or-instance? #?(:clj StringBuilder :cljs StringBuffer) sb (#?(:clj StringBuilder. :cljs StringBuffer.) (core/str sb)))) ; the instance? checks are for compatibility with str in case of seeded reduce/transduce.\n  ([sb x] (.append (or-instance? #?(:clj StringBuilder :cljs StringBuffer) sb (#?(:clj StringBuilder. :cljs StringBuffer.) (core/str sb))) x)))\n\n(def str\n  \"Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.\"\n  (completing str! core/str))\n\n#_(defn juxt\n   \"Returns a reducing fn which compute all rfns at once and whose final return\n   value is a vector of the final return values of each rfns.\"\n   [& rfns]\n   (let [rfns (mapv ensure-kvrf rfns)]\n     (kvrf\n       ([] (mapv #(vector % (volatile! (%))) rfns))\n       ([acc] (mapv (fn [[rf vacc]] (rf (unreduced @vacc))) acc))\n       ([acc x]\n         (let [some-unreduced (core/reduce (fn [some-unreduced [rf vacc]] \n                                            (when-not (reduced? @vacc) (vswap! vacc rf x) true))\n                                false acc)]\n           (if some-unreduced acc (reduced acc))))\n       ([acc k v]\n         (let [some-unreduced (core/reduce (fn [some-unreduced [rf vacc]] \n                                            (when-not (reduced? @vacc) (vswap! vacc rf k v) true))\n                                false acc)]\n           (if some-unreduced acc (reduced acc)))))))\n\n#_(defn juxt-map\n   [& key-rfns]\n   (let [f (apply juxt (take-nth 2 (next key-rfns)))\n         keys (vec (take-nth 2 key-rfns))]\n     (let [f (ensure-kvrf f)]\n       (kvrf\n         ([] (f))\n         ([acc] (zipmap keys (f acc)))\n         ([acc x] (f acc x))\n         ([acc k v] (f acc k v))))))\n)\n","~:reader-features",["^I",["~:cljs"]],"~:source-map",["^ ","~i10",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",3]]],"~i16",["^ ","~i0",[["^ ","^1J",0,"^1K",3],["^ ","^1J",0,"^1K",3]]],"~i18",["^ ","~i0",[["^ ","^1J",0,"^1K",3]]],"~i21",["^ ","~i5",[["^ ","^1J",0,"^1K",3],["^ ","^1J",28,"^1K",3],["^ ","^1J",0,"^1K",4]],"^1N",[["^ ","^1J",0,"^1K",3,"^P","net.cgrand.xforms.rfs/cmp"]],"~i26",[["^ ","^1J",64,"^1K",3,"^P","f"]],"~i28",[["^ ","^1J",66,"^1K",3,"^P","a"]],"~i30",[["^ ","^1J",68,"^1K",3,"^P","b"]]],"~i22",["^ ","~i7",[["^ ","^1J",0,"^1K",4],["^ ","^1J",0,"^1K",5]],"~i13",[["^ ","^1J",4,"^1K",4,"^P","r"]],"~i15",[["^ ","^1J",8,"^1K",4]],"^1L",[["^ ","^1J",9,"^1K",4,"^P","f"],["^ ","^1J",43,"^1K",4,"^P","f"],["^ ","^1J",82,"^1K",4,"^P","f"]],"^1M",[["^ ","^1J",75,"^1K",4,"^P","a"],["^ ","^1J",94,"^1K",4,"^P","a"]],"~i20",[["^ ","^1J",77,"^1K",4,"^P","b"],["^ ","^1J",96,"^1K",4,"^P","b"]]],"~i23",["^ ","~i9",[["^ ","^1J",0,"^1K",5],["^ ","^1J",0,"^1K",8],["^ ","^1J",0,"^1K",9],["^ ","^1J",0,"^1K",11],["^ ","^1J",0,"^1K",12],["^ ","^1J",0,"^1K",14],["^ ","^1J",0,"^1K",14]]],"~i24",["^ ","~i11",[["^ ","^1J",3,"^1K",5]],"^1U",[["^ ","^1J",10,"^1K",5,"^P","r"]],"^1V",[["^ ","^1J",0,"^1K",6,"^P","r"]]],"~i25",["^ ","^1X",[["^ ","^1J",20,"^1K",8,"^P","r"]]],"^1O",["^ ","^1X",[["^ ","^1J",20,"^1K",11]],"~i12",[["^ ","^1J",21,"^1K",11,"^P","f"],["^ ","^1J",55,"^1K",11,"^P","f"],["^ ","^1J",94,"^1K",11,"^P","f"]],"~i14",[["^ ","^1J",87,"^1K",11,"^P","b"],["^ ","^1J",106,"^1K",11,"^P","b"]],"^1L",[["^ ","^1J",89,"^1K",11,"^P","a"],["^ ","^1J",108,"^1K",11,"^P","a"]]],"~i29",["^ ","~i0",[["^ ","^1J",0,"^1K",21],["^ ","^1J",0,"^1K",21],["^ ","^1J",32,"^1K",21],["^ ","^1J",72,"^1K",21,"^P","var_args"],["^ ","^1J",0,"^1K",22],["^ ","^1J",0,"^1K",22],["^ ","^1J",4,"^1K",22,"^P","G__46594"],["^ ","^1J",15,"^1K",22],["^ ","^1J",15,"^1K",22],["^ ","^1J",0,"^1K",23],["^ ","^1J",0,"^1K",23],["^ ","^1J",8,"^1K",23,"^P","G__46594"],["^ ","^1J",5,"^1K",24],["^ ","^1J",0,"^1K",25],["^ ","^1J",7,"^1K",25,"^P","net.cgrand.xforms.rfs/minimum"],["^ ","^1J",67,"^1K",25],["^ ","^1J",68,"^1K",25],["^ ","^1J",78,"^1K",25],["^ ","^1J",5,"^1K",28],["^ ","^1J",0,"^1K",29],["^ ","^1J",7,"^1K",29,"^P","net.cgrand.xforms.rfs/minimum"],["^ ","^1J",67,"^1K",29],["^ ","^1J",68,"^1K",29],["^ ","^1J",78,"^1K",29],["^ ","^1J",84,"^1K",29],["^ ","^1J",85,"^1K",29],["^ ","^1J",95,"^1K",29],["^ ","^1J",0,"^1K",33],["^ ","^1J",6,"^1K",33],["^ ","^1J",11,"^1K",33,"^P","js/Error"],["^ ","^1J",17,"^1K",33],["^ ","^1J",18,"^1K",33],["^ ","^1J",80,"^1K",33],["^ ","^1J",80,"^1K",33],["^ ","^1J",0,"^1K",38],["^ ","^1J",0,"^1K",38],["^ ","^1J",62,"^1K",38],["^ ","^1J",0,"^1K",39],["^ ","^1J",0,"^1K",81],["^ ","^1J",0,"^1K",81],["^ ","^1J",62,"^1K",81],["^ ","^1J",0,"^1K",82],["^ ","^1J",0,"^1K",119],["^ ","^1J",0,"^1K",119],["^ ","^1J",56,"^1K",119],["^ ","^1J",0,"^1K",121]],"~i6",[["^ ","^1J",0,"^1K",21,"^P","net.cgrand.xforms.rfs/minimum"],["^ ","^1J",0,"^1K",38,"^P","net.cgrand.xforms.rfs/minimum"],["^ ","^1J",0,"^1K",81,"^P","net.cgrand.xforms.rfs/minimum"],["^ ","^1J",0,"^1K",119,"^P","net.cgrand.xforms.rfs/minimum"]]],"^1Q",["^ ","~i3",[["^ ","^1J",73,"^1K",38,"^P","comparator"]]],"~i31",["^ ","~i3",[["^ ","^1J",0,"^1K",39],["^ ","^1J",0,"^1K",42],["^ ","^1J",0,"^1K",42],["^ ","^1J",0,"^1K",45],["^ ","^1J",0,"^1K",48]]],"~i33",["^ ","~i7",[["^ ","^1J",29,"^1K",44,"^P","x"]],"^1I",[["^ ","^1J",0,"^1K",45,"^P","x"]]],"~i34",["^ ","~i7",[["^ ","^1J",29,"^1K",47,"^P","a"],["^ ","^1J",20,"^1K",63,"^P","a"],["^ ","^1J",29,"^1K",68,"^P","a"],["^ ","^1J",29,"^1K",70,"^P","a"]],"~i9",[["^ ","^1J",31,"^1K",47,"^P","b"],["^ ","^1J",22,"^1K",63,"^P","b"],["^ ","^1J",31,"^1K",70,"^P","b"]],"^1Z",[["^ ","^1J",0,"^1K",48],["^ ","^1J",0,"^1K",51],["^ ","^1J",0,"^1K",54],["^ ","^1J",0,"^1K",57]]],"~i35",["^ ","^1[",[["^ ","^1J",3,"^1K",48],["^ ","^1J",9,"^1K",48]],"^1U",[["^ ","^1J",4,"^1K",48,"^P","a"]],"^1V",[["^ ","^1J",0,"^1K",49,"^P","b"]]],"~i36",["^ ","^1[",[["^ ","^1J",3,"^1K",51],["^ ","^1J",9,"^1K",51]],"^1U",[["^ ","^1J",4,"^1K",51,"^P","b"]],"^1V",[["^ ","^1J",0,"^1K",52,"^P","a"]]],"~i37",["^ ","^1[",[["^ ","^1J",3,"^1K",54],["^ ","^1J",48,"^1K",54]],"^1U",[["^ ","^1J",4,"^1K",54]],"~i44",[["^ ","^1J",4,"^1K",54,"^P","net.cgrand.xforms.rfs/cmp"]],"~i49",[["^ ","^1J",30,"^1K",54,"^P","comparator"]],"~i60",[["^ ","^1J",41,"^1K",54,"^P","a"]],"~i62",[["^ ","^1J",43,"^1K",54,"^P","b"]],"~i66",[["^ ","^1J",0,"^1K",55,"^P","b"]]],"~i38",["^ ","^1U",[["^ ","^1J",0,"^1K",57,"^P","a"]]],"~i39",["^ ","~i50",[["^ ","^1J",73,"^1K",81,"^P","comparator"]],"^2:",[["^ ","^1J",84,"^1K",81,"^P","absolute-maximum"]]],"~i40",["^ ","~i3",[["^ ","^1J",0,"^1K",82],["^ ","^1J",0,"^1K",85],["^ ","^1J",0,"^1K",85],["^ ","^1J",0,"^1K",88],["^ ","^1J",0,"^1K",95]]],"~i42",["^ ","~i7",[["^ ","^1J",29,"^1K",87,"^P","x"]],"^1I",[["^ ","^1J",0,"^1K",88]],"^1[",[["^ ","^1J",3,"^1K",88],["^ ","^1J",38,"^1K",88]],"^2?",[["^ ","^1J",3,"^1K",88,"^P","cljs.core/keyword-identical?"]],"~i65",[["^ ","^1J",139,"^1K",88,"^P","x"]]],"~i43",["^ ","^1Z",[["^ ","^1J",0,"^1K",89,"^P","absolute-maximum"]]],"^27",["^ ","^1Z",[["^ ","^1J",0,"^1K",91,"^P","x"]]],"~i45",["^ ","~i7",[["^ ","^1J",29,"^1K",94,"^P","a"],["^ ","^1J",20,"^1K",101,"^P","a"],["^ ","^1J",29,"^1K",106,"^P","a"],["^ ","^1J",29,"^1K",108,"^P","a"]],"~i9",[["^ ","^1J",31,"^1K",94,"^P","b"],["^ ","^1J",22,"^1K",101,"^P","b"],["^ ","^1J",31,"^1K",108,"^P","b"]],"^1Z",[["^ ","^1J",0,"^1K",95]],"^1L",[["^ ","^1J",3,"^1K",95]],"^1U",[["^ ","^1J",5,"^1K",95],["^ ","^1J",40,"^1K",95]],"~i46",[["^ ","^1J",5,"^1K",95,"^P","cljs.core/keyword-identical?"]],"~i71",[["^ ","^1J",141,"^1K",95,"^P","a"]],"~i74",[["^ ","^1J",149,"^1K",95],["^ ","^1J",194,"^1K",95]],"~i80",[["^ ","^1J",150,"^1K",95]],"~i104",[["^ ","^1J",150,"^1K",95,"^P","net.cgrand.xforms.rfs/cmp"]],"~i109",[["^ ","^1J",176,"^1K",95,"^P","comparator"]],"~i120",[["^ ","^1J",187,"^1K",95,"^P","a"]],"~i122",[["^ ","^1J",189,"^1K",95,"^P","b"]],"~i127",[["^ ","^1J",0,"^1K",96,"^P","b"]],"~i129",[["^ ","^1J",0,"^1K",98,"^P","a"]]],"~i47",["^ ","~i0",[["^ ","^1J",0,"^1K",122],["^ ","^1J",0,"^1K",122],["^ ","^1J",32,"^1K",122],["^ ","^1J",72,"^1K",122,"^P","var_args"],["^ ","^1J",0,"^1K",123],["^ ","^1J",0,"^1K",123],["^ ","^1J",4,"^1K",123,"^P","G__46596"],["^ ","^1J",15,"^1K",123],["^ ","^1J",15,"^1K",123],["^ ","^1J",0,"^1K",124],["^ ","^1J",0,"^1K",124],["^ ","^1J",8,"^1K",124,"^P","G__46596"],["^ ","^1J",5,"^1K",125],["^ ","^1J",0,"^1K",126],["^ ","^1J",7,"^1K",126,"^P","net.cgrand.xforms.rfs/maximum"],["^ ","^1J",67,"^1K",126],["^ ","^1J",68,"^1K",126],["^ ","^1J",78,"^1K",126],["^ ","^1J",5,"^1K",129],["^ ","^1J",0,"^1K",130],["^ ","^1J",7,"^1K",130,"^P","net.cgrand.xforms.rfs/maximum"],["^ ","^1J",67,"^1K",130],["^ ","^1J",68,"^1K",130],["^ ","^1J",78,"^1K",130],["^ ","^1J",84,"^1K",130],["^ ","^1J",85,"^1K",130],["^ ","^1J",95,"^1K",130],["^ ","^1J",0,"^1K",134],["^ ","^1J",6,"^1K",134],["^ ","^1J",11,"^1K",134,"^P","js/Error"],["^ ","^1J",17,"^1K",134],["^ ","^1J",18,"^1K",134],["^ ","^1J",80,"^1K",134],["^ ","^1J",80,"^1K",134],["^ ","^1J",0,"^1K",139],["^ ","^1J",0,"^1K",139],["^ ","^1J",62,"^1K",139],["^ ","^1J",0,"^1K",140],["^ ","^1J",0,"^1K",182],["^ ","^1J",0,"^1K",182],["^ ","^1J",62,"^1K",182],["^ ","^1J",0,"^1K",183],["^ ","^1J",0,"^1K",220],["^ ","^1J",0,"^1K",220],["^ ","^1J",56,"^1K",220],["^ ","^1J",0,"^1K",222]],"~i6",[["^ ","^1J",0,"^1K",122,"^P","net.cgrand.xforms.rfs/maximum"],["^ ","^1J",0,"^1K",139,"^P","net.cgrand.xforms.rfs/maximum"],["^ ","^1J",0,"^1K",182,"^P","net.cgrand.xforms.rfs/maximum"],["^ ","^1J",0,"^1K",220,"^P","net.cgrand.xforms.rfs/maximum"]]],"~i48",["^ ","~i4",[["^ ","^1J",73,"^1K",139,"^P","comparator"]]],"^28",["^ ","~i4",[["^ ","^1J",0,"^1K",140],["^ ","^1J",0,"^1K",143],["^ ","^1J",0,"^1K",143],["^ ","^1J",0,"^1K",146],["^ ","^1J",0,"^1K",149]]],"~i51",["^ ","~i7",[["^ ","^1J",29,"^1K",145,"^P","x"]],"^1I",[["^ ","^1J",0,"^1K",146,"^P","x"]]],"~i52",["^ ","~i7",[["^ ","^1J",29,"^1K",148,"^P","a"],["^ ","^1J",20,"^1K",164,"^P","a"],["^ ","^1J",29,"^1K",169,"^P","a"],["^ ","^1J",29,"^1K",171,"^P","a"]],"~i9",[["^ ","^1J",31,"^1K",148,"^P","b"],["^ ","^1J",22,"^1K",164,"^P","b"],["^ ","^1J",31,"^1K",171,"^P","b"]],"^1Z",[["^ ","^1J",0,"^1K",149],["^ ","^1J",0,"^1K",152],["^ ","^1J",0,"^1K",155],["^ ","^1J",0,"^1K",158]]],"~i53",["^ ","^1[",[["^ ","^1J",3,"^1K",149],["^ ","^1J",9,"^1K",149]],"^1U",[["^ ","^1J",4,"^1K",149,"^P","a"]],"^1V",[["^ ","^1J",0,"^1K",150,"^P","b"]]],"~i54",["^ ","^1[",[["^ ","^1J",3,"^1K",152],["^ ","^1J",9,"^1K",152]],"^1U",[["^ ","^1J",4,"^1K",152,"^P","b"]],"^1V",[["^ ","^1J",0,"^1K",153,"^P","a"]]],"~i55",["^ ","^1[",[["^ ","^1J",3,"^1K",155],["^ ","^1J",48,"^1K",155]],"^1U",[["^ ","^1J",4,"^1K",155]],"^27",[["^ ","^1J",4,"^1K",155,"^P","net.cgrand.xforms.rfs/cmp"]],"^28",[["^ ","^1J",30,"^1K",155,"^P","comparator"]],"^29",[["^ ","^1J",41,"^1K",155,"^P","a"]],"^2:",[["^ ","^1J",43,"^1K",155,"^P","b"]],"^2;",[["^ ","^1J",0,"^1K",156,"^P","b"]]],"~i56",["^ ","^1U",[["^ ","^1J",0,"^1K",158,"^P","a"]]],"~i57",["^ ","^2P",[["^ ","^1J",73,"^1K",182,"^P","comparator"]],"~i63",[["^ ","^1J",84,"^1K",182,"^P","absolute-minimum"]]],"~i58",["^ ","~i4",[["^ ","^1J",0,"^1K",183],["^ ","^1J",0,"^1K",186],["^ ","^1J",0,"^1K",186],["^ ","^1J",0,"^1K",189],["^ ","^1J",0,"^1K",196]]],"^29",["^ ","~i8",[["^ ","^1J",29,"^1K",188,"^P","x"]],"^1X",[["^ ","^1J",0,"^1K",189]],"^1T",[["^ ","^1J",3,"^1K",189],["^ ","^1J",38,"^1K",189]],"~i41",[["^ ","^1J",3,"^1K",189,"^P","cljs.core/keyword-identical?"]],"^2;",[["^ ","^1J",137,"^1K",189,"^P","x"]]],"~i61",["^ ","^1S",[["^ ","^1J",0,"^1K",190,"^P","absolute-minimum"]]],"^2:",["^ ","^1S",[["^ ","^1J",0,"^1K",192,"^P","x"]]],"^2W",["^ ","~i8",[["^ ","^1J",29,"^1K",195,"^P","a"],["^ ","^1J",20,"^1K",202,"^P","a"],["^ ","^1J",29,"^1K",207,"^P","a"],["^ ","^1J",29,"^1K",209,"^P","a"]],"^1I",[["^ ","^1J",31,"^1K",195,"^P","b"],["^ ","^1J",22,"^1K",202,"^P","b"],["^ ","^1J",31,"^1K",209,"^P","b"]],"^1S",[["^ ","^1J",0,"^1K",196]],"~i17",[["^ ","^1J",3,"^1K",196]],"^1N",[["^ ","^1J",5,"^1K",196],["^ ","^1J",40,"^1K",196]],"^2N",[["^ ","^1J",5,"^1K",196,"^P","cljs.core/keyword-identical?"]],"~i72",[["^ ","^1J",139,"^1K",196,"^P","a"]],"~i75",[["^ ","^1J",147,"^1K",196],["^ ","^1J",192,"^1K",196]],"~i81",[["^ ","^1J",148,"^1K",196]],"~i105",[["^ ","^1J",148,"^1K",196,"^P","net.cgrand.xforms.rfs/cmp"]],"~i110",[["^ ","^1J",174,"^1K",196,"^P","comparator"]],"~i121",[["^ ","^1J",185,"^1K",196,"^P","a"]],"~i123",[["^ ","^1J",187,"^1K",196,"^P","b"]],"~i128",[["^ ","^1J",0,"^1K",197,"^P","b"]],"~i130",[["^ ","^1J",0,"^1K",199,"^P","a"]]],"^2A",["^ ","~i0",[["^ ","^1J",0,"^1K",223]],"~i5",[["^ ","^1J",0,"^1K",223,"^P","net.cgrand.xforms.rfs/min"]],"~i9",[["^ ","^1J",28,"^1K",223]],"^1I",[["^ ","^1J",28,"^1K",223,"^P","net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1"]],"^1M",[["^ ","^1J",88,"^1K",223,"^P","cljs.core/compare"]]],"~i67",["^ ","~i0",[["^ ","^1J",0,"^1K",225]],"~i5",[["^ ","^1J",0,"^1K",225,"^P","net.cgrand.xforms.rfs/max"]],"~i9",[["^ ","^1J",28,"^1K",225]],"^1I",[["^ ","^1J",28,"^1K",225,"^P","net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1"]],"^1M",[["^ ","^1J",88,"^1K",225,"^P","cljs.core/compare"]]],"~i69",["^ ","~i0",[["^ ","^1J",0,"^1K",227],["^ ","^1J",0,"^1K",227],["^ ","^1J",28,"^1K",230],["^ ","^1J",64,"^1K",230,"^P","var_args"],["^ ","^1J",0,"^1K",231],["^ ","^1J",0,"^1K",231],["^ ","^1J",4,"^1K",231,"^P","G__46598"],["^ ","^1J",15,"^1K",231],["^ ","^1J",15,"^1K",231],["^ ","^1J",0,"^1K",232],["^ ","^1J",0,"^1K",232],["^ ","^1J",8,"^1K",232,"^P","G__46598"],["^ ","^1J",5,"^1K",233],["^ ","^1J",0,"^1K",234],["^ ","^1J",7,"^1K",234,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",5,"^1K",237],["^ ","^1J",0,"^1K",238],["^ ","^1J",7,"^1K",238,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",63,"^1K",238],["^ ","^1J",64,"^1K",238],["^ ","^1J",74,"^1K",238],["^ ","^1J",5,"^1K",241],["^ ","^1J",0,"^1K",242],["^ ","^1J",7,"^1K",242,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",63,"^1K",242],["^ ","^1J",64,"^1K",242],["^ ","^1J",74,"^1K",242],["^ ","^1J",80,"^1K",242],["^ ","^1J",81,"^1K",242],["^ ","^1J",91,"^1K",242],["^ ","^1J",5,"^1K",245],["^ ","^1J",0,"^1K",246],["^ ","^1J",7,"^1K",246,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",63,"^1K",246],["^ ","^1J",64,"^1K",246],["^ ","^1J",74,"^1K",246],["^ ","^1J",80,"^1K",246],["^ ","^1J",81,"^1K",246],["^ ","^1J",91,"^1K",246],["^ ","^1J",97,"^1K",246],["^ ","^1J",98,"^1K",246],["^ ","^1J",108,"^1K",246],["^ ","^1J",0,"^1K",250],["^ ","^1J",6,"^1K",250],["^ ","^1J",11,"^1K",250,"^P","js/Error"],["^ ","^1J",17,"^1K",250],["^ ","^1J",18,"^1K",250],["^ ","^1J",80,"^1K",250],["^ ","^1J",80,"^1K",250],["^ ","^1J",0,"^1K",255],["^ ","^1J",0,"^1K",255],["^ ","^1J",58,"^1K",255],["^ ","^1J",0,"^1K",256],["^ ","^1J",0,"^1K",256],["^ ","^1J",0,"^1K",259],["^ ","^1J",0,"^1K",259],["^ ","^1J",58,"^1K",259],["^ ","^1J",0,"^1K",260],["^ ","^1J",0,"^1K",267],["^ ","^1J",0,"^1K",267],["^ ","^1J",58,"^1K",267],["^ ","^1J",0,"^1K",268],["^ ","^1J",0,"^1K",271],["^ ","^1J",0,"^1K",271],["^ ","^1J",58,"^1K",271],["^ ","^1J",0,"^1K",272],["^ ","^1J",0,"^1K",287],["^ ","^1J",0,"^1K",287],["^ ","^1J",52,"^1K",287],["^ ","^1J",0,"^1K",289]],"~i6",[["^ ","^1J",0,"^1K",230,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",0,"^1K",255,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",0,"^1K",259,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",0,"^1K",267,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",0,"^1K",271,"^P","net.cgrand.xforms.rfs/avg"],["^ ","^1J",0,"^1K",287,"^P","net.cgrand.xforms.rfs/avg"]]],"^30",["^ ","^1S",[["^ ","^1J",69,"^1K",259,"^P","acc"]],"^1M",[["^ ","^1J",0,"^1K",260],["^ ","^1J",0,"^1K",261],["^ ","^1J",0,"^1K",263]],"^1W",[["^ ","^1J",20,"^1K",260,"^P","acc"]],"^1P",[["^ ","^1J",0,"^1K",261]],"^21",[["^ ","^1J",8,"^1K",261],["^ ","^1J",13,"^1K",261]],"^26",[["^ ","^1J",9,"^1K",261,"^P","acc"]],"^27",[["^ ","^1J",21,"^1K",261],["^ ","^1J",26,"^1K",261]],"^2>",[["^ ","^1J",22,"^1K",261,"^P","acc"]]],"~i73",["^ ","~i4",[["^ ","^1J",69,"^1K",267,"^P","acc"]],"~i8",[["^ ","^1J",73,"^1K",267,"^P","x"]],"^1X",[["^ ","^1J",0,"^1K",268],["^ ","^1J",69,"^1K",268]],"^1Z",[["^ ","^1J",7,"^1K",268,"^P","net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3"]],"^1L",[["^ ","^1J",63,"^1K",268,"^P","acc"]],"^1U",[["^ ","^1J",67,"^1K",268,"^P","x"]]],"^2F",["^ ","^1S",[["^ ","^1J",69,"^1K",271,"^P","acc"]],"^2[",[["^ ","^1J",73,"^1K",271,"^P","x"]],"~i19",[["^ ","^1J",75,"^1K",271,"^P","w"]]],"^31",["^ ","~i4",[["^ ","^1J",0,"^1K",272],["^ ","^1J",0,"^1K",279]],"^1I",[["^ ","^1J",4,"^1K",272,"^P","acc"]],"^1[",[["^ ","^1J",14,"^1K",272],["^ ","^1J",31,"^1K",272,"^P","or__3949__auto__"],["^ ","^1J",0,"^1K",273],["^ ","^1J",0,"^1K",273],["^ ","^1J",20,"^1K",273,"^P","or__3949__auto__"],["^ ","^1J",0,"^1K",274,"^P","or__3949__auto__"],["^ ","^1J",0,"^1K",276],["^ ","^1J",8,"^1K",276],["^ ","^1J",12,"^1K",276]],"^1M",[["^ ","^1J",50,"^1K",272,"^P","acc"]]],"~i76",["^ ","~i6",[["^ ","^1J",0,"^1K",279],["^ ","^1J",4,"^1K",279,"^P","G__46599"],["^ ","^1J",0,"^1K",280],["^ ","^1J",0,"^1K",284,"^P","G__46599"]],"^1Z",[["^ ","^1J",15,"^1K",279,"^P","acc"]]],"~i77",["^ ","~i8",[["^ ","^1J",0,"^1K",280],["^ ","^1J",1,"^1K",280,"^P","G__46599"],["^ ","^1J",10,"^1K",280]],"^1L",[["^ ","^1J",17,"^1K",280]],"^3<",[["^ ","^1J",18,"^1K",280],["^ ","^1J",27,"^1K",280]],"^1Y",[["^ ","^1J",19,"^1K",280,"^P","acc"]],"~i32",[["^ ","^1J",35,"^1K",280,"^P","w"]]],"~i78",["^ ","~i8",[["^ ","^1J",0,"^1K",282],["^ ","^1J",1,"^1K",282,"^P","G__46599"],["^ ","^1J",10,"^1K",282]],"^1L",[["^ ","^1J",17,"^1K",282]],"^3<",[["^ ","^1J",18,"^1K",282],["^ ","^1J",27,"^1K",282]],"^1Y",[["^ ","^1J",19,"^1K",282,"^P","acc"]],"^3?",[["^ ","^1J",35,"^1K",282]],"^24",[["^ ","^1J",36,"^1K",282,"^P","w"]],"^26",[["^ ","^1J",40,"^1K",282,"^P","x"]]],"^2G",["^ ","~i0",[["^ ","^1J",0,"^1K",290],["^ ","^1J",0,"^1K",290],["^ ","^1J",27,"^1K",293],["^ ","^1J",62,"^1K",293,"^P","var_args"],["^ ","^1J",0,"^1K",294],["^ ","^1J",0,"^1K",294],["^ ","^1J",4,"^1K",294,"^P","G__46601"],["^ ","^1J",15,"^1K",294],["^ ","^1J",15,"^1K",294],["^ ","^1J",0,"^1K",295],["^ ","^1J",0,"^1K",295],["^ ","^1J",8,"^1K",295,"^P","G__46601"],["^ ","^1J",5,"^1K",296],["^ ","^1J",0,"^1K",297],["^ ","^1J",7,"^1K",297,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",5,"^1K",300],["^ ","^1J",0,"^1K",301],["^ ","^1J",7,"^1K",301,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",62,"^1K",301],["^ ","^1J",63,"^1K",301],["^ ","^1J",73,"^1K",301],["^ ","^1J",5,"^1K",304],["^ ","^1J",0,"^1K",305],["^ ","^1J",7,"^1K",305,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",62,"^1K",305],["^ ","^1J",63,"^1K",305],["^ ","^1J",73,"^1K",305],["^ ","^1J",79,"^1K",305],["^ ","^1J",80,"^1K",305],["^ ","^1J",90,"^1K",305],["^ ","^1J",0,"^1K",309],["^ ","^1J",6,"^1K",309],["^ ","^1J",11,"^1K",309,"^P","js/Error"],["^ ","^1J",17,"^1K",309],["^ ","^1J",18,"^1K",309],["^ ","^1J",80,"^1K",309],["^ ","^1J",80,"^1K",309],["^ ","^1J",0,"^1K",314],["^ ","^1J",0,"^1K",314],["^ ","^1J",57,"^1K",314],["^ ","^1J",0,"^1K",315],["^ ","^1J",0,"^1K",315],["^ ","^1J",8,"^1K",315],["^ ","^1J",12,"^1K",315],["^ ","^1J",16,"^1K",315],["^ ","^1J",0,"^1K",318],["^ ","^1J",0,"^1K",318],["^ ","^1J",57,"^1K",318],["^ ","^1J",0,"^1K",319],["^ ","^1J",0,"^1K",329],["^ ","^1J",0,"^1K",329],["^ ","^1J",57,"^1K",329],["^ ","^1J",0,"^1K",330],["^ ","^1J",0,"^1K",346],["^ ","^1J",0,"^1K",346],["^ ","^1J",51,"^1K",346],["^ ","^1J",0,"^1K",348]],"~i6",[["^ ","^1J",0,"^1K",293,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",0,"^1K",314,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",0,"^1K",318,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",0,"^1K",329,"^P","net.cgrand.xforms.rfs/sd"],["^ ","^1J",0,"^1K",346,"^P","net.cgrand.xforms.rfs/sd"]]],"~i83",["^ ","^1S",[["^ ","^1J",68,"^1K",318,"^P","a"]]],"~i84",["^ ","~i4",[["^ ","^1J",0,"^1K",319],["^ ","^1J",0,"^1K",321]],"^1I",[["^ ","^1J",4,"^1K",319,"^P","s"]],"^1Z",[["^ ","^1J",8,"^1K",319],["^ ","^1J",11,"^1K",319]],"^1M",[["^ ","^1J",9,"^1K",319,"^P","a"]],"^1V",[["^ ","^1J",4,"^1K",320,"^P","n"]],"^1Y",[["^ ","^1J",8,"^1K",320],["^ ","^1J",11,"^1K",320]],"^21",[["^ ","^1J",9,"^1K",320,"^P","a"]]],"~i85",["^ ","~i6",[["^ ","^1J",0,"^1K",321],["^ ","^1J",0,"^1K",325]],"^1I",[["^ ","^1J",3,"^1K",321],["^ ","^1J",4,"^1K",321]],"^1T",[["^ ","^1J",10,"^1K",321,"^P","n"]]],"~i86",["^ ","~i8",[["^ ","^1J",0,"^1K",322],["^ ","^1J",4,"^1K",322,"^P","G__46602"],["^ ","^1J",0,"^1K",323],["^ ","^1J",0,"^1K",323],["^ ","^1J",17,"^1K",323,"^P","G__46602"]],"~i9",[["^ ","^1J",7,"^1K",323,"^P","Math/sqrt"]],"^3<",[["^ ","^1J",15,"^1K",322]],"^1R",[["^ ","^1J",16,"^1K",322,"^P","s"]],"^1W",[["^ ","^1J",20,"^1K",322],["^ ","^1J",25,"^1K",322]],"^20",[["^ ","^1J",21,"^1K",322,"^P","n"]]],"~i88",["^ ","^1S",[["^ ","^1J",68,"^1K",329,"^P","a"]],"^1T",[["^ ","^1J",70,"^1K",329,"^P","x"]]],"~i89",["^ ","~i4",[["^ ","^1J",0,"^1K",330],["^ ","^1J",0,"^1K",336]],"^1I",[["^ ","^1J",4,"^1K",330,"^P","s"]],"^1Z",[["^ ","^1J",8,"^1K",330],["^ ","^1J",11,"^1K",330]],"^1M",[["^ ","^1J",9,"^1K",330,"^P","a"]],"^1V",[["^ ","^1J",4,"^1K",331,"^P","m"]],"^1Y",[["^ ","^1J",8,"^1K",331],["^ ","^1J",11,"^1K",331]],"^21",[["^ ","^1J",9,"^1K",331,"^P","a"]],"^25",[["^ ","^1J",4,"^1K",332,"^P","n"]],"^2<",[["^ ","^1J",8,"^1K",332],["^ ","^1J",11,"^1K",332]],"^27",[["^ ","^1J",9,"^1K",332,"^P","a"]]],"~i90",["^ ","^1I",[["^ ","^1J",4,"^1K",333,"^P","d"]],"^1Z",[["^ ","^1J",8,"^1K",333]],"^1T",[["^ ","^1J",9,"^1K",333,"^P","x"]],"^2[",[["^ ","^1J",13,"^1K",333,"^P","m"]]],"~i91",["^ ","^1I",[["^ ","^1J",4,"^1K",334,"^P","n"]],"^1Z",[["^ ","^1J",12,"^1K",334],["^ ","^1J",17,"^1K",334]],"^2[",[["^ ","^1J",13,"^1K",334,"^P","n"]]],"~i92",["^ ","^1I",[["^ ","^1J",4,"^1K",335,"^P","m'"]],"^1S",[["^ ","^1J",21,"^1K",335]],"^1L",[["^ ","^1J",22,"^1K",335,"^P","m"]],"^1M",[["^ ","^1J",26,"^1K",335]],"^1N",[["^ ","^1J",27,"^1K",335,"^P","d"]],"^1V",[["^ ","^1J",31,"^1K",335,"^P","n"]]],"~i93",["^ ","~i6",[["^ ","^1J",0,"^1K",336],["^ ","^1J",4,"^1K",336,"^P","G__46603"],["^ ","^1J",0,"^1K",337],["^ ","^1J",0,"^1K",343,"^P","G__46603"]],"^1Z",[["^ ","^1J",15,"^1K",336,"^P","a"]]],"~i94",["^ ","~i8",[["^ ","^1J",0,"^1K",337],["^ ","^1J",1,"^1K",337,"^P","G__46603"],["^ ","^1J",10,"^1K",337]],"^1L",[["^ ","^1J",17,"^1K",337]],"^3<",[["^ ","^1J",18,"^1K",337,"^P","s"]],"^1N",[["^ ","^1J",22,"^1K",337]],"^1W",[["^ ","^1J",23,"^1K",337,"^P","d"]],"^1O",[["^ ","^1J",27,"^1K",337]],"^20",[["^ ","^1J",28,"^1K",337,"^P","x"]],"^21",[["^ ","^1J",32,"^1K",337,"^P","m'"]]],"~i95",["^ ","~i8",[["^ ","^1J",0,"^1K",339],["^ ","^1J",1,"^1K",339,"^P","G__46603"],["^ ","^1J",10,"^1K",339]],"^1L",[["^ ","^1J",17,"^1K",339,"^P","m'"]]],"~i96",["^ ","~i8",[["^ ","^1J",0,"^1K",341],["^ ","^1J",1,"^1K",341,"^P","G__46603"],["^ ","^1J",10,"^1K",341]],"^1L",[["^ ","^1J",17,"^1K",341,"^P","n"]]],"~i98",["^ ","~i0",[["^ ","^1J",0,"^1K",349],["^ ","^1J",0,"^1K",349],["^ ","^1J",29,"^1K",352],["^ ","^1J",66,"^1K",352,"^P","var_args"],["^ ","^1J",0,"^1K",353],["^ ","^1J",0,"^1K",353],["^ ","^1J",4,"^1K",353,"^P","G__46605"],["^ ","^1J",15,"^1K",353],["^ ","^1J",15,"^1K",353],["^ ","^1J",0,"^1K",354],["^ ","^1J",0,"^1K",354],["^ ","^1J",8,"^1K",354,"^P","G__46605"],["^ ","^1J",5,"^1K",355],["^ ","^1J",0,"^1K",356],["^ ","^1J",7,"^1K",356,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",5,"^1K",359],["^ ","^1J",0,"^1K",360],["^ ","^1J",7,"^1K",360,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",64,"^1K",360],["^ ","^1J",65,"^1K",360],["^ ","^1J",75,"^1K",360],["^ ","^1J",5,"^1K",363],["^ ","^1J",0,"^1K",364],["^ ","^1J",7,"^1K",364,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",64,"^1K",364],["^ ","^1J",65,"^1K",364],["^ ","^1J",75,"^1K",364],["^ ","^1J",81,"^1K",364],["^ ","^1J",82,"^1K",364],["^ ","^1J",92,"^1K",364],["^ ","^1J",0,"^1K",368],["^ ","^1J",6,"^1K",368],["^ ","^1J",11,"^1K",368,"^P","js/Error"],["^ ","^1J",17,"^1K",368],["^ ","^1J",18,"^1K",368],["^ ","^1J",80,"^1K",368],["^ ","^1J",80,"^1K",368],["^ ","^1J",0,"^1K",373],["^ ","^1J",0,"^1K",373],["^ ","^1J",59,"^1K",373],["^ ","^1J",0,"^1K",374],["^ ","^1J",0,"^1K",374],["^ ","^1J",0,"^1K",377],["^ ","^1J",0,"^1K",377],["^ ","^1J",59,"^1K",377],["^ ","^1J",0,"^1K",378],["^ ","^1J",0,"^1K",381],["^ ","^1J",0,"^1K",381],["^ ","^1J",59,"^1K",381],["^ ","^1J",0,"^1K",382],["^ ","^1J",0,"^1K",385],["^ ","^1J",0,"^1K",385],["^ ","^1J",53,"^1K",385],["^ ","^1J",0,"^1K",387]],"~i6",[["^ ","^1J",0,"^1K",352,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",0,"^1K",373,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",0,"^1K",377,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",0,"^1K",381,"^P","net.cgrand.xforms.rfs/last"],["^ ","^1J",0,"^1K",385,"^P","net.cgrand.xforms.rfs/last"]]],"~i101",["^ ","~i4",[["^ ","^1J",70,"^1K",377,"^P","x"]],"~i7",[["^ ","^1J",0,"^1K",378,"^P","x"]]],"~i102",["^ ","~i4",[["^ ","^1J",70,"^1K",381,"^P","_"]],"~i6",[["^ ","^1J",72,"^1K",381,"^P","x"]],"~i9",[["^ ","^1J",0,"^1K",382,"^P","x"]]],"^2H",["^ ","~i0",[["^ ","^1J",0,"^1K",388],["^ ","^1J",0,"^1K",388],["^ ","^1J",29,"^1K",391],["^ ","^1J",66,"^1K",391,"^P","var_args"],["^ ","^1J",0,"^1K",392],["^ ","^1J",0,"^1K",392],["^ ","^1J",4,"^1K",392,"^P","G__46607"],["^ ","^1J",15,"^1K",392],["^ ","^1J",15,"^1K",392],["^ ","^1J",0,"^1K",393],["^ ","^1J",0,"^1K",393],["^ ","^1J",8,"^1K",393,"^P","G__46607"],["^ ","^1J",5,"^1K",394],["^ ","^1J",0,"^1K",395],["^ ","^1J",7,"^1K",395,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",5,"^1K",398],["^ ","^1J",0,"^1K",399],["^ ","^1J",7,"^1K",399,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",64,"^1K",399],["^ ","^1J",65,"^1K",399],["^ ","^1J",75,"^1K",399],["^ ","^1J",5,"^1K",402],["^ ","^1J",0,"^1K",403],["^ ","^1J",7,"^1K",403,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",64,"^1K",403],["^ ","^1J",65,"^1K",403],["^ ","^1J",75,"^1K",403],["^ ","^1J",81,"^1K",403],["^ ","^1J",82,"^1K",403],["^ ","^1J",92,"^1K",403],["^ ","^1J",0,"^1K",407],["^ ","^1J",6,"^1K",407],["^ ","^1J",11,"^1K",407,"^P","js/Error"],["^ ","^1J",17,"^1K",407],["^ ","^1J",18,"^1K",407],["^ ","^1J",80,"^1K",407],["^ ","^1J",80,"^1K",407],["^ ","^1J",0,"^1K",412],["^ ","^1J",0,"^1K",412],["^ ","^1J",59,"^1K",412],["^ ","^1J",0,"^1K",413],["^ ","^1J",0,"^1K",413],["^ ","^1J",0,"^1K",416],["^ ","^1J",0,"^1K",416],["^ ","^1J",59,"^1K",416],["^ ","^1J",0,"^1K",417],["^ ","^1J",0,"^1K",420],["^ ","^1J",0,"^1K",420],["^ ","^1J",59,"^1K",420],["^ ","^1J",0,"^1K",421],["^ ","^1J",0,"^1K",428],["^ ","^1J",0,"^1K",428],["^ ","^1J",53,"^1K",428],["^ ","^1J",0,"^1K",430]],"~i6",[["^ ","^1J",0,"^1K",391,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",0,"^1K",412,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",0,"^1K",416,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",0,"^1K",420,"^P","net.cgrand.xforms.rfs/some"],["^ ","^1J",0,"^1K",428,"^P","net.cgrand.xforms.rfs/some"]]],"~i107",["^ ","~i4",[["^ ","^1J",70,"^1K",416,"^P","x"]],"~i7",[["^ ","^1J",0,"^1K",417,"^P","x"]]],"~i108",["^ ","~i4",[["^ ","^1J",70,"^1K",420,"^P","_"]],"~i6",[["^ ","^1J",72,"^1K",420,"^P","x"]],"~i9",[["^ ","^1J",0,"^1K",421],["^ ","^1J",0,"^1K",422],["^ ","^1J",0,"^1K",424]],"^1T",[["^ ","^1J",20,"^1K",421,"^P","x"]],"^2[",[["^ ","^1J",0,"^1K",422]],"^1M",[["^ ","^1J",7,"^1K",422,"^P","cljs.core/reduced"]],"^1O",[["^ ","^1J",25,"^1K",422,"^P","x"]]],"^34",["^ ","~i0",[["^ ","^1J",0,"^1K",431],["^ ","^1J",0,"^1K",431],["^ ","^1J",34,"^1K",434],["^ ","^1J",76,"^1K",434,"^P","var_args"],["^ ","^1J",0,"^1K",435],["^ ","^1J",0,"^1K",435],["^ ","^1J",4,"^1K",435,"^P","G__46609"],["^ ","^1J",15,"^1K",435],["^ ","^1J",15,"^1K",435],["^ ","^1J",0,"^1K",436],["^ ","^1J",0,"^1K",436],["^ ","^1J",8,"^1K",436,"^P","G__46609"],["^ ","^1J",5,"^1K",437],["^ ","^1J",0,"^1K",438],["^ ","^1J",7,"^1K",438,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",5,"^1K",441],["^ ","^1J",0,"^1K",442],["^ ","^1J",7,"^1K",442,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",69,"^1K",442],["^ ","^1J",70,"^1K",442],["^ ","^1J",80,"^1K",442],["^ ","^1J",5,"^1K",445],["^ ","^1J",0,"^1K",446],["^ ","^1J",7,"^1K",446,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",69,"^1K",446],["^ ","^1J",70,"^1K",446],["^ ","^1J",80,"^1K",446],["^ ","^1J",86,"^1K",446],["^ ","^1J",87,"^1K",446],["^ ","^1J",97,"^1K",446],["^ ","^1J",0,"^1K",450],["^ ","^1J",6,"^1K",450],["^ ","^1J",11,"^1K",450,"^P","js/Error"],["^ ","^1J",17,"^1K",450],["^ ","^1J",18,"^1K",450],["^ ","^1J",80,"^1K",450],["^ ","^1J",80,"^1K",450],["^ ","^1J",0,"^1K",455],["^ ","^1J",0,"^1K",455],["^ ","^1J",64,"^1K",455],["^ ","^1J",0,"^1K",456],["^ ","^1J",0,"^1K",459],["^ ","^1J",0,"^1K",459],["^ ","^1J",64,"^1K",459],["^ ","^1J",0,"^1K",460],["^ ","^1J",0,"^1K",468],["^ ","^1J",0,"^1K",468],["^ ","^1J",64,"^1K",468],["^ ","^1J",0,"^1K",469],["^ ","^1J",0,"^1K",478],["^ ","^1J",0,"^1K",478],["^ ","^1J",58,"^1K",478],["^ ","^1J",0,"^1K",480]],"~i6",[["^ ","^1J",0,"^1K",434,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",0,"^1K",455,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",0,"^1K",459,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",0,"^1K",468,"^P","net.cgrand.xforms.rfs/str!"],["^ ","^1J",0,"^1K",478,"^P","net.cgrand.xforms.rfs/str!"]]],"~i112",["^ ","~i6",[["^ ","^1J",0,"^1K",456],["^ ","^1J",12,"^1K",456,"^P","goog/string.StringBuffer"]]],"~i113",["^ ","~i4",[["^ ","^1J",75,"^1K",459,"^P","sb"]],"~i8",[["^ ","^1J",0,"^1K",460],["^ ","^1J",4,"^1K",460,"^P","x_46610"],["^ ","^1J",0,"^1K",461],["^ ","^1J",0,"^1K",461],["^ ","^1J",3,"^1K",461],["^ ","^1J",4,"^1K",461,"^P","x_46610"],["^ ","^1J",0,"^1K",462,"^P","x_46610"]],"^2>",[["^ ","^1J",23,"^1K",461,"^P","goog/string.StringBuffer"]],"~i64",[["^ ","^1J",14,"^1K",460,"^P","sb"]],"^39",[["^ ","^1J",0,"^1K",464],["^ ","^1J",12,"^1K",464,"^P","goog/string.StringBuffer"]],"^3S",[["^ ","^1J",37,"^1K",464]],"^2K",[["^ ","^1J",82,"^1K",464,"^P","sb"]]],"~i114",["^ ","~i4",[["^ ","^1J",75,"^1K",468,"^P","sb"]],"~i7",[["^ ","^1J",78,"^1K",468,"^P","x"]],"^1I",[["^ ","^1J",0,"^1K",469]],"^3<",[["^ ","^1J",7,"^1K",469],["^ ","^1J",24,"^1K",469,"^P","x_46611"],["^ ","^1J",0,"^1K",470],["^ ","^1J",0,"^1K",470],["^ ","^1J",3,"^1K",470],["^ ","^1J",4,"^1K",470,"^P","x_46611"],["^ ","^1J",0,"^1K",471,"^P","x_46611"]],"^2Z",[["^ ","^1J",23,"^1K",470,"^P","goog/string.StringBuffer"]],"^31",[["^ ","^1J",34,"^1K",469,"^P","sb"]],"^3@",[["^ ","^1J",0,"^1K",473],["^ ","^1J",12,"^1K",473,"^P","goog/string.StringBuffer"]],"^36",[["^ ","^1J",37,"^1K",473]],"~i133",[["^ ","^1J",82,"^1K",473,"^P","sb"]],"~i139",[["^ ","^1J",12,"^1K",475,"^P","x"]]],"~i116",["^ ","~i0",[["^ ","^1J",0,"^1K",481]],"~i5",[["^ ","^1J",0,"^1K",484,"^P","net.cgrand.xforms.rfs/str"]]],"~i118",["^ ","~i2",[["^ ","^1J",28,"^1K",484]],"~i3",[["^ ","^1J",28,"^1K",484,"^P","cljs.core.completing.cljs$core$IFn$_invoke$arity$2"]],"^1[",[["^ ","^1J",79,"^1K",484,"^P","net.cgrand.xforms.rfs/str!"]],"^3<",[["^ ","^1J",111,"^1K",484,"^P","cljs.core/str"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^W"],[1533155342000],["^1A","goog/math/math.js"],[1533155346000,"^Y","~$goog.array","~$goog.asserts"],["^1A","net/cgrand/xforms/rfs.cljc"],[1533590554000,"^Y","^W","^U"],["^1A","goog/array/array.js"],[1533155346000,"^Y","^44"],["^42","^12"],[1533155354000],["^1A","goog/debug/error.js"],[1533155346000,"^Y"],["^1A","goog/dom/nodetype.js"],[1533155346000,"^Y"],["^1A","goog/object/object.js"],[1533155346000,"^Y"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^1A","goog/math/long.js"],[1533155346000,"^Y","^44","~$goog.reflect"],["^1A","goog/functions/functions.js"],[1533155346000,"^Y"],["^1A","goog/structs/map.js"],[1533155346000,"^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1A","goog/asserts/asserts.js"],[1533155346000,"^Y","~$goog.debug.Error","~$goog.dom.NodeType","^1<"],["^1A","goog/uri/uri.js"],[1533155346000,"^Y","^43","^44","^1<","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^42","^G"],[1533590554000],["^1A","goog/base.js"],[1533155346000],["^1A","goog/structs/structs.js"],[1533155346000,"^Y","^43","^49"],["^1A","goog/string/string.js"],[1533155346000,"^Y"],["^1A","goog/reflect/reflect.js"],[1533155346000,"^Y"],["^1A","goog/string/stringbuffer.js"],[1533155346000,"^Y"],["^1A","goog/iter/iter.js"],[1533155346000,"^Y","^43","^44","~$goog.functions","~$goog.math"],["^1A","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^1<","^49","^43","~$goog.Uri","^U"],["^1A","goog/math/integer.js"],[1533155346000,"^Y"],["^1A","goog/uri/utils.js"],[1533155346000,"^Y","^43","^44","^1<"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Christophe Grand","^7","net/cgrand/xforms/rfs.cljc","^8",1,"^9",5,"^:",1,"^;",26],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",["^ ","^F","^G"],"^H",["^I",["^J","^K","^L","^M","^N"]],"^O",["^ "],"^P","^G","^S",["^ ","^T","^U"],"^V",["^ ","^W","^W","^X","^W","^U","^U","^T","^U","^Y","^Y"],"^Z",["^I",["^[","^10"]],"~:shadow/js-access-global",["^I",["Error"]],"^11",null,"~:defs",["^ ","^J",["^ ","~:protocol-inline",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",99,"^9",7,"^:",99,"^;",11,"~:arglists",["^15",["~$quote",["^15",[[],["~$x"],["~$_","~$x"]]]]],"~:doc","Reducing function that returns the last value.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^15",[[],["~$x"],["~$_","~$x"]]],"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"~:arglists-meta",["^15",[null,null,null]]]],"^P","~$net.cgrand.xforms.rfs/last","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",11,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["~$x"],["~$_","~$x"]]],"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"^4Q",["^15",[null,null,null]]],"^4P",["^15",[[],["~$x"],["~$_","~$x"]]],"~:protocol-impl",null,"^4Q",["^15",[null,null,null]],"^9",1,"^8",99,"^:",99,"^4O",2,"~:fn-var",true,"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"^4L","Reducing function that returns the last value."],"^K",["^ ","^P","~$net.cgrand.xforms.rfs/min","^7","net/cgrand/xforms/rfs.cljc","^8",66,"^9",1,"^:",66,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",66,"^9",6,"^:",66,"^;",9],"~:tag","~$any"],"~$cmp",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",22,"^9",22,"^:",22,"^;",25,"~:private",true,"^4J",["^15",["^4K",["^15",[["~$f","~$a","~$b"]]]]]],"^4Y",true,"^P","~$net.cgrand.xforms.rfs/cmp","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",25,"^4P",["^15",[["~$f","~$a","~$b"]]],"^4S",null,"^4Q",["^15",[null,null]],"^9",6,"^8",22,"^:",22,"^4O",3,"^4T",true,"^4J",["^15",["^4K",["^15",[["~$f","~$a","~$b"]]]]]],"~$maximum",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",48,"^9",7,"^:",48,"^;",14,"^4J",["^15",["^4K",["^15",[["~$comparator"],["^50","~$absolute-minimum"]]]]],"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[["^50"],["^50","^51"]]],"^4J",["^15",[["^50"],["^50","^51"]]],"^4Q",["^15",[null,null]]]],"^P","~$net.cgrand.xforms.rfs/maximum","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",14,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[["^50"],["^50","^51"]]],"^4J",["^15",[["^50"],["^50","^51"]]],"^4Q",["^15",[null,null]]],"^4P",["^15",[["^50"],["^50","^51"]]],"^4S",null,"^4Q",["^15",[null,null]],"^9",1,"^8",48,"^:",48,"^4O",2,"^4T",true,"^4J",["^15",[["^50"],["^50","^51"]]]],"^L",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",105,"^9",7,"^:",105,"^;",11,"^4J",["^15",["^4K",["^15",[[],["~$x"],["~$_","~$x"]]]]],"^4L","Reducing function that returns the first logical true value.","^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["~$x"],["~$_","~$x"]]],"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"^4Q",["^15",[null,null,null]]]],"^P","~$net.cgrand.xforms.rfs/some","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",11,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["~$x"],["~$_","~$x"]]],"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"^4Q",["^15",[null,null,null]]],"^4P",["^15",[[],["~$x"],["~$_","~$x"]]],"^4S",null,"^4Q",["^15",[null,null,null]],"^9",1,"^8",105,"^:",105,"^4O",2,"^4T",true,"^4J",["^15",[[],["~$x"],["~$_","~$x"]]],"^4L","Reducing function that returns the first logical true value."],"^M",["^ ","^P","~$net.cgrand.xforms.rfs/str","^7","net/cgrand/xforms/rfs.cljc","^8",117,"^9",1,"^:",117,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",117,"^9",6,"^:",117,"^;",9],"^4L","Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.","^4V","^4W"],"^N",["^ ","^P","~$net.cgrand.xforms.rfs/max","^7","net/cgrand/xforms/rfs.cljc","^8",68,"^9",1,"^:",68,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",68,"^9",6,"^:",68,"^;",9],"^4V","^4W"],"~$minimum",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",30,"^9",7,"^:",30,"^;",14,"^4J",["^15",["^4K",["^15",[["^50"],["^50","~$absolute-maximum"]]]]],"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[["^50"],["^50","^57"]]],"^4J",["^15",[["^50"],["^50","^57"]]],"^4Q",["^15",[null,null]]]],"^P","~$net.cgrand.xforms.rfs/minimum","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",14,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[["^50"],["^50","^57"]]],"^4J",["^15",[["^50"],["^50","^57"]]],"^4Q",["^15",[null,null]]],"^4P",["^15",[["^50"],["^50","^57"]]],"^4S",null,"^4Q",["^15",[null,null]],"^9",1,"^8",30,"^:",30,"^4O",2,"^4T",true,"^4J",["^15",[["^50"],["^50","^57"]]]],"~$str!",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",111,"^9",7,"^:",111,"^;",11,"^4J",["^15",["^4K",["^15",[[],["~$sb"],["^5:","~$x"]]]]],"^4L","Like xforms/str but returns a StringBuilder.","^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["^5:"],["^5:","~$x"]]],"^4J",["^15",[[],["^5:"],["^5:","~$x"]]],"^4Q",["^15",[null,null,null]]]],"^P","~$net.cgrand.xforms.rfs/str!","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",11,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["^5:"],["^5:","~$x"]]],"^4J",["^15",[[],["^5:"],["^5:","~$x"]]],"^4Q",["^15",[null,null,null]]],"^4P",["^15",[[],["^5:"],["^5:","~$x"]]],"^4S",null,"^4Q",["^15",[null,null,null]],"^9",1,"^8",111,"^:",111,"^4O",2,"^4T",true,"^4J",["^15",[[],["^5:"],["^5:","~$x"]]],"^4L","Like xforms/str but returns a StringBuilder."],"~$avg",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",70,"^9",7,"^:",70,"^;",10,"^4J",["^15",["^4K",["^15",[[],["~$acc"],["^5=","~$x"],["^5=","~$x","~$w"]]]]],"^4L","Reducing fn to compute the arithmetic mean.","^4M",["^ ","^4N",false,"^4O",3,"^4P",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4J",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4Q",["^15",[null,null,null,null]]]],"^P","~$net.cgrand.xforms.rfs/avg","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",10,"^4M",["^ ","^4N",false,"^4O",3,"^4P",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4J",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4Q",["^15",[null,null,null,null]]],"^4P",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4S",null,"^4Q",["^15",[null,null,null,null]],"^9",1,"^8",70,"^:",70,"^4O",3,"^4T",true,"^4J",["^15",[[],["^5="],["^5=","~$x"],["^5=","~$x","~$w"]]],"^4L","Reducing fn to compute the arithmetic mean."],"~$sd",["^ ","^4I",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",81,"^9",7,"^:",81,"^;",9,"^4J",["^15",["^4K",["^15",[[],["~$a"],["~$a","~$x"]]]]],"^4L","Reducing fn to compute the standard deviation. Returns 0 if no or only one item.","^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["~$a"],["~$a","~$x"]]],"^4J",["^15",[[],["~$a"],["~$a","~$x"]]],"^4Q",["^15",[null,null,null]]]],"^P","~$net.cgrand.xforms.rfs/sd","^4N",false,"^7","net/cgrand/xforms/rfs.cljc","^;",9,"^4M",["^ ","^4N",false,"^4O",2,"^4P",["^15",[[],["~$a"],["~$a","~$x"]]],"^4J",["^15",[[],["~$a"],["~$a","~$x"]]],"^4Q",["^15",[null,null,null]]],"^4P",["^15",[[],["~$a"],["~$a","~$x"]]],"^4S",null,"^4Q",["^15",[null,null,null]],"^9",1,"^8",81,"^:",81,"^4O",2,"^4T",true,"^4J",["^15",[[],["~$a"],["~$a","~$x"]]],"^4L","Reducing fn to compute the standard deviation. Returns 0 if no or only one item."]],"^10",["^ ","^12","^12","^13","^12","^G","^G","^W","^W","^X","^W"],"~:cljs.analyzer/constants",["^ ","^Z",["^I",["~:net.cgrand.xforms.rfs/+∞","~:net.cgrand.xforms.rfs/-∞","~:else"]],"~:order",["^5D","^5B","^5C"]],"^1=",["^ ","^10",["^I",[]],"^[",["^I",[]]],"^1>",["^ "],"^1?",["^Y","^W","^U"]],"^R","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^41",[["^5H","~:static-fns"],true,["^5H","~:elide-asserts"],false,["^5H","~:optimize-constants"],null,["^5H","~:external-config"],null,["^5H","~:tooling-config"],null,["^5H","~:emit-constants"],null,["^5H","~:infer-externs"],true,["^5H","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5H","~:fn-invoke-direct"],null,["^5H","^1H"],"/dev/null"]]]