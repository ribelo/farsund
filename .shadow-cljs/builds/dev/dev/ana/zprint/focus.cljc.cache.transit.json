["^ ","~:output",["^ ","~:js","goog.provide('zprint.focus');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('zprint.ansi');\n/**\n * What is this element in a str-style-vec?\n */\nzprint.focus.type_ssv = (function zprint$focus$type_ssv(ssv_element){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$3(ssv_element,(2),new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483));\n});\n/**\n * Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n *   and :indent\n */\nzprint.focus.skip_whitespace_ssv = (function zprint$focus$skip_whitespace_ssv(ssv,n){\nvar index = n;\nwhile(true){\nif((index >= cljs.core.count(ssv))){\nreturn (index - (1));\n} else {\nif(!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index)),new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index)),new cljs.core.Keyword(null,\"indent\",\"indent\",-148200125)))))){\nreturn index;\n} else {\nvar G__44881 = (index + (1));\nindex = G__44881;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Given a str-style-vec, move into a collection at element n.\n */\nzprint.focus.down_ssv = (function zprint$focus$down_ssv(ssv,n){\nvar non_ws_n = zprint.focus.skip_whitespace_ssv(ssv,n);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,non_ws_n)),new cljs.core.Keyword(null,\"left\",\"left\",-399115937))){\nreturn (non_ws_n + (1));\n} else {\nreturn null;\n}\n});\n/**\n * Given a str-style-vec, move to the next element beyond this\n *   one.  This will skip over entire collections, if there are any.\n *   It will also ignore :whitespace elements.\n */\nzprint.focus.next_ssv = (function zprint$focus$next_ssv(ssv,n){\nvar index = n;\nvar skip_to_right_QMARK_ = null;\nvar next_nonws_QMARK_ = null;\nwhile(true){\nif((index >= cljs.core.count(ssv))){\nreturn null;\n} else {\nvar index_type = zprint.focus.type_ssv(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ssv,index));\nvar new_next_nonws_QMARK_ = ((((cljs.core.not(skip_to_right_QMARK_)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"right\",\"right\",-452581833))))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"whitespace\",\"whitespace\",-1340035483))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"indent\",\"indent\",-148200125))));\nif(cljs.core.truth_(next_nonws_QMARK_)){\nreturn index;\n} else {\nvar G__44885 = (cljs.core.truth_((function (){var and__3938__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937));\nif(and__3938__auto__){\nreturn skip_to_right_QMARK_;\n} else {\nreturn and__3938__auto__;\n}\n})())?(zprint.focus.next_ssv.cljs$core$IFn$_invoke$arity$2 ? zprint.focus.next_ssv.cljs$core$IFn$_invoke$arity$2(ssv,index) : zprint.focus.next_ssv.call(null,ssv,index)):(index + (1)));\nvar G__44886 = (function (){var and__3938__auto__ = (function (){var or__3949__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"left\",\"left\",-399115937));\nif(or__3949__auto__){\nreturn or__3949__auto__;\n} else {\nreturn skip_to_right_QMARK_;\n}\n})();\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(index_type,new cljs.core.Keyword(null,\"right\",\"right\",-452581833));\n} else {\nreturn and__3938__auto__;\n}\n})();\nvar G__44887 = new_next_nonws_QMARK_;\nindex = G__44885;\nskip_to_right_QMARK_ = G__44886;\nnext_nonws_QMARK_ = G__44887;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Given a str-style-vec, move right nr elements.\n */\nzprint.focus.right_ssv = (function zprint$focus$right_ssv(nr,ssv,n){\nvar index = n;\nvar moves = nr;\nwhile(true){\nif(cljs.core.truth_(index)){\nif((moves === (0))){\nif(cljs.core.truth_(index)){\nreturn zprint.focus.skip_whitespace_ssv(ssv,index);\n} else {\nreturn null;\n}\n} else {\nvar G__44888 = zprint.focus.next_ssv(ssv,index);\nvar G__44889 = (moves - (1));\nindex = G__44888;\nmoves = G__44889;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Given a non-whitespace path from a zipper, find that same\n *   collection or element in a str-style-vec.\n */\nzprint.focus.path_ssv = (function zprint$focus$path_ssv(nwpath,ssv){\nvar idx = (0);\nvar nwp = nwpath;\nwhile(true){\nif(cljs.core.truth_(idx)){\nif(cljs.core.empty_QMARK_(nwp)){\nreturn idx;\n} else {\nvar G__44892 = zprint.focus.right_ssv(cljs.core.first(nwp),ssv,zprint.focus.down_ssv(ssv,idx));\nvar G__44893 = cljs.core.next(nwp);\nidx = G__44892;\nnwp = G__44893;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Use a non-whitespace path from a zipper, and find that\n *   same collection or element in a str-style-vec, and return\n *   a vector of the start and end of that collection or element.\n *   Depends on next-ssv returning one past the end of its input.\n */\nzprint.focus.range_ssv = (function zprint$focus$range_ssv(ssv,nwpath){\nvar start = zprint.focus.path_ssv(nwpath,ssv);\nvar start__$1 = zprint.focus.skip_whitespace_ssv(ssv,start);\nvar ssv_next = zprint.focus.next_ssv(ssv,start__$1);\nvar end = (cljs.core.truth_((function (){var and__3938__auto__ = ssv_next;\nif(cljs.core.truth_(and__3938__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(start__$1,(0));\n} else {\nreturn and__3938__auto__;\n}\n})())?(ssv_next - (1)):(cljs.core.count(ssv) - (1)));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [start__$1,end], null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","zprint/focus.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$zprint.focus","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^M","~$s","^M","~$zprint.ansi","^N","~$cljs.core","^O","~$goog","^P"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$color-str","^N"],"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^H",["^W",["^R",["^M","~:as","~$s"],["^N","~:refer",["^T"]]]]]],"~:flags",["^ ","^R",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^M","^N"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","zprint/focus.cljc"],"~:compiled-at",1537561400708,"~:resource-name","zprint/focus.cljc","~:warnings",[],"~:source","(ns zprint.focus\n  (:require [clojure.string :as s]\n            [zprint.ansi :refer [color-str]]))\n\n;;\n;; # Find focus in a style-vec\n;;\n\n(defn type-ssv\n  \"What is this element in a str-style-vec?\"\n  [ssv-element]\n  (nth ssv-element 2 :whitespace))\n\n(defn skip-whitespace-ssv\n  \"Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent\"\n  [ssv n]\n  #_(println \"skip-whitespace: n:\" n)\n  (loop [index n]\n    #_(println \"skip-whitespace: loop index:\" index)\n    (if (>= index (count ssv))\n      (dec index)\n      (if (not (or (= (type-ssv (nth ssv index)) :whitespace)\n                   (= (type-ssv (nth ssv index)) :indent)))\n        index\n        (recur (inc index))))))\n\n(defn down-ssv\n  \"Given a str-style-vec, move into a collection at element n.\"\n  [ssv n]\n  (let [non-ws-n (skip-whitespace-ssv ssv n)]\n    (when (= (type-ssv (nth ssv non-ws-n)) :left) (inc non-ws-n))))\n\n(defn next-ssv\n  \"Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements.\"\n  [ssv n]\n  #_(println \"next-ssv: n:\" n \"count ssv:\" (count ssv))\n  (loop [index n\n         skip-to-right? nil\n         next-nonws? nil]\n    #_(println \"next-ssv: loop index:\" index)\n    (if (>= index (count ssv))\n      nil\n      (let [index-type (type-ssv (nth ssv index))\n            new-next-nonws? (and (or (not skip-to-right?) (= index-type :right))\n                                 (not= index-type :left)\n                                 (not= index-type :whitespace)\n                                 (not= index-type :indent))]\n        #_(println \"next-ssv: index:\" index\n                   \"skip-to-right?\" skip-to-right?\n                   \"next-nonws?\" next-nonws?\n                   \"index-type:\" index-type\n                   \"new-next-nonws?\" new-next-nonws?)\n        (if next-nonws?\n          index\n          (recur (if (and (= index-type :left) skip-to-right?)\n                   (next-ssv ssv index)\n                   (inc index))\n                 (and (or (= index-type :left) skip-to-right?)\n                      (not= index-type :right))\n                 new-next-nonws?))))))\n\n(defn right-ssv\n  \"Given a str-style-vec, move right nr elements.\"\n  [nr ssv n]\n  #_(println \"right-ssv: nr:\" nr \"n:\" n)\n  (loop [index n\n         moves nr]\n    #_(println \"right-ssv: loop index:\" index \"moves:\" moves)\n    (when index\n      (if (zero? moves)\n        (when index (skip-whitespace-ssv ssv index))\n        (recur (next-ssv ssv index) (dec moves))))))\n\n(defn path-ssv\n  \"Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec.\"\n  [nwpath ssv]\n  (loop [idx 0\n         nwp nwpath]\n    (when idx\n      (if (empty? nwp)\n        idx\n        (recur (right-ssv (first nwp) ssv (down-ssv ssv idx)) (next nwp))))))\n\n(defn range-ssv\n  \"Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input.\"\n  [ssv nwpath]\n  #_(def rssv ssv)\n  #_(prn \"range-ssv: nwpath:\" nwpath \"ssv:\\n\" ssv)\n  (let [start (path-ssv nwpath ssv)\n        #_(println \"range-ssv: start:\" start \"nwpath:\" nwpath)\n        start (skip-whitespace-ssv ssv start)\n        ssv-next (next-ssv ssv start)\n        end (if (and ssv-next (not= start 0)) (dec ssv-next) (dec (count ssv)))]\n    #_(println \"range-ssv:\" [start end])\n    [start end]))","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i8",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1;",24,"^1<",7],["^ ","^1;",0,"^1<",8]],"~i6",[["^ ","^1;",0,"^1<",7,"^G","zprint.focus/type-ssv"]]],"~i10",["^ ","~i3",[["^ ","^1;",56,"^1<",7,"^G","ssv-element"]]],"~i11",["^ ","~i2",[["^ ","^1;",0,"^1<",8],["^ ","^1;",63,"^1<",8],["^ ","^1;",67,"^1<",8]],"~i3",[["^ ","^1;",7,"^1<",8,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"]],"~i7",[["^ ","^1;",51,"^1<",8,"^G","ssv-element"]]],"~i13",["^ ","~i0",[["^ ","^1;",0,"^1<",10],["^ ","^1;",35,"^1<",14],["^ ","^1;",0,"^1<",15]],"~i6",[["^ ","^1;",0,"^1<",14,"^G","zprint.focus/skip-whitespace-ssv"]]],"~i16",["^ ","~i3",[["^ ","^1;",78,"^1<",14,"^G","ssv"]],"~i7",[["^ ","^1;",82,"^1<",14,"^G","n"]]],"~i18",["^ ","~i2",[["^ ","^1;",0,"^1<",15],["^ ","^1;",0,"^1<",17]],"~i9",[["^ ","^1;",4,"^1<",15,"^G","index"]],"~i15",[["^ ","^1;",12,"^1<",15,"^G","n"]]],"~i20",["^ ","~i4",[["^ ","^1;",0,"^1<",17]],"~i8",[["^ ","^1;",3,"^1<",17]],"~i12",[["^ ","^1;",4,"^1<",17,"^G","index"]],"^1A",[["^ ","^1;",13,"^1<",17]],"~i19",[["^ ","^1;",13,"^1<",17,"^G","cljs.core/count"]],"~i25",[["^ ","^1;",29,"^1<",17,"^G","ssv"]]],"~i21",["^ ","~i6",[["^ ","^1;",0,"^1<",18],["^ ","^1;",16,"^1<",18]],"^1>",[["^ ","^1;",8,"^1<",18,"^G","index"]]],"~i22",["^ ","~i6",[["^ ","^1;",0,"^1<",20]],"^1=",[["^ ","^1;",3,"^1<",20]],"^1B",[["^ ","^1;",5,"^1<",20]],"^1E",[["^ ","^1;",7,"^1<",20],["^ ","^1;",130,"^1<",20]],"^1C",[["^ ","^1;",7,"^1<",20,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1;",52,"^1<",20]],"~i23",[["^ ","^1;",52,"^1<",20,"^G","zprint.focus/type-ssv"]],"~i32",[["^ ","^1;",74,"^1<",20]],"~i33",[["^ ","^1;",74,"^1<",20,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i37",[["^ ","^1;",118,"^1<",20,"^G","ssv"]],"~i41",[["^ ","^1;",122,"^1<",20,"^G","index"]]],"^1I",["^ ","^1E",[["^ ","^1;",202,"^1<",20],["^ ","^1;",325,"^1<",20]],"^1C",[["^ ","^1;",202,"^1<",20,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1;",247,"^1<",20]],"^1I",[["^ ","^1;",247,"^1<",20,"^G","zprint.focus/type-ssv"]],"^1J",[["^ ","^1;",269,"^1<",20]],"^1K",[["^ ","^1;",269,"^1<",20,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^1;",313,"^1<",20,"^G","ssv"]],"^1M",[["^ ","^1;",317,"^1<",20,"^G","index"]]],"~i24",["^ ","~i8",[["^ ","^1;",0,"^1<",21,"^G","index"]]],"^1F",["^ ","~i8",[["^ ","^1;",0,"^1<",23]],"^1B",[["^ ","^1;",15,"^1<",23],["^ ","^1;",24,"^1<",23]],"^1C",[["^ ","^1;",16,"^1<",23,"^G","index"]]],"~i27",["^ ","~i0",[["^ ","^1;",0,"^1<",31],["^ ","^1;",24,"^1<",34],["^ ","^1;",0,"^1<",35]],"~i6",[["^ ","^1;",0,"^1<",34,"^G","zprint.focus/down-ssv"]]],"~i29",["^ ","~i3",[["^ ","^1;",56,"^1<",34,"^G","ssv"]],"~i7",[["^ ","^1;",60,"^1<",34,"^G","n"]]],"~i30",["^ ","~i2",[["^ ","^1;",0,"^1<",35],["^ ","^1;",0,"^1<",36]],"~i8",[["^ ","^1;",4,"^1<",35,"^G","non-ws-n"]],"~i17",[["^ ","^1;",15,"^1<",35]],"^1A",[["^ ","^1;",15,"^1<",35,"^G","zprint.focus/skip-whitespace-ssv"]],"~i38",[["^ ","^1;",48,"^1<",35,"^G","ssv"]],"~i42",[["^ ","^1;",52,"^1<",35,"^G","n"]]],"~i31",["^ ","~i4",[["^ ","^1;",0,"^1<",36],["^ ","^1;",0,"^1<",37],["^ ","^1;",0,"^1<",39]],"^1=",[["^ ","^1;",3,"^1<",36],["^ ","^1;",129,"^1<",36]],"^1>",[["^ ","^1;",3,"^1<",36,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1?",[["^ ","^1;",48,"^1<",36]],"~i14",[["^ ","^1;",48,"^1<",36,"^G","zprint.focus/type-ssv"]],"^1I",[["^ ","^1;",70,"^1<",36]],"^1N",[["^ ","^1;",70,"^1<",36,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i28",[["^ ","^1;",114,"^1<",36,"^G","ssv"]],"^1J",[["^ ","^1;",118,"^1<",36,"^G","non-ws-n"]],"~i50",[["^ ","^1;",0,"^1<",37],["^ ","^1;",19,"^1<",37]],"~i55",[["^ ","^1;",8,"^1<",37,"^G","non-ws-n"]]],"^1K",["^ ","~i0",[["^ ","^1;",0,"^1<",42],["^ ","^1;",24,"^1<",47],["^ ","^1;",0,"^1<",48]],"~i6",[["^ ","^1;",0,"^1<",47,"^G","zprint.focus/next-ssv"]]],"^1L",["^ ","~i3",[["^ ","^1;",56,"^1<",47,"^G","ssv"]],"~i7",[["^ ","^1;",60,"^1<",47,"^G","n"]]],"~i39",["^ ","~i2",[["^ ","^1;",0,"^1<",48],["^ ","^1;",27,"^1<",49],["^ ","^1;",24,"^1<",50],["^ ","^1;",0,"^1<",52]],"~i9",[["^ ","^1;",4,"^1<",48,"^G","index"]],"^1B",[["^ ","^1;",12,"^1<",48,"^G","n"]]],"~i40",["^ ","~i9",[["^ ","^1;",4,"^1<",49,"^G","skip-to-right?"]]],"^1M",["^ ","~i9",[["^ ","^1;",4,"^1<",50,"^G","next-nonws?"]]],"~i43",["^ ","~i4",[["^ ","^1;",0,"^1<",52],["^ ","^1;",0,"^1<",53]],"~i8",[["^ ","^1;",3,"^1<",52]],"^1D",[["^ ","^1;",4,"^1<",52,"^G","index"]],"^1A",[["^ ","^1;",13,"^1<",52]],"^1E",[["^ ","^1;",13,"^1<",52,"^G","cljs.core/count"]],"^1F",[["^ ","^1;",29,"^1<",52,"^G","ssv"]]],"~i45",["^ ","~i6",[["^ ","^1;",0,"^1<",55],["^ ","^1;",0,"^1<",57]],"^1D",[["^ ","^1;",4,"^1<",55,"^G","index-type"]],"^1I",[["^ ","^1;",17,"^1<",55]],"^1N",[["^ ","^1;",17,"^1<",55,"^G","zprint.focus/type-ssv"]],"^1K",[["^ ","^1;",39,"^1<",55]],"~i34",[["^ ","^1;",39,"^1<",55,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1S",[["^ ","^1;",83,"^1<",55,"^G","ssv"]],"^1T",[["^ ","^1;",87,"^1<",55,"^G","index"]]],"~i46",["^ ","^1D",[["^ ","^1;",4,"^1<",56,"^G","new-next-nonws?"]],"^1W",[["^ ","^1;",28,"^1<",56]],"^1K",[["^ ","^1;",30,"^1<",56]],"^1L",[["^ ","^1;",32,"^1<",56]],"^1S",[["^ ","^1;",32,"^1<",56,"^G","cljs.core/not"]],"^1T",[["^ ","^1;",46,"^1<",56,"^G","skip-to-right?"]],"~i58",[["^ ","^1;",73,"^1<",56],["^ ","^1;",129,"^1<",56]],"~i59",[["^ ","^1;",73,"^1<",56,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i61",[["^ ","^1;",118,"^1<",56,"^G","index-type"]]],"~i47",["^ ","^1K",[["^ ","^1;",192,"^1<",56],["^ ","^1;",251,"^1<",56]],"^22",[["^ ","^1;",192,"^1<",56,"^G","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1;",240,"^1<",56,"^G","index-type"]]],"~i48",["^ ","^1K",[["^ ","^1;",310,"^1<",56],["^ ","^1;",369,"^1<",56]],"^22",[["^ ","^1;",310,"^1<",56,"^G","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1;",358,"^1<",56,"^G","index-type"]]],"~i49",["^ ","^1K",[["^ ","^1;",441,"^1<",56],["^ ","^1;",500,"^1<",56]],"^22",[["^ ","^1;",441,"^1<",56,"^G","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1;",489,"^1<",56,"^G","index-type"]]],"^1Y",["^ ","~i8",[["^ ","^1;",0,"^1<",57]],"^1D",[["^ ","^1;",20,"^1<",57,"^G","next-nonws?"]]],"~i56",["^ ","^1=",[["^ ","^1;",0,"^1<",58,"^G","index"]]],"~i57",["^ ","^1=",[["^ ","^1;",0,"^1<",60]],"^1R",[["^ ","^1;",15,"^1<",60]],"^1G",[["^ ","^1;",33,"^1<",60],["^ ","^1;",50,"^1<",60,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",61],["^ ","^1;",0,"^1<",61],["^ ","^1;",3,"^1<",61,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",64,"^G","and__3938__auto__"]],"~i26",[["^ ","^1;",70,"^1<",60],["^ ","^1;",126,"^1<",60]],"^1O",[["^ ","^1;",70,"^1<",60,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1;",115,"^1<",60,"^G","index-type"]],"^27",[["^ ","^1;",0,"^1<",62,"^G","skip-to-right?"]]],"^24",["^ ","^1E",[["^ ","^1;",6,"^1<",66]],"^1C",[["^ ","^1;",7,"^1<",66,"^G","zprint.focus/next-ssv"],["^ ","^1;",61,"^1<",66,"^G","zprint.focus/next-ssv"],["^ ","^1;",126,"^1<",66,"^G","zprint.focus/next-ssv"]],"^1P",[["^ ","^1;",113,"^1<",66,"^G","ssv"],["^ ","^1;",158,"^1<",66,"^G","ssv"]],"^1K",[["^ ","^1;",117,"^1<",66,"^G","index"],["^ ","^1;",162,"^1<",66,"^G","index"]]],"^25",["^ ","^1E",[["^ ","^1;",170,"^1<",66],["^ ","^1;",179,"^1<",66]],"^1N",[["^ ","^1;",171,"^1<",66,"^G","index"]]],"~i60",["^ ","^1R",[["^ ","^1;",15,"^1<",67],["^ ","^1;",32,"^1<",67,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",74],["^ ","^1;",0,"^1<",74],["^ ","^1;",20,"^1<",74,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",77,"^G","and__3938__auto__"]],"^1H",[["^ ","^1;",52,"^1<",67],["^ ","^1;",69,"^1<",67,"^G","or__3949__auto__"],["^ ","^1;",0,"^1<",68],["^ ","^1;",0,"^1<",68],["^ ","^1;",3,"^1<",68,"^G","or__3949__auto__"],["^ ","^1;",0,"^1<",69,"^G","or__3949__auto__"]],"^2<",[["^ ","^1;",88,"^1<",67],["^ ","^1;",144,"^1<",67]],"^1O",[["^ ","^1;",88,"^1<",67,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1;",133,"^1<",67,"^G","index-type"]],"^27",[["^ ","^1;",0,"^1<",71,"^G","skip-to-right?"]]],"^26",["^ ","^1H",[["^ ","^1;",0,"^1<",75],["^ ","^1;",66,"^1<",75]],"^1I",[["^ ","^1;",7,"^1<",75,"^G","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1W",[["^ ","^1;",55,"^1<",75,"^G","index-type"]]],"~i62",["^ ","^1R",[["^ ","^1;",15,"^1<",80,"^G","new-next-nonws?"]]],"~i64",["^ ","~i0",[["^ ","^1;",0,"^1<",90],["^ ","^1;",25,"^1<",93],["^ ","^1;",0,"^1<",94]],"~i6",[["^ ","^1;",0,"^1<",93,"^G","zprint.focus/right-ssv"]]],"~i66",["^ ","~i3",[["^ ","^1;",58,"^1<",93,"^G","nr"]],"~i6",[["^ ","^1;",61,"^1<",93,"^G","ssv"]],"^1=",[["^ ","^1;",65,"^1<",93,"^G","n"]]],"~i68",["^ ","~i2",[["^ ","^1;",0,"^1<",94],["^ ","^1;",0,"^1<",97]],"~i9",[["^ ","^1;",4,"^1<",94,"^G","index"]],"^1B",[["^ ","^1;",12,"^1<",94,"^G","n"]]],"~i69",["^ ","~i9",[["^ ","^1;",4,"^1<",95,"^G","moves"]],"^1B",[["^ ","^1;",12,"^1<",95,"^G","nr"]]],"~i71",["^ ","~i4",[["^ ","^1;",0,"^1<",97],["^ ","^1;",0,"^1<",98],["^ ","^1;",0,"^1<",112]],"^1=",[["^ ","^1;",20,"^1<",97,"^G","index"]]],"~i72",["^ ","~i6",[["^ ","^1;",0,"^1<",98]],"^1=",[["^ ","^1;",3,"^1<",98],["^ ","^1;",14,"^1<",98]],"^1R",[["^ ","^1;",4,"^1<",98,"^G","moves"]]],"~i73",["^ ","~i8",[["^ ","^1;",0,"^1<",99],["^ ","^1;",0,"^1<",100],["^ ","^1;",0,"^1<",102]],"^1V",[["^ ","^1;",20,"^1<",99,"^G","index"]],"^1C",[["^ ","^1;",0,"^1<",100]],"^1G",[["^ ","^1;",7,"^1<",100,"^G","zprint.focus/skip-whitespace-ssv"]],"^1M",[["^ ","^1;",40,"^1<",100,"^G","ssv"]],"^21",[["^ ","^1;",44,"^1<",100,"^G","index"]]],"~i74",["^ ","~i8",[["^ ","^1;",0,"^1<",105]],"^1B",[["^ ","^1;",15,"^1<",105]],"^1@",[["^ ","^1;",15,"^1<",105,"^G","zprint.focus/next-ssv"]],"^1F",[["^ ","^1;",37,"^1<",105,"^G","ssv"]],"^1P",[["^ ","^1;",41,"^1<",105,"^G","index"]],"~i36",[["^ ","^1;",15,"^1<",106],["^ ","^1;",24,"^1<",106]],"^1M",[["^ ","^1;",16,"^1<",106,"^G","moves"]]],"~i76",["^ ","~i0",[["^ ","^1;",0,"^1<",117],["^ ","^1;",24,"^1<",121],["^ ","^1;",0,"^1<",122]],"~i6",[["^ ","^1;",0,"^1<",121,"^G","zprint.focus/path-ssv"]]],"~i79",["^ ","~i3",[["^ ","^1;",56,"^1<",121,"^G","nwpath"]],"^1=",[["^ ","^1;",63,"^1<",121,"^G","ssv"]]],"~i80",["^ ","~i2",[["^ ","^1;",0,"^1<",122],["^ ","^1;",10,"^1<",122],["^ ","^1;",0,"^1<",125]],"~i9",[["^ ","^1;",4,"^1<",122,"^G","idx"]]],"~i81",["^ ","~i9",[["^ ","^1;",4,"^1<",123,"^G","nwp"]],"^1?",[["^ ","^1;",10,"^1<",123,"^G","nwpath"]]],"~i82",["^ ","~i4",[["^ ","^1;",0,"^1<",125],["^ ","^1;",0,"^1<",126],["^ ","^1;",0,"^1<",136]],"^1=",[["^ ","^1;",20,"^1<",125,"^G","idx"]]],"~i83",["^ ","~i6",[["^ ","^1;",0,"^1<",126]],"^1=",[["^ ","^1;",3,"^1<",126]],"^1>",[["^ ","^1;",3,"^1<",126,"^G","cljs.core/empty?"]],"^1A",[["^ ","^1;",26,"^1<",126,"^G","nwp"]]],"~i84",["^ ","~i8",[["^ ","^1;",0,"^1<",127,"^G","idx"]]],"~i85",["^ ","~i8",[["^ ","^1;",0,"^1<",129]],"^1B",[["^ ","^1;",15,"^1<",129]],"^1@",[["^ ","^1;",15,"^1<",129,"^G","zprint.focus/right-ssv"]],"^2<",[["^ ","^1;",38,"^1<",129]],"^1O",[["^ ","^1;",38,"^1<",129,"^G","cljs.core/first"]],"^1K",[["^ ","^1;",54,"^1<",129,"^G","nwp"]],"^1S",[["^ ","^1;",59,"^1<",129,"^G","ssv"]],"^1T",[["^ ","^1;",63,"^1<",129]],"^20",[["^ ","^1;",63,"^1<",129,"^G","zprint.focus/down-ssv"]],"~i52",[["^ ","^1;",85,"^1<",129,"^G","ssv"]],"^2:",[["^ ","^1;",89,"^1<",129,"^G","idx"]],"^2>",[["^ ","^1;",15,"^1<",130]],"~i63",[["^ ","^1;",15,"^1<",130,"^G","cljs.core/next"]],"^2A",[["^ ","^1;",30,"^1<",130,"^G","nwp"]]],"~i87",["^ ","~i0",[["^ ","^1;",0,"^1<",141],["^ ","^1;",25,"^1<",147],["^ ","^1;",0,"^1<",148]],"~i6",[["^ ","^1;",0,"^1<",147,"^G","zprint.focus/range-ssv"]]],"~i92",["^ ","~i3",[["^ ","^1;",58,"^1<",147,"^G","ssv"]],"~i7",[["^ ","^1;",62,"^1<",147,"^G","nwpath"]]],"~i95",["^ ","~i2",[["^ ","^1;",0,"^1<",148],["^ ","^1;",0,"^1<",158],["^ ","^1;",0,"^1<",158]],"~i8",[["^ ","^1;",4,"^1<",148,"^G","start"]],"^1V",[["^ ","^1;",12,"^1<",148]],"^1B",[["^ ","^1;",12,"^1<",148,"^G","zprint.focus/path-ssv"]],"^1N",[["^ ","^1;",34,"^1<",148,"^G","nwpath"]],"^1U",[["^ ","^1;",41,"^1<",148,"^G","ssv"]]],"~i97",["^ ","~i8",[["^ ","^1;",4,"^1<",149,"^G","start"]],"^1V",[["^ ","^1;",16,"^1<",149]],"^1B",[["^ ","^1;",16,"^1<",149,"^G","zprint.focus/skip-whitespace-ssv"]],"~i35",[["^ ","^1;",49,"^1<",149,"^G","ssv"]],"^1Z",[["^ ","^1;",53,"^1<",149,"^G","start"]]],"~i98",["^ ","~i8",[["^ ","^1;",4,"^1<",150,"^G","ssv-next"]],"^1R",[["^ ","^1;",15,"^1<",150]],"^1A",[["^ ","^1;",15,"^1<",150,"^G","zprint.focus/next-ssv"]],"^1O",[["^ ","^1;",37,"^1<",150,"^G","ssv"]],"^1U",[["^ ","^1;",41,"^1<",150,"^G","start"]]],"~i99",["^ ","~i8",[["^ ","^1;",4,"^1<",151,"^G","end"]],"^1D",[["^ ","^1;",10,"^1<",151]],"^1@",[["^ ","^1;",28,"^1<",151],["^ ","^1;",45,"^1<",151,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",152],["^ ","^1;",0,"^1<",152],["^ ","^1;",20,"^1<",152,"^G","and__3938__auto__"],["^ ","^1;",0,"^1<",155,"^G","and__3938__auto__"]],"^1G",[["^ ","^1;",65,"^1<",151,"^G","ssv-next"]],"^1Q",[["^ ","^1;",0,"^1<",153],["^ ","^1;",65,"^1<",153]],"^1U",[["^ ","^1;",7,"^1<",153,"^G","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^1;",55,"^1<",153,"^G","start"]],"^23",[["^ ","^1;",6,"^1<",157],["^ ","^1;",18,"^1<",157]],"~i51",[["^ ","^1;",7,"^1<",157,"^G","ssv-next"]],"^26",[["^ ","^1;",23,"^1<",157],["^ ","^1;",47,"^1<",157]],"^2@",[["^ ","^1;",24,"^1<",157]],"~i67",[["^ ","^1;",24,"^1<",157,"^G","cljs.core/count"]],"^2E",[["^ ","^1;",40,"^1<",157,"^G","ssv"]]],"~i101",["^ ","~i5",[["^ ","^1;",90,"^1<",158,"^G","start"]],"^1>",[["^ ","^1;",100,"^1<",158,"^G","end"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1533155342000],["^13","goog/math/math.js"],[1533155346000,"^P","~$goog.array","~$goog.asserts"],["^13","goog/array/array.js"],[1533155346000,"^P","^35"],["^13","goog/debug/error.js"],[1533155346000,"^P"],["^13","goog/dom/nodetype.js"],[1533155346000,"^P"],["^13","goog/object/object.js"],[1533155346000,"^P"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^13","goog/math/long.js"],[1533155346000,"^P","^35","~$goog.reflect"],["^13","goog/functions/functions.js"],[1533155346000,"^P"],["^13","goog/structs/map.js"],[1533155346000,"^P","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^13","goog/asserts/asserts.js"],[1533155346000,"^P","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^13","goog/uri/uri.js"],[1533155346000,"^P","^34","^35","^3=","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^13","zprint/focus.cljc"],[1533155355000,"^P","^O","^M","^N"],["^13","goog/base.js"],[1533155346000],["^13","goog/structs/structs.js"],[1533155346000,"^P","^34","^3:"],["^13","clojure/string.cljs"],[1533155342000,"^P","^O","^3=","~$goog.string.StringBuffer"],["^13","goog/string/string.js"],[1533155346000,"^P"],["^13","goog/reflect/reflect.js"],[1533155346000,"^P"],["^13","goog/string/stringbuffer.js"],[1533155346000,"^P"],["^13","goog/iter/iter.js"],[1533155346000,"^P","^34","^35","~$goog.functions","~$goog.math"],["^13","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^3=","^3:","^34","~$goog.Uri","^3C"],["^13","goog/math/integer.js"],[1533155346000,"^P"],["^13","goog/uri/utils.js"],[1533155346000,"^P","^34","^35","^3="],["^13","zprint/ansi.cljc"],[1533155355000,"^P","^O","^M"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","zprint/focus.cljc","^7",1,"^8",5,"^9",1,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","~$s","^M","^N","^N","^O","^O","^P","^P"],"^Q",["^F",["^R"]],"^S",["^ ","^T","^N"],"~:defs",["^ ","~$type-ssv",["^ ","~:protocol-inline",null,"^5",["^ ","^6","zprint/focus.cljc","^7",9,"^8",7,"^9",9,"^:",15,"~:arglists",["^W",["~$quote",["^W",[["~$ssv-element"]]]]],"~:doc","What is this element in a str-style-vec?"],"^G","~$zprint.focus/type-ssv","~:variadic",false,"^6","zprint/focus.cljc","^:",15,"~:method-params",["^W",[["^3O"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"^7",9,"^9",9,"~:max-fixed-arity",1,"~:fn-var",true,"^3M",["^W",["^3N",["^W",[["^3O"]]]]],"^3P","What is this element in a str-style-vec?"],"~$skip-whitespace-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",14,"^8",7,"^9",14,"^:",26,"^3M",["^W",["^3N",["^W",[["~$ssv","~$n"]]]]],"^3P","Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent"],"^G","~$zprint.focus/skip-whitespace-ssv","^3R",false,"^6","zprint/focus.cljc","^:",26,"^3S",["^W",[["^3Y","~$n"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",14,"^9",14,"^3V",2,"^3W",true,"^3M",["^W",["^3N",["^W",[["^3Y","~$n"]]]]],"^3P","Skip any whitespace in this ssv starting at n. Whitespace is :whitespace\n  and :indent"],"~$down-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",28,"^8",7,"^9",28,"^:",15,"^3M",["^W",["^3N",["^W",[["^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move into a collection at element n."],"^G","~$zprint.focus/down-ssv","^3R",false,"^6","zprint/focus.cljc","^:",15,"^3S",["^W",[["^3Y","~$n"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",28,"^9",28,"^3V",2,"^3W",true,"^3M",["^W",["^3N",["^W",[["^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move into a collection at element n."],"~$next-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",34,"^8",7,"^9",34,"^:",15,"^3M",["^W",["^3N",["^W",[["^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements."],"^G","~$zprint.focus/next-ssv","^3R",false,"^6","zprint/focus.cljc","^:",15,"^3S",["^W",[["^3Y","~$n"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",34,"^9",34,"^3V",2,"^3W",true,"^3M",["^W",["^3N",["^W",[["^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move to the next element beyond this\n  one.  This will skip over entire collections, if there are any.\n  It will also ignore :whitespace elements."],"~$right-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",65,"^8",7,"^9",65,"^:",16,"^3M",["^W",["^3N",["^W",[["~$nr","^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move right nr elements."],"^G","~$zprint.focus/right-ssv","^3R",false,"^6","zprint/focus.cljc","^:",16,"^3S",["^W",[["^44","^3Y","~$n"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",65,"^9",65,"^3V",3,"^3W",true,"^3M",["^W",["^3N",["^W",[["^44","^3Y","~$n"]]]]],"^3P","Given a str-style-vec, move right nr elements."],"~$path-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",77,"^8",7,"^9",77,"^:",15,"^3M",["^W",["^3N",["^W",[["~$nwpath","^3Y"]]]]],"^3P","Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec."],"^G","~$zprint.focus/path-ssv","^3R",false,"^6","zprint/focus.cljc","^:",15,"^3S",["^W",[["^47","^3Y"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",77,"^9",77,"^3V",2,"^3W",true,"^3M",["^W",["^3N",["^W",[["^47","^3Y"]]]]],"^3P","Given a non-whitespace path from a zipper, find that same\n  collection or element in a str-style-vec."],"~$range-ssv",["^ ","^3L",null,"^5",["^ ","^6","zprint/focus.cljc","^7",88,"^8",7,"^9",88,"^:",16,"^3M",["^W",["^3N",["^W",[["^3Y","^47"]]]]],"^3P","Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input."],"^G","~$zprint.focus/range-ssv","^3R",false,"^6","zprint/focus.cljc","^:",16,"^3S",["^W",[["^3Y","^47"]]],"^3T",null,"^3U",["^W",[null,null]],"^8",1,"^7",88,"^9",88,"^3V",2,"^3W",true,"^3M",["^W",["^3N",["^W",[["^3Y","^47"]]]]],"^3P","Use a non-whitespace path from a zipper, and find that\n  same collection or element in a str-style-vec, and return\n  a vector of the start and end of that collection or element.\n  Depends on next-ssv returning one past the end of its input."]],"^U",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^F",["~:indent","~:whitespace","~:right","~:left"]],"~:order",["^4=","^4<","^4?","^4>"]],"^[",["^ ","^R",["^F",[]]],"^10",["^ "],"^11",["^P","^O","^M","^N"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^32",[["^4C","~:static-fns"],true,["^4C","~:elide-asserts"],false,["^4C","~:optimize-constants"],null,["^4C","~:external-config"],null,["^4C","~:tooling-config"],null,["^4C","~:emit-constants"],null,["^4C","~:infer-externs"],true,["^4C","^18"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4C","~:fn-invoke-direct"],null,["^4C","^1:"],"/dev/null"]]]