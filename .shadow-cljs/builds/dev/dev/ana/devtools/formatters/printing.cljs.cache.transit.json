["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.helpers');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___39368 = arguments.length;\nvar i__4532__auto___39369 = (0);\nwhile(true){\nif((i__4532__auto___39369 < len__4531__auto___39368)){\nargs__4534__auto__.push((arguments[i__4532__auto___39369]));\n\nvar G__39370 = (i__4532__auto___39369 + (1));\ni__4532__auto___39369 = G__39370;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ndevtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join('')),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n});\n\ndevtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq39362){\nvar G__39363 = cljs.core.first(seq39362);\nvar seq39362__$1 = cljs.core.next(seq39362);\nvar G__39364 = cljs.core.first(seq39362__$1);\nvar seq39362__$2 = cljs.core.next(seq39362__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__39363,G__39364,seq39362__$2);\n});\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__3949__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ndevtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a);\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null));\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n});\n\ndevtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n});\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$type = true;\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\";\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4192__auto__,writer__4193__auto__,opt__4194__auto__){\nreturn cljs.core._write(writer__4193__auto__,\"devtools.formatters.printing/TemplateWriter\");\n});\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5455__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar tag = temp__5455__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__3938__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__3938__auto__){\nvar or__3949__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__3938__auto__;\n}\n})())){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__39413_SHARP_){\nreturn !((cljs.core.meta(p1__39413_SHARP_) == null));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)].join(''),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__39446 = opts;\nvar map__39446__$1 = ((((!((map__39446 == null)))?(((((map__39446.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39446.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39446):map__39446);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39446__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__3949__auto__ = (function (){try{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e39453){var _e__38504__auto__ = e39453;\nreturn false;\n}})();\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\ntry{if(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e39455){var _e__38504__auto__ = e39455;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5455__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar atomic_markup = temp__5455__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR_39462 = devtools.formatters.state._STAR_current_state_STAR_;\ndevtools.formatters.state._STAR_current_state_STAR_ = devtools.formatters.state.get_current_state();\n\ntry{var map__39463 = opts;\nvar map__39463__$1 = ((((!((map__39463 == null)))?(((((map__39463.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39463.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39463):map__39463);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39463__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR_39462;\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = ((function (writer,opts){\nreturn (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});})(writer,opts))\n;\nvar temp__5455__auto___39467 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5455__auto___39467)){\nvar managed_print_level_39470 = temp__5455__auto___39467;\nvar _STAR_print_level_STAR_39466_39471 = cljs.core._STAR_print_level_STAR_;\ncljs.core._STAR_print_level_STAR_ = managed_print_level_39470;\n\ntry{devtools.formatters.state.update_current_state_BANG_(((function (_STAR_print_level_STAR_39466_39471,managed_print_level_39470,temp__5455__auto___39467,writer,opts,job_fn){\nreturn (function (p1__39465_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__39465_SHARP_,null);\n});})(_STAR_print_level_STAR_39466_39471,managed_print_level_39470,temp__5455__auto___39467,writer,opts,job_fn))\n);\n\njob_fn();\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_39466_39471;\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^O","~$devtools.format","^P","~$devtools.protocols","^Q","~$devtools.formatters.state","^R","~$devtools.formatters.helpers","^S","~$cljs.core","^T","~$goog","^U"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^Q","~$expandable?","^S","~$ITemplate","^Q","~$IDevtoolsFormat","^P","~$get-managed-print-level","^R","~$get-current-state","^R","~$ISurrogate","^Q","~$should-render?","^S","~$set-managed-print-level","^R","~$directly-printable?","^S","~$pref","^O","~$push-object-to-current-history!","^R","~$update-current-state!","^R","~$abbreviated?","^S","~$IFormat","^Q","~$*current-state*","^R","~$cljs-value?","^S","~$is-circular?","^R"],"^X",["^ ","^F","^F","^T","^T","^O","^O"],"~:form",["~#list",["~$ns","^J",["^1A",["^X",["^F","~:refer",["^E"]]]],["^1A",["^W",["^O","^1C",["^18"]],["^P","^1C",["^11"]],["^Q","^1C",["^10","^Z","^14","^1<"]],["^R","^1C",["^19","^1=","^13","^1?","^12","^16","^1:"]],["^S","^1C",["^1>","^[","^1;","^17","^15"]]]]]],"~:flags",["^ ","^X",["^H",[]],"^W",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^O","^P","^Q","^R","^S"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1537561396219,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer becasue pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^H",["~:cljs"]],"~:source-map",["^ ","~i12",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",7],["^ ","^1Q",45,"^1R",7],["^ ","^1Q",0,"^1R",8]],"~i6",[["^ ","^1Q",0,"^1R",7,"^I","devtools.formatters.printing/markup?"]],"~i15",[["^ ","^1Q",98,"^1R",7,"^I","value"]]],"~i13",["^ ","~i2",[["^ ","^1Q",0,"^1R",8],["^ ","^1Q",7,"^1R",8]],"^1P",[["^ ","^1Q",150,"^1R",8]],"^1T",[["^ ","^1Q",150,"^1R",8,"^I","cljs.core/meta"]],"~i18",[["^ ","^1Q",165,"^1R",8,"^I","value"]]],"^1S",["^ ","~i0",[["^ ","^1Q",0,"^1R",10],["^ ","^1Q",46,"^1R",10],["^ ","^1Q",0,"^1R",11]],"~i6",[["^ ","^1Q",0,"^1R",10,"^I","devtools.formatters.printing/mark-as-markup"]],"~i22",[["^ ","^1Q",100,"^1R",10,"^I","value"]]],"~i16",["^ ","~i2",[["^ ","^1Q",0,"^1R",11],["^ ","^1Q",33,"^1R",11],["^ ","^1Q",76,"^1R",11],["^ ","^1Q",189,"^1R",11]],"~i3",[["^ ","^1Q",7,"^1R",11,"^I","cljs.core/with-meta"]],"^1T",[["^ ","^1Q",27,"^1R",11,"^I","value"]]],"^1U",["^ ","~i0",[["^ ","^1Q",0,"^1R",13],["^ ","^1Q",0,"^1R",13],["^ ","^1Q",44,"^1R",13],["^ ","^1Q",96,"^1R",13,"^I","var_args"],["^ ","^1Q",0,"^1R",14],["^ ","^1Q",0,"^1R",14],["^ ","^1Q",4,"^1R",14,"^I","args__4534__auto__"],["^ ","^1Q",25,"^1R",14],["^ ","^1Q",0,"^1R",15],["^ ","^1Q",0,"^1R",15],["^ ","^1Q",4,"^1R",15,"^I","len__4531__auto__"],["^ ","^1Q",30,"^1R",15],["^ ","^1Q",30,"^1R",15],["^ ","^1Q",0,"^1R",16],["^ ","^1Q",0,"^1R",16],["^ ","^1Q",4,"^1R",16,"^I","i__4532__auto__"],["^ ","^1Q",28,"^1R",16],["^ ","^1Q",0,"^1R",18],["^ ","^1Q",0,"^1R",18],["^ ","^1Q",3,"^1R",18],["^ ","^1Q",4,"^1R",18,"^I","i__4532__auto__"],["^ ","^1Q",28,"^1R",18,"^I","len__4531__auto__"],["^ ","^1Q",0,"^1R",19],["^ ","^1Q",0,"^1R",19],["^ ","^1Q",0,"^1R",19,"^I","args__4534__auto__"],["^ ","^1Q",24,"^1R",19],["^ ","^1Q",25,"^1R",19],["^ ","^1Q",35,"^1R",19,"^I","i__4532__auto__"],["^ ","^1Q",0,"^1R",21],["^ ","^1Q",15,"^1R",21],["^ ","^1Q",16,"^1R",21,"^I","i__4532__auto__"],["^ ","^1Q",40,"^1R",21],["^ ","^1Q",0,"^1R",25],["^ ","^1Q",0,"^1R",29],["^ ","^1Q",4,"^1R",29,"^I","argseq__4535__auto__"],["^ ","^1Q",27,"^1R",29],["^ ","^1Q",29,"^1R",29],["^ ","^1Q",30,"^1R",29],["^ ","^1Q",36,"^1R",29],["^ ","^1Q",36,"^1R",29,"^I","args__4534__auto__"],["^ ","^1Q",64,"^1R",29],["^ ","^1Q",64,"^1R",29],["^ ","^1Q",69,"^1R",29,"^I","cljs.core/IndexedSeq"],["^ ","^1Q",90,"^1R",29],["^ ","^1Q",90,"^1R",29,"^I","args__4534__auto__"],["^ ","^1Q",115,"^1R",29],["^ ","^1Q",120,"^1R",29],["^ ","^1Q",124,"^1R",29],["^ ","^1Q",131,"^1R",29],["^ ","^1Q",0,"^1R",30],["^ ","^1Q",0,"^1R",30],["^ ","^1Q",7,"^1R",30,"^I","devtools.formatters.printing/build-markup"],["^ ","^1Q",86,"^1R",30],["^ ","^1Q",87,"^1R",30],["^ ","^1Q",97,"^1R",30],["^ ","^1Q",103,"^1R",30],["^ ","^1Q",104,"^1R",30],["^ ","^1Q",114,"^1R",30],["^ ","^1Q",120,"^1R",30,"^I","argseq__4535__auto__"],["^ ","^1Q",0,"^1R",33],["^ ","^1Q",0,"^1R",33],["^ ","^1Q",0,"^1R",33],["^ ","^1Q",0,"^1R",33,"^I","devtools.formatters.printing/build-markup"],["^ ","^1Q",81,"^1R",33],["^ ","^1Q",0,"^1R",34],["^ ","^1Q",0,"^1R",43],["^ ","^1Q",0,"^1R",43],["^ ","^1Q",0,"^1R",43,"^I","devtools.formatters.printing/build-markup"],["^ ","^1Q",68,"^1R",43],["^ ","^1Q",0,"^1R",45],["^ ","^1Q",0,"^1R",46],["^ ","^1Q",0,"^1R",46],["^ ","^1Q",0,"^1R",46,"^I","devtools.formatters.printing/build-markup"],["^ ","^1Q",62,"^1R",46],["^ ","^1Q",73,"^1R",46,"^I","seq39362"],["^ ","^1Q",0,"^1R",47],["^ ","^1Q",0,"^1R",47],["^ ","^1Q",4,"^1R",47,"^I","G__39363"],["^ ","^1Q",15,"^1R",47],["^ ","^1Q",15,"^1R",47,"^I","cljs.core/first"],["^ ","^1Q",31,"^1R",47,"^I","seq39362"],["^ ","^1Q",4,"^1R",48,"^I","seq39362"],["^ ","^1Q",19,"^1R",48],["^ ","^1Q",19,"^1R",48,"^I","cljs.core/next"],["^ ","^1Q",34,"^1R",48,"^I","seq39362"],["^ ","^1Q",4,"^1R",49,"^I","G__39364"],["^ ","^1Q",15,"^1R",49],["^ ","^1Q",15,"^1R",49,"^I","cljs.core/first"],["^ ","^1Q",31,"^1R",49,"^I","seq39362"],["^ ","^1Q",4,"^1R",50,"^I","seq39362"],["^ ","^1Q",19,"^1R",50],["^ ","^1Q",19,"^1R",50,"^I","cljs.core/next"],["^ ","^1Q",34,"^1R",50,"^I","seq39362"],["^ ","^1Q",0,"^1R",51],["^ ","^1Q",0,"^1R",51],["^ ","^1Q",4,"^1R",51,"^I","self__4518__auto__"],["^ ","^1Q",25,"^1R",51],["^ ","^1Q",0,"^1R",52],["^ ","^1Q",0,"^1R",52],["^ ","^1Q",7,"^1R",52,"^I","self__4518__auto__"],["^ ","^1Q",63,"^1R",52,"^I","G__39363"],["^ ","^1Q",72,"^1R",52,"^I","G__39364"],["^ ","^1Q",81,"^1R",52,"^I","seq39362"],["^ ","^1Q",0,"^1R",55]],"~i6",[["^ ","^1Q",0,"^1R",13,"^I","devtools.formatters.printing/build-markup"]],"~i20",[["^ ","^1Q",92,"^1R",33,"^I","markup-db"]],"~i30",[["^ ","^1Q",102,"^1R",33,"^I","fn-key"]],"~i39",[["^ ","^1Q",109,"^1R",33,"^I","args"]]],"~i19",["^ ","~i2",[["^ ","^1Q",0,"^1R",34],["^ ","^1Q",0,"^1R",35]],"~i8",[["^ ","^1Q",4,"^1R",34,"^I","f"]],"~i10",[["^ ","^1Q",8,"^1R",34]],"~i11",[["^ ","^1Q",8,"^1R",34,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"^1S",[["^ ","^1Q",52,"^1R",34,"^I","markup-db"]],"~i25",[["^ ","^1Q",62,"^1R",34,"^I","fn-key"]]],"^1X",["^ ","~i4",[["^ ","^1Q",0,"^1R",35],["^ ","^1Q",0,"^1R",36],["^ ","^1Q",0,"^1R",37],["^ ","^1Q",0,"^1R",37],["^ ","^1Q",6,"^1R",37],["^ ","^1Q",11,"^1R",37,"^I","js/Error"],["^ ","^1Q",17,"^1R",37],["^ ","^1Q",18,"^1R",37],["^ ","^1Q",183,"^1R",37],["^ ","^1Q",188,"^1R",37]],"^1P",[["^ ","^1Q",20,"^1R",35,"^I","f"]],"~i14",[["^ ","^1Q",80,"^1R",37],["^ ","^1Q",81,"^1R",37]],"~i58",[["^ ","^1Q",164,"^1R",37,"^I","fn-key"]]],"~i21",["^ ","~i4",[["^ ","^1Q",0,"^1R",40]],"~i5",[["^ ","^1Q",7,"^1R",40,"^I","devtools.formatters.printing/mark-as-markup"]],"^1X",[["^ ","^1Q",51,"^1R",40]],"^25",[["^ ","^1Q",51,"^1R",40,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1Q",97,"^1R",40,"^I","f"]],"~i29",[["^ ","^1Q",99,"^1R",40,"^I","args"]]],"~i23",["^ ","~i0",[["^ ","^1Q",0,"^1R",55],["^ ","^1Q",65,"^1R",55],["^ ","^1Q",0,"^1R",56]],"~i6",[["^ ","^1Q",0,"^1R",55,"^I","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i41",[["^ ","^1Q",138,"^1R",55,"^I","markup-db"]],"~i51",[["^ ","^1Q",148,"^1R",55,"^I","value"]]],"~i24",["^ ","~i2",[["^ ","^1Q",0,"^1R",56]],"~i6",[["^ ","^1Q",20,"^1R",56],["^ ","^1Q",37,"^1R",56,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",57],["^ ","^1Q",0,"^1R",57],["^ ","^1Q",20,"^1R",57,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",58,"^I","or__3949__auto__"]],"^20",[["^ ","^1Q",56,"^1R",56]],"^21",[["^ ","^1Q",56,"^1R",56,"^I","devtools.formatters.helpers/directly-printable?"]],"~i31",[["^ ","^1Q",110,"^1R",56,"^I","value"]],"~i38",[["^ ","^1Q",0,"^1R",60]],"^1Z",[["^ ","^1Q",7,"^1R",60,"^I","devtools.formatters.printing/markup?"]],"~i47",[["^ ","^1Q",50,"^1R",60,"^I","value"]]],"^22",["^ ","~i4",[["^ ","^1Q",0,"^1R",63,"^I","value"]]],"~i26",["^ ","~i4",[["^ ","^1Q",0,"^1R",65],["^ ","^1Q",96,"^1R",65]],"~i5",[["^ ","^1Q",7,"^1R",65,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^1U",[["^ ","^1Q",86,"^1R",65,"^I","markup-db"]],"~i49",[["^ ","^1Q",228,"^1R",65,"^I","value"]]],"^1Y",["^ ","~i0",[["^ ","^1Q",0,"^1R",68],["^ ","^1Q",0,"^1R",68],["^ ","^1Q",0,"^1R",79],["^ ","^1Q",0,"^1R",79],["^ ","^1Q",0,"^1R",79],["^ ","^1Q",0,"^1R",79],["^ ","^1Q",62,"^1R",79],["^ ","^1Q",0,"^1R",81],["^ ","^1Q",0,"^1R",81],["^ ","^1Q",8,"^1R",81],["^ ","^1Q",0,"^1R",82],["^ ","^1Q",0,"^1R",85],["^ ","^1Q",0,"^1R",85],["^ ","^1Q",0,"^1R",85],["^ ","^1Q",66,"^1R",85],["^ ","^1Q",0,"^1R",87],["^ ","^1Q",0,"^1R",87],["^ ","^1Q",8,"^1R",87],["^ ","^1Q",0,"^1R",88],["^ ","^1Q",0,"^1R",91],["^ ","^1Q",0,"^1R",91],["^ ","^1Q",0,"^1R",91],["^ ","^1Q",89,"^1R",91],["^ ","^1Q",0,"^1R",93],["^ ","^1Q",0,"^1R",93],["^ ","^1Q",12,"^1R",93],["^ ","^1Q",0,"^1R",94],["^ ","^1Q",0,"^1R",97],["^ ","^1Q",0,"^1R",97],["^ ","^1Q",0,"^1R",97],["^ ","^1Q",89,"^1R",97],["^ ","^1Q",0,"^1R",99],["^ ","^1Q",0,"^1R",99],["^ ","^1Q",12,"^1R",99],["^ ","^1Q",0,"^1R",100],["^ ","^1Q",0,"^1R",100],["^ ","^1Q",0,"^1R",103],["^ ","^1Q",0,"^1R",103],["^ ","^1Q",55,"^1R",103],["^ ","^1Q",0,"^1R",104],["^ ","^1Q",0,"^1R",104],["^ ","^1Q",90,"^1R",104],["^ ","^1Q",110,"^1R",104],["^ ","^1Q",170,"^1R",104],["^ ","^1Q",213,"^1R",104],["^ ","^1Q",271,"^1R",104],["^ ","^1Q",285,"^1R",104],["^ ","^1Q",0,"^1R",107],["^ ","^1Q",0,"^1R",107],["^ ","^1Q",61,"^1R",107],["^ ","^1Q",0,"^1R",109],["^ ","^1Q",0,"^1R",109],["^ ","^1Q",64,"^1R",109],["^ ","^1Q",0,"^1R",111],["^ ","^1Q",0,"^1R",111],["^ ","^1Q",69,"^1R",111],["^ ","^1Q",80,"^1R",111,"^I","this__4192__auto__"],["^ ","^1Q",99,"^1R",111,"^I","writer__4193__auto__"],["^ ","^1Q",120,"^1R",111,"^I","opt__4194__auto__"],["^ ","^1Q",0,"^1R",112],["^ ","^1Q",0,"^1R",112],["^ ","^1Q",7,"^1R",112,"^I","cljs.core/-write"],["^ ","^1Q",24,"^1R",112,"^I","writer__4193__auto__"],["^ ","^1Q",45,"^1R",112],["^ ","^1Q",0,"^1R",115],["^ ","^1Q",51,"^1R",118],["^ ","^1Q",0,"^1R",119],["^ ","^1Q",0,"^1R",119],["^ ","^1Q",12,"^1R",119,"^I","devtools.formatters.printing/TemplateWriter"]],"~i9",[["^ ","^1Q",0,"^1R",79,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",85,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",91,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",97,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",103,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",107,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",109,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",111,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",0,"^1R",118,"^I","devtools.formatters.printing/->TemplateWriter"],["^ ","^1Q",0,"^1R",122,"^I","devtools.formatters.printing/TemplateWriter"]],"~i35",[["^ ","^1Q",110,"^1R",118,"^I","group"],["^ ","^1Q",56,"^1R",119,"^I","group"]],"^29",[["^ ","^1Q",116,"^1R",118,"^I","markup-db"],["^ ","^1Q",62,"^1R",119,"^I","markup-db"]]],"~i32",["^ ","^20",[["^ ","^1Q",4,"^1R",81,"^I","_"]],"^1P",[["^ ","^1Q",73,"^1R",79,"^I","a"]],"^1S",[["^ ","^1Q",0,"^1R",82]],"^25",[["^ ","^1Q",7,"^1R",82,"^I","group"]],"^26",[["^ ","^1Q",22,"^1R",82]],"~i28",[["^ ","^1Q",22,"^1R",82,"^I","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^2A",[["^ ","^1Q",69,"^1R",82,"^I","group"]],"^29",[["^ ","^1Q",82,"^1R",82,"^I","a"]]],"~i33",["^ ","^23",[["^ ","^1Q",4,"^1R",87,"^I","_"]],"~i17",[["^ ","^1Q",0,"^1R",88,"^I","group"]]],"^2A",["^ ","^21",[["^ ","^1Q",100,"^1R",91,"^I","_"],["^ ","^1Q",4,"^1R",93,"^I","_"]],"^1T",[["^ ","^1Q",102,"^1R",91,"^I","o"]],"^1W",[["^ ","^1Q",0,"^1R",94]],"^1V",[["^ ","^1Q",7,"^1R",94,"^I","group"]],"^2C",[["^ ","^1Q",22,"^1R",94],["^ ","^1Q",82,"^1R",94]],"^27",[["^ ","^1Q",22,"^1R",94,"^I","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1Q",69,"^1R",94,"^I","group"]],"~i43",[["^ ","^1Q",165,"^1R",94]],"~i44",[["^ ","^1Q",165,"^1R",94,"^I","devtools.formatters.printing/wrap-value-as-reference-if-needed"]],"~i78",[["^ ","^1Q",228,"^1R",94,"^I","markup-db"]],"~i88",[["^ ","^1Q",245,"^1R",94,"^I","o"]]],"^2F",["^ ","^21",[["^ ","^1Q",100,"^1R",97,"^I","_"],["^ ","^1Q",4,"^1R",99,"^I","_"]]],"^2=",["^ ","~i0",[["^ ","^1Q",0,"^1R",122],["^ ","^1Q",52,"^1R",122],["^ ","^1Q",0,"^1R",123]],"~i6",[["^ ","^1Q",0,"^1R",122,"^I","devtools.formatters.printing/make-template-writer"]],"^2C",[["^ ","^1Q",112,"^1R",122,"^I","markup-db"]]],"^1Z",["^ ","~i2",[["^ ","^1Q",0,"^1R",123],["^ ","^1Q",12,"^1R",123,"^I","devtools.formatters.printing/TemplateWriter"],["^ ","^1Q",56,"^1R",123]],"^1V",[["^ ","^1Q",89,"^1R",123,"^I","markup-db"]]],"^2G",["^ ","~i0",[["^ ","^1Q",0,"^1R",125],["^ ","^1Q",56,"^1R",125],["^ ","^1Q",0,"^1R",126]],"~i6",[["^ ","^1Q",0,"^1R",125,"^I","devtools.formatters.printing/already-reference?"]],"^2?",[["^ ","^1Q",120,"^1R",125,"^I","group"]]],"^2H",["^ ","~i2",[["^ ","^1Q",0,"^1R",126],["^ ","^1Q",4,"^1R",126,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",127],["^ ","^1Q",0,"^1R",127],["^ ","^1Q",20,"^1R",127,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",128],["^ ","^1Q",10,"^1R",128,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",129],["^ ","^1Q",0,"^1R",131]],"^21",[["^ ","^1Q",4,"^1R",128,"^I","tag"]],"^1S",[["^ ","^1Q",25,"^1R",126]],"^1W",[["^ ","^1Q",25,"^1R",126,"^I","cljs.core/first"]],"^1V",[["^ ","^1Q",41,"^1R",126]],"^28",[["^ ","^1Q",41,"^1R",126,"^I","cljs.core/first"]],"^27",[["^ ","^1Q",57,"^1R",126,"^I","group"]]],"~i45",["^ ","~i4",[["^ ","^1Q",0,"^1R",129],["^ ","^1Q",56,"^1R",129]],"~i5",[["^ ","^1Q",7,"^1R",129,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^1Q",52,"^1R",129,"^I","tag"]]],"^2>",["^ ","~i0",[["^ ","^1Q",0,"^1R",134],["^ ","^1Q",65,"^1R",134],["^ ","^1Q",0,"^1R",135]],"~i6",[["^ ","^1Q",0,"^1R",134,"^I","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^29",[["^ ","^1Q",138,"^1R",134,"^I","group"]],"^2>",[["^ ","^1Q",144,"^1R",134,"^I","obj"]],"^2:",[["^ ","^1Q",148,"^1R",134,"^I","markup-db"]]],"~i48",["^ ","~i2",[["^ ","^1Q",0,"^1R",135]],"~i6",[["^ ","^1Q",20,"^1R",135],["^ ","^1Q",37,"^1R",135,"^I","and__3938__auto__"],["^ ","^1Q",0,"^1R",136],["^ ","^1Q",0,"^1R",136],["^ ","^1Q",3,"^1R",136,"^I","and__3938__auto__"],["^ ","^1Q",0,"^1R",144,"^I","and__3938__auto__"]],"^21",[["^ ","^1Q",57,"^1R",135]],"^1P",[["^ ","^1Q",57,"^1R",135,"^I","cljs.core/not"]],"^1W",[["^ ","^1Q",71,"^1R",135]],"^2E",[["^ ","^1Q",71,"^1R",135,"^I","devtools.formatters.printing/already-reference?"]],"^2F",[["^ ","^1Q",125,"^1R",135,"^I","group"]]],"^2@",["^ ","^21",[["^ ","^1Q",0,"^1R",137],["^ ","^1Q",4,"^1R",137,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",138],["^ ","^1Q",0,"^1R",138],["^ ","^1Q",20,"^1R",138,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",139,"^I","or__3949__auto__"]],"^1S",[["^ ","^1Q",23,"^1R",137]],"^1W",[["^ ","^1Q",23,"^1R",137,"^I","devtools.formatters.helpers/expandable?"]],"^2C",[["^ ","^1Q",69,"^1R",137,"^I","obj"]],"^2D",[["^ ","^1Q",0,"^1R",141]],"~i34",[["^ ","^1Q",7,"^1R",141,"^I","devtools.formatters.helpers/abbreviated?"]],"^2>",[["^ ","^1Q",54,"^1R",141,"^I","group"]]],"~i50",["^ ","~i4",[["^ ","^1Q",0,"^1R",147],["^ ","^1Q",0,"^1R",150],["^ ","^1Q",0,"^1R",150]],"^20",[["^ ","^1Q",4,"^1R",147,"^I","expandable-markup"]],"^2C",[["^ ","^1Q",24,"^1R",147],["^ ","^1Q",122,"^1R",147]],"^27",[["^ ","^1Q",24,"^1R",147,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^2A",[["^ ","^1Q",70,"^1R",147,"^I","devtools.formatters.printing/build-markup"]],"^2L",[["^ ","^1Q",112,"^1R",147,"^I","markup-db"]],"~i70",[["^ ","^1Q",187,"^1R",147,"^I","group"]]],"^2:",["^ ","^20",[["^ ","^1Q",4,"^1R",148,"^I","surrogate-markup"]],"^26",[["^ ","^1Q",23,"^1R",148],["^ ","^1Q",112,"^1R",148],["^ ","^1Q",254,"^1R",148]],"^2C",[["^ ","^1Q",23,"^1R",148,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^29",[["^ ","^1Q",102,"^1R",148,"^I","markup-db"]],"~i66",[["^ ","^1Q",232,"^1R",148,"^I","obj"]],"^2O",[["^ ","^1Q",236,"^1R",148,"^I","expandable-markup"]]],"~i52",["^ ","^20",[["^ ","^1Q",4,"^1R",149,"^I","reference-markup"]],"^26",[["^ ","^1Q",23,"^1R",149],["^ ","^1Q",112,"^1R",149]],"^2C",[["^ ","^1Q",23,"^1R",149,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^29",[["^ ","^1Q",102,"^1R",149,"^I","markup-db"]],"~i62",[["^ ","^1Q",226,"^1R",149,"^I","surrogate-markup"]]],"~i53",["^ ","~i7",[["^ ","^1Q",90,"^1R",150,"^I","reference-markup"]]],"~i54",["^ ","~i4",[["^ ","^1Q",0,"^1R",152,"^I","group"]]],"~i56",["^ ","~i0",[["^ ","^1Q",0,"^1R",155],["^ ","^1Q",72,"^1R",155],["^ ","^1Q",0,"^1R",156]],"~i6",[["^ ","^1Q",0,"^1R",155,"^I","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2L",[["^ ","^1Q",152,"^1R",155,"^I","group"]],"^2T",[["^ ","^1Q",158,"^1R",155,"^I","markup-db"]],"~i64",[["^ ","^1Q",168,"^1R",155,"^I","circular?"]]],"~i57",["^ ","~i2",[["^ ","^1Q",0,"^1R",156],["^ ","^1Q",0,"^1R",157]],"~i6",[["^ ","^1Q",20,"^1R",156,"^I","circular?"]]],"^24",["^ ","~i5",[["^ ","^1Q",90,"^1R",157],["^ ","^1Q",188,"^1R",157]],"~i6",[["^ ","^1Q",90,"^1R",157,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$4"]],"^1P",[["^ ","^1Q",136,"^1R",157,"^I","devtools.formatters.printing/build-markup"]],"^22",[["^ ","^1Q",178,"^1R",157,"^I","markup-db"]],"~i55",[["^ ","^1Q",268,"^1R",157,"^I","group"]]],"~i59",["^ ","~i4",[["^ ","^1Q",0,"^1R",159,"^I","group"]]],"~i61",["^ ","~i0",[["^ ","^1Q",0,"^1R",162],["^ ","^1Q",60,"^1R",162],["^ ","^1Q",0,"^1R",163]],"~i6",[["^ ","^1Q",0,"^1R",162,"^I","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2F",[["^ ","^1Q",128,"^1R",162,"^I","group"]],"~i42",[["^ ","^1Q",134,"^1R",162,"^I","value"]],"^2L",[["^ ","^1Q",140,"^1R",162,"^I","markup-db"]]],"^2R",["^ ","~i2",[["^ ","^1Q",0,"^1R",163],["^ ","^1Q",0,"^1R",166]],"~i6",[["^ ","^1Q",20,"^1R",163],["^ ","^1Q",69,"^1R",163],["^ ","^1Q",144,"^1R",163],["^ ","^1Q",155,"^1R",163,"^I","p1__39413#"],["^ ","^1Q",0,"^1R",164]],"~i7",[["^ ","^1Q",20,"^1R",163,"^I","devtools.formatters.helpers/should-render?"]],"^2F",[["^ ","^1Q",138,"^1R",163,"^I","value"]],"^2G",[["^ ","^1Q",0,"^1R",164],["^ ","^1Q",9,"^1R",164],["^ ","^1Q",46,"^1R",164]],"^2N",[["^ ","^1Q",10,"^1R",164],["^ ","^1Q",25,"^1R",164,"^I","p1__39413#"]],"^2:",[["^ ","^1Q",10,"^1R",164,"^I","cljs.core/meta"]]],"~i63",["^ ","~i5",[["^ ","^1Q",90,"^1R",166]],"~i6",[["^ ","^1Q",90,"^1R",166,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1Q",136,"^1R",166]],"^1T",[["^ ","^1Q",136,"^1R",166,"^I","cljs.core.partial.cljs$core$IFn$_invoke$arity$2"]],"^25",[["^ ","^1Q",184,"^1R",166],["^ ","^1Q",184,"^1R",166]],"^2F",[["^ ","^1Q",284,"^1R",166,"^I","markup-db"]],"^2>",[["^ ","^1Q",295,"^1R",166]],"^2L",[["^ ","^1Q",295,"^1R",166,"^I","cljs.core/meta"]],"^2S",[["^ ","^1Q",310,"^1R",166,"^I","value"]],"^2Z",[["^ ","^1Q",318,"^1R",166,"^I","group"]]],"^2V",["^ ","~i4",[["^ ","^1Q",0,"^1R",168,"^I","group"]]],"~i77",["^ ","~i0",[["^ ","^1Q",0,"^1R",171],["^ ","^1Q",61,"^1R",171],["^ ","^1Q",0,"^1R",172]],"~i6",[["^ ","^1Q",0,"^1R",171,"^I","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"~i37",[["^ ","^1Q",130,"^1R",171,"^I","group"]],"^2G",[["^ ","^1Q",136,"^1R",171,"^I","obj"]],"^2>",[["^ ","^1Q",140,"^1R",171,"^I","markup-db"]]],"^2I",["^ ","~i2",[["^ ","^1Q",0,"^1R",172],["^ ","^1Q",0,"^1R",173],["^ ","^1Q",0,"^1R",175],["^ ","^1Q",0,"^1R",176],["^ ","^1Q",0,"^1R",178]]],"~i79",["^ ","~i4",[["^ ","^1Q",3,"^1R",172]]],"~i80",["^ ","~i6",[["^ ","^1Q",5,"^1R",172]],"^21",[["^ ","^1Q",7,"^1R",172],["^ ","^1Q",75,"^1R",172]],"^1P",[["^ ","^1Q",7,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1Q",52,"^1R",172]],"^1S",[["^ ","^1Q",52,"^1R",172,"^I","cljs.core/count"]],"^25",[["^ ","^1Q",68,"^1R",172,"^I","group"]],"^2<",[["^ ","^1Q",85,"^1R",172],["^ ","^1Q",185,"^1R",172]],"^2B",[["^ ","^1Q",85,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^1Q",130,"^1R",172],["^ ","^1Q",180,"^1R",172]],"^2A",[["^ ","^1Q",130,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1Q",174,"^1R",172,"^I","group"]],"~i60",[["^ ","^1Q",202,"^1R",172],["^ ","^1Q",302,"^1R",172]],"^2Z",[["^ ","^1Q",202,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1Q",247,"^1R",172],["^ ","^1Q",297,"^1R",172]],"^2V",[["^ ","^1Q",247,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"~i68",[["^ ","^1Q",291,"^1R",172,"^I","group"]]],"~i81",["^ ","~i6",[["^ ","^1Q",316,"^1R",172]],"^21",[["^ ","^1Q",318,"^1R",172],["^ ","^1Q",386,"^1R",172]],"^1P",[["^ ","^1Q",318,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1Q",363,"^1R",172]],"^1S",[["^ ","^1Q",363,"^1R",172,"^I","cljs.core/count"]],"^25",[["^ ","^1Q",379,"^1R",172,"^I","group"]],"^2<",[["^ ","^1Q",396,"^1R",172],["^ ","^1Q",496,"^1R",172]],"^2B",[["^ ","^1Q",396,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^1Q",441,"^1R",172],["^ ","^1Q",491,"^1R",172]],"^2A",[["^ ","^1Q",441,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1Q",485,"^1R",172,"^I","group"]],"^35",[["^ ","^1Q",513,"^1R",172],["^ ","^1Q",613,"^1R",172]],"^2Z",[["^ ","^1Q",513,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1Q",558,"^1R",172],["^ ","^1Q",608,"^1R",172]],"^2V",[["^ ","^1Q",558,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^36",[["^ ","^1Q",602,"^1R",172,"^I","group"]]],"~i82",["^ ","~i6",[["^ ","^1Q",625,"^1R",172]],"^21",[["^ ","^1Q",627,"^1R",172],["^ ","^1Q",695,"^1R",172]],"^1P",[["^ ","^1Q",627,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1Q",672,"^1R",172]],"^1S",[["^ ","^1Q",672,"^1R",172,"^I","cljs.core/count"]],"^25",[["^ ","^1Q",688,"^1R",172,"^I","group"]],"^2<",[["^ ","^1Q",705,"^1R",172],["^ ","^1Q",805,"^1R",172]],"^2B",[["^ ","^1Q",705,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2M",[["^ ","^1Q",750,"^1R",172],["^ ","^1Q",800,"^1R",172]],"^2A",[["^ ","^1Q",750,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^1Z",[["^ ","^1Q",794,"^1R",172,"^I","group"]],"^35",[["^ ","^1Q",822,"^1R",172],["^ ","^1Q",922,"^1R",172]],"^2Z",[["^ ","^1Q",822,"^1R",172,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^30",[["^ ","^1Q",867,"^1R",172],["^ ","^1Q",917,"^1R",172]],"^2V",[["^ ","^1Q",867,"^1R",172,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^36",[["^ ","^1Q",911,"^1R",172,"^I","group"]]],"~i83",["^ ","~i5",[["^ ","^1Q",90,"^1R",173],["^ ","^1Q",179,"^1R",173]],"~i6",[["^ ","^1Q",90,"^1R",173,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^1[",[["^ ","^1Q",169,"^1R",173,"^I","markup-db"]],"^2>",[["^ ","^1Q",307,"^1R",173,"^I","obj"]]],"~i85",["^ ","~i4",[["^ ","^1Q",3,"^1R",175]],"~i9",[["^ ","^1Q",5,"^1R",175],["^ ","^1Q",73,"^1R",175]],"^20",[["^ ","^1Q",5,"^1R",175,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1Q",50,"^1R",175]],"^1T",[["^ ","^1Q",50,"^1R",175,"^I","cljs.core/count"]],"^1[",[["^ ","^1Q",66,"^1R",175,"^I","group"]],"^27",[["^ ","^1Q",83,"^1R",175],["^ ","^1Q",183,"^1R",175]],"^1Y",[["^ ","^1Q",83,"^1R",175,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^1Q",128,"^1R",175],["^ ","^1Q",178,"^1R",175]],"^2D",[["^ ","^1Q",128,"^1R",175,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^32",[["^ ","^1Q",172,"^1R",175,"^I","group"]],"^2Q",[["^ ","^1Q",194,"^1R",175]],"^2S",[["^ ","^1Q",194,"^1R",175,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2X",[["^ ","^1Q",239,"^1R",175]],"^35",[["^ ","^1Q",284,"^1R",175,"^I","obj"]],"~i65",[["^ ","^1Q",299,"^1R",175],["^ ","^1Q",349,"^1R",175]],"^2P",[["^ ","^1Q",299,"^1R",175,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2O",[["^ ","^1Q",343,"^1R",175,"^I","group"]],"^34",[["^ ","^1Q",360,"^1R",175],["^ ","^1Q",460,"^1R",175]],"^37",[["^ ","^1Q",360,"^1R",175,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^39",[["^ ","^1Q",405,"^1R",175],["^ ","^1Q",455,"^1R",175]],"~i84",[["^ ","^1Q",405,"^1R",175,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2J",[["^ ","^1Q",449,"^1R",175,"^I","group"]]],"~i86",["^ ","~i5",[["^ ","^1Q",90,"^1R",176],["^ ","^1Q",140,"^1R",176]],"~i6",[["^ ","^1Q",90,"^1R",176,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^20",[["^ ","^1Q",134,"^1R",176,"^I","group"]],"^1[",[["^ ","^1Q",145,"^1R",176],["^ ","^1Q",187,"^1R",176]],"^1X",[["^ ","^1Q",145,"^1R",176,"^I","devtools.formatters.printing/build-markup"]],"^2:",[["^ ","^1Q",265,"^1R",176,"^I","obj"]],"^2U",[["^ ","^1Q",270,"^1R",176],["^ ","^1Q",320,"^1R",176]],"^2W",[["^ ","^1Q",270,"^1R",176,"^I","cljs.core.nth.cljs$core$IFn$_invoke$arity$2"]],"^2Z",[["^ ","^1Q",314,"^1R",176,"^I","group"]]],"^2J",["^ ","^20",[["^ ","^1Q",0,"^1R",178,"^I","group"]]],"~i90",["^ ","~i0",[["^ ","^1Q",0,"^1R",183],["^ ","^1Q",59,"^1R",183],["^ ","^1Q",0,"^1R",184]],"~i6",[["^ ","^1Q",0,"^1R",183,"^I","devtools.formatters.printing/post-process-printed-output"]],"^2A",[["^ ","^1Q",126,"^1R",183,"^I","output-group"]],"^2L",[["^ ","^1Q",139,"^1R",183,"^I","obj"]],"^2Q",[["^ ","^1Q",143,"^1R",183,"^I","markup-db"]],"^2R",[["^ ","^1Q",153,"^1R",183,"^I","circular?"]]],"~i91",["^ ","~i6",[["^ ","^1Q",257,"^1R",184,"^I","output-group"]]],"~i92",["^ ","~i6",[["^ ","^1Q",198,"^1R",184]],"~i7",[["^ ","^1Q",198,"^1R",184,"^I","devtools.formatters.printing/detect-edge-case-and-patch-it"]],"^32",[["^ ","^1Q",270,"^1R",184,"^I","obj"]],"^29",[["^ ","^1Q",274,"^1R",184,"^I","markup-db"]]],"~i93",["^ ","~i6",[["^ ","^1Q",135,"^1R",184]],"~i7",[["^ ","^1Q",135,"^1R",184,"^I","devtools.formatters.printing/wrap-group-in-reference-if-needed"]],"^29",[["^ ","^1Q",285,"^1R",184,"^I","obj"]],"^2K",[["^ ","^1Q",289,"^1R",184,"^I","markup-db"]]],"~i94",["^ ","~i6",[["^ ","^1Q",65,"^1R",184]],"~i7",[["^ ","^1Q",65,"^1R",184,"^I","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed"]],"^2L",[["^ ","^1Q",300,"^1R",184,"^I","markup-db"]],"^24",[["^ ","^1Q",310,"^1R",184,"^I","circular?"]]],"~i95",["^ ","~i6",[["^ ","^1Q",0,"^1R",184]],"~i7",[["^ ","^1Q",7,"^1R",184,"^I","devtools.formatters.printing/wrap-group-in-meta-if-needed"]],"^2F",[["^ ","^1Q",327,"^1R",184,"^I","obj"]],"~i40",[["^ ","^1Q",331,"^1R",184,"^I","markup-db"]]],"~i99",["^ ","~i0",[["^ ","^1Q",0,"^1R",186],["^ ","^1Q",47,"^1R",186],["^ ","^1Q",0,"^1R",187]],"~i6",[["^ ","^1Q",0,"^1R",186,"^I","devtools.formatters.printing/alt-printer-job"]],"^28",[["^ ","^1Q",102,"^1R",186,"^I","obj"]],"^26",[["^ ","^1Q",106,"^1R",186,"^I","writer"]],"^2M",[["^ ","^1Q",113,"^1R",186,"^I","opts"]]],"~i100",["^ ","~i2",[["^ ","^1Q",0,"^1R",187],["^ ","^1Q",4,"^1R",187,"^I","map__39446"],["^ ","^1Q",4,"^1R",188,"^I","map__39446"],["^ ","^1Q",21,"^1R",188],["^ ","^1Q",23,"^1R",188],["^ ","^1Q",25,"^1R",188],["^ ","^1Q",27,"^1R",188],["^ ","^1Q",28,"^1R",188,"^I","map__39446"],["^ ","^1Q",42,"^1R",188],["^ ","^1Q",50,"^1R",188],["^ ","^1Q",52,"^1R",188],["^ ","^1Q",54,"^1R",188],["^ ","^1Q",55,"^1R",188],["^ ","^1Q",55,"^1R",188,"^I","map__39446"],["^ ","^1Q",104,"^1R",188],["^ ","^1Q",115,"^1R",188],["^ ","^1Q",116,"^1R",188,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1Q",148,"^1R",188],["^ ","^1Q",148,"^1R",188,"^I","map__39446"],["^ ","^1Q",179,"^1R",188],["^ ","^1Q",184,"^1R",188],["^ ","^1Q",191,"^1R",188],["^ ","^1Q",199,"^1R",188],["^ ","^1Q",199,"^1R",188,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Q",245,"^1R",188,"^I","cljs.core/hash-map"],["^ ","^1Q",264,"^1R",188,"^I","map__39446"],["^ ","^1Q",276,"^1R",188,"^I","map__39446"],["^ ","^1Q",16,"^1R",189],["^ ","^1Q",16,"^1R",189,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Q",60,"^1R",189,"^I","map__39446"],["^ ","^1Q",75,"^1R",189],["^ ","^1Q",0,"^1R",190]],"^1W",[["^ ","^1Q",4,"^1R",189,"^I","markup-db"]],"^2C",[["^ ","^1Q",17,"^1R",187,"^I","opts"]]],"~i101",["^ ","~i4",[["^ ","^1Q",0,"^1R",190]],"~i8",[["^ ","^1Q",20,"^1R",190],["^ ","^1Q",37,"^1R",190,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",206],["^ ","^1Q",0,"^1R",206],["^ ","^1Q",20,"^1R",206,"^I","or__3949__auto__"],["^ ","^1Q",0,"^1R",207,"^I","or__3949__auto__"]],"^1P",[["^ ","^1Q",56,"^1R",190],["^ ","^1Q",73,"^1R",190],["^ ","^1Q",73,"^1R",190],["^ ","^1Q",76,"^1R",190],["^ ","^1Q",78,"^1R",190],["^ ","^1Q",86,"^1R",190],["^ ","^1Q",0,"^1R",191],["^ ","^1Q",3,"^1R",191],["^ ","^1Q",5,"^1R",191],["^ ","^1Q",16,"^1R",191],["^ ","^1Q",17,"^1R",191,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1Q",49,"^1R",191],["^ ","^1Q",0,"^1R",192],["^ ","^1Q",0,"^1R",194],["^ ","^1Q",3,"^1R",194],["^ ","^1Q",5,"^1R",194],["^ ","^1Q",0,"^1R",195],["^ ","^1Q",7,"^1R",195,"^I","cljs.core/native-satisfies?"],["^ ","^1Q",0,"^1R",197],["^ ","^1Q",0,"^1R",201],["^ ","^1Q",7,"^1R",201,"^I","cljs.core/native-satisfies?"],["^ ","^1Q",16,"^1R",203],["^ ","^1Q",20,"^1R",203,"^I","_e__38504__auto__"],["^ ","^1Q",40,"^1R",203,"^I","e39453"],["^ ","^1Q",0,"^1R",204],["^ ","^1Q",0,"^1R",204]],"^3D",[["^ ","^1Q",41,"^1R",195,"^I","devtools.format/IDevtoolsFormat"],["^ ","^1Q",41,"^1R",201,"^I","devtools.format/IDevtoolsFormat"]],"^2U",[["^ ","^1Q",79,"^1R",190,"^I","obj"],["^ ","^1Q",49,"^1R",191,"^I","obj"],["^ ","^1Q",5,"^1R",194,"^I","obj"],["^ ","^1Q",73,"^1R",195,"^I","obj"],["^ ","^1Q",73,"^1R",201,"^I","obj"]]],"~i102",["^ ","^1P",[["^ ","^1Q",0,"^1R",209],["^ ","^1Q",4,"^1R",209],["^ ","^1Q",4,"^1R",209],["^ ","^1Q",7,"^1R",209],["^ ","^1Q",9,"^1R",209],["^ ","^1Q",17,"^1R",209],["^ ","^1Q",0,"^1R",210],["^ ","^1Q",3,"^1R",210],["^ ","^1Q",5,"^1R",210],["^ ","^1Q",16,"^1R",210],["^ ","^1Q",17,"^1R",210,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1Q",49,"^1R",210],["^ ","^1Q",0,"^1R",211],["^ ","^1Q",0,"^1R",213],["^ ","^1Q",3,"^1R",213],["^ ","^1Q",5,"^1R",213],["^ ","^1Q",0,"^1R",214],["^ ","^1Q",7,"^1R",214,"^I","cljs.core/native-satisfies?"],["^ ","^1Q",0,"^1R",216],["^ ","^1Q",0,"^1R",220],["^ ","^1Q",7,"^1R",220,"^I","cljs.core/native-satisfies?"],["^ ","^1Q",16,"^1R",222],["^ ","^1Q",20,"^1R",222,"^I","_e__38504__auto__"],["^ ","^1Q",40,"^1R",222,"^I","e39455"],["^ ","^1Q",0,"^1R",223],["^ ","^1Q",0,"^1R",223]],"^3D",[["^ ","^1Q",41,"^1R",214,"^I","devtools.protocols/IFormat"],["^ ","^1Q",41,"^1R",220,"^I","devtools.protocols/IFormat"]],"^2L",[["^ ","^1Q",10,"^1R",209,"^I","obj"],["^ ","^1Q",49,"^1R",210,"^I","obj"],["^ ","^1Q",5,"^1R",213,"^I","obj"],["^ ","^1Q",68,"^1R",214,"^I","obj"],["^ ","^1Q",68,"^1R",220,"^I","obj"]]],"~i103",["^ ","~i6",[["^ ","^1Q",0,"^1R",226]],"~i7",[["^ ","^1Q",7,"^1R",226,"^I","cljs.core/-write"]],"^23",[["^ ","^1Q",24,"^1R",226,"^I","writer"]],"^25",[["^ ","^1Q",31,"^1R",226],["^ ","^1Q",120,"^1R",226]],"^1V",[["^ ","^1Q",31,"^1R",226,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2A",[["^ ","^1Q",110,"^1R",226,"^I","markup-db"]],"^2U",[["^ ","^1Q",234,"^1R",226,"^I","obj"]]],"~i104",["^ ","~i6",[["^ ","^1Q",0,"^1R",228],["^ ","^1Q",4,"^1R",228,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",229],["^ ","^1Q",0,"^1R",229],["^ ","^1Q",20,"^1R",229,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",230],["^ ","^1Q",20,"^1R",230,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",231]],"^1S",[["^ ","^1Q",4,"^1R",230,"^I","atomic-markup"]],"^27",[["^ ","^1Q",25,"^1R",228],["^ ","^1Q",114,"^1R",228]],"^1Y",[["^ ","^1Q",25,"^1R",228,"^I","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic"]],"^2G",[["^ ","^1Q",104,"^1R",228,"^I","markup-db"]],"^2Z",[["^ ","^1Q",221,"^1R",228,"^I","obj"]]],"~i105",["^ ","~i8",[["^ ","^1Q",0,"^1R",231]],"~i9",[["^ ","^1Q",7,"^1R",231,"^I","cljs.core/-write"]],"^1W",[["^ ","^1Q",24,"^1R",231,"^I","writer"]],"^28",[["^ ","^1Q",31,"^1R",231,"^I","atomic-markup"]]],"~i106",["^ ","~i8",[["^ ","^1Q",0,"^1R",233],["^ ","^1Q",0,"^1R",235]],"^23",[["^ ","^1Q",4,"^1R",233,"^I","default-impl"]],"^26",[["^ ","^1Q",19,"^1R",233],["^ ","^1Q",19,"^1R",233]],"^2G",[["^ ","^1Q",121,"^1R",233,"^I","opts"]]],"~i108",["^ ","^23",[["^ ","^1Q",4,"^1R",234,"^I","inner-opts"]],"^22",[["^ ","^1Q",17,"^1R",234]],"^27",[["^ ","^1Q",19,"^1R",234],["^ ","^1Q",98,"^1R",234]],"^1Y",[["^ ","^1Q",19,"^1R",234,"^I","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^1Q",64,"^1R",234,"^I","cljs.core/*print-level*"]],"^2@",[["^ ","^1Q",104,"^1R",234],["^ ","^1Q",155,"^1R",234],["^ ","^1Q",224,"^1R",234]],"^2N",[["^ ","^1Q",104,"^1R",234,"^I","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"^2U",[["^ ","^1Q",150,"^1R",234,"^I","opts"]],"^2I",[["^ ","^1Q",229,"^1R",234,"^I","opts"]]],"~i109",["^ ","^20",[["^ ","^1Q",0,"^1R",235]],"^21",[["^ ","^1Q",8,"^1R",235,"^I","default-impl"],["^ ","^1Q",53,"^1R",235,"^I","default-impl"],["^ ","^1Q",121,"^1R",235,"^I","default-impl"]],"^2;",[["^ ","^1Q",96,"^1R",235,"^I","obj"],["^ ","^1Q",144,"^1R",235,"^I","obj"]],"^2C",[["^ ","^1Q",100,"^1R",235,"^I","writer"],["^ ","^1Q",148,"^1R",235,"^I","writer"]],"^2A",[["^ ","^1Q",107,"^1R",235,"^I","inner-opts"],["^ ","^1Q",155,"^1R",235,"^I","inner-opts"]]],"~i111",["^ ","~i0",[["^ ","^1Q",0,"^1R",239],["^ ","^1Q",48,"^1R",239],["^ ","^1Q",0,"^1R",240]],"~i6",[["^ ","^1Q",0,"^1R",239,"^I","devtools.formatters.printing/alt-printer-impl"]],"^2;",[["^ ","^1Q",104,"^1R",239,"^I","obj"]],"^2C",[["^ ","^1Q",108,"^1R",239,"^I","writer"]],"^2A",[["^ ","^1Q",115,"^1R",239,"^I","opts"]]],"~i112",["^ ","~i2",[["^ ","^1Q",0,"^1R",240],["^ ","^1Q",4,"^1R",240,"^I","*current-state*39462"],["^ ","^1Q",0,"^1R",241],["^ ","^1Q",0,"^1R",241],["^ ","^1Q",0,"^1R",243],["^ ","^1Q",4,"^1R",243],["^ ","^1Q",10,"^1R",253],["^ ","^1Q",10,"^1R",253],["^ ","^1Q",64,"^1R",253,"^I","*current-state*39462"]],"^1P",[["^ ","^1Q",37,"^1R",240,"^I","devtools.formatters.state/*current-state*"],["^ ","^1Q",0,"^1R",241,"^I","devtools.formatters.state/*current-state*"],["^ ","^1Q",10,"^1R",253,"^I","devtools.formatters.state/*current-state*"]],"^2C",[["^ ","^1Q",54,"^1R",241]],"^27",[["^ ","^1Q",54,"^1R",241,"^I","devtools.formatters.state/get-current-state"]]],"~i113",["^ ","~i4",[["^ ","^1Q",4,"^1R",243],["^ ","^1Q",8,"^1R",243,"^I","map__39463"],["^ ","^1Q",4,"^1R",244,"^I","map__39463"],["^ ","^1Q",21,"^1R",244],["^ ","^1Q",23,"^1R",244],["^ ","^1Q",25,"^1R",244],["^ ","^1Q",27,"^1R",244],["^ ","^1Q",28,"^1R",244,"^I","map__39463"],["^ ","^1Q",42,"^1R",244],["^ ","^1Q",50,"^1R",244],["^ ","^1Q",52,"^1R",244],["^ ","^1Q",54,"^1R",244],["^ ","^1Q",55,"^1R",244],["^ ","^1Q",55,"^1R",244,"^I","map__39463"],["^ ","^1Q",104,"^1R",244],["^ ","^1Q",115,"^1R",244],["^ ","^1Q",116,"^1R",244,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1Q",148,"^1R",244],["^ ","^1Q",148,"^1R",244,"^I","map__39463"],["^ ","^1Q",179,"^1R",244],["^ ","^1Q",184,"^1R",244],["^ ","^1Q",191,"^1R",244],["^ ","^1Q",199,"^1R",244],["^ ","^1Q",199,"^1R",244,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Q",245,"^1R",244,"^I","cljs.core/hash-map"],["^ ","^1Q",264,"^1R",244,"^I","map__39463"],["^ ","^1Q",276,"^1R",244,"^I","map__39463"],["^ ","^1Q",16,"^1R",245],["^ ","^1Q",16,"^1R",245,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1Q",60,"^1R",245,"^I","map__39463"],["^ ","^1Q",75,"^1R",245],["^ ","^1Q",0,"^1R",248]],"^1U",[["^ ","^1Q",4,"^1R",245,"^I","markup-db"]],"^1Y",[["^ ","^1Q",21,"^1R",243,"^I","opts"]]],"~i114",["^ ","^20",[["^ ","^1Q",4,"^1R",246,"^I","circular?"]],"^1X",[["^ ","^1Q",22,"^1R",246]],"^25",[["^ ","^1Q",22,"^1R",246,"^I","devtools.formatters.state/is-circular?"]],"^2M",[["^ ","^1Q",67,"^1R",246,"^I","obj"]]],"~i115",["^ ","^20",[["^ ","^1Q",4,"^1R",247,"^I","inner-writer"]],"^28",[["^ ","^1Q",19,"^1R",247]],"^2;",[["^ ","^1Q",19,"^1R",247,"^I","devtools.formatters.printing/make-template-writer"]],"^2K",[["^ ","^1Q",69,"^1R",247],["^ ","^1Q",69,"^1R",247]],"^2W",[["^ ","^1Q",161,"^1R",247,"^I","opts"]]],"~i116",["^ ","~i6",[["^ ","^1Q",0,"^1R",248]],"~i7",[["^ ","^1Q",0,"^1R",248,"^I","devtools.formatters.state/push-object-to-current-history!"]],"^1Z",[["^ ","^1Q",63,"^1R",248,"^I","obj"]]],"~i117",["^ ","~i6",[["^ ","^1Q",0,"^1R",250]],"~i7",[["^ ","^1Q",0,"^1R",250,"^I","devtools.formatters.printing/alt-printer-job"]],"^28",[["^ ","^1Q",45,"^1R",250,"^I","obj"]],"^26",[["^ ","^1Q",49,"^1R",250,"^I","inner-writer"]],"^3D",[["^ ","^1Q",62,"^1R",250,"^I","opts"]]],"~i118",["^ ","~i6",[["^ ","^1Q",0,"^1R",252]],"^23",[["^ ","^1Q",7,"^1R",252,"^I","writer"]],"^25",[["^ ","^1Q",20,"^1R",252]],"^1V",[["^ ","^1Q",20,"^1R",252,"^I","devtools.formatters.printing/post-process-printed-output"]],"^2N",[["^ ","^1Q",77,"^1R",252]],"^2R",[["^ ","^1Q",77,"^1R",252,"^I","inner-writer"]],"~i76",[["^ ","^1Q",102,"^1R",252,"^I","obj"]],"^34",[["^ ","^1Q",106,"^1R",252,"^I","markup-db"]],"^3>",[["^ ","^1Q",116,"^1R",252,"^I","circular?"]]],"~i122",["^ ","~i0",[["^ ","^1Q",0,"^1R",255],["^ ","^1Q",45,"^1R",255],["^ ","^1Q",0,"^1R",256]],"~i6",[["^ ","^1Q",0,"^1R",255,"^I","devtools.formatters.printing/managed-print"]],"^25",[["^ ","^1Q",98,"^1R",255,"^I","tag"]],"^22",[["^ ","^1Q",102,"^1R",255,"^I","markup-db"]],"^2A",[["^ ","^1Q",112,"^1R",255,"^I","printer"]]],"~i123",["^ ","~i2",[["^ ","^1Q",0,"^1R",256],["^ ","^1Q",11,"^1R",257],["^ ","^1Q",54,"^1R",257],["^ ","^1Q",160,"^1R",257],["^ ","^1Q",232,"^1R",257],["^ ","^1Q",404,"^1R",257],["^ ","^1Q",13,"^1R",258],["^ ","^1Q",0,"^1R",260],["^ ","^1Q",0,"^1R",263]],"~i8",[["^ ","^1Q",4,"^1R",256,"^I","writer"]],"^1S",[["^ ","^1Q",13,"^1R",256]],"^1W",[["^ ","^1Q",13,"^1R",256,"^I","devtools.formatters.printing/make-template-writer"]],"^32",[["^ ","^1Q",63,"^1R",256,"^I","markup-db"]]],"~i124",["^ ","~i8",[["^ ","^1Q",4,"^1R",257,"^I","opts"]],"^2C",[["^ ","^1Q",114,"^1R",257,"^I","devtools.formatters.printing/alt-printer-impl"]]],"~i125",["^ ","^2C",[["^ ","^1Q",222,"^1R",257,"^I","markup-db"]]],"~i126",["^ ","^2C",[["^ ","^1Q",301,"^1R",257],["^ ","^1Q",321,"^1R",257]],"^27",[["^ ","^1Q",301,"^1R",257,"^I","devtools.prefs/pref"]]],"~i127",["^ ","^2C",[["^ ","^1Q",470,"^1R",257],["^ ","^1Q",490,"^1R",257]],"^27",[["^ ","^1Q",470,"^1R",257,"^I","devtools.prefs/pref"]]],"~i128",["^ ","~i8",[["^ ","^1Q",4,"^1R",258,"^I","job-fn"]],"^1W",[["^ ","^1Q",0,"^1R",260]],"^2E",[["^ ","^1Q",8,"^1R",260,"^I","printer"],["^ ","^1Q",48,"^1R",260,"^I","printer"],["^ ","^1Q",101,"^1R",260,"^I","printer"]],"^22",[["^ ","^1Q",86,"^1R",260,"^I","writer"],["^ ","^1Q",119,"^1R",260,"^I","writer"]],"^2B",[["^ ","^1Q",93,"^1R",260,"^I","opts"],["^ ","^1Q",126,"^1R",260,"^I","opts"]]],"~i129",["^ ","~i4",[["^ ","^1Q",0,"^1R",263],["^ ","^1Q",4,"^1R",263,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",264],["^ ","^1Q",0,"^1R",264],["^ ","^1Q",20,"^1R",264,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",265],["^ ","^1Q",32,"^1R",265,"^I","temp__5455__auto__"],["^ ","^1Q",0,"^1R",266]],"^1T",[["^ ","^1Q",4,"^1R",265,"^I","managed-print-level"]],"^2D",[["^ ","^1Q",31,"^1R",263]],"^2M",[["^ ","^1Q",31,"^1R",263,"^I","devtools.formatters.state/get-managed-print-level"]]],"~i130",["^ ","~i6",[["^ ","^1Q",0,"^1R",266],["^ ","^1Q",4,"^1R",266,"^I","*print-level*39466"],["^ ","^1Q",0,"^1R",267],["^ ","^1Q",0,"^1R",267],["^ ","^1Q",0,"^1R",269],["^ ","^1Q",4,"^1R",269],["^ ","^1Q",10,"^1R",276],["^ ","^1Q",10,"^1R",276],["^ ","^1Q",46,"^1R",276,"^I","*print-level*39466"]],"^1W",[["^ ","^1Q",41,"^1R",266,"^I","cljs.core/*print-level*"],["^ ","^1Q",0,"^1R",267,"^I","cljs.core/*print-level*"],["^ ","^1Q",10,"^1R",276,"^I","cljs.core/*print-level*"]],"^1Y",[["^ ","^1Q",36,"^1R",267,"^I","managed-print-level"]]],"~i131",["^ ","~i8",[["^ ","^1Q",4,"^1R",269],["^ ","^1Q",57,"^1R",269],["^ ","^1Q",18,"^1R",270,"^I","p1__39465#"],["^ ","^1Q",0,"^1R",271]],"~i9",[["^ ","^1Q",4,"^1R",269,"^I","devtools.formatters.state/update-current-state!"]],"^2B",[["^ ","^1Q",0,"^1R",271],["^ ","^1Q",57,"^1R",271,"^I","p1__39465#"],["^ ","^1Q",74,"^1R",271]],"^2D",[["^ ","^1Q",7,"^1R",271,"^I","devtools.formatters.state/set-managed-print-level"]]],"~i132",["^ ","~i8",[["^ ","^1Q",0,"^1R",275]],"~i9",[["^ ","^1Q",0,"^1R",275,"^I","job-fn"]]],"~i133",["^ ","~i6",[["^ ","^1Q",0,"^1R",278]],"~i7",[["^ ","^1Q",0,"^1R",278,"^I","job-fn"]]],"~i134",["^ ","~i4",[["^ ","^1Q",0,"^1R",281],["^ ","^1Q",54,"^1R",281]],"~i5",[["^ ","^1Q",7,"^1R",281,"^I","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"]],"^1T",[["^ ","^1Q",137,"^1R",281]],"^23",[["^ ","^1Q",137,"^1R",281,"^I","devtools.prefs/pref"]],"^1[",[["^ ","^1Q",157,"^1R",281,"^I","tag"]],"^22",[["^ ","^1Q",170,"^1R",281]],"^32",[["^ ","^1Q",170,"^1R",281,"^I","writer"]]],"~i138",["^ ","~i0",[["^ ","^1Q",0,"^1R",283],["^ ","^1Q",56,"^1R",283],["^ ","^1Q",0,"^1R",284]],"~i6",[["^ ","^1Q",0,"^1R",283,"^I","devtools.formatters.printing/managed-print-via-writer"]],"^2B",[["^ ","^1Q",120,"^1R",283,"^I","value"]],"^2=",[["^ ","^1Q",126,"^1R",283,"^I","tag"]],"^2[",[["^ ","^1Q",130,"^1R",283,"^I","markup-db"]]],"~i139",["^ ","~i2",[["^ ","^1Q",0,"^1R",284]],"~i3",[["^ ","^1Q",7,"^1R",284,"^I","devtools.formatters.printing/managed-print"]],"^2E",[["^ ","^1Q",50,"^1R",284,"^I","tag"]],"^25",[["^ ","^1Q",54,"^1R",284,"^I","markup-db"]],"^2<",[["^ ","^1Q",64,"^1R",284],["^ ","^1Q",0,"^1R",285]],"^2F",[["^ ","^1Q",75,"^1R",284,"^I","writer"]],"^2G",[["^ ","^1Q",82,"^1R",284,"^I","opts"]]],"~i140",["^ ","^2D",[["^ ","^1Q",0,"^1R",285],["^ ","^1Q",31,"^1R",285]],"^2M",[["^ ","^1Q",7,"^1R",285,"^I","cljs.core/pr-seq-writer"]],"^2@",[["^ ","^1Q",114,"^1R",285,"^I","value"]],"^2U",[["^ ","^1Q",128,"^1R",285,"^I","writer"]],"^30",[["^ ","^1Q",135,"^1R",285,"^I","opts"]]],"~i142",["^ ","~i0",[["^ ","^1Q",0,"^1R",288],["^ ","^1Q",58,"^1R",288],["^ ","^1Q",0,"^1R",289]],"~i6",[["^ ","^1Q",0,"^1R",288,"^I","devtools.formatters.printing/managed-print-via-protocol"]],"^2M",[["^ ","^1Q",124,"^1R",288,"^I","value"]],"^3D",[["^ ","^1Q",130,"^1R",288,"^I","tag"]],"^2H",[["^ ","^1Q",134,"^1R",288,"^I","markup-db"]]],"~i143",["^ ","~i2",[["^ ","^1Q",0,"^1R",289]],"~i3",[["^ ","^1Q",7,"^1R",289,"^I","devtools.formatters.printing/managed-print"]],"^2E",[["^ ","^1Q",50,"^1R",289,"^I","tag"]],"^25",[["^ ","^1Q",54,"^1R",289,"^I","markup-db"]],"^2<",[["^ ","^1Q",64,"^1R",289],["^ ","^1Q",0,"^1R",290]],"^2F",[["^ ","^1Q",75,"^1R",289,"^I","writer"]],"^2G",[["^ ","^1Q",82,"^1R",289,"^I","opts"]]],"~i144",["^ ","^2D",[["^ ","^1Q",0,"^1R",290]],"^2M",[["^ ","^1Q",7,"^1R",290,"^I","cljs.core/-pr-writer"]],"^2K",[["^ ","^1Q",28,"^1R",290,"^I","value"]],"^2:",[["^ ","^1Q",34,"^1R",290,"^I","writer"]],"^24",[["^ ","^1Q",41,"^1R",290,"^I","opts"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1533155358000],["^1H","devtools/formatters/printing.cljs"],[1533155358000,"^U","^T","^O","^P","^Q","^R","^S"],["^4B","^T"],[1533155342000],["^1H","devtools/formatters/helpers.cljs"],[1533155358000,"^U","^T","^O","~$devtools.munging","^P","^Q"],["^1H","goog/math/math.js"],[1533155346000,"^U","~$goog.array","~$goog.asserts"],["^1H","goog/array/array.js"],[1533155346000,"^U","^4F"],["^1H","goog/debug/error.js"],[1533155346000,"^U"],["^1H","goog/dom/nodetype.js"],[1533155346000,"^U"],["^1H","goog/object/object.js"],[1533155346000,"^U"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^1H","goog/math/long.js"],[1533155346000,"^U","^4F","~$goog.reflect"],["^1H","goog/functions/functions.js"],[1533155346000,"^U"],["^1H","devtools/prefs.cljs"],[1533155358000,"^U","^T","^4C"],["^1H","goog/structs/map.js"],[1533155346000,"^U","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^4B","^F"],[1533155358000],["^1H","devtools/munging.cljs"],[1533155358000,"^U","^T","~$clojure.string","~$devtools.context","^4K","~$goog.string.StringBuffer"],["^1H","goog/asserts/asserts.js"],[1533155346000,"^U","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1H","goog/uri/uri.js"],[1533155346000,"^U","^4E","^4F","^4Q","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1H","goog/base.js"],[1533155346000],["^1H","goog/structs/structs.js"],[1533155346000,"^U","^4E","^4K"],["^1H","clojure/string.cljs"],[1533155342000,"^U","^T","^4Q","^4N"],["^1H","devtools/formatters/state.cljs"],[1533155358000,"^U","^T"],["^1H","goog/string/string.js"],[1533155346000,"^U"],["^4B","^4D"],[1533155358000],["^1H","goog/reflect/reflect.js"],[1533155346000,"^U"],["^1H","goog/string/stringbuffer.js"],[1533155346000,"^U"],["^1H","goog/iter/iter.js"],[1533155346000,"^U","^4E","^4F","~$goog.functions","~$goog.math"],["^1H","devtools/defaults.cljs"],[1533155358000,"^U","^T"],["^4B","^O"],[1533155358000],["^1H","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^4Q","^4K","^4E","~$goog.Uri","^4N"],["^1H","devtools/context.cljs"],[1533155358000,"^U","^T"],["^1H","goog/math/integer.js"],[1533155346000,"^U"],["^1H","devtools/format.cljs"],[1533155358000,"^U","^T","^4M"],["^1H","goog/uri/utils.js"],[1533155346000,"^U","^4E","^4F","^4Q"],["^1H","devtools/protocols.cljs"],[1533155358000,"^U","^T"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["get-group","merge"]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U"],"^V",["^H",["^W","^X"]],"~:shadow/js-access-global",["^H",["Error"]],"^Y",["^ ","^Z","^Q","^[","^S","^10","^Q","^11","^P","^12","^R","^13","^R","^14","^Q","^15","^S","^16","^R","^17","^S","^18","^O","^19","^R","^1:","^R","^1;","^S","^1<","^Q","^1=","^R","^1>","^S","^1?","^R"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^H",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1A",["~$quote",["^1A",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^H",["^57"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^56",["^H",["^57","^58"]],"^I","~$devtools.formatters.printing/->TemplateWriter","~:variadic",false,"^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1A",[["^5=","^5>"]]],"~:protocol-impl",null,"~:arglists-meta",["^1A",[null,null]],"^8",1,"^59","^5:","^7",31,"^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^5;",["^1A",["^5<",["^1A",[["^5=","^5>"]]]]],"^5?",["^H",["^57"]],"^5@","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^5;",["^1A",["^5<",["^1A",[["~$obj","~$writer","~$opts"]]]]]],"^I","~$devtools.formatters.printing/alt-printer-impl","^5B",false,"^6","devtools/formatters/printing.cljs","^:",23,"^5C",["^1A",[["^5I","^5J","^5K"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",112,"^9",112,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5I","^5J","^5K"]]]]]],"~$markup?",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^5;",["^1A",["^5<",["^1A",[["~$value"]]]]]],"^I","~$devtools.formatters.printing/markup?","^5B",false,"^6","devtools/formatters/printing.cljs","^:",14,"^5C",["^1A",[["^5N"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",13,"^9",13,"^5F",1,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5N"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^5;",["^1A",["^5<",["^1A",[["^5=","^5N","^5>"]]]]]],"^I","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","^5B",false,"^6","devtools/formatters/printing.cljs","^:",35,"^5C",["^1A",[["^5=","^5N","^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",62,"^9",62,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5=","^5N","^5>"]]]]]],"~$mark-as-markup",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^5;",["^1A",["^5<",["^1A",[["^5N"]]]]]],"^I","~$devtools.formatters.printing/mark-as-markup","^5B",false,"^6","devtools/formatters/printing.cljs","^:",21,"^5C",["^1A",[["^5N"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",16,"^9",16,"^5F",1,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5N"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^5;",["^1A",["^5<",["^1A",[["^5=","^5I","^5>"]]]]]],"^I","~$devtools.formatters.printing/detect-edge-case-and-patch-it","^5B",false,"^6","devtools/formatters/printing.cljs","^:",36,"^5C",["^1A",[["^5=","^5I","^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",78,"^9",78,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5=","^5I","^5>"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^5;",["^1A",["^5<",["^1A",[["^5=","^5I","^5>"]]]]]],"^I","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","^5B",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5C",["^1A",[["^5=","^5I","^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",48,"^9",48,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5=","^5I","^5>"]]]]]],"~$managed-print-via-writer",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^5;",["^1A",["^5<",["^1A",[["^5N","~$tag","^5>"]]]]]],"^I","~$devtools.formatters.printing/managed-print-via-writer","^5B",false,"^6","devtools/formatters/printing.cljs","^:",31,"^5C",["^1A",[["^5N","^5Y","^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",139,"^9",139,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5N","^5Y","^5>"]]]]]],"~$already-reference?",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^5;",["^1A",["^5<",["^1A",[["^5="]]]]]],"^I","~$devtools.formatters.printing/already-reference?","^5B",false,"^6","devtools/formatters/printing.cljs","^:",25,"^5C",["^1A",[["^5="]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",44,"^9",44,"^5F",1,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5="]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^56",["^H",["^57","^58"]],"^I","~$devtools.formatters.printing/TemplateWriter","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^5?",["^H",["^57"]]],"~$wrap-value-as-reference-if-needed",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^5;",["^1A",["^5<",["^1A",[["^5>","^5N"]]]]]],"^I","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","^5B",false,"^6","devtools/formatters/printing.cljs","^:",40,"^5C",["^1A",[["^5>","^5N"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",24,"^9",24,"^5F",2,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5>","^5N"]]]]]],"~$managed-print-via-protocol",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^5;",["^1A",["^5<",["^1A",[["^5N","^5Y","^5>"]]]]]],"^I","~$devtools.formatters.printing/managed-print-via-protocol","^5B",false,"^6","devtools/formatters/printing.cljs","^:",33,"^5C",["^1A",[["^5N","^5Y","^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",143,"^9",143,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5N","^5Y","^5>"]]]]]],"~$alt-printer-job",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^5;",["^1A",["^5<",["^1A",[["^5I","^5J","^5K"]]]]]],"^I","~$devtools.formatters.printing/alt-printer-job","^5B",false,"^6","devtools/formatters/printing.cljs","^:",22,"^5C",["^1A",[["^5I","^5J","^5K"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",100,"^9",100,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5I","^5J","^5K"]]]]]],"~$make-template-writer",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^5;",["^1A",["^5<",["^1A",[["^5>"]]]]]],"^I","~$devtools.formatters.printing/make-template-writer","^5B",false,"^6","devtools/formatters/printing.cljs","^:",27,"^5C",["^1A",[["^5>"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",39,"^9",39,"^5F",1,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5>"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^5;",["^1A",["^5<",["^1A",[["^5=","^5>","~$circular?"]]]]]],"^I","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","^5B",false,"^6","devtools/formatters/printing.cljs","^:",47,"^5C",["^1A",[["^5=","^5>","^6A"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",57,"^9",57,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5=","^5>","^6A"]]]]]],"~$managed-print",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^5;",["^1A",["^5<",["^1A",[["^5Y","^5>","~$printer"]]]]]],"^I","~$devtools.formatters.printing/managed-print","^5B",false,"^6","devtools/formatters/printing.cljs","^:",20,"^5C",["^1A",[["^5Y","^5>","^6D"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",123,"^9",123,"^5F",3,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^5Y","^5>","^6D"]]]]]],"~$build-markup",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^5;",["^1A",["^5<",["^1A",[["^5>","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5B",true,"^5F",2,"^5C",[["^1A",["^5>","^6G","^6H"]]],"^5;",["^1A",[["^5>","^6G","~$&","^6H"]]],"^5E",["^1A",[null]]]],"^I","~$devtools.formatters.printing/build-markup","^5B",true,"^6","devtools/formatters/printing.cljs","^:",19,"^6I",["^ ","^5B",true,"^5F",2,"^5C",[["^1A",["^5>","^6G","^6H"]]],"^5;",["^1A",[["^5>","^6G","~$&","^6H"]]],"^5E",["^1A",[null]]],"^5C",[["^1A",["^5>","^6G","^6H"]]],"^5D",null,"^5E",["^1A",[null]],"^8",1,"^7",19,"^9",19,"^5F",2,"^5G",true,"^5;",["^1A",[["^5>","^6G","~$&","^6H"]]]],"~$post-process-printed-output",["^ ","^55",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^5;",["^1A",["^5<",["^1A",[["~$output-group","^5I","^5>","^6A"]]]]]],"^I","~$devtools.formatters.printing/post-process-printed-output","^5B",false,"^6","devtools/formatters/printing.cljs","^:",34,"^5C",["^1A",[["^6L","^5I","^5>","^6A"]]],"^5D",null,"^5E",["^1A",[null,null]],"^8",1,"^7",91,"^9",91,"^5F",4,"^5G",true,"^5;",["^1A",["^5<",["^1A",[["^6L","^5I","^5>","^6A"]]]]]]],"^X",["^ ","^F","^F","^T","^T","^O","^O"],"~:cljs.analyzer/constants",["^ ","^V",["^H",["~:render-metas","~:else","~:max-header-elements","^5=","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^5>","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^75","^6W","^5=","^72","^5>","^70","^6T","^71","^6Y","^6[","^6O","^6S","^6U","^6P","^6V","^74","^6R","^6Z","^73","^6X","^6Q"]],"^1D",["^ ","^X",["^H",[]],"^W",["^H",[]]],"^1E",["^ "],"^1F",["^U","^T","^O","^P","^Q","^R","^S"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4A",[["^79","~:static-fns"],true,["^79","~:elide-asserts"],false,["^79","~:optimize-constants"],null,["^79","~:external-config"],null,["^79","~:tooling-config"],null,["^79","~:emit-constants"],null,["^79","~:infer-externs"],true,["^79","^1M"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^79","~:fn-invoke-direct"],null,["^79","^1O"],"/dev/null"]]]