["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Table/defaultCellDataGetter.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter=function(b,e,a,f,c,m){Object.defineProperty(c,\"__esModule\",{value:!0});c.default=function(a){var b=a.dataKey;a=a.rowData;return\"function\"===typeof a.get?a.get(b):a[b]};a(\"module$node_modules$react_virtualized$dist$commonjs$Table$types\")}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defaultCellDataGetter;\n\nvar _types = require('./types');\n\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nfunction defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Table$types","~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1537815743287,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,gFAAA,CAAoG,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAGjKC,MAAAC,eAAA,CAAsBH,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,EAAAK,QAAA,CASAC,QAA8B,CAACC,CAAD,CAAO,CAAA,IAC/BC,EAAUD,CAAAC,QACVC,EAAAA,CAAUF,CAAAE,QAEd,OAA2B,UAA3B,GAAI,MAAOA,EAAAC,IAAX,CACSD,CAAAC,IAAA,CAAYF,CAAZ,CADT,CAGSC,CAAA,CAAQD,CAAR,CAP0B,CAPxBV,EAAA,CAAQ,iEAAR,CARoJ;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Table/defaultCellDataGetter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Table$defaultCellDataGetter\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = defaultCellDataGetter;\\n\\nvar _types = require('./types');\\n\\n/**\\n * Default accessor for returning a cell value for a given attribute.\\n * This function expects to operate on either a vanilla Object or an Immutable Map.\\n * You should override the column's cellDataGetter if your data is some other type of object.\\n */\\nfunction defaultCellDataGetter(_ref) {\\n  var dataKey = _ref.dataKey,\\n      rowData = _ref.rowData;\\n\\n  if (typeof rowData.get === 'function') {\\n    return rowData.get(dataKey);\\n  } else {\\n    return rowData[dataKey];\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"default\",\"defaultCellDataGetter\",\"_ref\",\"dataKey\",\"rowData\",\"get\"]\n}\n"]