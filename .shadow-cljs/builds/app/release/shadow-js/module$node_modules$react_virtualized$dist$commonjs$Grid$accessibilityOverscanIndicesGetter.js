["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Grid$accessibilityOverscanIndicesGetter=function(b,e,a,f,c,m){Object.defineProperty(c,\"__esModule\",{value:!0});c.SCROLL_DIRECTION_VERTICAL=c.SCROLL_DIRECTION_HORIZONTAL=c.SCROLL_DIRECTION_FORWARD=c.SCROLL_DIRECTION_BACKWARD=void 0;c.default=function(a){var b=a.cellCount,c=a.overscanCellsCount,e=a.scrollDirection,f=a.startIndex;a=a.stopIndex;c=Math.max(1,c);return e===d?{overscanStartIndex:Math.max(0,f-1),overscanStopIndex:Math.min(b-\n1,a+c)}:{overscanStartIndex:Math.max(0,f-c),overscanStopIndex:Math.min(b-1,a+1)}};a(\"module$node_modules$react_virtualized$dist$commonjs$Grid$types\");c.SCROLL_DIRECTION_BACKWARD=-1;var d=c.SCROLL_DIRECTION_FORWARD=1;c.SCROLL_DIRECTION_HORIZONTAL=\"horizontal\";c.SCROLL_DIRECTION_VERTICAL=\"vertical\"}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Grid$accessibilityOverscanIndicesGetter\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = undefined;\nexports.default = defaultOverscanIndicesGetter;\n\nvar _types = require('./types');\n\nvar SCROLL_DIRECTION_BACKWARD = exports.SCROLL_DIRECTION_BACKWARD = -1;\n\nvar SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_FORWARD = 1;\n\nvar SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nvar SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Grid$types","~$shadow.js"]],"~:properties",["^5",["SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","overscanStartIndex","__esModule","value","overscanStopIndex","default"]],"~:compiled-at",1537815743262,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Grid$accessibilityOverscanIndicesGetter.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,4FAAA,CAAgH,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAG7KC,MAAAC,eAAA,CAAsBH,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,EAAAK,0BAAA,CAAoCL,CAAAM,4BAApC,CAA0EN,CAAAO,yBAA1E,CAA6GP,CAAAQ,0BAA7G,CAAiJC,IAAAA,EACjJT,EAAAU,QAAA,CAgBAC,QAAqC,CAACC,CAAD,CAAO,CAAA,IACtCC,EAAYD,CAAAC,UAD0B,CAEtCC,EAAqBF,CAAAE,mBAFiB,CAGtCC,EAAkBH,CAAAG,gBAHoB,CAItCC,EAAaJ,CAAAI,WACbC,EAAAA,CAAYL,CAAAK,UAKhBH,EAAA,CAAqBI,IAAAC,IAAA,CAAS,CAAT,CAAYL,CAAZ,CAErB,OAAIC,EAAJ,GAAwBR,CAAxB,CACS,CACLa,mBAAoBF,IAAAC,IAAA,CAAS,CAAT,CAAYH,CAAZ,CAAyB,CAAzB,CADf,CAELK,kBAAmBH,IAAAI,IAAA,CAAST,CAAT;AAAqB,CAArB,CAAwBI,CAAxB,CAAoCH,CAApC,CAFd,CADT,CAMS,CACLM,mBAAoBF,IAAAC,IAAA,CAAS,CAAT,CAAYH,CAAZ,CAAyBF,CAAzB,CADf,CAELO,kBAAmBH,IAAAI,IAAA,CAAST,CAAT,CAAqB,CAArB,CAAwBI,CAAxB,CAAoC,CAApC,CAFd,CAlBiC,CAd/BnB,EAAA,CAAQ,gEAAR,CAEmBE,EAAAQ,0BAAA,CAAqC,EAErE,KAAID,EAA2BP,CAAAO,yBAA3BA,CAA8D,CAEhCP,EAAAM,4BAAA,CAAsC,YACxCN,EAAAK,0BAAA,CAAoC,UAhByG;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Grid$accessibilityOverscanIndicesGetter\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = undefined;\\nexports.default = defaultOverscanIndicesGetter;\\n\\nvar _types = require('./types');\\n\\nvar SCROLL_DIRECTION_BACKWARD = exports.SCROLL_DIRECTION_BACKWARD = -1;\\n\\nvar SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_FORWARD = 1;\\n\\nvar SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\\nvar SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_VERTICAL = 'vertical';\\n\\n/**\\n * Calculates the number of cells to overscan before and after a specified range.\\n * This function ensures that overscanning doesn't exceed the available cells.\\n */\\n\\nfunction defaultOverscanIndicesGetter(_ref) {\\n  var cellCount = _ref.cellCount,\\n      overscanCellsCount = _ref.overscanCellsCount,\\n      scrollDirection = _ref.scrollDirection,\\n      startIndex = _ref.startIndex,\\n      stopIndex = _ref.stopIndex;\\n\\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\\n  // For more info see issues #625\\n  overscanCellsCount = Math.max(1, overscanCellsCount);\\n\\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\\n    return {\\n      overscanStartIndex: Math.max(0, startIndex - 1),\\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\\n    };\\n  } else {\\n    return {\\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\\n    };\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"SCROLL_DIRECTION_VERTICAL\",\"SCROLL_DIRECTION_HORIZONTAL\",\"SCROLL_DIRECTION_FORWARD\",\"SCROLL_DIRECTION_BACKWARD\",\"undefined\",\"default\",\"defaultOverscanIndicesGetter\",\"_ref\",\"cellCount\",\"overscanCellsCount\",\"scrollDirection\",\"startIndex\",\"stopIndex\",\"Math\",\"max\",\"overscanStartIndex\",\"overscanStopIndex\",\"min\"]\n}\n"]