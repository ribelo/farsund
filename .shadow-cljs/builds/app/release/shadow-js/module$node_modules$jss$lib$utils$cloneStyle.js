["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/jss/lib/utils/cloneStyle.js"],"~:js","shadow$provide.module$node_modules$jss$lib$utils$cloneStyle=function(b,e,a,f,c,m){function d(a){if(null==a)return a;var b=\"undefined\"===typeof a?\"undefined\":k(a);if(\"string\"===b||\"number\"===b||\"function\"===b)return a;if(h(a))return a.map(d);if((0,l[\"default\"])(a))return a;b={};for(var c in a){var g=a[c];\"object\"===(\"undefined\"===typeof g?\"undefined\":k(g))?b[c]=d(g):b[c]=g}return b}Object.defineProperty(c,\"__esModule\",{value:!0});var k=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?\nfunction(a){return typeof a}:function(a){return a&&\"function\"===typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?\"symbol\":typeof a};c[\"default\"]=d;var l=(b=a(\"module$node_modules$jss$lib$utils$isObservable\"))&&b.__esModule?b:{\"default\":b},h=Array.isArray}","~:source","shadow$provide[\"module$node_modules$jss$lib$utils$cloneStyle\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports['default'] = cloneStyle;\n\nvar _isObservable = require('./isObservable');\n\nvar _isObservable2 = _interopRequireDefault(_isObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar isArray = Array.isArray;\nfunction cloneStyle(style) {\n  // Support empty values in case user ends up with them by accident.\n  if (style == null) return style;\n\n  // Support string value for SimpleRule.\n  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);\n\n  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {\n    return style;\n  }\n\n  // Support array for FontFaceRule.\n  if (isArray(style)) return style.map(cloneStyle);\n\n  // Support Observable styles.  Observables are immutable, so we don't need to\n  // copy them.\n  if ((0, _isObservable2['default'])(style)) return style;\n\n  var newStyle = {};\n  for (var name in style) {\n    var value = style[name];\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      newStyle[name] = cloneStyle(value);\n      continue;\n    }\n    newStyle[name] = value;\n  }\n\n  return newStyle;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$jss$lib$utils$isObservable"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1537815743022,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$jss$lib$utils$cloneStyle.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAkB9HC,QAASA,EAAU,CAACC,CAAD,CAAQ,CAEzB,GAAa,IAAb,EAAIA,CAAJ,CAAmB,MAAOA,EAG1B,KAAIC,EAA+B,WAAjB,GAAA,MAAOD,EAAP,CAA+B,WAA/B,CAA6CE,CAAA,CAAQF,CAAR,CAE/D,IAAoB,QAApB,GAAIC,CAAJ,EAAgD,QAAhD,GAAgCA,CAAhC,EAA4E,UAA5E,GAA4DA,CAA5D,CACE,MAAOD,EAIT,IAAIG,CAAA,CAAQH,CAAR,CAAJ,CAAoB,MAAOA,EAAAI,IAAA,CAAUL,CAAV,CAI3B,IAAI,CAAC,CAAA,CAAGM,CAAA,CAAe,SAAf,CAAJ,EAA+BL,CAA/B,CAAJ,CAA2C,MAAOA,EAE9CM,EAAAA,CAAW,EACf,KAAKC,IAAIA,CAAT,GAAiBP,EAAjB,CAAwB,CACtB,IAAIQ,EAAQR,CAAA,CAAMO,CAAN,CAC0D,SAAtE,IAAsB,WAAjB,GAAA,MAAOC,EAAP,CAA+B,WAA/B,CAA6CN,CAAA,CAAQM,CAAR,CAAlD,EACEF,CAAA,CAASC,CAAT,CADF,CACmBR,CAAA,CAAWS,CAAX,CADnB,CAIAF,CAAA,CAASC,CAAT,CAJA,CAIiBC,CANK,CASxB,MAAOF,EA5BkB,CAf3BG,MAAAC,eAAA,CAAsBb,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CW,MAAO,CAAA,CADoC,CAA7C,CAIA,KAAIN,EAA4B,UAAlB,GAAA,MAAOS,OAAP,EAA2D,QAA3D,GAAgC,MAAOA,OAAAC,SAAvC;AAAsE,QAAS,CAACC,CAAD,CAAM,CAAE,MAAO,OAAOA,EAAhB,CAArF,CAA8G,QAAS,CAACA,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAyB,UAAzB,GAAO,MAAOF,OAAd,EAAuCE,CAAAC,YAAvC,GAA2DH,MAA3D,EAAqEE,CAArE,GAA6EF,MAAAI,UAA7E,CAAgG,QAAhG,CAA2G,MAAOF,EAA3H,CAE3IhB,EAAA,CAAQ,SAAR,CAAA,CAAqBE,CAIrB,KAAIM,EAE0C,CAJ1CW,CAI0C,CAJ1BrB,CAAA,CAAQ,gDAAR,CAI0B,GAFFqB,CAESC,WAAP,CAFFD,CAEE,CAA8B,CAAE,UAFlCA,CAEgC,CAF5E,CAIIb,EAAUe,KAAAf,QAjBgH;\",\n\"sources\":[\"node_modules/jss/lib/utils/cloneStyle.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$jss$lib$utils$cloneStyle\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nexports['default'] = cloneStyle;\\n\\nvar _isObservable = require('./isObservable');\\n\\nvar _isObservable2 = _interopRequireDefault(_isObservable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\\n\\nvar isArray = Array.isArray;\\nfunction cloneStyle(style) {\\n  // Support empty values in case user ends up with them by accident.\\n  if (style == null) return style;\\n\\n  // Support string value for SimpleRule.\\n  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);\\n\\n  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {\\n    return style;\\n  }\\n\\n  // Support array for FontFaceRule.\\n  if (isArray(style)) return style.map(cloneStyle);\\n\\n  // Support Observable styles.  Observables are immutable, so we don't need to\\n  // copy them.\\n  if ((0, _isObservable2['default'])(style)) return style;\\n\\n  var newStyle = {};\\n  for (var name in style) {\\n    var value = style[name];\\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\\n      newStyle[name] = cloneStyle(value);\\n      continue;\\n    }\\n    newStyle[name] = value;\\n  }\\n\\n  return newStyle;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"cloneStyle\",\"style\",\"typeOfStyle\",\"_typeof\",\"isArray\",\"map\",\"_isObservable2\",\"newStyle\",\"name\",\"value\",\"Object\",\"defineProperty\",\"Symbol\",\"iterator\",\"obj\",\"constructor\",\"prototype\",\"_isObservable\",\"__esModule\",\"Array\"]\n}\n"]