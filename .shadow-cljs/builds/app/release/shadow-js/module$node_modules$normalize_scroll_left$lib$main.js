["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/normalize-scroll-left/lib/main.js"],"~:js","shadow$provide.module$node_modules$normalize_scroll_left$lib$main=function(b,e,a,f,c,m){function d(){if(l)return l;if(!k||!window.document.body)return\"indeterminate\";var a=window.document.createElement(\"div\");a.appendChild(document.createTextNode(\"ABCD\"));a.dir=\"rtl\";a.style.fontSize=\"14px\";a.style.width=\"4px\";a.style.height=\"1px\";a.style.position=\"absolute\";a.style.top=\"-1000px\";a.style.overflow=\"scroll\";document.body.appendChild(a);l=\"reverse\";0<a.scrollLeft?l=\"default\":(a.scrollLeft=1,0===a.scrollLeft&&\n(l=\"negative\"));document.body.removeChild(a);return l}Object.defineProperty(c,\"__esModule\",{value:!0});var k=!(\"undefined\"===typeof window||!window.document||!window.document.createElement),l;c._setScrollType=function(a){l=a};c.detectScrollType=d;c.getNormalizedScrollLeft=function(a,b){var c=a.scrollLeft;if(\"rtl\"!==b)return c;b=d();if(\"indeterminate\"===b)return Number.NaN;switch(b){case \"negative\":return a.scrollWidth-a.clientWidth+c;case \"reverse\":return a.scrollWidth-a.clientWidth-c}return c};c.setNormalizedScrollLeft=\nfunction(a,b,c){if(\"rtl\"!==c)a.scrollLeft=b;else if(c=d(),\"indeterminate\"!==c)switch(c){case \"negative\":a.scrollLeft=a.clientWidth-a.scrollWidth+b;break;case \"reverse\":a.scrollLeft=a.scrollWidth-a.clientWidth-b;break;default:a.scrollLeft=b}}}","~:source","shadow$provide[\"module$node_modules$normalize_scroll_left$lib$main\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\r\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\nvar cachedType;\r\nfunction _setScrollType(type) {\r\n    cachedType = type;\r\n}\r\nexports._setScrollType = _setScrollType;\r\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\nfunction detectScrollType() {\r\n    if (cachedType) {\r\n        return cachedType;\r\n    }\r\n    if (!inDOM || !window.document.body) {\r\n        return 'indeterminate';\r\n    }\r\n    var dummy = window.document.createElement('div');\r\n    dummy.appendChild(document.createTextNode('ABCD'));\r\n    dummy.dir = 'rtl';\r\n    dummy.style.fontSize = '14px';\r\n    dummy.style.width = '4px';\r\n    dummy.style.height = '1px';\r\n    dummy.style.position = 'absolute';\r\n    dummy.style.top = '-1000px';\r\n    dummy.style.overflow = 'scroll';\r\n    document.body.appendChild(dummy);\r\n    cachedType = 'reverse';\r\n    if (dummy.scrollLeft > 0) {\r\n        cachedType = 'default';\r\n    }\r\n    else {\r\n        dummy.scrollLeft = 1;\r\n        if (dummy.scrollLeft === 0) {\r\n            cachedType = 'negative';\r\n        }\r\n    }\r\n    document.body.removeChild(dummy);\r\n    return cachedType;\r\n}\r\nexports.detectScrollType = detectScrollType;\r\n// Based on https://stackoverflow.com/a/24394376\r\nfunction getNormalizedScrollLeft(element, direction) {\r\n    var scrollLeft = element.scrollLeft;\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        return scrollLeft;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return Number.NaN;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            return element.scrollWidth - element.clientWidth + scrollLeft;\r\n        case 'reverse':\r\n            return element.scrollWidth - element.clientWidth - scrollLeft;\r\n    }\r\n    return scrollLeft;\r\n}\r\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\r\nfunction setNormalizedScrollLeft(element, scrollLeft, direction) {\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        element.scrollLeft = scrollLeft;\r\n        return;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n            break;\r\n        case 'reverse':\r\n            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\r\n            break;\r\n        default:\r\n            element.scrollLeft = scrollLeft;\r\n            break;\r\n    }\r\n}\r\nexports.setNormalizedScrollLeft = setNormalizedScrollLeft;\r\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["width","top","height","getNormalizedScrollLeft","scrollLeft","__esModule","position","detectScrollType","value","fontSize","dir","setNormalizedScrollLeft","overflow","_setScrollType"]],"~:compiled-at",1537815743204,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$normalize_scroll_left$lib$main.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAWpIC,QAASA,EAAgB,EAAG,CACxB,GAAIC,CAAJ,CACI,MAAOA,EAEX,IAAI,CAACC,CAAL,EAAc,CAACC,MAAAC,SAAAC,KAAf,CACI,MAAO,eAEX,KAAIC,EAAQH,MAAAC,SAAAG,cAAA,CAA8B,KAA9B,CACZD,EAAAE,YAAA,CAAkBJ,QAAAK,eAAA,CAAwB,MAAxB,CAAlB,CACAH,EAAAI,IAAA,CAAY,KACZJ,EAAAK,MAAAC,SAAA,CAAuB,MACvBN,EAAAK,MAAAE,MAAA,CAAoB,KACpBP,EAAAK,MAAAG,OAAA,CAAqB,KACrBR,EAAAK,MAAAI,SAAA,CAAuB,UACvBT,EAAAK,MAAAK,IAAA,CAAkB,SAClBV,EAAAK,MAAAM,SAAA,CAAuB,QACvBb,SAAAC,KAAAG,YAAA,CAA0BF,CAA1B,CACAL,EAAA,CAAa,SACU,EAAvB,CAAIK,CAAAY,WAAJ,CACIjB,CADJ,CACiB,SADjB,EAIIK,CAAAY,WACA,CADmB,CACnB,CAAyB,CAAzB,GAAIZ,CAAAY,WAAJ;CACIjB,CADJ,CACiB,UADjB,CALJ,CASAG,SAAAC,KAAAc,YAAA,CAA0Bb,CAA1B,CACA,OAAOL,EA5BiB,CAT5BmB,MAAAC,eAAA,CAAsBvB,CAAtB,CAA+B,YAA/B,CAA6C,CAAEwB,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIpB,EAAQ,EAAqB,WAArB,GAAG,MAAOC,OAAV,EAAoCC,CAAAD,MAAAC,SAApC,EAAuDG,CAAAJ,MAAAC,SAAAG,cAAvD,CAAZ,CACIN,CAIJH,EAAAyB,eAAA,CAHAA,QAAuB,CAACC,CAAD,CAAO,CAC1BvB,CAAA,CAAauB,CADa,CAmC9B1B,EAAAE,iBAAA,CAA2BA,CAoB3BF,EAAA2B,wBAAA,CAlBAA,QAAgC,CAACC,CAAD,CAAUC,CAAV,CAAqB,CACjD,IAAIT,EAAaQ,CAAAR,WAEjB,IAAkB,KAAlB,GAAIS,CAAJ,CACI,MAAOT,EAEPM,EAAAA,CAAOxB,CAAA,EACX,IAAa,eAAb,GAAIwB,CAAJ,CACI,MAAOI,OAAAC,IAEX,QAAQL,CAAR,EACI,KAAK,UAAL,CACI,MAAOE,EAAAI,YAAP,CAA6BJ,CAAAK,YAA7B,CAAmDb,CACvD,MAAK,SAAL,CACI,MAAOQ,EAAAI,YAAP,CAA6BJ,CAAAK,YAA7B,CAAmDb,CAJ3D,CAMA,MAAOA,EAhB0C,CAyCrDpB,EAAAkC,wBAAA;AAtBAA,QAAgC,CAACN,CAAD,CAAUR,CAAV,CAAsBS,CAAtB,CAAiC,CAE7D,GAAkB,KAAlB,GAAIA,CAAJ,CACID,CAAAR,WAAA,CAAqBA,CADzB,KAKA,IADIM,CACA,CADOxB,CAAA,EACP,CAAS,eAAT,GAAAwB,CAAJ,CAGA,OAAQA,CAAR,EACI,KAAK,UAAL,CACIE,CAAAR,WAAA,CAAqBQ,CAAAK,YAArB,CAA2CL,CAAAI,YAA3C,CAAiEZ,CACjE,MACJ,MAAK,SAAL,CACIQ,CAAAR,WAAA,CAAqBQ,CAAAI,YAArB,CAA2CJ,CAAAK,YAA3C,CAAiEb,CACjE,MACJ,SACIQ,CAAAR,WAAA,CAAqBA,CAR7B,CAV6D,CA9DmE;\",\n\"sources\":[\"node_modules/normalize-scroll-left/lib/main.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$normalize_scroll_left$lib$main\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\\r\\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\\r\\nvar cachedType;\\r\\nfunction _setScrollType(type) {\\r\\n    cachedType = type;\\r\\n}\\r\\nexports._setScrollType = _setScrollType;\\r\\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\\r\\nfunction detectScrollType() {\\r\\n    if (cachedType) {\\r\\n        return cachedType;\\r\\n    }\\r\\n    if (!inDOM || !window.document.body) {\\r\\n        return 'indeterminate';\\r\\n    }\\r\\n    var dummy = window.document.createElement('div');\\r\\n    dummy.appendChild(document.createTextNode('ABCD'));\\r\\n    dummy.dir = 'rtl';\\r\\n    dummy.style.fontSize = '14px';\\r\\n    dummy.style.width = '4px';\\r\\n    dummy.style.height = '1px';\\r\\n    dummy.style.position = 'absolute';\\r\\n    dummy.style.top = '-1000px';\\r\\n    dummy.style.overflow = 'scroll';\\r\\n    document.body.appendChild(dummy);\\r\\n    cachedType = 'reverse';\\r\\n    if (dummy.scrollLeft > 0) {\\r\\n        cachedType = 'default';\\r\\n    }\\r\\n    else {\\r\\n        dummy.scrollLeft = 1;\\r\\n        if (dummy.scrollLeft === 0) {\\r\\n            cachedType = 'negative';\\r\\n        }\\r\\n    }\\r\\n    document.body.removeChild(dummy);\\r\\n    return cachedType;\\r\\n}\\r\\nexports.detectScrollType = detectScrollType;\\r\\n// Based on https://stackoverflow.com/a/24394376\\r\\nfunction getNormalizedScrollLeft(element, direction) {\\r\\n    var scrollLeft = element.scrollLeft;\\r\\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\\r\\n    if (direction !== 'rtl') {\\r\\n        return scrollLeft;\\r\\n    }\\r\\n    var type = detectScrollType();\\r\\n    if (type === 'indeterminate') {\\r\\n        return Number.NaN;\\r\\n    }\\r\\n    switch (type) {\\r\\n        case 'negative':\\r\\n            return element.scrollWidth - element.clientWidth + scrollLeft;\\r\\n        case 'reverse':\\r\\n            return element.scrollWidth - element.clientWidth - scrollLeft;\\r\\n    }\\r\\n    return scrollLeft;\\r\\n}\\r\\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\\r\\nfunction setNormalizedScrollLeft(element, scrollLeft, direction) {\\r\\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\\r\\n    if (direction !== 'rtl') {\\r\\n        element.scrollLeft = scrollLeft;\\r\\n        return;\\r\\n    }\\r\\n    var type = detectScrollType();\\r\\n    if (type === 'indeterminate') {\\r\\n        return;\\r\\n    }\\r\\n    switch (type) {\\r\\n        case 'negative':\\r\\n            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\\r\\n            break;\\r\\n        case 'reverse':\\r\\n            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\\r\\n            break;\\r\\n        default:\\r\\n            element.scrollLeft = scrollLeft;\\r\\n            break;\\r\\n    }\\r\\n}\\r\\nexports.setNormalizedScrollLeft = setNormalizedScrollLeft;\\r\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"detectScrollType\",\"cachedType\",\"inDOM\",\"window\",\"document\",\"body\",\"dummy\",\"createElement\",\"appendChild\",\"createTextNode\",\"dir\",\"style\",\"fontSize\",\"width\",\"height\",\"position\",\"top\",\"overflow\",\"scrollLeft\",\"removeChild\",\"Object\",\"defineProperty\",\"value\",\"_setScrollType\",\"type\",\"getNormalizedScrollLeft\",\"element\",\"direction\",\"Number\",\"NaN\",\"scrollWidth\",\"clientWidth\",\"setNormalizedScrollLeft\"]\n}\n"]