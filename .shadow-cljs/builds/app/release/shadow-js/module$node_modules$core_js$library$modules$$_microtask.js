["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js/library/modules/$.microtask.js"],"~:js","shadow$provide.module$node_modules$core_js$library$modules$$_microtask=function(b,e,a,f,c,m){b=a(\"module$node_modules$core_js$library$modules$$_global\");var d=a(\"module$node_modules$core_js$library$modules$$_task\").set;c=b.MutationObserver||b.WebKitMutationObserver;e=b.process;var k=b.Promise,l=\"process\"==a(\"module$node_modules$core_js$library$modules$$_cof\")(e),h,p,r=function(){var a;l&&(a=e.domain)&&(e.domain=null,a.exit());for(;h;){var b=h.domain;var c=h.fn;b&&b.enter();c();b&&b.exit();h=h.next}p=\nvoid 0;a&&a.enter()};if(l)var q=function(){e.nextTick(r)};else if(c){var g=1,n=document.createTextNode(\"\");(new c(r)).observe(n,{characterData:!0});q=function(){n.data=g=-g}}else q=k&&k.resolve?function(){k.resolve().then(r)}:function(){d.call(b,r)};f.exports=function(a){a={fn:a,next:void 0,domain:l&&e.domain};p&&(p.next=a);h||(h=a,q());p=a}}","~:source","shadow$provide[\"module$node_modules$core_js$library$modules$$_microtask\"] = function(global,process,require,module,exports,shadow$shims) {\nvar global    = require('./$.global')\n  , macrotask = require('./$.task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./$.cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js$library$modules$$_global","~$module$node_modules$core_js$library$modules$$_cof","~$module$node_modules$core_js$library$modules$$_task"]],"~:properties",["^5",["next","fn","characterData","domain","data"]],"~:compiled-at",1537815743254,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js$library$modules$$_microtask.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CACrIL,CADqI,CACzHE,CAAA,CAAQ,sDAAR,CADyH,KAErII,EAAYJ,CAAA,CAAQ,oDAAR,CAAAK,IACZC,EAAAA,CAAYR,CAAAS,iBAAZD,EAAuCR,CAAAU,uBACvCT,EAJqI,CAIzHD,CAAAC,QAJyH,KAKrIU,EAAYX,CAAAW,QALyH,CAMrIC,EAA2C,SAA3CA,EAAYV,CAAA,CAAQ,mDAAR,CAAA,CAAmBD,CAAnB,CANyH,CAOrIY,CAPqI,CAO/HC,CAP+H,CASrIC,EAAQA,QAAQ,EAAE,CAAA,IAChBC,CACDJ,EAAH,GAAcI,CAAd,CAAuBf,CAAAgB,OAAvB,IACEhB,CAAAgB,OACA,CADiB,IACjB,CAAAD,CAAAE,KAAA,EAFF,CAIA,KAAA,CAAML,CAAN,CAAA,CAAW,CACT,IAAAI,EAASJ,CAAAI,OACT,KAAAE,EAASN,CAAAM,GACNF,EAAH,EAAUA,CAAAG,MAAA,EACVD,EAAA,EACGF,EAAH,EAAUA,CAAAC,KAAA,EACVL,EAAA,CAAOA,CAAAQ,KANE,CAOTP,CAAA;AAAOQ,IAAAA,EACNN,EAAH,EAAUA,CAAAI,MAAA,EAdU,CAkBtB,IAAGR,CAAH,CACE,IAAAW,EAASA,QAAQ,EAAE,CACjBtB,CAAAuB,SAAA,CAAiBT,CAAjB,CADiB,CADrB,KAKO,IAAGP,CAAH,CAAY,CAAA,IACbiB,EAAS,CADI,CAEbC,EAASC,QAAAC,eAAA,CAAwB,EAAxB,CACbC,EAAA,IAAIrB,CAAJ,CAAaO,CAAb,CAAAc,SAAA,CAA4BH,CAA5B,CAAkC,CAACI,cAAe,CAAA,CAAhB,CAAlC,CACAP,EAAA,CAASA,QAAQ,EAAE,CACjBG,CAAAK,KAAA,CAAYN,CAAZ,CAAqB,CAACA,CADL,CAJF,CAAZ,IASLF,EAAA,CADQZ,CAAH,EAAcA,CAAAqB,QAAd,CACIT,QAAQ,EAAE,CACjBZ,CAAAqB,QAAA,EAAAC,KAAA,CAAuBlB,CAAvB,CADiB,CADd,CAWIQ,QAAQ,EAAE,CAEjBjB,CAAA4B,KAAA,CAAelC,CAAf,CAAuBe,CAAvB,CAFiB,CAMrBZ,EAAAC,QAAA,CAAiB+B,QAAa,CAAChB,CAAD,CAAI,CAC5BiB,CAAAA,CAAO,CAACjB,GAAIA,CAAL,CAASE,KAAMC,IAAAA,EAAf,CAA0BL,OAAQL,CAARK,EAAkBhB,CAAAgB,OAA5C,CACRH,EAAH,GAAQA,CAAAO,KAAR,CAAoBe,CAApB,CACIvB,EAAJ,GACEA,CACA,CADOuB,CACP,CAAAb,CAAA,EAFF,CAGET,EAAA,CAAOsB,CANuB,CAzDuG;\",\n\"sources\":[\"node_modules/core-js/library/modules/$.microtask.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js$library$modules$$_microtask\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar global    = require('./$.global')\\n  , macrotask = require('./$.task').set\\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\\n  , process   = global.process\\n  , Promise   = global.Promise\\n  , isNode    = require('./$.cof')(process) == 'process'\\n  , head, last, notify;\\n\\nvar flush = function(){\\n  var parent, domain, fn;\\n  if(isNode && (parent = process.domain)){\\n    process.domain = null;\\n    parent.exit();\\n  }\\n  while(head){\\n    domain = head.domain;\\n    fn     = head.fn;\\n    if(domain)domain.enter();\\n    fn(); // <- currently we use it only for Promise - try / catch not required\\n    if(domain)domain.exit();\\n    head = head.next;\\n  } last = undefined;\\n  if(parent)parent.enter();\\n};\\n\\n// Node.js\\nif(isNode){\\n  notify = function(){\\n    process.nextTick(flush);\\n  };\\n// browsers with MutationObserver\\n} else if(Observer){\\n  var toggle = 1\\n    , node   = document.createTextNode('');\\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\\n  notify = function(){\\n    node.data = toggle = -toggle;\\n  };\\n// environments with maybe non-completely correct, but existent Promise\\n} else if(Promise && Promise.resolve){\\n  notify = function(){\\n    Promise.resolve().then(flush);\\n  };\\n// for other environments - macrotask based on:\\n// - setImmediate\\n// - MessageChannel\\n// - window.postMessag\\n// - onreadystatechange\\n// - setTimeout\\n} else {\\n  notify = function(){\\n    // strange IE + webpack dev server bug - use .call(global)\\n    macrotask.call(global, flush);\\n  };\\n}\\n\\nmodule.exports = function asap(fn){\\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\\n  if(last)last.next = task;\\n  if(!head){\\n    head = task;\\n    notify();\\n  } last = task;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"macrotask\",\"set\",\"Observer\",\"MutationObserver\",\"WebKitMutationObserver\",\"Promise\",\"isNode\",\"head\",\"last\",\"flush\",\"parent\",\"domain\",\"exit\",\"fn\",\"enter\",\"next\",\"undefined\",\"notify\",\"nextTick\",\"toggle\",\"node\",\"document\",\"createTextNode\",\"observe\",\"characterData\",\"data\",\"resolve\",\"then\",\"call\",\"module.exports\",\"task\"]\n}\n"]