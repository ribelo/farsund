["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/debounce/index.js"],"~:js","shadow$provide.module$node_modules$debounce$index=function(b,e,a,f,c,m){function d(a,b,c){function d(){var l=Date.now()-f;l<b&&0<=l?e=setTimeout(d,b-l):(e=null,c||(k=a.apply(g,h),g=h=null))}var e,h,g,f,k;null==b&&(b=100);var l=function(){g=this;h=arguments;f=Date.now();var l=c&&!e;e||(e=setTimeout(d,b));l&&(k=a.apply(g,h),g=h=null);return k};l.clear=function(){e&&(clearTimeout(e),e=null)};l.flush=function(){e&&(k=a.apply(g,h),g=h=null,clearTimeout(e),e=null)};return l}d.debounce=d;f.exports=d}","~:source","shadow$provide[\"module$node_modules$debounce$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["debounce","flush","clear"]],"~:compiled-at",1537815743123,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$debounce$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAepHC,QAASA,EAAQ,CAACC,CAAD,CAAOC,CAAP,CAAaC,CAAb,CAAuB,CAItCC,QAASA,EAAK,EAAG,CACf,IAAIC,EAAOC,IAAAC,IAAA,EAAPF,CAAoBG,CAEpBH,EAAJ,CAAWH,CAAX,EAA2B,CAA3B,EAAmBG,CAAnB,CACEI,CADF,CACYC,UAAA,CAAWN,CAAX,CAAkBF,CAAlB,CAAyBG,CAAzB,CADZ,EAGEI,CACA,CADU,IACV,CAAKN,CAAL,GACEQ,CACA,CADSV,CAAAW,MAAA,CAAWC,CAAX,CAAoBC,CAApB,CACT,CAAAD,CAAA,CAAUC,CAAV,CAAiB,IAFnB,CAJF,CAHe,CAJqB,IAClCL,CADkC,CACzBK,CADyB,CACnBD,CADmB,CACVL,CADU,CACCG,CACnC,KAAJ,EAAYT,CAAZ,GAAkBA,CAAlB,CAAyB,GAAzB,CAgBA,KAAIa,EAAYA,QAAQ,EAAE,CACxBF,CAAA,CAAU,IACVC,EAAA,CAAOE,SACPR,EAAA,CAAYF,IAAAC,IAAA,EACZ,KAAIU,EAAUd,CAAVc,EAAuB,CAACR,CACvBA,EAAL,GAAcA,CAAd,CAAwBC,UAAA,CAAWN,CAAX,CAAkBF,CAAlB,CAAxB,CACIe,EAAJ,GACEN,CACA,CADSV,CAAAW,MAAA,CAAWC,CAAX,CAAoBC,CAApB,CACT,CAAAD,CAAA,CAAUC,CAAV,CAAiB,IAFnB,CAKA,OAAOH,EAXiB,CAc1BI,EAAAG,MAAA,CAAkBC,QAAQ,EAAG,CACvBV,CAAJ,GACEW,YAAA,CAAaX,CAAb,CACA,CAAAA,CAAA,CAAU,IAFZ,CAD2B,CAO7BM,EAAAM,MAAA,CAAkBC,QAAQ,EAAG,CACvBb,CAAJ,GACEE,CAIA,CAJSV,CAAAW,MAAA,CAAWC,CAAX,CAAoBC,CAApB,CAIT,CAHAD,CAGA,CAHUC,CAGV,CAHiB,IAGjB,CADAM,YAAA,CAAaX,CAAb,CACA,CAAAA,CAAA,CAAU,IALZ,CAD2B,CAU7B,OAAOM,EAjD+B,CAqDxCf,CAAAA,SAAA,CAAoBA,CAEpBH,EAAAC,QAAA,CAAiBE,CAtEmG;\",\n\"sources\":[\"node_modules/debounce/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$debounce$index\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Returns a function, that, as long as it continues to be invoked, will not\\n * be triggered. The function will be called after it stops being called for\\n * N milliseconds. If `immediate` is passed, trigger the function on the\\n * leading edge, instead of the trailing. The function also has a property 'clear' \\n * that is a function which will clear the timer to prevent previously scheduled executions. \\n *\\n * @source underscore.js\\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\\n * @param {Function} function to wrap\\n * @param {Number} timeout in ms (`100`)\\n * @param {Boolean} whether to execute at the beginning (`false`)\\n * @api public\\n */\\nfunction debounce(func, wait, immediate){\\n  var timeout, args, context, timestamp, result;\\n  if (null == wait) wait = 100;\\n\\n  function later() {\\n    var last = Date.now() - timestamp;\\n\\n    if (last < wait && last >= 0) {\\n      timeout = setTimeout(later, wait - last);\\n    } else {\\n      timeout = null;\\n      if (!immediate) {\\n        result = func.apply(context, args);\\n        context = args = null;\\n      }\\n    }\\n  };\\n\\n  var debounced = function(){\\n    context = this;\\n    args = arguments;\\n    timestamp = Date.now();\\n    var callNow = immediate && !timeout;\\n    if (!timeout) timeout = setTimeout(later, wait);\\n    if (callNow) {\\n      result = func.apply(context, args);\\n      context = args = null;\\n    }\\n\\n    return result;\\n  };\\n\\n  debounced.clear = function() {\\n    if (timeout) {\\n      clearTimeout(timeout);\\n      timeout = null;\\n    }\\n  };\\n  \\n  debounced.flush = function() {\\n    if (timeout) {\\n      result = func.apply(context, args);\\n      context = args = null;\\n      \\n      clearTimeout(timeout);\\n      timeout = null;\\n    }\\n  };\\n\\n  return debounced;\\n};\\n\\n// Adds compatibility for ES modules\\ndebounce.debounce = debounce;\\n\\nmodule.exports = debounce;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"debounce\",\"func\",\"wait\",\"immediate\",\"later\",\"last\",\"Date\",\"now\",\"timestamp\",\"timeout\",\"setTimeout\",\"result\",\"apply\",\"context\",\"args\",\"debounced\",\"arguments\",\"callNow\",\"clear\",\"debounced.clear\",\"clearTimeout\",\"flush\",\"debounced.flush\"]\n}\n"]