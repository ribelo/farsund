["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer=function(b,e,a,f,c,m){function d(a){return a&&a.__esModule?a:{default:a}}Object.defineProperty(c,\"__esModule\",{value:!0});b=a(\"module$node_modules$babel_runtime$core_js$object$get_prototype_of\");var k=d(b);b=a(\"module$node_modules$babel_runtime$helpers$classCallCheck\");var l=d(b);b=a(\"module$node_modules$babel_runtime$helpers$createClass\");var h=d(b);b=a(\"module$node_modules$babel_runtime$helpers$possibleConstructorReturn\");\nvar p=d(b);b=a(\"module$node_modules$babel_runtime$helpers$inherits\");var r=d(b);b=function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);b.default=a;return b}(a(\"module$node_modules$react$index\"));var q=a(\"module$node_modules$react_dom$index\");a(\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types\");a=a(\"module$node_modules$prop_types$index\");d(a);a=function(a){function b(){var a,c,d,e;(0,l.default)(this,\nb);for(var g=arguments.length,f=Array(g),h=0;h<g;h++)f[h]=arguments[h];return e=(c=(d=(0,p.default)(this,(a=b.__proto__||(0,k.default)(b)).call.apply(a,[this].concat(f))),d),d._measure=function(){var a=d.props,b=a.cache,c=a.columnIndex;c=void 0===c?0:c;var e=a.parent;a=a.rowIndex;a=void 0===a?d.props.index||0:a;var g=d._getCellMeasurements(),f=g.height;g=g.width;if(f!==b.getHeight(a,c)||g!==b.getWidth(a,c))b.set(a,c,g,f),e&&\"function\"===typeof e.recomputeGridSize&&e.recomputeGridSize({columnIndex:c,\nrowIndex:a})},c),(0,p.default)(d,e)}(0,r.default)(b,a);(0,h.default)(b,[{key:\"componentDidMount\",value:function(){this._maybeMeasureCell()}},{key:\"componentDidUpdate\",value:function(){this._maybeMeasureCell()}},{key:\"render\",value:function(){var a=this.props.children;return\"function\"===typeof a?a({measure:this._measure}):a}},{key:\"_getCellMeasurements\",value:function(){var a=this.props.cache,b=(0,q.findDOMNode)(this);if(b&&b.ownerDocument&&b.ownerDocument.defaultView&&b instanceof b.ownerDocument.defaultView.HTMLElement){var c=\nb.style.width,d=b.style.height;a.hasFixedWidth()||(b.style.width=\"auto\");a.hasFixedHeight()||(b.style.height=\"auto\");a=Math.ceil(b.offsetHeight);var e=Math.ceil(b.offsetWidth);c&&(b.style.width=c);d&&(b.style.height=d);return{height:a,width:e}}return{height:0,width:0}}},{key:\"_maybeMeasureCell\",value:function(){var a=this.props,b=a.cache,c=a.columnIndex;c=void 0===c?0:c;var d=a.parent;a=a.rowIndex;a=void 0===a?this.props.index||0:a;if(!b.has(a,c)){var e=this._getCellMeasurements();b.set(a,c,e.width,\ne.height);d&&\"function\"===typeof d.invalidateCellSizeAfterRender&&d.invalidateCellSizeAfterRender({columnIndex:c,rowIndex:a})}}}]);return b}(b.PureComponent);a.__internalCellMeasurerFlag=!1;a.propTypes=null;c.default=a}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _types = require('./types');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = function (_React$PureComponent) {\n  (0, _inherits3.default)(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CellMeasurer.__proto__ || (0, _getPrototypeOf2.default)(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n\n\n      var node = (0, _reactDom.findDOMNode)(this);\n\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height;\n\n        // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth);\n\n        // Reset after measuring to avoid breaking styles; see #660\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return { height: height, width: width };\n      } else {\n        return { height: 0, width: 0 };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height);\n\n        // If size has changed, let Grid know to re-render.\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent);\n\n// Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === 'function' ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes2.default.shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]).isRequired,\n  columnIndex: _propTypes2.default.number,\n  index: _propTypes2.default.number,\n  parent: _propTypes2.default.shape({\n    invalidateCellSizeAfterRender: _propTypes2.default.func,\n    recomputeGridSize: _propTypes2.default.func\n  }).isRequired,\n  rowIndex: _propTypes2.default.number\n};\nexports.default = CellMeasurer;\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types","~$module$node_modules$react_dom$index","~$module$node_modules$babel_runtime$helpers$possibleConstructorReturn","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$babel_runtime$helpers$inherits","~$module$node_modules$babel_runtime$core_js$object$get_prototype_of","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["columnIndex","width","__internalCellMeasurerFlag","height","key","measure","__esModule","propTypes","value","_measure","rowIndex","default"]],"~:compiled-at",1537815743266,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurer\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\\n\\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\\n\\nvar _inherits2 = require('babel-runtime/helpers/inherits');\\n\\nvar _inherits3 = _interopRequireDefault(_inherits2);\\n\\nvar _react = require('react');\\n\\nvar React = _interopRequireWildcard(_react);\\n\\nvar _reactDom = require('react-dom');\\n\\nvar _types = require('./types');\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Wraps a cell and measures its rendered content.\\n * Measurements are stored in a per-cell cache.\\n * Cached-content is not be re-measured.\\n */\\nvar CellMeasurer = function (_React$PureComponent) {\\n  (0, _inherits3.default)(CellMeasurer, _React$PureComponent);\\n\\n  function CellMeasurer() {\\n    var _ref;\\n\\n    var _temp, _this, _ret;\\n\\n    (0, _classCallCheck3.default)(this, CellMeasurer);\\n\\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = CellMeasurer.__proto__ || (0, _getPrototypeOf2.default)(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\\n      var _this$props = _this.props,\\n          cache = _this$props.cache,\\n          _this$props$columnInd = _this$props.columnIndex,\\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\\n          parent = _this$props.parent,\\n          _this$props$rowIndex = _this$props.rowIndex,\\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\\n\\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\\n          height = _this$_getCellMeasure.height,\\n          width = _this$_getCellMeasure.width;\\n\\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\\n        cache.set(rowIndex, columnIndex, width, height);\\n\\n        if (parent && typeof parent.recomputeGridSize === 'function') {\\n          parent.recomputeGridSize({\\n            columnIndex: columnIndex,\\n            rowIndex: rowIndex\\n          });\\n        }\\n      }\\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\\n  }\\n\\n  (0, _createClass3.default)(CellMeasurer, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this._maybeMeasureCell();\\n    }\\n  }, {\\n    key: 'componentDidUpdate',\\n    value: function componentDidUpdate() {\\n      this._maybeMeasureCell();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var children = this.props.children;\\n\\n\\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\\n    }\\n  }, {\\n    key: '_getCellMeasurements',\\n    value: function _getCellMeasurements() {\\n      var cache = this.props.cache;\\n\\n\\n      var node = (0, _reactDom.findDOMNode)(this);\\n\\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\\n\\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\\n        var styleWidth = node.style.width;\\n        var styleHeight = node.style.height;\\n\\n        // If we are re-measuring a cell that has already been measured,\\n        // It will have a hard-coded width/height from the previous measurement.\\n        // The fact that we are measuring indicates this measurement is probably stale,\\n        // So explicitly clear it out (eg set to \\\"auto\\\") so we can recalculate.\\n        // See issue #593 for more info.\\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\\n        // eg top/left Grid renders before bottom/right Grid\\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\\n        if (!cache.hasFixedWidth()) {\\n          node.style.width = 'auto';\\n        }\\n        if (!cache.hasFixedHeight()) {\\n          node.style.height = 'auto';\\n        }\\n\\n        var height = Math.ceil(node.offsetHeight);\\n        var width = Math.ceil(node.offsetWidth);\\n\\n        // Reset after measuring to avoid breaking styles; see #660\\n        if (styleWidth) {\\n          node.style.width = styleWidth;\\n        }\\n        if (styleHeight) {\\n          node.style.height = styleHeight;\\n        }\\n\\n        return { height: height, width: width };\\n      } else {\\n        return { height: 0, width: 0 };\\n      }\\n    }\\n  }, {\\n    key: '_maybeMeasureCell',\\n    value: function _maybeMeasureCell() {\\n      var _props = this.props,\\n          cache = _props.cache,\\n          _props$columnIndex = _props.columnIndex,\\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\\n          parent = _props.parent,\\n          _props$rowIndex = _props.rowIndex,\\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\\n\\n\\n      if (!cache.has(rowIndex, columnIndex)) {\\n        var _getCellMeasurements2 = this._getCellMeasurements(),\\n            height = _getCellMeasurements2.height,\\n            width = _getCellMeasurements2.width;\\n\\n        cache.set(rowIndex, columnIndex, width, height);\\n\\n        // If size has changed, let Grid know to re-render.\\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\\n          parent.invalidateCellSizeAfterRender({\\n            columnIndex: columnIndex,\\n            rowIndex: rowIndex\\n          });\\n        }\\n      }\\n    }\\n  }]);\\n  return CellMeasurer;\\n}(React.PureComponent);\\n\\n// Used for DEV mode warning check\\n\\n\\nCellMeasurer.__internalCellMeasurerFlag = false;\\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\\n  cache: function cache() {\\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === 'function' ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes2.default.shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\\n  },\\n  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]).isRequired,\\n  columnIndex: _propTypes2.default.number,\\n  index: _propTypes2.default.number,\\n  parent: _propTypes2.default.shape({\\n    invalidateCellSizeAfterRender: _propTypes2.default.func,\\n    recomputeGridSize: _propTypes2.default.func\\n  }).isRequired,\\n  rowIndex: _propTypes2.default.number\\n};\\nexports.default = CellMeasurer;\\nif (process.env.NODE_ENV !== 'production') {\\n  CellMeasurer.__internalCellMeasurerFlag = true;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_getPrototypeOf\",\"_getPrototypeOf2\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_possibleConstructorReturn2\",\"_possibleConstructorReturn3\",\"_inherits2\",\"_inherits3\",\"React\",\"_interopRequireWildcard\",\"newObj\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"_react\",\"_reactDom\",\"_propTypes\",\"CellMeasurer\",\"_React$PureComponent\",\"_ref\",\"_temp\",\"_this\",\"_ret\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"__proto__\",\"apply\",\"concat\",\"_measure\",\"_this._measure\",\"_this$props\",\"props\",\"cache\",\"_this$props$columnInd\",\"columnIndex\",\"undefined\",\"parent\",\"_this$props$rowIndex\",\"rowIndex\",\"index\",\"_this$_getCellMeasure\",\"_getCellMeasurements\",\"height\",\"width\",\"getHeight\",\"getWidth\",\"set\",\"recomputeGridSize\",\"componentDidMount\",\"_maybeMeasureCell\",\"componentDidUpdate\",\"render\",\"children\",\"measure\",\"node\",\"findDOMNode\",\"ownerDocument\",\"defaultView\",\"HTMLElement\",\"styleWidth\",\"style\",\"styleHeight\",\"hasFixedWidth\",\"hasFixedHeight\",\"Math\",\"ceil\",\"offsetHeight\",\"offsetWidth\",\"_props\",\"_props$columnIndex\",\"_props$rowIndex\",\"has\",\"_getCellMeasurements2\",\"invalidateCellSizeAfterRender\",\"PureComponent\",\"__internalCellMeasurerFlag\",\"propTypes\"]\n}\n"]