["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/deepmerge/dist/umd.js"],"~:js","shadow$provide.module$node_modules$deepmerge$dist$umd=function(b,e,a,f,c,m){(function(a,b){\"object\"===typeof c&&\"undefined\"!==typeof f?f.exports=b():\"function\"===typeof define&&define.amd?define(b):a.deepmerge=b()})(this,function(){function a(a,b){return!1!==b.clone&&b.isMergeableObject(a)?e(Array.isArray(a)?[]:{},a,b):a}function b(b,c,d){return b.concat(c).map(function(b){return a(b,d)})}function c(b,c,d){var g={};d.isMergeableObject(b)&&Object.keys(b).forEach(function(c){g[c]=a(b[c],d)});Object.keys(c).forEach(function(h){d.isMergeableObject(c[h])&&\nb[h]?g[h]=e(b[h],c[h],d):g[h]=a(c[h],d)});return g}function e(d,g,e){e=e||{};e.arrayMerge=e.arrayMerge||b;e.isMergeableObject=e.isMergeableObject||p;var h=Array.isArray(g),n=Array.isArray(d);return h!==n?a(g,e):h?e.arrayMerge(d,g,e):c(d,g,e)}var p=function(a){var b;if(b=!!a&&\"object\"===typeof a)b=Object.prototype.toString.call(a),b=!(\"[object RegExp]\"===b||\"[object Date]\"===b||a.$$typeof===r);return b},r=\"function\"===typeof Symbol&&Symbol.for?Symbol.for(\"react.element\"):60103;e.all=function(a,b){if(!Array.isArray(a))throw Error(\"first argument should be an array\");\nreturn a.reduce(function(a,c){return e(a,c,b)},{})};return e})}","~:source","shadow$provide[\"module$node_modules$deepmerge$dist$umd\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["deepmerge","arrayMerge","isMergeableObject","all"]],"~:compiled-at",1537815743003,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$deepmerge$dist$umd.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/deepmerge/dist/umd.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$deepmerge$dist$umd\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n(function (global, factory) {\\n\\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n\\ttypeof define === 'function' && define.amd ? define(factory) :\\n\\t(global.deepmerge = factory());\\n}(this, (function () { 'use strict';\\n\\nvar isMergeableObject = function isMergeableObject(value) {\\n\\treturn isNonNullObject(value)\\n\\t\\t&& !isSpecial(value)\\n};\\n\\nfunction isNonNullObject(value) {\\n\\treturn !!value && typeof value === 'object'\\n}\\n\\nfunction isSpecial(value) {\\n\\tvar stringValue = Object.prototype.toString.call(value);\\n\\n\\treturn stringValue === '[object RegExp]'\\n\\t\\t|| stringValue === '[object Date]'\\n\\t\\t|| isReactElement(value)\\n}\\n\\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\\n\\nfunction isReactElement(value) {\\n\\treturn value.$$typeof === REACT_ELEMENT_TYPE\\n}\\n\\nfunction emptyTarget(val) {\\n\\treturn Array.isArray(val) ? [] : {}\\n}\\n\\nfunction cloneUnlessOtherwiseSpecified(value, options) {\\n\\treturn (options.clone !== false && options.isMergeableObject(value))\\n\\t\\t? deepmerge(emptyTarget(value), value, options)\\n\\t\\t: value\\n}\\n\\nfunction defaultArrayMerge(target, source, options) {\\n\\treturn target.concat(source).map(function(element) {\\n\\t\\treturn cloneUnlessOtherwiseSpecified(element, options)\\n\\t})\\n}\\n\\nfunction mergeObject(target, source, options) {\\n\\tvar destination = {};\\n\\tif (options.isMergeableObject(target)) {\\n\\t\\tObject.keys(target).forEach(function(key) {\\n\\t\\t\\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\\n\\t\\t});\\n\\t}\\n\\tObject.keys(source).forEach(function(key) {\\n\\t\\tif (!options.isMergeableObject(source[key]) || !target[key]) {\\n\\t\\t\\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\\n\\t\\t} else {\\n\\t\\t\\tdestination[key] = deepmerge(target[key], source[key], options);\\n\\t\\t}\\n\\t});\\n\\treturn destination\\n}\\n\\nfunction deepmerge(target, source, options) {\\n\\toptions = options || {};\\n\\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\\n\\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\\n\\n\\tvar sourceIsArray = Array.isArray(source);\\n\\tvar targetIsArray = Array.isArray(target);\\n\\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\\n\\n\\tif (!sourceAndTargetTypesMatch) {\\n\\t\\treturn cloneUnlessOtherwiseSpecified(source, options)\\n\\t} else if (sourceIsArray) {\\n\\t\\treturn options.arrayMerge(target, source, options)\\n\\t} else {\\n\\t\\treturn mergeObject(target, source, options)\\n\\t}\\n}\\n\\ndeepmerge.all = function deepmergeAll(array, options) {\\n\\tif (!Array.isArray(array)) {\\n\\t\\tthrow new Error('first argument should be an array')\\n\\t}\\n\\n\\treturn array.reduce(function(prev, next) {\\n\\t\\treturn deepmerge(prev, next, options)\\n\\t}, {})\\n};\\n\\nvar deepmerge_1 = deepmerge;\\n\\nreturn deepmerge_1;\\n\\n})));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"factory\",\"define\",\"amd\",\"deepmerge\",\"cloneUnlessOtherwiseSpecified\",\"value\",\"options\",\"clone\",\"isMergeableObject\",\"Array\",\"isArray\",\"defaultArrayMerge\",\"target\",\"source\",\"concat\",\"map\",\"element\",\"mergeObject\",\"destination\",\"Object\",\"keys\",\"forEach\",\"key\",\"arrayMerge\",\"sourceIsArray\",\"targetIsArray\",\"stringValue\",\"prototype\",\"toString\",\"call\",\"$$typeof\",\"REACT_ELEMENT_TYPE\",\"Symbol\",\"for\",\"all\",\"deepmerge.all\",\"array\",\"Error\",\"reduce\",\"prev\",\"next\"]\n}\n"]