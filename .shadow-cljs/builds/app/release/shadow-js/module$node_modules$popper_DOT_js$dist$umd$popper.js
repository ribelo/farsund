["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/popper_DOT_js/dist/umd/popper.js"],"~:js","shadow$provide.module$node_modules$popper_DOT_js$dist$umd$popper=function(b,e,a,f,c,m){(function(a,b){\"object\"===typeof c&&\"undefined\"!==typeof f?f.exports=b():\"function\"===typeof define&&define.amd?define(b):a.Popper=b()})(this,function(){function a(a){var b=!1;return function(){b||(b=!0,window.Promise.resolve().then(function(){b=!1;a()}))}}function c(a){var b=!1;return function(){b||(b=!0,setTimeout(function(){b=!1;a()},Ea))}}function e(a){var b={};return a&&\"[object Function]\"===b.toString.call(a)}\nfunction f(a,b){if(1!==a.nodeType)return[];a=getComputedStyle(a,null);return b?a[b]:a}function p(a){return\"HTML\"===a.nodeName?a:a.parentNode||a.host}function m(a){if(!a)return document.body;switch(a.nodeName){case \"HTML\":case \"BODY\":return a.ownerDocument.body;case \"#document\":return a.body}var b=f(a);return/(auto|scroll|overlay)/.test(b.overflow+b.overflowY+b.overflowX)?a:m(p(a))}function q(a){return 11===a?wa:10===a?xa:wa||xa}function g(a){if(!a)return document.documentElement;for(var b=q(10)?document.body:\nnull,c=a.offsetParent;c===b&&a.nextElementSibling;)c=(a=a.nextElementSibling).offsetParent;return(b=c&&c.nodeName)&&\"BODY\"!==b&&\"HTML\"!==b?-1!==[\"TD\",\"TABLE\"].indexOf(c.nodeName)&&\"static\"===f(c,\"position\")?g(c):c:a?a.ownerDocument.documentElement:document.documentElement}function n(a){return null!==a.parentNode?n(a.parentNode):a}function v(a,b){if(!(a&&a.nodeType&&b&&b.nodeType))return document.documentElement;var c=a.compareDocumentPosition(b)&Node.DOCUMENT_POSITION_FOLLOWING,d=c?a:b,e=c?b:a;c=\ndocument.createRange();c.setStart(d,0);c.setEnd(e,0);c=c.commonAncestorContainer;if(a!==c&&b!==c||d.contains(e))return a=c.nodeName,a=\"BODY\"===a?!1:\"HTML\"===a||g(c.firstElementChild)===c,a?c:g(c);d=n(a);return d.host?v(d.host,b):v(a,n(b).host)}function y(a){var b=\"top\"===(1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"top\")?\"scrollTop\":\"scrollLeft\",c=a.nodeName;return\"BODY\"===c||\"HTML\"===c?(c=a.ownerDocument.documentElement,(a.ownerDocument.scrollingElement||c)[b]):a[b]}function w(a,b){var c=\n2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,d=y(b,\"top\"),e=y(b,\"left\");c=c?-1:1;a.top+=d*c;a.bottom+=d*c;a.left+=e*c;a.right+=e*c;return a}function x(a,b){b=\"x\"===b?\"Left\":\"Top\";var c=\"Left\"===b?\"Right\":\"Bottom\";return parseFloat(a[\"border\"+b+\"Width\"],10)+parseFloat(a[\"border\"+c+\"Width\"],10)}function u(a,b,c,d){return Math.max(b[\"offset\"+a],b[\"scroll\"+a],c[\"client\"+a],c[\"offset\"+a],c[\"scroll\"+a],q(10)?parseInt(c[\"offset\"+a])+parseInt(d[\"margin\"+(\"Height\"===a?\"Top\":\"Left\")])+parseInt(d[\"margin\"+\n(\"Height\"===a?\"Bottom\":\"Right\")]):0)}function t(a){var b=a.body;a=a.documentElement;var c=q(10)&&getComputedStyle(a);return{height:u(\"Height\",b,a,c),width:u(\"Width\",b,a,c)}}function z(a){return ca({},a,{right:a.left+a.width,bottom:a.top+a.height})}function A(a){var b={};try{if(q(10)){b=a.getBoundingClientRect();var c=y(a,\"top\"),d=y(a,\"left\");b.top+=c;b.left+=d;b.bottom+=c;b.right+=d}else b=a.getBoundingClientRect()}catch(xe){}b={left:b.left,top:b.top,width:b.right-b.left,height:b.bottom-b.top};d=\n\"HTML\"===a.nodeName?t(a.ownerDocument):{};c=a.offsetWidth-(d.width||a.clientWidth||b.right-b.left);d=a.offsetHeight-(d.height||a.clientHeight||b.bottom-b.top);if(c||d)a=f(a),c-=x(a,\"x\"),d-=x(a,\"y\"),b.width-=c,b.height-=d;return z(b)}function B(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,d=q(10),e=\"HTML\"===b.nodeName,g=A(a),h=A(b),k=m(a),l=f(b),n=parseFloat(l.borderTopWidth,10),t=parseFloat(l.borderLeftWidth,10);c&&e&&(h.top=Math.max(h.top,0),h.left=Math.max(h.left,0));g=z({top:g.top-\nh.top-n,left:g.left-h.left-t,width:g.width,height:g.height});g.marginTop=0;g.marginLeft=0;!d&&e&&(e=parseFloat(l.marginTop,10),l=parseFloat(l.marginLeft,10),g.top-=n-e,g.bottom-=n-e,g.left-=t-l,g.right-=t-l,g.marginTop=e,g.marginLeft=l);if(d&&!c?b.contains(k):b===k&&\"BODY\"!==k.nodeName)g=w(g,b);return g}function E(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1,c=a.ownerDocument.documentElement,d=B(a,c),e=Math.max(c.clientWidth,window.innerWidth||0),g=Math.max(c.clientHeight,window.innerHeight||\n0),f=b?0:y(c);b=b?0:y(c,\"left\");return z({top:f-d.top+d.marginTop,left:b-d.left+d.marginLeft,width:e,height:g})}function D(a){var b=a.nodeName;return\"BODY\"===b||\"HTML\"===b?!1:\"fixed\"===f(a,\"position\")?!0:D(p(a))}function F(a){if(!a||!a.parentElement||q())return document.documentElement;for(a=a.parentElement;a&&\"none\"===f(a,\"transform\");)a=a.parentElement;return a||document.documentElement}function C(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:!1,g={top:0,left:0},f=e?F(a):\nv(a,b);if(\"viewport\"===d)g=E(f,e);else{if(\"scrollParent\"===d){var h=m(p(b));\"BODY\"===h.nodeName&&(h=a.ownerDocument.documentElement)}else h=\"window\"===d?a.ownerDocument.documentElement:d;e=B(h,f,e);\"HTML\"!==h.nodeName||D(f)?g=e:(h=t(a.ownerDocument),f=h.height,h=h.width,g.top+=e.top-e.marginTop,g.bottom=f+e.top,g.left+=e.left-e.marginLeft,g.right=h+e.left)}c=c||0;e=\"number\"===typeof c;g.left+=e?c:c.left||0;g.top+=e?c:c.top||0;g.right-=e?c:c.right||0;g.bottom-=e?c:c.bottom||0;return g}function L(a,\nb,c,d,e){var g=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===a.indexOf(\"auto\"))return a;g=C(c,d,g,e);var f={top:{width:g.width,height:b.top-g.top},right:{width:g.right-b.right,height:g.height},bottom:{width:g.width,height:g.bottom-b.bottom},left:{width:b.left-g.left,height:g.height}};g=Object.keys(f).map(function(a){var b=f[a];return ca({key:a},f[a],{area:b.width*b.height})}).sort(function(a,b){return b.area-a.area});var h=g.filter(function(a){var b=a.height;return a.width>=c.clientWidth&&\nb>=c.clientHeight});g=0<h.length?h[0].key:g[0].key;h=a.split(\"-\")[1];return g+(h?\"-\"+h:\"\")}function G(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,e=d?F(b):v(b,c);return B(c,e,d)}function P(a){var b=getComputedStyle(a),c=parseFloat(b.marginTop)+parseFloat(b.marginBottom);b=parseFloat(b.marginLeft)+parseFloat(b.marginRight);return{width:a.offsetWidth+b,height:a.offsetHeight+c}}function K(a){var b={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};return a.replace(/left|right|bottom|top/g,\nfunction(a){return b[a]})}function N(a,b,c){c=c.split(\"-\")[0];a=P(a);var d={width:a.width,height:a.height},e=-1!==[\"right\",\"left\"].indexOf(c),g=e?\"top\":\"left\",f=e?\"left\":\"top\",h=e?\"height\":\"width\";d[g]=b[g]+b[h]/2-a[h]/2;d[f]=c===f?b[f]-a[e?\"width\":\"height\"]:b[K(f)];return d}function M(a,b){return Array.prototype.find?a.find(b):a.filter(b)[0]}function R(a,b,c){if(Array.prototype.findIndex)return a.findIndex(function(a){return a[b]===c});var d=M(a,function(a){return a[b]===c});return a.indexOf(d)}\nfunction O(a,b,c){(void 0===c?a:a.slice(0,R(a,\"name\",c))).forEach(function(a){a[\"function\"]&&console.warn(\"`modifier.function` is deprecated, use `modifier.fn`!\");var c=a[\"function\"]||a.fn;a.enabled&&e(c)&&(b.offsets.popper=z(b.offsets.popper),b.offsets.reference=z(b.offsets.reference),b=c(b,a))});return b}function I(a,b){return a.some(function(a){var c=a.name;return a.enabled&&c===b})}function J(a){for(var b=[!1,\"ms\",\"Webkit\",\"Moz\",\"O\"],c=a.charAt(0).toUpperCase()+a.slice(1),d=0;d<b.length;d++){var e=\nb[d];e=e?\"\"+e+c:a;if(\"undefined\"!==typeof document.body.style[e])return e}return null}function Q(a){return(a=a.ownerDocument)?a.defaultView:window}function T(a,b,c,d){var e=\"BODY\"===a.nodeName;a=e?a.ownerDocument.defaultView:a;a.addEventListener(b,c,{passive:!0});e||T(m(a.parentNode),b,c,d);d.push(a)}function W(a,b){Q(a).removeEventListener(\"resize\",b.updateBound);b.scrollParents.forEach(function(a){a.removeEventListener(\"scroll\",b.updateBound)});b.updateBound=null;b.scrollParents=[];b.scrollElement=\nnull;b.eventsEnabled=!1;return b}function U(a){return\"\"!==a&&!isNaN(parseFloat(a))&&isFinite(a)}function S(a,b){Object.keys(b).forEach(function(c){var d=\"\";-1!==\"width height top right bottom left\".split(\" \").indexOf(c)&&U(b[c])&&(d=\"px\");a.style[c]=b[c]+d})}function X(a,b){Object.keys(b).forEach(function(c){!1!==b[c]?a.setAttribute(c,b[c]):a.removeAttribute(c)})}function fa(a,b,c){var d=M(a,function(a){return a.name===b});a=!!d&&a.some(function(a){return a.name===c&&a.enabled&&a.order<d.order});\nif(!a){var e=\"`\"+b+\"`\";console.warn(\"`\"+c+\"` modifier is required by \"+e+\" modifier in order to work, be sure to include it before \"+e+\"!\")}return a}function Z(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1,c=lb.indexOf(a);c=lb.slice(c+1).concat(lb.slice(0,c));return b?c.reverse():c}function la(a,b,c,d){var e=[0,0],g=-1!==[\"right\",\"left\"].indexOf(d);a=a.split(/(\\+|\\-)/).map(function(a){return a.trim()});d=a.indexOf(M(a,function(a){return-1!==a.search(/,|\\s/)}));a[d]&&-1===a[d].indexOf(\",\")&&\nconsole.warn(\"Offsets separated by white space(s) are deprecated, use a comma (,) instead.\");var f=/\\s*,\\s*|\\s+/;a=-1!==d?[a.slice(0,d).concat([a[d].split(f)[0]]),[a[d].split(f)[1]].concat(a.slice(d+1))]:[a];a=a.map(function(a,d){var e=(1===d?!g:g)?\"height\":\"width\",f=!1;return a.reduce(function(a,b){return\"\"===a[a.length-1]&&-1!==[\"+\",\"-\"].indexOf(b)?(a[a.length-1]=b,f=!0,a):f?(a[a.length-1]+=b,f=!1,a):a.concat(b)},[]).map(function(a){var d=a.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);var g=+d[1];d=d[2];\nif(g)if(0===d.indexOf(\"%\")){switch(d){case \"%p\":a=b;break;default:a=c}g*=z(a)[e]/100}else g=\"vh\"===d||\"vw\"===d?(\"vh\"===d?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*g:g;else g=a;return g})});a.forEach(function(a,b){a.forEach(function(c,d){U(c)&&(e[b]+=c*(\"-\"===a[d-1]?-1:1))})});return e}for(var aa=\"undefined\"!==typeof window&&\"undefined\"!==typeof document,V=[\"Edge\",\"Trident\",\"Firefox\"],Ea=0,Fa=0;Fa<\nV.length;Fa+=1)if(aa&&0<=navigator.userAgent.indexOf(V[Fa])){Ea=1;break}var Pa=aa&&window.Promise?a:c,wa=aa&&!(!window.MSInputMethodContext||!document.documentMode),xa=aa&&/MSIE 10/.test(navigator.userAgent),ic=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;\"value\"in d&&(d.writable=!0);Object.defineProperty(a,d.key,d)}}return function(b,c,d){c&&a(b.prototype,c);d&&a(b,d);return b}}(),Ra=function(a,b,c){b in a?Object.defineProperty(a,\nb,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a},ca=Object.assign||function(a){for(var b=1;b<arguments.length;b++){var c=arguments[b],d;for(d in c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d])}return a};aa=\"auto-start auto auto-end top-start top top-end right-start right right-end bottom-end bottom bottom-start left-end left left-start\".split(\" \");var lb=aa.slice(3);V=function(){function a(b,c){var d=this,g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};\nif(!(this instanceof a))throw new TypeError(\"Cannot call a class as a function\");this.scheduleUpdate=function(){return requestAnimationFrame(d.update)};this.update=Pa(this.update.bind(this));this.options=ca({},a.Defaults,g);this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]};this.reference=b&&b.jquery?b[0]:b;this.popper=c&&c.jquery?c[0]:c;this.options.modifiers={};Object.keys(ca({},a.Defaults.modifiers,g.modifiers)).forEach(function(b){d.options.modifiers[b]=ca({},a.Defaults.modifiers[b]||{},\ng.modifiers?g.modifiers[b]:{})});this.modifiers=Object.keys(this.options.modifiers).map(function(a){return ca({name:a},d.options.modifiers[a])}).sort(function(a,b){return a.order-b.order});this.modifiers.forEach(function(a){if(a.enabled&&e(a.onLoad))a.onLoad(d.reference,d.popper,d.options,a,d.state)});this.update();var f=this.options.eventsEnabled;f&&this.enableEventListeners();this.state.eventsEnabled=f}ic(a,[{key:\"update\",value:function(){if(!this.state.isDestroyed){var a={instance:this,styles:{},\narrowStyles:{},attributes:{},flipped:!1,offsets:{}};a.offsets.reference=G(this.state,this.popper,this.reference,this.options.positionFixed);a.placement=L(this.options.placement,a.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding);a.originalPlacement=a.placement;a.positionFixed=this.options.positionFixed;a.offsets.popper=N(this.popper,a.offsets.reference,a.placement);a.offsets.popper.position=this.options.positionFixed?\"fixed\":\n\"absolute\";a=O(this.modifiers,a);if(this.state.isCreated)this.options.onUpdate(a);else this.state.isCreated=!0,this.options.onCreate(a)}}},{key:\"destroy\",value:function(){this.state.isDestroyed=!0;I(this.modifiers,\"applyStyle\")&&(this.popper.removeAttribute(\"x-placement\"),this.popper.style.position=\"\",this.popper.style.top=\"\",this.popper.style.left=\"\",this.popper.style.right=\"\",this.popper.style.bottom=\"\",this.popper.style.willChange=\"\",this.popper.style[J(\"transform\")]=\"\");this.disableEventListeners();\nthis.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper);return this}},{key:\"enableEventListeners\",value:function(){if(!this.state.eventsEnabled){var a=this.reference,b=this.state;b.updateBound=this.scheduleUpdate;Q(a).addEventListener(\"resize\",b.updateBound,{passive:!0});a=m(a);T(a,\"scroll\",b.updateBound,b.scrollParents);b.scrollElement=a;b.eventsEnabled=!0;this.state=b}}},{key:\"disableEventListeners\",value:function(){this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),\nthis.state=W(this.reference,this.state))}}]);return a}();V.Utils=(\"undefined\"!==typeof window?window:b).PopperUtils;V.placements=aa;V.Defaults={placement:\"bottom\",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(a){var b=a.placement,c=b.split(\"-\")[0];if(b=b.split(\"-\")[1]){var d=a.offsets,e=d.reference;d=d.popper;var g=-1!==[\"bottom\",\"top\"].indexOf(c);c=g?\"left\":\"top\";g=g?\"width\":\"height\";e={start:Ra({},\nc,e[c]),end:Ra({},c,e[c]+e[g]-d[g])};a.offsets.popper=ca({},d,e[b])}return a}},offset:{order:200,enabled:!0,fn:function(a,b){var c=b.offset,d=a.offsets;b=d.popper;var e=d.reference;d=a.placement.split(\"-\")[0];c=U(+c)?[+c,0]:la(c,b,e,d);\"left\"===d?(b.top+=c[0],b.left-=c[1]):\"right\"===d?(b.top+=c[0],b.left+=c[1]):\"top\"===d?(b.left+=c[0],b.top-=c[1]):\"bottom\"===d&&(b.left+=c[0],b.top+=c[1]);a.popper=b;return a},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(a,b){var c=b.boundariesElement||\ng(a.instance.popper);a.instance.reference===c&&(c=g(c));var d=J(\"transform\"),e=a.instance.popper.style,f=e.top,h=e.left,k=e[d];e.top=\"\";e.left=\"\";e[d]=\"\";var l=C(a.instance.popper,a.instance.reference,b.padding,c,a.positionFixed);e.top=f;e.left=h;e[d]=k;b.boundaries=l;var n=a.offsets.popper,t={primary:function(a){var c=n[a];n[a]<l[a]&&!b.escapeWithReference&&(c=Math.max(n[a],l[a]));return Ra({},a,c)},secondary:function(a){var c=\"right\"===a?\"left\":\"top\",d=n[c];n[a]>l[a]&&!b.escapeWithReference&&(d=\nMath.min(n[c],l[a]-(\"right\"===a?n.width:n.height)));return Ra({},c,d)}};b.priority.forEach(function(a){var b=-1!==[\"left\",\"top\"].indexOf(a)?\"primary\":\"secondary\";n=ca({},n,t[b](a))});a.offsets.popper=n;return a},priority:[\"left\",\"right\",\"top\",\"bottom\"],padding:5,boundariesElement:\"scrollParent\"},keepTogether:{order:400,enabled:!0,fn:function(a){var b=a.offsets,c=b.popper;b=b.reference;var d=a.placement.split(\"-\")[0],e=Math.floor,g=-1!==[\"top\",\"bottom\"].indexOf(d);d=g?\"right\":\"bottom\";var f=g?\"left\":\n\"top\";g=g?\"width\":\"height\";c[d]<e(b[f])&&(a.offsets.popper[f]=e(b[f])-c[g]);c[f]>e(b[d])&&(a.offsets.popper[f]=e(b[d]));return a}},arrow:{order:500,enabled:!0,fn:function(a,b){var c;if(!fa(a.instance.modifiers,\"arrow\",\"keepTogether\"))return a;b=b.element;if(\"string\"===typeof b){if(b=a.instance.popper.querySelector(b),!b)return a}else if(!a.instance.popper.contains(b))return console.warn(\"WARNING: `arrow.element` must be child of its popper element!\"),a;var d=a.placement.split(\"-\")[0],e=a.offsets,\ng=e.popper,h=e.reference,k=-1!==[\"left\",\"right\"].indexOf(d);d=k?\"height\":\"width\";var l=k?\"Top\":\"Left\";e=l.toLowerCase();var n=k?\"left\":\"top\",t=k?\"bottom\":\"right\";k=P(b)[d];h[t]-k<g[e]&&(a.offsets.popper[e]-=g[e]-(h[t]-k));h[e]+k>g[t]&&(a.offsets.popper[e]+=h[e]+k-g[t]);a.offsets.popper=z(a.offsets.popper);h=h[e]+h[d]/2-k/2;var q=f(a.instance.popper);t=parseFloat(q[\"margin\"+l],10);l=parseFloat(q[\"border\"+l+\"Width\"],10);l=h-a.offsets.popper[e]-t-l;l=Math.max(Math.min(g[d]-k,l),0);a.arrowElement=b;a.offsets.arrow=\n(c={},Ra(c,e,Math.round(l)),Ra(c,n,\"\"),c);return a},element:\"[x-arrow]\"},flip:{order:600,enabled:!0,fn:function(a,b){if(I(a.instance.modifiers,\"inner\")||a.flipped&&a.placement===a.originalPlacement)return a;var c=C(a.instance.popper,a.instance.reference,b.padding,b.boundariesElement,a.positionFixed),d=a.placement.split(\"-\")[0],e=K(d),g=a.placement.split(\"-\")[1]||\"\",f=[];switch(b.behavior){case \"flip\":f=[d,e];break;case \"clockwise\":f=Z(d);break;case \"counterclockwise\":f=Z(d,!0);break;default:f=b.behavior}f.forEach(function(h,\nk){if(d!==h||f.length===k+1)return a;d=a.placement.split(\"-\")[0];e=K(d);var l=a.offsets.popper;h=a.offsets.reference;var n=Math.floor;h=\"left\"===d&&n(l.right)>n(h.left)||\"right\"===d&&n(l.left)<n(h.right)||\"top\"===d&&n(l.bottom)>n(h.top)||\"bottom\"===d&&n(l.top)<n(h.bottom);var t=n(l.left)<n(c.left),q=n(l.right)>n(c.right),p=n(l.top)<n(c.top);n=n(l.bottom)>n(c.bottom);l=\"left\"===d&&t||\"right\"===d&&q||\"top\"===d&&p||\"bottom\"===d&&n;var m=-1!==[\"top\",\"bottom\"].indexOf(d);t=!!b.flipVariations&&(m&&\"start\"===\ng&&t||m&&\"end\"===g&&q||!m&&\"start\"===g&&p||!m&&\"end\"===g&&n);if(h||l||t){a.flipped=!0;if(h||l)d=f[k+1];t&&(\"end\"===g?g=\"start\":\"start\"===g&&(g=\"end\"));a.placement=d+(g?\"-\"+g:\"\");a.offsets.popper=ca({},a.offsets.popper,N(a.instance.popper,a.offsets.reference,a.placement));a=O(a.instance.modifiers,a,\"flip\")}});return a},behavior:\"flip\",padding:5,boundariesElement:\"viewport\"},inner:{order:700,enabled:!1,fn:function(a){var b=a.placement,c=b.split(\"-\")[0],d=a.offsets,e=d.popper;d=d.reference;var g=-1!==\n[\"left\",\"right\"].indexOf(c),f=-1===[\"top\",\"left\"].indexOf(c);e[g?\"left\":\"top\"]=d[c]-(f?e[g?\"width\":\"height\"]:0);a.placement=K(b);a.offsets.popper=z(e);return a}},hide:{order:800,enabled:!0,fn:function(a){if(!fa(a.instance.modifiers,\"hide\",\"preventOverflow\"))return a;var b=a.offsets.reference,c=M(a.instance.modifiers,function(a){return\"preventOverflow\"===a.name}).boundaries;if(b.bottom<c.top||b.left>c.right||b.top>c.bottom||b.right<c.left){if(!0===a.hide)return a;a.hide=!0;a.attributes[\"x-out-of-boundaries\"]=\n\"\"}else{if(!1===a.hide)return a;a.hide=!1;a.attributes[\"x-out-of-boundaries\"]=!1}return a}},computeStyle:{order:850,enabled:!0,fn:function(a,b){var c=b.x,d=b.y,e=a.offsets.popper,f=M(a.instance.modifiers,function(a){return\"applyStyle\"===a.name}).gpuAcceleration;void 0!==f&&console.warn(\"WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!\");b=void 0!==f?f:b.gpuAcceleration;f=g(a.instance.popper);var h=A(f),k={position:e.position},\nl=Math.floor(e.left),n=Math.round(e.top),t=Math.round(e.bottom);e=Math.floor(e.right);c=\"bottom\"===c?\"top\":\"bottom\";d=\"right\"===d?\"left\":\"right\";var q=J(\"transform\"),p=void 0,m=void 0;m=\"bottom\"===c?\"HTML\"===f.nodeName?-f.clientHeight+t:-h.height+t:n;p=\"right\"===d?\"HTML\"===f.nodeName?-f.clientWidth+e:-h.width+e:l;b&&q?(k[q]=\"translate3d(\"+p+\"px, \"+m+\"px, 0)\",k[c]=0,k[d]=0,k.willChange=\"transform\"):(k[c]=m*(\"bottom\"===c?-1:1),k[d]=p*(\"right\"===d?-1:1),k.willChange=c+\", \"+d);a.attributes=ca({},{\"x-placement\":a.placement},\na.attributes);a.styles=ca({},k,a.styles);a.arrowStyles=ca({},a.offsets.arrow,a.arrowStyles);return a},gpuAcceleration:!0,x:\"bottom\",y:\"right\"},applyStyle:{order:900,enabled:!0,fn:function(a){S(a.instance.popper,a.styles);X(a.instance.popper,a.attributes);a.arrowElement&&Object.keys(a.arrowStyles).length&&S(a.arrowElement,a.arrowStyles);return a},onLoad:function(a,b,c,d,e){d=G(e,b,a,c.positionFixed);a=L(c.placement,d,b,a,c.modifiers.flip.boundariesElement,c.modifiers.flip.padding);b.setAttribute(\"x-placement\",\na);S(b,{position:c.positionFixed?\"fixed\":\"absolute\"});return c},gpuAcceleration:void 0}}};return V})}","~:source","shadow$provide[\"module$node_modules$popper_DOT_js$dist$umd$popper\"] = function(global,process,require,module,exports,shadow$shims) {\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Popper = factory());\n}(this, (function () { 'use strict';\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nreturn Popper;\n\n})));\n//# sourceMappingURL=popper.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["behavior","scrollElement","width","right","passive","priority","top","hide","boundariesElement","arrowStyles","placements","positionFixed","offset","height","preventOverflow","arrow","onUpdate","area","gpuAcceleration","willChange","boundaries","key","originalPlacement","placement","x","computeStyle","secondary","marginTop","padding","enabled","fn","flip","update","removeOnDestroy","arrowElement","eventsEnabled","element","position","name","configurable","value","enumerable","shift","primary","start","writable","marginLeft","styles","modifiers","instance","scheduleUpdate","order","attributes","onCreate","reference","Popper","Utils","y","Defaults","scrollParents","state","bottom","flipped","inner","isCreated","updateBound","applyStyle","onLoad","keepTogether","options","isDestroyed","end","offsets","left","popper"]],"~:compiled-at",1537815743178,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$popper_DOT_js$dist$umd$popper.js\",\n\"lineCount\":40,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/popper_DOT_js/dist/umd/popper.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$popper_DOT_js$dist$umd$popper\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**!\\n * @fileOverview Kickass library to create and place poppers near their reference elements.\\n * @version 1.14.4\\n * @license\\n * Copyright (c) 2016 Federico Zivolo and contributors\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in all\\n * copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n * SOFTWARE.\\n */\\n(function (global, factory) {\\n\\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n\\ttypeof define === 'function' && define.amd ? define(factory) :\\n\\t(global.Popper = factory());\\n}(this, (function () { 'use strict';\\n\\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\\n\\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\\nvar timeoutDuration = 0;\\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\\n    timeoutDuration = 1;\\n    break;\\n  }\\n}\\n\\nfunction microtaskDebounce(fn) {\\n  var called = false;\\n  return function () {\\n    if (called) {\\n      return;\\n    }\\n    called = true;\\n    window.Promise.resolve().then(function () {\\n      called = false;\\n      fn();\\n    });\\n  };\\n}\\n\\nfunction taskDebounce(fn) {\\n  var scheduled = false;\\n  return function () {\\n    if (!scheduled) {\\n      scheduled = true;\\n      setTimeout(function () {\\n        scheduled = false;\\n        fn();\\n      }, timeoutDuration);\\n    }\\n  };\\n}\\n\\nvar supportsMicroTasks = isBrowser && window.Promise;\\n\\n/**\\n* Create a debounced version of a method, that's asynchronously deferred\\n* but called in the minimum time possible.\\n*\\n* @method\\n* @memberof Popper.Utils\\n* @argument {Function} fn\\n* @returns {Function}\\n*/\\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\\n\\n/**\\n * Check if the given variable is a function\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Any} functionToCheck - variable to check\\n * @returns {Boolean} answer to: is a function?\\n */\\nfunction isFunction(functionToCheck) {\\n  var getType = {};\\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\\n}\\n\\n/**\\n * Get CSS computed property of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Eement} element\\n * @argument {String} property\\n */\\nfunction getStyleComputedProperty(element, property) {\\n  if (element.nodeType !== 1) {\\n    return [];\\n  }\\n  // NOTE: 1 DOM access here\\n  var css = getComputedStyle(element, null);\\n  return property ? css[property] : css;\\n}\\n\\n/**\\n * Returns the parentNode or the host of the element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} parent\\n */\\nfunction getParentNode(element) {\\n  if (element.nodeName === 'HTML') {\\n    return element;\\n  }\\n  return element.parentNode || element.host;\\n}\\n\\n/**\\n * Returns the scrolling parent of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} scroll parent\\n */\\nfunction getScrollParent(element) {\\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\\n  if (!element) {\\n    return document.body;\\n  }\\n\\n  switch (element.nodeName) {\\n    case 'HTML':\\n    case 'BODY':\\n      return element.ownerDocument.body;\\n    case '#document':\\n      return element.body;\\n  }\\n\\n  // Firefox want us to check `-x` and `-y` variations as well\\n\\n  var _getStyleComputedProp = getStyleComputedProperty(element),\\n      overflow = _getStyleComputedProp.overflow,\\n      overflowX = _getStyleComputedProp.overflowX,\\n      overflowY = _getStyleComputedProp.overflowY;\\n\\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\\n    return element;\\n  }\\n\\n  return getScrollParent(getParentNode(element));\\n}\\n\\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\\n\\n/**\\n * Determines if the browser is Internet Explorer\\n * @method\\n * @memberof Popper.Utils\\n * @param {Number} version to check\\n * @returns {Boolean} isIE\\n */\\nfunction isIE(version) {\\n  if (version === 11) {\\n    return isIE11;\\n  }\\n  if (version === 10) {\\n    return isIE10;\\n  }\\n  return isIE11 || isIE10;\\n}\\n\\n/**\\n * Returns the offset parent of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} offset parent\\n */\\nfunction getOffsetParent(element) {\\n  if (!element) {\\n    return document.documentElement;\\n  }\\n\\n  var noOffsetParent = isIE(10) ? document.body : null;\\n\\n  // NOTE: 1 DOM access here\\n  var offsetParent = element.offsetParent;\\n  // Skip hidden elements which don't have an offsetParent\\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\\n    offsetParent = (element = element.nextElementSibling).offsetParent;\\n  }\\n\\n  var nodeName = offsetParent && offsetParent.nodeName;\\n\\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\\n    return element ? element.ownerDocument.documentElement : document.documentElement;\\n  }\\n\\n  // .offsetParent will return the closest TD or TABLE in case\\n  // no offsetParent is present, I hate this job...\\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\\n    return getOffsetParent(offsetParent);\\n  }\\n\\n  return offsetParent;\\n}\\n\\nfunction isOffsetContainer(element) {\\n  var nodeName = element.nodeName;\\n\\n  if (nodeName === 'BODY') {\\n    return false;\\n  }\\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\\n}\\n\\n/**\\n * Finds the root node (document, shadowDOM root) of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} node\\n * @returns {Element} root node\\n */\\nfunction getRoot(node) {\\n  if (node.parentNode !== null) {\\n    return getRoot(node.parentNode);\\n  }\\n\\n  return node;\\n}\\n\\n/**\\n * Finds the offset parent common to the two provided nodes\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element1\\n * @argument {Element} element2\\n * @returns {Element} common offset parent\\n */\\nfunction findCommonOffsetParent(element1, element2) {\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\\n    return document.documentElement;\\n  }\\n\\n  // Here we make sure to give as \\\"start\\\" the element that comes first in the DOM\\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\\n  var start = order ? element1 : element2;\\n  var end = order ? element2 : element1;\\n\\n  // Get common ancestor container\\n  var range = document.createRange();\\n  range.setStart(start, 0);\\n  range.setEnd(end, 0);\\n  var commonAncestorContainer = range.commonAncestorContainer;\\n\\n  // Both nodes are inside #document\\n\\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\\n    if (isOffsetContainer(commonAncestorContainer)) {\\n      return commonAncestorContainer;\\n    }\\n\\n    return getOffsetParent(commonAncestorContainer);\\n  }\\n\\n  // one of the nodes is inside shadowDOM, find which one\\n  var element1root = getRoot(element1);\\n  if (element1root.host) {\\n    return findCommonOffsetParent(element1root.host, element2);\\n  } else {\\n    return findCommonOffsetParent(element1, getRoot(element2).host);\\n  }\\n}\\n\\n/**\\n * Gets the scroll value of the given element in the given side (top and left)\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @argument {String} side `top` or `left`\\n * @returns {number} amount of scrolled pixels\\n */\\nfunction getScroll(element) {\\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\\n\\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\\n  var nodeName = element.nodeName;\\n\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\n    var html = element.ownerDocument.documentElement;\\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\\n    return scrollingElement[upperSide];\\n  }\\n\\n  return element[upperSide];\\n}\\n\\n/*\\n * Sum or subtract the element scroll values (left and top) from a given rect object\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} rect - Rect object you want to change\\n * @param {HTMLElement} element - The element from the function reads the scroll values\\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\\n * @return {Object} rect - The modifier rect object\\n */\\nfunction includeScroll(rect, element) {\\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n  var scrollTop = getScroll(element, 'top');\\n  var scrollLeft = getScroll(element, 'left');\\n  var modifier = subtract ? -1 : 1;\\n  rect.top += scrollTop * modifier;\\n  rect.bottom += scrollTop * modifier;\\n  rect.left += scrollLeft * modifier;\\n  rect.right += scrollLeft * modifier;\\n  return rect;\\n}\\n\\n/*\\n * Helper to detect borders of a given element\\n * @method\\n * @memberof Popper.Utils\\n * @param {CSSStyleDeclaration} styles\\n * Result of `getStyleComputedProperty` on the given element\\n * @param {String} axis - `x` or `y`\\n * @return {number} borders - The borders size of the given axis\\n */\\n\\nfunction getBordersSize(styles, axis) {\\n  var sideA = axis === 'x' ? 'Left' : 'Top';\\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\\n\\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\\n}\\n\\nfunction getSize(axis, body, html, computedStyle) {\\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\\n}\\n\\nfunction getWindowSizes(document) {\\n  var body = document.body;\\n  var html = document.documentElement;\\n  var computedStyle = isIE(10) && getComputedStyle(html);\\n\\n  return {\\n    height: getSize('Height', body, html, computedStyle),\\n    width: getSize('Width', body, html, computedStyle)\\n  };\\n}\\n\\nvar classCallCheck = function (instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n};\\n\\nvar createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];\\n      descriptor.enumerable = descriptor.enumerable || false;\\n      descriptor.configurable = true;\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n      Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }\\n\\n  return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n    if (staticProps) defineProperties(Constructor, staticProps);\\n    return Constructor;\\n  };\\n}();\\n\\n\\n\\n\\n\\nvar defineProperty = function (obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n};\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\n/**\\n * Given element offsets, generate an output similar to getBoundingClientRect\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Object} offsets\\n * @returns {Object} ClientRect like output\\n */\\nfunction getClientRect(offsets) {\\n  return _extends({}, offsets, {\\n    right: offsets.left + offsets.width,\\n    bottom: offsets.top + offsets.height\\n  });\\n}\\n\\n/**\\n * Get bounding client rect of given element\\n * @method\\n * @memberof Popper.Utils\\n * @param {HTMLElement} element\\n * @return {Object} client rect\\n */\\nfunction getBoundingClientRect(element) {\\n  var rect = {};\\n\\n  // IE10 10 FIX: Please, don't ask, the element isn't\\n  // considered in DOM in some circumstances...\\n  // This isn't reproducible in IE10 compatibility mode of IE11\\n  try {\\n    if (isIE(10)) {\\n      rect = element.getBoundingClientRect();\\n      var scrollTop = getScroll(element, 'top');\\n      var scrollLeft = getScroll(element, 'left');\\n      rect.top += scrollTop;\\n      rect.left += scrollLeft;\\n      rect.bottom += scrollTop;\\n      rect.right += scrollLeft;\\n    } else {\\n      rect = element.getBoundingClientRect();\\n    }\\n  } catch (e) {}\\n\\n  var result = {\\n    left: rect.left,\\n    top: rect.top,\\n    width: rect.right - rect.left,\\n    height: rect.bottom - rect.top\\n  };\\n\\n  // subtract scrollbar size from sizes\\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\\n  var width = sizes.width || element.clientWidth || result.right - result.left;\\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\\n\\n  var horizScrollbar = element.offsetWidth - width;\\n  var vertScrollbar = element.offsetHeight - height;\\n\\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\\n  // we make this check conditional for performance reasons\\n  if (horizScrollbar || vertScrollbar) {\\n    var styles = getStyleComputedProperty(element);\\n    horizScrollbar -= getBordersSize(styles, 'x');\\n    vertScrollbar -= getBordersSize(styles, 'y');\\n\\n    result.width -= horizScrollbar;\\n    result.height -= vertScrollbar;\\n  }\\n\\n  return getClientRect(result);\\n}\\n\\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n  var isIE10 = isIE(10);\\n  var isHTML = parent.nodeName === 'HTML';\\n  var childrenRect = getBoundingClientRect(children);\\n  var parentRect = getBoundingClientRect(parent);\\n  var scrollParent = getScrollParent(children);\\n\\n  var styles = getStyleComputedProperty(parent);\\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\\n\\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\\n  if (fixedPosition && isHTML) {\\n    parentRect.top = Math.max(parentRect.top, 0);\\n    parentRect.left = Math.max(parentRect.left, 0);\\n  }\\n  var offsets = getClientRect({\\n    top: childrenRect.top - parentRect.top - borderTopWidth,\\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\\n    width: childrenRect.width,\\n    height: childrenRect.height\\n  });\\n  offsets.marginTop = 0;\\n  offsets.marginLeft = 0;\\n\\n  // Subtract margins of documentElement in case it's being used as parent\\n  // we do this only on HTML because it's the only element that behaves\\n  // differently when margins are applied to it. The margins are included in\\n  // the box of the documentElement, in the other cases not.\\n  if (!isIE10 && isHTML) {\\n    var marginTop = parseFloat(styles.marginTop, 10);\\n    var marginLeft = parseFloat(styles.marginLeft, 10);\\n\\n    offsets.top -= borderTopWidth - marginTop;\\n    offsets.bottom -= borderTopWidth - marginTop;\\n    offsets.left -= borderLeftWidth - marginLeft;\\n    offsets.right -= borderLeftWidth - marginLeft;\\n\\n    // Attach marginTop and marginLeft because in some circumstances we may need them\\n    offsets.marginTop = marginTop;\\n    offsets.marginLeft = marginLeft;\\n  }\\n\\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\\n    offsets = includeScroll(offsets, parent);\\n  }\\n\\n  return offsets;\\n}\\n\\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n\\n  var html = element.ownerDocument.documentElement;\\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\\n\\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\\n\\n  var offset = {\\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\\n    width: width,\\n    height: height\\n  };\\n\\n  return getClientRect(offset);\\n}\\n\\n/**\\n * Check if the given element is fixed or is inside a fixed parent\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @argument {Element} customContainer\\n * @returns {Boolean} answer to \\\"isFixed?\\\"\\n */\\nfunction isFixed(element) {\\n  var nodeName = element.nodeName;\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\n    return false;\\n  }\\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\\n    return true;\\n  }\\n  return isFixed(getParentNode(element));\\n}\\n\\n/**\\n * Finds the first parent of an element that has a transformed property defined\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} first transformed parent or documentElement\\n */\\n\\nfunction getFixedPositionOffsetParent(element) {\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\n  if (!element || !element.parentElement || isIE()) {\\n    return document.documentElement;\\n  }\\n  var el = element.parentElement;\\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\\n    el = el.parentElement;\\n  }\\n  return el || document.documentElement;\\n}\\n\\n/**\\n * Computed the boundaries limits and return them\\n * @method\\n * @memberof Popper.Utils\\n * @param {HTMLElement} popper\\n * @param {HTMLElement} reference\\n * @param {number} padding\\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\\n * @param {Boolean} fixedPosition - Is in fixed position mode\\n * @returns {Object} Coordinates of the boundaries\\n */\\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\\n\\n  // NOTE: 1 DOM access here\\n\\n  var boundaries = { top: 0, left: 0 };\\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\\n\\n  // Handle viewport case\\n  if (boundariesElement === 'viewport') {\\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\\n  } else {\\n    // Handle other cases based on DOM element used as boundaries\\n    var boundariesNode = void 0;\\n    if (boundariesElement === 'scrollParent') {\\n      boundariesNode = getScrollParent(getParentNode(reference));\\n      if (boundariesNode.nodeName === 'BODY') {\\n        boundariesNode = popper.ownerDocument.documentElement;\\n      }\\n    } else if (boundariesElement === 'window') {\\n      boundariesNode = popper.ownerDocument.documentElement;\\n    } else {\\n      boundariesNode = boundariesElement;\\n    }\\n\\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\\n\\n    // In case of HTML, we need a different computation\\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\\n          height = _getWindowSizes.height,\\n          width = _getWindowSizes.width;\\n\\n      boundaries.top += offsets.top - offsets.marginTop;\\n      boundaries.bottom = height + offsets.top;\\n      boundaries.left += offsets.left - offsets.marginLeft;\\n      boundaries.right = width + offsets.left;\\n    } else {\\n      // for all the other DOM elements, this one is good\\n      boundaries = offsets;\\n    }\\n  }\\n\\n  // Add paddings\\n  padding = padding || 0;\\n  var isPaddingNumber = typeof padding === 'number';\\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\\n\\n  return boundaries;\\n}\\n\\nfunction getArea(_ref) {\\n  var width = _ref.width,\\n      height = _ref.height;\\n\\n  return width * height;\\n}\\n\\n/**\\n * Utility used to transform the `auto` placement to the placement with more\\n * available space.\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\\n\\n  if (placement.indexOf('auto') === -1) {\\n    return placement;\\n  }\\n\\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\\n\\n  var rects = {\\n    top: {\\n      width: boundaries.width,\\n      height: refRect.top - boundaries.top\\n    },\\n    right: {\\n      width: boundaries.right - refRect.right,\\n      height: boundaries.height\\n    },\\n    bottom: {\\n      width: boundaries.width,\\n      height: boundaries.bottom - refRect.bottom\\n    },\\n    left: {\\n      width: refRect.left - boundaries.left,\\n      height: boundaries.height\\n    }\\n  };\\n\\n  var sortedAreas = Object.keys(rects).map(function (key) {\\n    return _extends({\\n      key: key\\n    }, rects[key], {\\n      area: getArea(rects[key])\\n    });\\n  }).sort(function (a, b) {\\n    return b.area - a.area;\\n  });\\n\\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\\n    var width = _ref2.width,\\n        height = _ref2.height;\\n    return width >= popper.clientWidth && height >= popper.clientHeight;\\n  });\\n\\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\\n\\n  var variation = placement.split('-')[1];\\n\\n  return computedPlacement + (variation ? '-' + variation : '');\\n}\\n\\n/**\\n * Get offsets to the reference element\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} state\\n * @param {Element} popper - the popper element\\n * @param {Element} reference - the reference element (the popper will be relative to this)\\n * @param {Element} fixedPosition - is in fixed position mode\\n * @returns {Object} An object containing the offsets which will be applied to the popper\\n */\\nfunction getReferenceOffsets(state, popper, reference) {\\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\\n\\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\\n}\\n\\n/**\\n * Get the outer sizes of the given element (offset size + margins)\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Object} object containing width and height properties\\n */\\nfunction getOuterSizes(element) {\\n  var styles = getComputedStyle(element);\\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\\n  var result = {\\n    width: element.offsetWidth + y,\\n    height: element.offsetHeight + x\\n  };\\n  return result;\\n}\\n\\n/**\\n * Get the opposite placement of the given one\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement\\n * @returns {String} flipped placement\\n */\\nfunction getOppositePlacement(placement) {\\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\\n    return hash[matched];\\n  });\\n}\\n\\n/**\\n * Get offsets to the popper\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} position - CSS position the Popper will get applied\\n * @param {HTMLElement} popper - the popper element\\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\\n * @param {String} placement - one of the valid placement options\\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\\n */\\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\\n  placement = placement.split('-')[0];\\n\\n  // Get popper node sizes\\n  var popperRect = getOuterSizes(popper);\\n\\n  // Add position, width and height to our offsets object\\n  var popperOffsets = {\\n    width: popperRect.width,\\n    height: popperRect.height\\n  };\\n\\n  // depending by the popper placement we have to compute its offsets slightly differently\\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\\n  var mainSide = isHoriz ? 'top' : 'left';\\n  var secondarySide = isHoriz ? 'left' : 'top';\\n  var measurement = isHoriz ? 'height' : 'width';\\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\\n\\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\\n  if (placement === secondarySide) {\\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\\n  } else {\\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\\n  }\\n\\n  return popperOffsets;\\n}\\n\\n/**\\n * Mimics the `find` method of Array\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Array} arr\\n * @argument prop\\n * @argument value\\n * @returns index or -1\\n */\\nfunction find(arr, check) {\\n  // use native find if supported\\n  if (Array.prototype.find) {\\n    return arr.find(check);\\n  }\\n\\n  // use `filter` to obtain the same behavior of `find`\\n  return arr.filter(check)[0];\\n}\\n\\n/**\\n * Return the index of the matching object\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Array} arr\\n * @argument prop\\n * @argument value\\n * @returns index or -1\\n */\\nfunction findIndex(arr, prop, value) {\\n  // use native findIndex if supported\\n  if (Array.prototype.findIndex) {\\n    return arr.findIndex(function (cur) {\\n      return cur[prop] === value;\\n    });\\n  }\\n\\n  // use `find` + `indexOf` if `findIndex` isn't supported\\n  var match = find(arr, function (obj) {\\n    return obj[prop] === value;\\n  });\\n  return arr.indexOf(match);\\n}\\n\\n/**\\n * Loop trough the list of modifiers and run them in order,\\n * each of them will then edit the data object.\\n * @method\\n * @memberof Popper.Utils\\n * @param {dataObject} data\\n * @param {Array} modifiers\\n * @param {String} ends - Optional modifier name used as stopper\\n * @returns {dataObject}\\n */\\nfunction runModifiers(modifiers, data, ends) {\\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\\n\\n  modifiersToRun.forEach(function (modifier) {\\n    if (modifier['function']) {\\n      // eslint-disable-line dot-notation\\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\\n    }\\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\\n    if (modifier.enabled && isFunction(fn)) {\\n      // Add properties to offsets to make them a complete clientRect object\\n      // we do this before each modifier to make sure the previous one doesn't\\n      // mess with these values\\n      data.offsets.popper = getClientRect(data.offsets.popper);\\n      data.offsets.reference = getClientRect(data.offsets.reference);\\n\\n      data = fn(data, modifier);\\n    }\\n  });\\n\\n  return data;\\n}\\n\\n/**\\n * Updates the position of the popper, computing the new offsets and applying\\n * the new style.<br />\\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\\n * @method\\n * @memberof Popper\\n */\\nfunction update() {\\n  // if popper is destroyed, don't perform any further update\\n  if (this.state.isDestroyed) {\\n    return;\\n  }\\n\\n  var data = {\\n    instance: this,\\n    styles: {},\\n    arrowStyles: {},\\n    attributes: {},\\n    flipped: false,\\n    offsets: {}\\n  };\\n\\n  // compute reference element offsets\\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\\n\\n  // compute auto placement, store placement inside the data object,\\n  // modifiers will be able to edit `placement` if needed\\n  // and refer to originalPlacement to know the original value\\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\\n\\n  // store the computed placement inside `originalPlacement`\\n  data.originalPlacement = data.placement;\\n\\n  data.positionFixed = this.options.positionFixed;\\n\\n  // compute the popper offsets\\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\\n\\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\\n\\n  // run the modifiers\\n  data = runModifiers(this.modifiers, data);\\n\\n  // the first `update` will call `onCreate` callback\\n  // the other ones will call `onUpdate` callback\\n  if (!this.state.isCreated) {\\n    this.state.isCreated = true;\\n    this.options.onCreate(data);\\n  } else {\\n    this.options.onUpdate(data);\\n  }\\n}\\n\\n/**\\n * Helper used to know if the given modifier is enabled.\\n * @method\\n * @memberof Popper.Utils\\n * @returns {Boolean}\\n */\\nfunction isModifierEnabled(modifiers, modifierName) {\\n  return modifiers.some(function (_ref) {\\n    var name = _ref.name,\\n        enabled = _ref.enabled;\\n    return enabled && name === modifierName;\\n  });\\n}\\n\\n/**\\n * Get the prefixed supported property name\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} property (camelCase)\\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\\n */\\nfunction getSupportedPropertyName(property) {\\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\\n\\n  for (var i = 0; i < prefixes.length; i++) {\\n    var prefix = prefixes[i];\\n    var toCheck = prefix ? '' + prefix + upperProp : property;\\n    if (typeof document.body.style[toCheck] !== 'undefined') {\\n      return toCheck;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * Destroys the popper.\\n * @method\\n * @memberof Popper\\n */\\nfunction destroy() {\\n  this.state.isDestroyed = true;\\n\\n  // touch DOM only if `applyStyle` modifier is enabled\\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\\n    this.popper.removeAttribute('x-placement');\\n    this.popper.style.position = '';\\n    this.popper.style.top = '';\\n    this.popper.style.left = '';\\n    this.popper.style.right = '';\\n    this.popper.style.bottom = '';\\n    this.popper.style.willChange = '';\\n    this.popper.style[getSupportedPropertyName('transform')] = '';\\n  }\\n\\n  this.disableEventListeners();\\n\\n  // remove the popper if user explicity asked for the deletion on destroy\\n  // do not use `remove` because IE11 doesn't support it\\n  if (this.options.removeOnDestroy) {\\n    this.popper.parentNode.removeChild(this.popper);\\n  }\\n  return this;\\n}\\n\\n/**\\n * Get the window associated with the element\\n * @argument {Element} element\\n * @returns {Window}\\n */\\nfunction getWindow(element) {\\n  var ownerDocument = element.ownerDocument;\\n  return ownerDocument ? ownerDocument.defaultView : window;\\n}\\n\\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\\n  var isBody = scrollParent.nodeName === 'BODY';\\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\\n  target.addEventListener(event, callback, { passive: true });\\n\\n  if (!isBody) {\\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\\n  }\\n  scrollParents.push(target);\\n}\\n\\n/**\\n * Setup needed event listeners used to update the popper position\\n * @method\\n * @memberof Popper.Utils\\n * @private\\n */\\nfunction setupEventListeners(reference, options, state, updateBound) {\\n  // Resize event listener on window\\n  state.updateBound = updateBound;\\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\\n\\n  // Scroll event listener on scroll parents\\n  var scrollElement = getScrollParent(reference);\\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\\n  state.scrollElement = scrollElement;\\n  state.eventsEnabled = true;\\n\\n  return state;\\n}\\n\\n/**\\n * It will add resize/scroll events and start recalculating\\n * position of the popper element when they are triggered.\\n * @method\\n * @memberof Popper\\n */\\nfunction enableEventListeners() {\\n  if (!this.state.eventsEnabled) {\\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\\n  }\\n}\\n\\n/**\\n * Remove event listeners used to update the popper position\\n * @method\\n * @memberof Popper.Utils\\n * @private\\n */\\nfunction removeEventListeners(reference, state) {\\n  // Remove resize event listener on window\\n  getWindow(reference).removeEventListener('resize', state.updateBound);\\n\\n  // Remove scroll event listener on scroll parents\\n  state.scrollParents.forEach(function (target) {\\n    target.removeEventListener('scroll', state.updateBound);\\n  });\\n\\n  // Reset state\\n  state.updateBound = null;\\n  state.scrollParents = [];\\n  state.scrollElement = null;\\n  state.eventsEnabled = false;\\n  return state;\\n}\\n\\n/**\\n * It will remove resize/scroll events and won't recalculate popper position\\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\\n * unless you call `update` method manually.\\n * @method\\n * @memberof Popper\\n */\\nfunction disableEventListeners() {\\n  if (this.state.eventsEnabled) {\\n    cancelAnimationFrame(this.scheduleUpdate);\\n    this.state = removeEventListeners(this.reference, this.state);\\n  }\\n}\\n\\n/**\\n * Tells if a given input is a number\\n * @method\\n * @memberof Popper.Utils\\n * @param {*} input to check\\n * @return {Boolean}\\n */\\nfunction isNumeric(n) {\\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\\n}\\n\\n/**\\n * Set the style to the given popper\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element - Element to apply the style to\\n * @argument {Object} styles\\n * Object with a list of properties and values which will be applied to the element\\n */\\nfunction setStyles(element, styles) {\\n  Object.keys(styles).forEach(function (prop) {\\n    var unit = '';\\n    // add unit if the value is numeric and is one of the following\\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\\n      unit = 'px';\\n    }\\n    element.style[prop] = styles[prop] + unit;\\n  });\\n}\\n\\n/**\\n * Set the attributes to the given popper\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element - Element to apply the attributes to\\n * @argument {Object} styles\\n * Object with a list of properties and values which will be applied to the element\\n */\\nfunction setAttributes(element, attributes) {\\n  Object.keys(attributes).forEach(function (prop) {\\n    var value = attributes[prop];\\n    if (value !== false) {\\n      element.setAttribute(prop, attributes[prop]);\\n    } else {\\n      element.removeAttribute(prop);\\n    }\\n  });\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The same data object\\n */\\nfunction applyStyle(data) {\\n  // any property present in `data.styles` will be applied to the popper,\\n  // in this way we can make the 3rd party modifiers add custom styles to it\\n  // Be aware, modifiers could override the properties defined in the previous\\n  // lines of this modifier!\\n  setStyles(data.instance.popper, data.styles);\\n\\n  // any property present in `data.attributes` will be applied to the popper,\\n  // they will be set as HTML attributes of the element\\n  setAttributes(data.instance.popper, data.attributes);\\n\\n  // if arrowElement is defined and arrowStyles has some properties\\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\\n    setStyles(data.arrowElement, data.arrowStyles);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * Set the x-placement attribute before everything else because it could be used\\n * to add margins to the popper margins needs to be calculated to get the\\n * correct popper offsets.\\n * @method\\n * @memberof Popper.modifiers\\n * @param {HTMLElement} reference - The reference element used to position the popper\\n * @param {HTMLElement} popper - The HTML element used as popper\\n * @param {Object} options - Popper.js options\\n */\\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\\n  // compute reference element offsets\\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\\n\\n  // compute auto placement, store placement inside the data object,\\n  // modifiers will be able to edit `placement` if needed\\n  // and refer to originalPlacement to know the original value\\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\\n\\n  popper.setAttribute('x-placement', placement);\\n\\n  // Apply `position` to popper before anything else because\\n  // without the position applied we can't guarantee correct computations\\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\\n\\n  return options;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction computeStyle(data, options) {\\n  var x = options.x,\\n      y = options.y;\\n  var popper = data.offsets.popper;\\n\\n  // Remove this legacy support in Popper.js v2\\n\\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\\n    return modifier.name === 'applyStyle';\\n  }).gpuAcceleration;\\n  if (legacyGpuAccelerationOption !== undefined) {\\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\\n  }\\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\\n\\n  var offsetParent = getOffsetParent(data.instance.popper);\\n  var offsetParentRect = getBoundingClientRect(offsetParent);\\n\\n  // Styles\\n  var styles = {\\n    position: popper.position\\n  };\\n\\n  // Avoid blurry text by using full pixel integers.\\n  // For pixel-perfect positioning, top/bottom prefers rounded\\n  // values, while left/right prefers floored values.\\n  var offsets = {\\n    left: Math.floor(popper.left),\\n    top: Math.round(popper.top),\\n    bottom: Math.round(popper.bottom),\\n    right: Math.floor(popper.right)\\n  };\\n\\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\\n  var sideB = y === 'right' ? 'left' : 'right';\\n\\n  // if gpuAcceleration is set to `true` and transform is supported,\\n  //  we use `translate3d` to apply the position to the popper we\\n  // automatically use the supported prefixed version if needed\\n  var prefixedProperty = getSupportedPropertyName('transform');\\n\\n  // now, let's make a step back and look at this code closely (wtf?)\\n  // If the content of the popper grows once it's been positioned, it\\n  // may happen that the popper gets misplaced because of the new content\\n  // overflowing its reference element\\n  // To avoid this problem, we provide two options (x and y), which allow\\n  // the consumer to define the offset origin.\\n  // If we position a popper on top of a reference element, we can set\\n  // `x` to `top` to make the popper grow towards its top instead of\\n  // its bottom.\\n  var left = void 0,\\n      top = void 0;\\n  if (sideA === 'bottom') {\\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\\n    // and not the bottom of the html element\\n    if (offsetParent.nodeName === 'HTML') {\\n      top = -offsetParent.clientHeight + offsets.bottom;\\n    } else {\\n      top = -offsetParentRect.height + offsets.bottom;\\n    }\\n  } else {\\n    top = offsets.top;\\n  }\\n  if (sideB === 'right') {\\n    if (offsetParent.nodeName === 'HTML') {\\n      left = -offsetParent.clientWidth + offsets.right;\\n    } else {\\n      left = -offsetParentRect.width + offsets.right;\\n    }\\n  } else {\\n    left = offsets.left;\\n  }\\n  if (gpuAcceleration && prefixedProperty) {\\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\\n    styles[sideA] = 0;\\n    styles[sideB] = 0;\\n    styles.willChange = 'transform';\\n  } else {\\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\\n    var invertTop = sideA === 'bottom' ? -1 : 1;\\n    var invertLeft = sideB === 'right' ? -1 : 1;\\n    styles[sideA] = top * invertTop;\\n    styles[sideB] = left * invertLeft;\\n    styles.willChange = sideA + ', ' + sideB;\\n  }\\n\\n  // Attributes\\n  var attributes = {\\n    'x-placement': data.placement\\n  };\\n\\n  // Update `data` attributes, styles and arrowStyles\\n  data.attributes = _extends({}, attributes, data.attributes);\\n  data.styles = _extends({}, styles, data.styles);\\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\\n\\n  return data;\\n}\\n\\n/**\\n * Helper used to know if the given modifier depends from another one.<br />\\n * It checks if the needed modifier is listed and enabled.\\n * @method\\n * @memberof Popper.Utils\\n * @param {Array} modifiers - list of modifiers\\n * @param {String} requestingName - name of requesting modifier\\n * @param {String} requestedName - name of requested modifier\\n * @returns {Boolean}\\n */\\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\\n  var requesting = find(modifiers, function (_ref) {\\n    var name = _ref.name;\\n    return name === requestingName;\\n  });\\n\\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\\n  });\\n\\n  if (!isRequired) {\\n    var _requesting = '`' + requestingName + '`';\\n    var requested = '`' + requestedName + '`';\\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\\n  }\\n  return isRequired;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction arrow(data, options) {\\n  var _data$offsets$arrow;\\n\\n  // arrow depends on keepTogether in order to work\\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\\n    return data;\\n  }\\n\\n  var arrowElement = options.element;\\n\\n  // if arrowElement is a string, suppose it's a CSS selector\\n  if (typeof arrowElement === 'string') {\\n    arrowElement = data.instance.popper.querySelector(arrowElement);\\n\\n    // if arrowElement is not found, don't run the modifier\\n    if (!arrowElement) {\\n      return data;\\n    }\\n  } else {\\n    // if the arrowElement isn't a query selector we must check that the\\n    // provided DOM node is child of its popper node\\n    if (!data.instance.popper.contains(arrowElement)) {\\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\\n      return data;\\n    }\\n  }\\n\\n  var placement = data.placement.split('-')[0];\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\\n\\n  var len = isVertical ? 'height' : 'width';\\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\\n  var side = sideCapitalized.toLowerCase();\\n  var altSide = isVertical ? 'left' : 'top';\\n  var opSide = isVertical ? 'bottom' : 'right';\\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\\n\\n  //\\n  // extends keepTogether behavior making sure the popper and its\\n  // reference have enough pixels in conjunction\\n  //\\n\\n  // top/left side\\n  if (reference[opSide] - arrowElementSize < popper[side]) {\\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\\n  }\\n  // bottom/right side\\n  if (reference[side] + arrowElementSize > popper[opSide]) {\\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\\n  }\\n  data.offsets.popper = getClientRect(data.offsets.popper);\\n\\n  // compute center of the popper\\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\\n\\n  // Compute the sideValue using the updated popper offsets\\n  // take popper margin in account because we don't have this info available\\n  var css = getStyleComputedProperty(data.instance.popper);\\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\\n\\n  // prevent arrowElement from being placed not contiguously to its popper\\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\\n\\n  data.arrowElement = arrowElement;\\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\\n\\n  return data;\\n}\\n\\n/**\\n * Get the opposite placement variation of the given one\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement variation\\n * @returns {String} flipped placement variation\\n */\\nfunction getOppositeVariation(variation) {\\n  if (variation === 'end') {\\n    return 'start';\\n  } else if (variation === 'start') {\\n    return 'end';\\n  }\\n  return variation;\\n}\\n\\n/**\\n * List of accepted placements to use as values of the `placement` option.<br />\\n * Valid placements are:\\n * - `auto`\\n * - `top`\\n * - `right`\\n * - `bottom`\\n * - `left`\\n *\\n * Each placement can have a variation from this list:\\n * - `-start`\\n * - `-end`\\n *\\n * Variations are interpreted easily if you think of them as the left to right\\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\\n * is right.<br />\\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\\n *\\n * Some valid examples are:\\n * - `top-end` (on top of reference, right aligned)\\n * - `right-start` (on right of reference, top aligned)\\n * - `bottom` (on bottom, centered)\\n * - `auto-end` (on the side with more space available, alignment depends by placement)\\n *\\n * @static\\n * @type {Array}\\n * @enum {String}\\n * @readonly\\n * @method placements\\n * @memberof Popper\\n */\\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\\n\\n// Get rid of `auto` `auto-start` and `auto-end`\\nvar validPlacements = placements.slice(3);\\n\\n/**\\n * Given an initial placement, returns all the subsequent placements\\n * clockwise (or counter-clockwise).\\n *\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement - A valid placement (it accepts variations)\\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\\n * @returns {Array} placements including their variations\\n */\\nfunction clockwise(placement) {\\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n\\n  var index = validPlacements.indexOf(placement);\\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\\n  return counter ? arr.reverse() : arr;\\n}\\n\\nvar BEHAVIORS = {\\n  FLIP: 'flip',\\n  CLOCKWISE: 'clockwise',\\n  COUNTERCLOCKWISE: 'counterclockwise'\\n};\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction flip(data, options) {\\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\\n    return data;\\n  }\\n\\n  if (data.flipped && data.placement === data.originalPlacement) {\\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\\n    return data;\\n  }\\n\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\\n\\n  var placement = data.placement.split('-')[0];\\n  var placementOpposite = getOppositePlacement(placement);\\n  var variation = data.placement.split('-')[1] || '';\\n\\n  var flipOrder = [];\\n\\n  switch (options.behavior) {\\n    case BEHAVIORS.FLIP:\\n      flipOrder = [placement, placementOpposite];\\n      break;\\n    case BEHAVIORS.CLOCKWISE:\\n      flipOrder = clockwise(placement);\\n      break;\\n    case BEHAVIORS.COUNTERCLOCKWISE:\\n      flipOrder = clockwise(placement, true);\\n      break;\\n    default:\\n      flipOrder = options.behavior;\\n  }\\n\\n  flipOrder.forEach(function (step, index) {\\n    if (placement !== step || flipOrder.length === index + 1) {\\n      return data;\\n    }\\n\\n    placement = data.placement.split('-')[0];\\n    placementOpposite = getOppositePlacement(placement);\\n\\n    var popperOffsets = data.offsets.popper;\\n    var refOffsets = data.offsets.reference;\\n\\n    // using floor because the reference offsets may contain decimals we are not going to consider here\\n    var floor = Math.floor;\\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\\n\\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\\n\\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\\n\\n    // flip the variation if required\\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\\n\\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\\n      // this boolean to detect any flip loop\\n      data.flipped = true;\\n\\n      if (overlapsRef || overflowsBoundaries) {\\n        placement = flipOrder[index + 1];\\n      }\\n\\n      if (flippedVariation) {\\n        variation = getOppositeVariation(variation);\\n      }\\n\\n      data.placement = placement + (variation ? '-' + variation : '');\\n\\n      // this object contains `position`, we want to preserve it along with\\n      // any additional property we may add in the future\\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\\n\\n      data = runModifiers(data.instance.modifiers, data, 'flip');\\n    }\\n  });\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction keepTogether(data) {\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var placement = data.placement.split('-')[0];\\n  var floor = Math.floor;\\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\n  var side = isVertical ? 'right' : 'bottom';\\n  var opSide = isVertical ? 'left' : 'top';\\n  var measurement = isVertical ? 'width' : 'height';\\n\\n  if (popper[side] < floor(reference[opSide])) {\\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\\n  }\\n  if (popper[opSide] > floor(reference[side])) {\\n    data.offsets.popper[opSide] = floor(reference[side]);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * Converts a string containing value + unit into a px value number\\n * @function\\n * @memberof {modifiers~offset}\\n * @private\\n * @argument {String} str - Value + unit string\\n * @argument {String} measurement - `height` or `width`\\n * @argument {Object} popperOffsets\\n * @argument {Object} referenceOffsets\\n * @returns {Number|String}\\n * Value in pixels, or original string if no values were extracted\\n */\\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\\n  // separate value from unit\\n  var split = str.match(/((?:\\\\-|\\\\+)?\\\\d*\\\\.?\\\\d*)(.*)/);\\n  var value = +split[1];\\n  var unit = split[2];\\n\\n  // If it's not a number it's an operator, I guess\\n  if (!value) {\\n    return str;\\n  }\\n\\n  if (unit.indexOf('%') === 0) {\\n    var element = void 0;\\n    switch (unit) {\\n      case '%p':\\n        element = popperOffsets;\\n        break;\\n      case '%':\\n      case '%r':\\n      default:\\n        element = referenceOffsets;\\n    }\\n\\n    var rect = getClientRect(element);\\n    return rect[measurement] / 100 * value;\\n  } else if (unit === 'vh' || unit === 'vw') {\\n    // if is a vh or vw, we calculate the size based on the viewport\\n    var size = void 0;\\n    if (unit === 'vh') {\\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\\n    } else {\\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\\n    }\\n    return size / 100 * value;\\n  } else {\\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\\n    // if is an implicit unit, it's px, and we return just the value\\n    return value;\\n  }\\n}\\n\\n/**\\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\\n * @function\\n * @memberof {modifiers~offset}\\n * @private\\n * @argument {String} offset\\n * @argument {Object} popperOffsets\\n * @argument {Object} referenceOffsets\\n * @argument {String} basePlacement\\n * @returns {Array} a two cells array with x and y offsets in numbers\\n */\\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\\n  var offsets = [0, 0];\\n\\n  // Use height if placement is left or right and index is 0 otherwise use width\\n  // in this way the first offset will use an axis and the second one\\n  // will use the other one\\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\\n\\n  // Split the offset string to obtain a list of values and operands\\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\\n  var fragments = offset.split(/(\\\\+|\\\\-)/).map(function (frag) {\\n    return frag.trim();\\n  });\\n\\n  // Detect if the offset string contains a pair of values or a single one\\n  // they could be separated by comma or space\\n  var divider = fragments.indexOf(find(fragments, function (frag) {\\n    return frag.search(/,|\\\\s/) !== -1;\\n  }));\\n\\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\\n  }\\n\\n  // If divider is found, we divide the list of values and operands to divide\\n  // them by ofset X and Y.\\n  var splitRegex = /\\\\s*,\\\\s*|\\\\s+/;\\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\\n\\n  // Convert the values with units to absolute pixels to allow our computations\\n  ops = ops.map(function (op, index) {\\n    // Most of the units rely on the orientation of the popper\\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\\n    var mergeWithPrevious = false;\\n    return op\\n    // This aggregates any `+` or `-` sign that aren't considered operators\\n    // e.g.: 10 + +5 => [10, +, +5]\\n    .reduce(function (a, b) {\\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\\n        a[a.length - 1] = b;\\n        mergeWithPrevious = true;\\n        return a;\\n      } else if (mergeWithPrevious) {\\n        a[a.length - 1] += b;\\n        mergeWithPrevious = false;\\n        return a;\\n      } else {\\n        return a.concat(b);\\n      }\\n    }, [])\\n    // Here we convert the string values into number values (in px)\\n    .map(function (str) {\\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\\n    });\\n  });\\n\\n  // Loop trough the offsets arrays and execute the operations\\n  ops.forEach(function (op, index) {\\n    op.forEach(function (frag, index2) {\\n      if (isNumeric(frag)) {\\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\\n      }\\n    });\\n  });\\n  return offsets;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @argument {Number|String} options.offset=0\\n * The offset value as described in the modifier description\\n * @returns {Object} The data object, properly modified\\n */\\nfunction offset(data, _ref) {\\n  var offset = _ref.offset;\\n  var placement = data.placement,\\n      _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var basePlacement = placement.split('-')[0];\\n\\n  var offsets = void 0;\\n  if (isNumeric(+offset)) {\\n    offsets = [+offset, 0];\\n  } else {\\n    offsets = parseOffset(offset, popper, reference, basePlacement);\\n  }\\n\\n  if (basePlacement === 'left') {\\n    popper.top += offsets[0];\\n    popper.left -= offsets[1];\\n  } else if (basePlacement === 'right') {\\n    popper.top += offsets[0];\\n    popper.left += offsets[1];\\n  } else if (basePlacement === 'top') {\\n    popper.left += offsets[0];\\n    popper.top -= offsets[1];\\n  } else if (basePlacement === 'bottom') {\\n    popper.left += offsets[0];\\n    popper.top += offsets[1];\\n  }\\n\\n  data.popper = popper;\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction preventOverflow(data, options) {\\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\\n\\n  // If offsetParent is the reference element, we really want to\\n  // go one step up and use the next offsetParent as reference to\\n  // avoid to make this modifier completely useless and look like broken\\n  if (data.instance.reference === boundariesElement) {\\n    boundariesElement = getOffsetParent(boundariesElement);\\n  }\\n\\n  // NOTE: DOM access here\\n  // resets the popper's position so that the document size can be calculated excluding\\n  // the size of the popper element itself\\n  var transformProp = getSupportedPropertyName('transform');\\n  var popperStyles = data.instance.popper.style; // assignment to help minification\\n  var top = popperStyles.top,\\n      left = popperStyles.left,\\n      transform = popperStyles[transformProp];\\n\\n  popperStyles.top = '';\\n  popperStyles.left = '';\\n  popperStyles[transformProp] = '';\\n\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\\n\\n  // NOTE: DOM access here\\n  // restores the original style properties after the offsets have been computed\\n  popperStyles.top = top;\\n  popperStyles.left = left;\\n  popperStyles[transformProp] = transform;\\n\\n  options.boundaries = boundaries;\\n\\n  var order = options.priority;\\n  var popper = data.offsets.popper;\\n\\n  var check = {\\n    primary: function primary(placement) {\\n      var value = popper[placement];\\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\\n        value = Math.max(popper[placement], boundaries[placement]);\\n      }\\n      return defineProperty({}, placement, value);\\n    },\\n    secondary: function secondary(placement) {\\n      var mainSide = placement === 'right' ? 'left' : 'top';\\n      var value = popper[mainSide];\\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\\n      }\\n      return defineProperty({}, mainSide, value);\\n    }\\n  };\\n\\n  order.forEach(function (placement) {\\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\\n    popper = _extends({}, popper, check[side](placement));\\n  });\\n\\n  data.offsets.popper = popper;\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction shift(data) {\\n  var placement = data.placement;\\n  var basePlacement = placement.split('-')[0];\\n  var shiftvariation = placement.split('-')[1];\\n\\n  // if shift shiftvariation is specified, run the modifier\\n  if (shiftvariation) {\\n    var _data$offsets = data.offsets,\\n        reference = _data$offsets.reference,\\n        popper = _data$offsets.popper;\\n\\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\\n    var side = isVertical ? 'left' : 'top';\\n    var measurement = isVertical ? 'width' : 'height';\\n\\n    var shiftOffsets = {\\n      start: defineProperty({}, side, reference[side]),\\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\\n    };\\n\\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction hide(data) {\\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\\n    return data;\\n  }\\n\\n  var refRect = data.offsets.reference;\\n  var bound = find(data.instance.modifiers, function (modifier) {\\n    return modifier.name === 'preventOverflow';\\n  }).boundaries;\\n\\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\n    if (data.hide === true) {\\n      return data;\\n    }\\n\\n    data.hide = true;\\n    data.attributes['x-out-of-boundaries'] = '';\\n  } else {\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\n    if (data.hide === false) {\\n      return data;\\n    }\\n\\n    data.hide = false;\\n    data.attributes['x-out-of-boundaries'] = false;\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction inner(data) {\\n  var placement = data.placement;\\n  var basePlacement = placement.split('-')[0];\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\\n\\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\\n\\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\\n\\n  data.placement = getOppositePlacement(placement);\\n  data.offsets.popper = getClientRect(popper);\\n\\n  return data;\\n}\\n\\n/**\\n * Modifier function, each modifier can have a function of this type assigned\\n * to its `fn` property.<br />\\n * These functions will be called on each update, this means that you must\\n * make sure they are performant enough to avoid performance bottlenecks.\\n *\\n * @function ModifierFn\\n * @argument {dataObject} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {dataObject} The data object, properly modified\\n */\\n\\n/**\\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\\n * needed by the library.\\n *\\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\\n * All the other properties are configurations that could be tweaked.\\n * @namespace modifiers\\n */\\nvar modifiers = {\\n  /**\\n   * Modifier used to shift the popper on the start or end of its reference\\n   * element.<br />\\n   * It will read the variation of the `placement` property.<br />\\n   * It can be one either `-end` or `-start`.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  shift: {\\n    /** @prop {number} order=100 - Index used to define the order of execution */\\n    order: 100,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: shift\\n  },\\n\\n  /**\\n   * The `offset` modifier can shift your popper on both its axis.\\n   *\\n   * It accepts the following units:\\n   * - `px` or unit-less, interpreted as pixels\\n   * - `%` or `%r`, percentage relative to the length of the reference element\\n   * - `%p`, percentage relative to the length of the popper element\\n   * - `vw`, CSS viewport width unit\\n   * - `vh`, CSS viewport height unit\\n   *\\n   * For length is intended the main axis relative to the placement of the popper.<br />\\n   * This means that if the placement is `top` or `bottom`, the length will be the\\n   * `width`. In case of `left` or `right`, it will be the `height`.\\n   *\\n   * You can provide a single value (as `Number` or `String`), or a pair of values\\n   * as `String` divided by a comma or one (or more) white spaces.<br />\\n   * The latter is a deprecated method because it leads to confusion and will be\\n   * removed in v2.<br />\\n   * Additionally, it accepts additions and subtractions between different units.\\n   * Note that multiplications and divisions aren't supported.\\n   *\\n   * Valid examples are:\\n   * ```\\n   * 10\\n   * '10%'\\n   * '10, 10'\\n   * '10%, 10'\\n   * '10 + 10%'\\n   * '10 - 5vh + 3%'\\n   * '-10px + 5vh, 5px - 6%'\\n   * ```\\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  offset: {\\n    /** @prop {number} order=200 - Index used to define the order of execution */\\n    order: 200,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: offset,\\n    /** @prop {Number|String} offset=0\\n     * The offset value as described in the modifier description\\n     */\\n    offset: 0\\n  },\\n\\n  /**\\n   * Modifier used to prevent the popper from being positioned outside the boundary.\\n   *\\n   * A scenario exists where the reference itself is not within the boundaries.<br />\\n   * We can say it has \\\"escaped the boundaries\\\" \\u2014 or just \\\"escaped\\\".<br />\\n   * In this case we need to decide whether the popper should either:\\n   *\\n   * - detach from the reference and remain \\\"trapped\\\" in the boundaries, or\\n   * - if it should ignore the boundary and \\\"escape with its reference\\\"\\n   *\\n   * When `escapeWithReference` is set to`true` and reference is completely\\n   * outside its boundaries, the popper will overflow (or completely leave)\\n   * the boundaries in order to remain attached to the edge of the reference.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  preventOverflow: {\\n    /** @prop {number} order=300 - Index used to define the order of execution */\\n    order: 300,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: preventOverflow,\\n    /**\\n     * @prop {Array} [priority=['left','right','top','bottom']]\\n     * Popper will try to prevent overflow following these priorities by default,\\n     * then, it could overflow on the left and on top of the `boundariesElement`\\n     */\\n    priority: ['left', 'right', 'top', 'bottom'],\\n    /**\\n     * @prop {number} padding=5\\n     * Amount of pixel used to define a minimum distance between the boundaries\\n     * and the popper. This makes sure the popper always has a little padding\\n     * between the edges of its container\\n     */\\n    padding: 5,\\n    /**\\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\\n     * `viewport` or any DOM element.\\n     */\\n    boundariesElement: 'scrollParent'\\n  },\\n\\n  /**\\n   * Modifier used to make sure the reference and its popper stay near each other\\n   * without leaving any gap between the two. Especially useful when the arrow is\\n   * enabled and you want to ensure that it points to its reference element.\\n   * It cares only about the first axis. You can still have poppers with margin\\n   * between the popper and its reference element.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  keepTogether: {\\n    /** @prop {number} order=400 - Index used to define the order of execution */\\n    order: 400,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: keepTogether\\n  },\\n\\n  /**\\n   * This modifier is used to move the `arrowElement` of the popper to make\\n   * sure it is positioned between the reference element and its popper element.\\n   * It will read the outer size of the `arrowElement` node to detect how many\\n   * pixels of conjunction are needed.\\n   *\\n   * It has no effect if no `arrowElement` is provided.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  arrow: {\\n    /** @prop {number} order=500 - Index used to define the order of execution */\\n    order: 500,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: arrow,\\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\\n    element: '[x-arrow]'\\n  },\\n\\n  /**\\n   * Modifier used to flip the popper's placement when it starts to overlap its\\n   * reference element.\\n   *\\n   * Requires the `preventOverflow` modifier before it in order to work.\\n   *\\n   * **NOTE:** this modifier will interrupt the current update cycle and will\\n   * restart it if it detects the need to flip the placement.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  flip: {\\n    /** @prop {number} order=600 - Index used to define the order of execution */\\n    order: 600,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: flip,\\n    /**\\n     * @prop {String|Array} behavior='flip'\\n     * The behavior used to change the popper's placement. It can be one of\\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\\n     * placements (with optional variations)\\n     */\\n    behavior: 'flip',\\n    /**\\n     * @prop {number} padding=5\\n     * The popper will flip if it hits the edges of the `boundariesElement`\\n     */\\n    padding: 5,\\n    /**\\n     * @prop {String|HTMLElement} boundariesElement='viewport'\\n     * The element which will define the boundaries of the popper position.\\n     * The popper will never be placed outside of the defined boundaries\\n     * (except if `keepTogether` is enabled)\\n     */\\n    boundariesElement: 'viewport'\\n  },\\n\\n  /**\\n   * Modifier used to make the popper flow toward the inner of the reference element.\\n   * By default, when this modifier is disabled, the popper will be placed outside\\n   * the reference element.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  inner: {\\n    /** @prop {number} order=700 - Index used to define the order of execution */\\n    order: 700,\\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\\n    enabled: false,\\n    /** @prop {ModifierFn} */\\n    fn: inner\\n  },\\n\\n  /**\\n   * Modifier used to hide the popper when its reference element is outside of the\\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\\n   * be used to hide with a CSS selector the popper when its reference is\\n   * out of boundaries.\\n   *\\n   * Requires the `preventOverflow` modifier before it in order to work.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  hide: {\\n    /** @prop {number} order=800 - Index used to define the order of execution */\\n    order: 800,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: hide\\n  },\\n\\n  /**\\n   * Computes the style that will be applied to the popper element to gets\\n   * properly positioned.\\n   *\\n   * Note that this modifier will not touch the DOM, it just prepares the styles\\n   * so that `applyStyle` modifier can apply it. This separation is useful\\n   * in case you need to replace `applyStyle` with a custom implementation.\\n   *\\n   * This modifier has `850` as `order` value to maintain backward compatibility\\n   * with previous versions of Popper.js. Expect the modifiers ordering method\\n   * to change in future major versions of the library.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  computeStyle: {\\n    /** @prop {number} order=850 - Index used to define the order of execution */\\n    order: 850,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: computeStyle,\\n    /**\\n     * @prop {Boolean} gpuAcceleration=true\\n     * If true, it uses the CSS 3D transformation to position the popper.\\n     * Otherwise, it will use the `top` and `left` properties\\n     */\\n    gpuAcceleration: true,\\n    /**\\n     * @prop {string} [x='bottom']\\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\\n     * Change this if your popper should grow in a direction different from `bottom`\\n     */\\n    x: 'bottom',\\n    /**\\n     * @prop {string} [x='left']\\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\\n     * Change this if your popper should grow in a direction different from `right`\\n     */\\n    y: 'right'\\n  },\\n\\n  /**\\n   * Applies the computed styles to the popper element.\\n   *\\n   * All the DOM manipulations are limited to this modifier. This is useful in case\\n   * you want to integrate Popper.js inside a framework or view library and you\\n   * want to delegate all the DOM manipulations to it.\\n   *\\n   * Note that if you disable this modifier, you must make sure the popper element\\n   * has its position set to `absolute` before Popper.js can do its work!\\n   *\\n   * Just disable this modifier and define your own to achieve the desired effect.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  applyStyle: {\\n    /** @prop {number} order=900 - Index used to define the order of execution */\\n    order: 900,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: applyStyle,\\n    /** @prop {Function} */\\n    onLoad: applyStyleOnLoad,\\n    /**\\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\\n     * @prop {Boolean} gpuAcceleration=true\\n     * If true, it uses the CSS 3D transformation to position the popper.\\n     * Otherwise, it will use the `top` and `left` properties\\n     */\\n    gpuAcceleration: undefined\\n  }\\n};\\n\\n/**\\n * The `dataObject` is an object containing all the information used by Popper.js.\\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\\n * @name dataObject\\n * @property {Object} data.instance The Popper.js instance\\n * @property {String} data.placement Placement applied to popper\\n * @property {String} data.originalPlacement Placement originally defined on init\\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\\n * @property {Object} data.boundaries Offsets of the popper boundaries\\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\\n */\\n\\n/**\\n * Default options provided to Popper.js constructor.<br />\\n * These can be overridden using the `options` argument of Popper.js.<br />\\n * To override an option, simply pass an object with the same\\n * structure of the `options` object, as the 3rd argument. For example:\\n * ```\\n * new Popper(ref, pop, {\\n *   modifiers: {\\n *     preventOverflow: { enabled: false }\\n *   }\\n * })\\n * ```\\n * @type {Object}\\n * @static\\n * @memberof Popper\\n */\\nvar Defaults = {\\n  /**\\n   * Popper's placement.\\n   * @prop {Popper.placements} placement='bottom'\\n   */\\n  placement: 'bottom',\\n\\n  /**\\n   * Set this to true if you want popper to position it self in 'fixed' mode\\n   * @prop {Boolean} positionFixed=false\\n   */\\n  positionFixed: false,\\n\\n  /**\\n   * Whether events (resize, scroll) are initially enabled.\\n   * @prop {Boolean} eventsEnabled=true\\n   */\\n  eventsEnabled: true,\\n\\n  /**\\n   * Set to true if you want to automatically remove the popper when\\n   * you call the `destroy` method.\\n   * @prop {Boolean} removeOnDestroy=false\\n   */\\n  removeOnDestroy: false,\\n\\n  /**\\n   * Callback called when the popper is created.<br />\\n   * By default, it is set to no-op.<br />\\n   * Access Popper.js instance with `data.instance`.\\n   * @prop {onCreate}\\n   */\\n  onCreate: function onCreate() {},\\n\\n  /**\\n   * Callback called when the popper is updated. This callback is not called\\n   * on the initialization/creation of the popper, but only on subsequent\\n   * updates.<br />\\n   * By default, it is set to no-op.<br />\\n   * Access Popper.js instance with `data.instance`.\\n   * @prop {onUpdate}\\n   */\\n  onUpdate: function onUpdate() {},\\n\\n  /**\\n   * List of modifiers used to modify the offsets before they are applied to the popper.\\n   * They provide most of the functionalities of Popper.js.\\n   * @prop {modifiers}\\n   */\\n  modifiers: modifiers\\n};\\n\\n/**\\n * @callback onCreate\\n * @param {dataObject} data\\n */\\n\\n/**\\n * @callback onUpdate\\n * @param {dataObject} data\\n */\\n\\n// Utils\\n// Methods\\nvar Popper = function () {\\n  /**\\n   * Creates a new Popper.js instance.\\n   * @class Popper\\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\\n   * @param {HTMLElement} popper - The HTML element used as the popper\\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\\n   * @return {Object} instance - The generated Popper.js instance\\n   */\\n  function Popper(reference, popper) {\\n    var _this = this;\\n\\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n    classCallCheck(this, Popper);\\n\\n    this.scheduleUpdate = function () {\\n      return requestAnimationFrame(_this.update);\\n    };\\n\\n    // make update() debounced, so that it only runs at most once-per-tick\\n    this.update = debounce(this.update.bind(this));\\n\\n    // with {} we create a new object with the options inside it\\n    this.options = _extends({}, Popper.Defaults, options);\\n\\n    // init state\\n    this.state = {\\n      isDestroyed: false,\\n      isCreated: false,\\n      scrollParents: []\\n    };\\n\\n    // get reference and popper elements (allow jQuery wrappers)\\n    this.reference = reference && reference.jquery ? reference[0] : reference;\\n    this.popper = popper && popper.jquery ? popper[0] : popper;\\n\\n    // Deep merge modifiers options\\n    this.options.modifiers = {};\\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\\n    });\\n\\n    // Refactoring modifiers' list (Object => Array)\\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\\n      return _extends({\\n        name: name\\n      }, _this.options.modifiers[name]);\\n    })\\n    // sort the modifiers by order\\n    .sort(function (a, b) {\\n      return a.order - b.order;\\n    });\\n\\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\\n    // such code is executed in the same order of its modifier\\n    // they could add new properties to their options configuration\\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\\n    this.modifiers.forEach(function (modifierOptions) {\\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\\n      }\\n    });\\n\\n    // fire the first update to position the popper in the right place\\n    this.update();\\n\\n    var eventsEnabled = this.options.eventsEnabled;\\n    if (eventsEnabled) {\\n      // setup event listeners, they will take care of update the position in specific situations\\n      this.enableEventListeners();\\n    }\\n\\n    this.state.eventsEnabled = eventsEnabled;\\n  }\\n\\n  // We can't use class properties because they don't get listed in the\\n  // class prototype and break stuff like Sinon stubs\\n\\n\\n  createClass(Popper, [{\\n    key: 'update',\\n    value: function update$$1() {\\n      return update.call(this);\\n    }\\n  }, {\\n    key: 'destroy',\\n    value: function destroy$$1() {\\n      return destroy.call(this);\\n    }\\n  }, {\\n    key: 'enableEventListeners',\\n    value: function enableEventListeners$$1() {\\n      return enableEventListeners.call(this);\\n    }\\n  }, {\\n    key: 'disableEventListeners',\\n    value: function disableEventListeners$$1() {\\n      return disableEventListeners.call(this);\\n    }\\n\\n    /**\\n     * Schedules an update. It will run on the next UI update available.\\n     * @method scheduleUpdate\\n     * @memberof Popper\\n     */\\n\\n\\n    /**\\n     * Collection of utilities useful when writing custom modifiers.\\n     * Starting from version 1.7, this method is available only if you\\n     * include `popper-utils.js` before `popper.js`.\\n     *\\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\\n     * and will be removed in v2! Use the PopperUtils module directly instead.\\n     * Due to the high instability of the methods contained in Utils, we can't\\n     * guarantee them to follow semver. Use them at your own risk!\\n     * @static\\n     * @private\\n     * @type {Object}\\n     * @deprecated since version 1.8\\n     * @member Utils\\n     * @memberof Popper\\n     */\\n\\n  }]);\\n  return Popper;\\n}();\\n\\n/**\\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\\n * and lets you use it as replacement of a real DOM node.<br />\\n * You can use this method to position a popper relatively to a set of coordinates\\n * in case you don't have a DOM node to use as reference.\\n *\\n * ```\\n * new Popper(referenceObject, popperNode);\\n * ```\\n *\\n * NB: This feature isn't supported in Internet Explorer 10.\\n * @name referenceObject\\n * @property {Function} data.getBoundingClientRect\\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\\n * @property {number} data.clientWidth\\n * An ES6 getter that will return the width of the virtual reference element.\\n * @property {number} data.clientHeight\\n * An ES6 getter that will return the height of the virtual reference element.\\n */\\n\\n\\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\\nPopper.placements = placements;\\nPopper.Defaults = Defaults;\\n\\nreturn Popper;\\n\\n})));\\n//# sourceMappingURL=popper.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"factory\",\"define\",\"amd\",\"Popper\",\"microtaskDebounce\",\"fn\",\"called\",\"window\",\"Promise\",\"resolve\",\"then\",\"taskDebounce\",\"scheduled\",\"setTimeout\",\"timeoutDuration\",\"isFunction\",\"functionToCheck\",\"getType\",\"toString\",\"call\",\"getStyleComputedProperty\",\"element\",\"property\",\"nodeType\",\"css\",\"getComputedStyle\",\"getParentNode\",\"nodeName\",\"parentNode\",\"host\",\"getScrollParent\",\"document\",\"body\",\"ownerDocument\",\"_getStyleComputedProp\",\"test\",\"overflow\",\"overflowY\",\"overflowX\",\"isIE\",\"version\",\"isIE11\",\"isIE10\",\"getOffsetParent\",\"documentElement\",\"noOffsetParent\",\"offsetParent\",\"nextElementSibling\",\"indexOf\",\"getRoot\",\"node\",\"findCommonOffsetParent\",\"element1\",\"element2\",\"order\",\"compareDocumentPosition\",\"Node\",\"DOCUMENT_POSITION_FOLLOWING\",\"start\",\"end\",\"range\",\"createRange\",\"setStart\",\"setEnd\",\"commonAncestorContainer\",\"contains\",\"firstElementChild\",\"element1root\",\"getScroll\",\"upperSide\",\"side\",\"arguments\",\"length\",\"undefined\",\"html\",\"scrollingElement\",\"includeScroll\",\"rect\",\"subtract\",\"scrollTop\",\"scrollLeft\",\"modifier\",\"top\",\"bottom\",\"left\",\"right\",\"getBordersSize\",\"styles\",\"axis\",\"sideA\",\"sideB\",\"parseFloat\",\"getSize\",\"computedStyle\",\"Math\",\"max\",\"parseInt\",\"getWindowSizes\",\"height\",\"width\",\"getClientRect\",\"offsets\",\"_extends\",\"getBoundingClientRect\",\"e\",\"result\",\"sizes\",\"horizScrollbar\",\"offsetWidth\",\"clientWidth\",\"vertScrollbar\",\"offsetHeight\",\"clientHeight\",\"getOffsetRectRelativeToArbitraryNode\",\"children\",\"parent\",\"fixedPosition\",\"isHTML\",\"childrenRect\",\"parentRect\",\"scrollParent\",\"borderTopWidth\",\"borderLeftWidth\",\"marginTop\",\"marginLeft\",\"getViewportOffsetRectRelativeToArtbitraryNode\",\"excludeScroll\",\"relativeOffset\",\"innerWidth\",\"innerHeight\",\"offset\",\"isFixed\",\"getFixedPositionOffsetParent\",\"parentElement\",\"el\",\"getBoundaries\",\"popper\",\"reference\",\"padding\",\"boundariesElement\",\"boundaries\",\"boundariesNode\",\"_getWindowSizes\",\"isPaddingNumber\",\"computeAutoPlacement\",\"placement\",\"refRect\",\"rects\",\"sortedAreas\",\"Object\",\"keys\",\"map\",\"key\",\"area\",\"_ref\",\"sort\",\"a\",\"b\",\"filteredAreas\",\"filter\",\"_ref2\",\"computedPlacement\",\"variation\",\"split\",\"getReferenceOffsets\",\"state\",\"commonOffsetParent\",\"getOuterSizes\",\"x\",\"marginBottom\",\"y\",\"marginRight\",\"getOppositePlacement\",\"hash\",\"replace\",\"matched\",\"getPopperOffsets\",\"referenceOffsets\",\"popperRect\",\"popperOffsets\",\"isHoriz\",\"mainSide\",\"secondarySide\",\"measurement\",\"secondaryMeasurement\",\"find\",\"arr\",\"check\",\"Array\",\"prototype\",\"findIndex\",\"prop\",\"value\",\"cur\",\"match\",\"obj\",\"runModifiers\",\"modifiers\",\"data\",\"ends\",\"forEach\",\"modifiersToRun\",\"slice\",\"console\",\"warn\",\"enabled\",\"isModifierEnabled\",\"modifierName\",\"some\",\"name\",\"getSupportedPropertyName\",\"prefixes\",\"upperProp\",\"charAt\",\"toUpperCase\",\"i\",\"prefix\",\"toCheck\",\"style\",\"getWindow\",\"defaultView\",\"attachToScrollParents\",\"event\",\"callback\",\"scrollParents\",\"isBody\",\"target\",\"addEventListener\",\"passive\",\"push\",\"removeEventListeners\",\"removeEventListener\",\"updateBound\",\"scrollElement\",\"eventsEnabled\",\"isNumeric\",\"n\",\"isNaN\",\"isFinite\",\"setStyles\",\"unit\",\"setAttributes\",\"attributes\",\"setAttribute\",\"removeAttribute\",\"isModifierRequired\",\"requestingName\",\"requestedName\",\"requesting\",\"isRequired\",\"_requesting\",\"clockwise\",\"counter\",\"index\",\"validPlacements\",\"concat\",\"reverse\",\"parseOffset\",\"basePlacement\",\"useHeight\",\"fragments\",\"frag\",\"trim\",\"divider\",\"search\",\"splitRegex\",\"ops\",\"op\",\"mergeWithPrevious\",\"reduce\",\"str\",\"size\",\"index2\",\"isBrowser\",\"longerTimeoutBrowsers\",\"navigator\",\"userAgent\",\"debounce\",\"MSInputMethodContext\",\"documentMode\",\"createClass\",\"defineProperties\",\"props\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"defineProperty\",\"Constructor\",\"protoProps\",\"staticProps\",\"assign\",\"source\",\"hasOwnProperty\",\"placements\",\"_this\",\"options\",\"instance\",\"TypeError\",\"scheduleUpdate\",\"this.scheduleUpdate\",\"requestAnimationFrame\",\"update\",\"bind\",\"Defaults\",\"isDestroyed\",\"isCreated\",\"jquery\",\"modifierOptions\",\"onLoad\",\"enableEventListeners\",\"update$$1\",\"arrowStyles\",\"flipped\",\"positionFixed\",\"flip\",\"originalPlacement\",\"position\",\"onUpdate\",\"onCreate\",\"destroy$$1\",\"willChange\",\"disableEventListeners\",\"removeOnDestroy\",\"removeChild\",\"enableEventListeners$$1\",\"disableEventListeners$$1\",\"cancelAnimationFrame\",\"Utils\",\"PopperUtils\",\"shift\",\"shiftvariation\",\"_data$offsets\",\"isVertical\",\"shiftOffsets\",\"preventOverflow\",\"transformProp\",\"popperStyles\",\"transform\",\"primary\",\"escapeWithReference\",\"secondary\",\"min\",\"priority\",\"keepTogether\",\"floor\",\"opSide\",\"arrow\",\"_data$offsets$arrow\",\"arrowElement\",\"querySelector\",\"len\",\"sideCapitalized\",\"toLowerCase\",\"altSide\",\"arrowElementSize\",\"center\",\"popperMarginSide\",\"popperBorderSide\",\"sideValue\",\"round\",\"placementOpposite\",\"flipOrder\",\"behavior\",\"FLIP\",\"CLOCKWISE\",\"COUNTERCLOCKWISE\",\"step\",\"refOffsets\",\"overlapsRef\",\"overflowsLeft\",\"overflowsRight\",\"overflowsTop\",\"overflowsBottom\",\"overflowsBoundaries\",\"flippedVariation\",\"flipVariations\",\"inner\",\"subtractLength\",\"hide\",\"bound\",\"computeStyle\",\"legacyGpuAccelerationOption\",\"gpuAcceleration\",\"offsetParentRect\",\"prefixedProperty\",\"invertTop\",\"invertLeft\",\"applyStyle\",\"applyStyleOnLoad\"]\n}\n"]