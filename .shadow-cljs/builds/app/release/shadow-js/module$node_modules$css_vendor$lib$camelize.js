["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/css-vendor/lib/camelize.js"],"~:js","shadow$provide.module$node_modules$css_vendor$lib$camelize=function(b,e,a,f,c,m){function d(a,b){return b?b.toUpperCase():\"\"}Object.defineProperty(c,\"__esModule\",{value:!0});c[\"default\"]=function(a){return a.replace(k,d)};var k=/[-\\s]+(.)?/g}","~:source","shadow$provide[\"module$node_modules$css_vendor$lib$camelize\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = camelize;\nvar regExp = /[-\\s]+(.)?/g;\n\n/**\n * Convert dash separated strings to camel cased.\n *\n * @param {String} str\n * @return {String}\n */\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1537815743043,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$css_vendor$lib$camelize.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAmB7HC,QAASA,EAAO,CAACC,CAAD,CAAQC,CAAR,CAAW,CACzB,MAAOA,EAAA,CAAIA,CAAAC,YAAA,EAAJ,CAAsB,EADJ,CAhB3BC,MAAAC,eAAA,CAAsBP,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAGAR,EAAA,CAAQ,SAAR,CAAA,CASAS,QAAiB,CAACC,CAAD,CAAM,CACrB,MAAOA,EAAAC,QAAA,CAAYC,CAAZ,CAAoBV,CAApB,CADc,CARvB,KAAIU,EAAS,aAPgH;\",\n\"sources\":[\"node_modules/css-vendor/lib/camelize.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$css_vendor$lib$camelize\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports['default'] = camelize;\\nvar regExp = /[-\\\\s]+(.)?/g;\\n\\n/**\\n * Convert dash separated strings to camel cased.\\n *\\n * @param {String} str\\n * @return {String}\\n */\\nfunction camelize(str) {\\n  return str.replace(regExp, toUpper);\\n}\\n\\nfunction toUpper(match, c) {\\n  return c ? c.toUpperCase() : '';\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"toUpper\",\"match\",\"c\",\"toUpperCase\",\"Object\",\"defineProperty\",\"value\",\"camelize\",\"str\",\"replace\",\"regExp\"]\n}\n"]