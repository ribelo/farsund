["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/styles/createGenerateClassName.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$styles$createGenerateClassName=function(b,d,a,e,c,g){b=a(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(c,\"__esModule\",{value:!0});c.default=function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},b=a.dangerouslyUseGlobalCSS,c=void 0===b?!1:b;b=a.productionPrefix;var d=void 0===b?\"jss\":b;a=a.seed;var e=void 0===a?\"\":a,r=0;return function(a,b){r+=1;void 0;return c?b&&b.options.name?\"\".concat(b.options.name,\n\"-\").concat(a.key):\"\".concat(d).concat(e).concat(r):\"\".concat(d).concat(e).concat(r)}};b(a(\"module$node_modules$warning$browser\"))}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$styles$createGenerateClassName\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\n/* eslint-disable no-underscore-dangle */\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n} // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    ruleCounter += 1;\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0; // Code branch the whole block at the expense of more code.\n\n    if (dangerouslyUseGlobalCSS) {\n      if (styleSheet) {\n        if (styleSheet.options.name) {\n          return \"\".concat(styleSheet.options.name, \"-\").concat(rule.key);\n        }\n\n        if (styleSheet.options.classNamePrefix && process.env.NODE_ENV !== 'production') {\n          var prefix = safePrefix(styleSheet.options.classNamePrefix);\n          return \"\".concat(prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n        }\n      }\n\n      if (process.env.NODE_ENV === 'production') {\n        return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n      }\n\n      return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n    }\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      var _prefix = safePrefix(styleSheet.options.classNamePrefix);\n\n      return \"\".concat(_prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$warning$browser"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1540237495294,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$styles$createGenerateClassName.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,qEAAA,CAAyF,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAGlJC,CAAAA,CAAyBJ,CAAA,CAAQ,kEAAR,CAE7BK,OAAAC,eAAA,CAAsBJ,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,EAAAM,QAAA,CAoBAC,QAAgC,EAAG,CACjC,IAAIC,EAA6B,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAAlF,CACIG,EAAwBJ,CAAAK,wBAD5B,CAEIA,EAAoD,IAAK,EAA/B,GAAAD,CAAA,CAAmC,CAAA,CAAnC,CAA2CA,CACrEE,EAAAA,CAAwBN,CAAAO,iBAJK,KAK7BA,EAA6C,IAAK,EAA/B,GAAAD,CAAA,CAAmC,KAAnC,CAA2CA,CAC9DE,EAAAA,CAAgBR,CAAAS,KAJpB,KAKIA,EAAyB,IAAK,EAAvB,GAAAD,CAAA,CAA2B,EAA3B,CAAgCA,CAL3C,CAMIE,EAAc,CAClB,OAAO,SAAS,CAACC,CAAD,CAAOC,CAAP,CAAmB,CACjCF,CAAA,EAAe,CACoL,KAAK,EAExM,OAAIL,EAAJ,CACMO,CAAJ,EACMA,CAAAZ,QAAAa,KADN,CAEW,EAAAC,OAAA,CAAUF,CAAAZ,QAAAa,KAAV;AAAmC,GAAnC,CAAAC,OAAA,CAA+CH,CAAAI,IAA/C,CAFX,CAYS,EAAAD,OAAA,CAAUP,CAAV,CAAAO,OAAA,CAAmCL,CAAnC,CAAAK,OAAA,CAAgDJ,CAAhD,CAbX,CAoBS,EAAAI,OAAA,CAAUP,CAAV,CAAAO,OAAA,CAAmCL,CAAnC,CAAAK,OAAA,CAAgDJ,CAAhD,CAxBwB,CATF,CAlBpBhB,EAAA,CAAuBJ,CAAA,CAAQ,qCAAR,CAAvB,CAVuI;\",\n\"sources\":[\"node_modules/@material-ui/core/styles/createGenerateClassName.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$styles$createGenerateClassName\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = createGenerateClassName;\\n\\nvar _warning = _interopRequireDefault(require(\\\"warning\\\"));\\n\\n/* eslint-disable no-underscore-dangle */\\nvar escapeRegex = /([[\\\\].#*$><+~=|^:(),\\\"'`\\\\s])/g;\\n\\nfunction safePrefix(classNamePrefix) {\\n  var prefix = String(classNamePrefix);\\n  process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(prefix.length < 256, \\\"Material-UI: the class name prefix is too long: \\\".concat(prefix, \\\".\\\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\\n\\n  return prefix.replace(escapeRegex, '-');\\n} // Returns a function which generates unique class names based on counters.\\n// When new generator function is created, rule counter is reset.\\n// We need to reset the rule counter for SSR for each request.\\n//\\n// It's inspired by\\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\\n\\n\\nfunction createGenerateClassName() {\\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\\n      _options$productionPr = options.productionPrefix,\\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\\n      _options$seed = options.seed,\\n      seed = _options$seed === void 0 ? '' : _options$seed;\\n  var ruleCounter = 0;\\n  return function (rule, styleSheet) {\\n    ruleCounter += 1;\\n    process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0; // Code branch the whole block at the expense of more code.\\n\\n    if (dangerouslyUseGlobalCSS) {\\n      if (styleSheet) {\\n        if (styleSheet.options.name) {\\n          return \\\"\\\".concat(styleSheet.options.name, \\\"-\\\").concat(rule.key);\\n        }\\n\\n        if (styleSheet.options.classNamePrefix && process.env.NODE_ENV !== 'production') {\\n          var prefix = safePrefix(styleSheet.options.classNamePrefix);\\n          return \\\"\\\".concat(prefix, \\\"-\\\").concat(rule.key, \\\"-\\\").concat(seed).concat(ruleCounter);\\n        }\\n      }\\n\\n      if (process.env.NODE_ENV === 'production') {\\n        return \\\"\\\".concat(productionPrefix).concat(seed).concat(ruleCounter);\\n      }\\n\\n      return \\\"\\\".concat(rule.key, \\\"-\\\").concat(seed).concat(ruleCounter);\\n    }\\n\\n    if (process.env.NODE_ENV === 'production') {\\n      return \\\"\\\".concat(productionPrefix).concat(seed).concat(ruleCounter);\\n    }\\n\\n    if (styleSheet && styleSheet.options.classNamePrefix) {\\n      var _prefix = safePrefix(styleSheet.options.classNamePrefix);\\n\\n      return \\\"\\\".concat(_prefix, \\\"-\\\").concat(rule.key, \\\"-\\\").concat(seed).concat(ruleCounter);\\n    }\\n\\n    return \\\"\\\".concat(rule.key, \\\"-\\\").concat(seed).concat(ruleCounter);\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"createGenerateClassName\",\"options\",\"arguments\",\"length\",\"undefined\",\"_options$dangerouslyU\",\"dangerouslyUseGlobalCSS\",\"_options$productionPr\",\"productionPrefix\",\"_options$seed\",\"seed\",\"ruleCounter\",\"rule\",\"styleSheet\",\"name\",\"concat\",\"key\"]\n}\n"]