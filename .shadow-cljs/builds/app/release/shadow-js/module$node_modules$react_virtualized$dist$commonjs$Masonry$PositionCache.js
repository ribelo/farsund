["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Masonry/PositionCache.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache=function(b,e,a,f,c,m){function d(a){return a&&a.__esModule?a:{default:a}}Object.defineProperty(c,\"__esModule\",{value:!0});b=a(\"module$node_modules$babel_runtime$helpers$slicedToArray\");var k=d(b);b=a(\"module$node_modules$babel_runtime$helpers$classCallCheck\");var l=d(b);b=a(\"module$node_modules$babel_runtime$helpers$createClass\");var h=d(b);a=a(\"module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree\");\nvar p=d(a);a=function(){function a(){(0,l.default)(this,a);this._columnSizeMap={};this._intervalTree=(0,p.default)();this._leftMap={}}(0,h.default)(a,[{key:\"estimateTotalHeight\",value:function(a,b,c){return this.tallestColumnSize+Math.ceil((a-this.count)/b)*c}},{key:\"range\",value:function(a,b,c){var d=this;this._intervalTree.queryInterval(a,a+b,function(a){a=(0,k.default)(a,3);var b=a[2];return c(b,d._leftMap[b],a[0])})}},{key:\"setPosition\",value:function(a,b,c,d){this._intervalTree.insert([c,c+d,\na]);this._leftMap[a]=b;a=this._columnSizeMap;var e=a[b];a[b]=void 0===e?c+d:Math.max(e,c+d)}},{key:\"count\",get:function(){return this._intervalTree.count}},{key:\"shortestColumnSize\",get:function(){var a=this._columnSizeMap,b=0,c;for(c in a){var d=a[c];b=0===b?d:Math.min(b,d)}return b}},{key:\"tallestColumnSize\",get:function(){var a=this._columnSizeMap,b=0,c;for(c in a)b=Math.max(b,a[c]);return b}}]);return a}();c.default=a}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _intervalTree = require('../vendor/intervalTree');\n\nvar _intervalTree2 = _interopRequireDefault(_intervalTree);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache = function () {\n  function PositionCache() {\n    (0, _classCallCheck3.default)(this, PositionCache);\n    this._columnSizeMap = {};\n    this._intervalTree = (0, _intervalTree2.default)();\n    this._leftMap = {};\n  }\n  // Tracks the height of each column\n\n\n  // Store tops and bottoms of each cell for fast intersection lookup.\n\n\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  (0, _createClass3.default)(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    }\n\n    // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = (0, _slicedToArray3.default)(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n      this._leftMap[index] = left;\n\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n  return PositionCache;\n}();\n\nexports.default = PositionCache;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$babel_runtime$helpers$slicedToArray","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass","~$module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree"]],"~:properties",["^5",["_leftMap","key","__esModule","value","get","_columnSizeMap","default","_intervalTree"]],"~:compiled-at",1537815743279,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Masonry/PositionCache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Masonry$PositionCache\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\\n\\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _intervalTree = require('../vendor/intervalTree');\\n\\nvar _intervalTree2 = _interopRequireDefault(_intervalTree);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// Position cache requirements:\\n//   O(log(n)) lookup of cells to render for a given viewport size\\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\\nvar PositionCache = function () {\\n  function PositionCache() {\\n    (0, _classCallCheck3.default)(this, PositionCache);\\n    this._columnSizeMap = {};\\n    this._intervalTree = (0, _intervalTree2.default)();\\n    this._leftMap = {};\\n  }\\n  // Tracks the height of each column\\n\\n\\n  // Store tops and bottoms of each cell for fast intersection lookup.\\n\\n\\n  // Maps cell index to x coordinates for quick lookup.\\n\\n\\n  (0, _createClass3.default)(PositionCache, [{\\n    key: 'estimateTotalHeight',\\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\\n      var unmeasuredCellCount = cellCount - this.count;\\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\\n    }\\n\\n    // Render all cells visible within the viewport range defined.\\n\\n  }, {\\n    key: 'range',\\n    value: function range(scrollTop, clientHeight, renderCallback) {\\n      var _this = this;\\n\\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\\n        var _ref2 = (0, _slicedToArray3.default)(_ref, 3),\\n            top = _ref2[0],\\n            _ = _ref2[1],\\n            index = _ref2[2];\\n\\n        return renderCallback(index, _this._leftMap[index], top);\\n      });\\n    }\\n  }, {\\n    key: 'setPosition',\\n    value: function setPosition(index, left, top, height) {\\n      this._intervalTree.insert([top, top + height, index]);\\n      this._leftMap[index] = left;\\n\\n      var columnSizeMap = this._columnSizeMap;\\n      var columnHeight = columnSizeMap[left];\\n      if (columnHeight === undefined) {\\n        columnSizeMap[left] = top + height;\\n      } else {\\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\\n      }\\n    }\\n  }, {\\n    key: 'count',\\n    get: function get() {\\n      return this._intervalTree.count;\\n    }\\n  }, {\\n    key: 'shortestColumnSize',\\n    get: function get() {\\n      var columnSizeMap = this._columnSizeMap;\\n\\n      var size = 0;\\n\\n      for (var i in columnSizeMap) {\\n        var height = columnSizeMap[i];\\n        size = size === 0 ? height : Math.min(size, height);\\n      }\\n\\n      return size;\\n    }\\n  }, {\\n    key: 'tallestColumnSize',\\n    get: function get() {\\n      var columnSizeMap = this._columnSizeMap;\\n\\n      var size = 0;\\n\\n      for (var i in columnSizeMap) {\\n        var height = columnSizeMap[i];\\n        size = Math.max(size, height);\\n      }\\n\\n      return size;\\n    }\\n  }]);\\n  return PositionCache;\\n}();\\n\\nexports.default = PositionCache;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_slicedToArray2\",\"_slicedToArray3\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_intervalTree\",\"_intervalTree2\",\"PositionCache\",\"_columnSizeMap\",\"_leftMap\",\"key\",\"estimateTotalHeight\",\"cellCount\",\"columnCount\",\"defaultCellHeight\",\"tallestColumnSize\",\"Math\",\"ceil\",\"count\",\"range\",\"scrollTop\",\"clientHeight\",\"renderCallback\",\"_this\",\"queryInterval\",\"_ref\",\"_ref2\",\"index\",\"top\",\"setPosition\",\"left\",\"height\",\"insert\",\"columnSizeMap\",\"columnHeight\",\"undefined\",\"max\",\"get\",\"size\",\"i\",\"min\"]\n}\n"]