["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/Switch/Switch.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$Switch$Switch=function(b,d,a,e,c,g){function f(a){var b=a.classes,c=a.className,d=a.color;a=(0,k.default)(a,[\"classes\",\"className\",\"color\"]);return p.default.createElement(\"span\",{className:(0,m.default)(b.root,c)},p.default.createElement(n.default,(0,l.default)({type:\"checkbox\",icon:p.default.createElement(\"span\",{className:b.icon}),classes:{root:(0,m.default)(b.switchBase,b[\"color\".concat((0,r.capitalize)(d))]),checked:b.checked,disabled:b.disabled},\ncheckedIcon:p.default.createElement(\"span\",{className:(0,m.default)(b.icon,b.iconChecked)})},a)),p.default.createElement(\"span\",{className:b.bar}))}d=a(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(c,\"__esModule\",{value:!0});c.default=c.styles=void 0;var l=d(a(\"module$node_modules$$babel$runtime$helpers$extends\")),k=d(a(\"module$node_modules$$babel$runtime$helpers$objectWithoutProperties\")),p=d(a(\"module$node_modules$react$index\"));d(a(\"module$node_modules$prop_types$index\"));\nvar m=d(a(\"module$node_modules$classnames$index\"));b=d(a(\"module$node_modules$$material_ui$core$styles$withStyles\"));var r=a(\"module$node_modules$$material_ui$core$utils$helpers\"),n=d(a(\"module$node_modules$$material_ui$core$internal$SwitchBase\"));a=function(a){return{root:{display:\"inline-flex\",width:62,position:\"relative\",flexShrink:0,verticalAlign:\"middle\"},icon:{boxShadow:a.shadows[1],backgroundColor:\"currentColor\",width:20,height:20,borderRadius:\"50%\"},iconChecked:{boxShadow:a.shadows[2]},switchBase:{zIndex:1,\npadding:0,height:48,width:48,color:\"light\"===a.palette.type?a.palette.grey[50]:a.palette.grey[400],transition:a.transitions.create(\"transform\",{duration:a.transitions.duration.shortest})},checked:{transform:\"translateX(14px)\",\"\\x26 + $bar\":{opacity:.5}},colorPrimary:{\"\\x26$checked\":{color:a.palette.primary.main,\"\\x26 + $bar\":{backgroundColor:a.palette.primary.main}}},colorSecondary:{\"\\x26$checked\":{color:a.palette.secondary.main,\"\\x26 + $bar\":{backgroundColor:a.palette.secondary.main}}},disabled:{\"\\x26 + $bar\":{opacity:\"light\"===\na.palette.type?.12:.1},\"\\x26 $icon\":{boxShadow:a.shadows[1]},\"\\x26$switchBase\":{color:\"light\"===a.palette.type?a.palette.grey[400]:a.palette.grey[800],\"\\x26 + $bar\":{backgroundColor:\"light\"===a.palette.type?a.palette.common.black:a.palette.common.white}}},bar:{borderRadius:7,display:\"block\",position:\"absolute\",width:34,height:14,top:\"50%\",left:\"50%\",marginTop:-7,marginLeft:-17,transition:a.transitions.create([\"opacity\",\"background-color\"],{duration:a.transitions.duration.shortest}),backgroundColor:\"light\"===\na.palette.type?a.palette.common.black:a.palette.common.white,opacity:\"light\"===a.palette.type?.38:.3}}};c.styles=a;f.propTypes={};f.defaultProps={color:\"secondary\"};a=(0,b.default)(a,{name:\"MuiSwitch\"})(f);c.default=a}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$Switch$Switch\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _SwitchBase = _interopRequireDefault(require(\"../internal/SwitchBase\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 62,\n      position: 'relative',\n      flexShrink: 0,\n      // For correct alignment with the text.\n      verticalAlign: 'middle'\n    },\n\n    /* Styles used to create the `icon` passed to the internal `SwitchBase` component `icon` prop. */\n    icon: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied the icon element component if `checked={true}`. */\n    iconChecked: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      zIndex: 1,\n      padding: 0,\n      height: 48,\n      width: 48,\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {\n      transform: 'translateX(14px)',\n      '& + $bar': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '& + $bar': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '& + $bar': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's disabled class. */\n    disabled: {\n      '& + $bar': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      },\n      '& $icon': {\n        boxShadow: theme.shadows[1]\n      },\n      '&$switchBase': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n        '& + $bar': {\n          backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n        }\n      }\n    },\n\n    /* Styles applied to the bar element. */\n    bar: {\n      borderRadius: 14 / 2,\n      display: 'block',\n      position: 'absolute',\n      width: 34,\n      height: 14,\n      top: '50%',\n      left: '50%',\n      marginTop: -7,\n      marginLeft: -17,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Switch(props) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"color\"]);\n  return _react.default.createElement(\"span\", {\n    className: (0, _classnames.default)(classes.root, className)\n  }, _react.default.createElement(_SwitchBase.default, (0, _extends2.default)({\n    type: \"checkbox\",\n    icon: _react.default.createElement(\"span\", {\n      className: classes.icon\n    }),\n    classes: {\n      root: (0, _classnames.default)(classes.switchBase, classes[\"color\".concat((0, _helpers.capitalize)(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    checkedIcon: _react.default.createElement(\"span\", {\n      className: (0, _classnames.default)(classes.icon, classes.iconChecked)\n    })\n  }, other)), _react.default.createElement(\"span\", {\n    className: classes.bar\n  }));\n}\n\nSwitch.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * Attributes applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: _propTypes.default.string,\n\n  /**\n   * The value of the component.\n   */\n  value: _propTypes.default.string\n} : {};\nSwitch.defaultProps = {\n  color: 'secondary'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSwitch'\n})(Switch);\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$material_ui$core$internal$SwitchBase","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$classnames$index","~$module$node_modules$$material_ui$core$utils$helpers","~$module$node_modules$$material_ui$core$styles$withStyles","~$module$node_modules$$babel$runtime$helpers$objectWithoutProperties"]],"~:properties",["^5",["backgroundColor","bar","iconChecked","width","top","height","switchBase","className","__esModule","marginTop","padding","colorSecondary","checkedIcon","transform","root","verticalAlign","colorPrimary","propTypes","position","name","value","marginLeft","classes","borderRadius","styles","defaultProps","duration","boxShadow","type","zIndex","flexShrink","display","disabled","transition","color","default","checked","opacity","left","icon"]],"~:compiled-at",1540237495546,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$Switch$Switch.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@material-ui/core/Switch/Switch.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$Switch$Switch\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.styles = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutProperties\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _classnames = _interopRequireDefault(require(\\\"classnames\\\"));\\n\\nvar _withStyles = _interopRequireDefault(require(\\\"../styles/withStyles\\\"));\\n\\nvar _helpers = require(\\\"../utils/helpers\\\");\\n\\nvar _SwitchBase = _interopRequireDefault(require(\\\"../internal/SwitchBase\\\"));\\n\\nvar styles = function styles(theme) {\\n  return {\\n    /* Styles applied to the root element. */\\n    root: {\\n      display: 'inline-flex',\\n      width: 62,\\n      position: 'relative',\\n      flexShrink: 0,\\n      // For correct alignment with the text.\\n      verticalAlign: 'middle'\\n    },\\n\\n    /* Styles used to create the `icon` passed to the internal `SwitchBase` component `icon` prop. */\\n    icon: {\\n      boxShadow: theme.shadows[1],\\n      backgroundColor: 'currentColor',\\n      width: 20,\\n      height: 20,\\n      borderRadius: '50%'\\n    },\\n\\n    /* Styles applied the icon element component if `checked={true}`. */\\n    iconChecked: {\\n      boxShadow: theme.shadows[2]\\n    },\\n\\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\\n    switchBase: {\\n      zIndex: 1,\\n      padding: 0,\\n      height: 48,\\n      width: 48,\\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\\n      transition: theme.transitions.create('transform', {\\n        duration: theme.transitions.duration.shortest\\n      })\\n    },\\n\\n    /* Styles applied to the internal `SwitchBase` component's `checked` class. */\\n    checked: {\\n      transform: 'translateX(14px)',\\n      '& + $bar': {\\n        opacity: 0.5\\n      }\\n    },\\n\\n    /* Styles applied to the internal SwitchBase component's root element if `color=\\\"primary\\\"`. */\\n    colorPrimary: {\\n      '&$checked': {\\n        color: theme.palette.primary.main,\\n        '& + $bar': {\\n          backgroundColor: theme.palette.primary.main\\n        }\\n      }\\n    },\\n\\n    /* Styles applied to the internal SwitchBase component's root element if `color=\\\"secondary\\\"`. */\\n    colorSecondary: {\\n      '&$checked': {\\n        color: theme.palette.secondary.main,\\n        '& + $bar': {\\n          backgroundColor: theme.palette.secondary.main\\n        }\\n      }\\n    },\\n\\n    /* Styles applied to the internal SwitchBase component's disabled class. */\\n    disabled: {\\n      '& + $bar': {\\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\\n      },\\n      '& $icon': {\\n        boxShadow: theme.shadows[1]\\n      },\\n      '&$switchBase': {\\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\\n        '& + $bar': {\\n          backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\\n        }\\n      }\\n    },\\n\\n    /* Styles applied to the bar element. */\\n    bar: {\\n      borderRadius: 14 / 2,\\n      display: 'block',\\n      position: 'absolute',\\n      width: 34,\\n      height: 14,\\n      top: '50%',\\n      left: '50%',\\n      marginTop: -7,\\n      marginLeft: -17,\\n      transition: theme.transitions.create(['opacity', 'background-color'], {\\n        duration: theme.transitions.duration.shortest\\n      }),\\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\\n    }\\n  };\\n};\\n\\nexports.styles = styles;\\n\\nfunction Switch(props) {\\n  var classes = props.classes,\\n      className = props.className,\\n      color = props.color,\\n      other = (0, _objectWithoutProperties2.default)(props, [\\\"classes\\\", \\\"className\\\", \\\"color\\\"]);\\n  return _react.default.createElement(\\\"span\\\", {\\n    className: (0, _classnames.default)(classes.root, className)\\n  }, _react.default.createElement(_SwitchBase.default, (0, _extends2.default)({\\n    type: \\\"checkbox\\\",\\n    icon: _react.default.createElement(\\\"span\\\", {\\n      className: classes.icon\\n    }),\\n    classes: {\\n      root: (0, _classnames.default)(classes.switchBase, classes[\\\"color\\\".concat((0, _helpers.capitalize)(color))]),\\n      checked: classes.checked,\\n      disabled: classes.disabled\\n    },\\n    checkedIcon: _react.default.createElement(\\\"span\\\", {\\n      className: (0, _classnames.default)(classes.icon, classes.iconChecked)\\n    })\\n  }, other)), _react.default.createElement(\\\"span\\\", {\\n    className: classes.bar\\n  }));\\n}\\n\\nSwitch.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  /**\\n   * If `true`, the component is checked.\\n   */\\n  checked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\\n\\n  /**\\n   * The icon to display when the component is checked.\\n   */\\n  checkedIcon: _propTypes.default.node,\\n\\n  /**\\n   * Override or extend the styles applied to the component.\\n   * See [CSS API](#css-api) below for more details.\\n   */\\n  classes: _propTypes.default.object.isRequired,\\n\\n  /**\\n   * @ignore\\n   */\\n  className: _propTypes.default.string,\\n\\n  /**\\n   * The color of the component. It supports those theme colors that make sense for this component.\\n   */\\n  color: _propTypes.default.oneOf(['primary', 'secondary', 'default']),\\n\\n  /**\\n   * @ignore\\n   */\\n  defaultChecked: _propTypes.default.bool,\\n\\n  /**\\n   * If `true`, the switch will be disabled.\\n   */\\n  disabled: _propTypes.default.bool,\\n\\n  /**\\n   * If `true`, the ripple effect will be disabled.\\n   */\\n  disableRipple: _propTypes.default.bool,\\n\\n  /**\\n   * The icon to display when the component is unchecked.\\n   */\\n  icon: _propTypes.default.node,\\n\\n  /**\\n   * The id of the `input` element.\\n   */\\n  id: _propTypes.default.string,\\n\\n  /**\\n   * Attributes applied to the `input` element.\\n   */\\n  inputProps: _propTypes.default.object,\\n\\n  /**\\n   * Use that property to pass a ref callback to the native input component.\\n   */\\n  inputRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\\n\\n  /**\\n   * Callback fired when the state is changed.\\n   *\\n   * @param {object} event The event source of the callback.\\n   * You can pull out the new value by accessing `event.target.checked`.\\n   * @param {boolean} checked The `checked` value of the switch\\n   */\\n  onChange: _propTypes.default.func,\\n\\n  /**\\n   * The input component property `type`.\\n   */\\n  type: _propTypes.default.string,\\n\\n  /**\\n   * The value of the component.\\n   */\\n  value: _propTypes.default.string\\n} : {};\\nSwitch.defaultProps = {\\n  color: 'secondary'\\n};\\n\\nvar _default = (0, _withStyles.default)(styles, {\\n  name: 'MuiSwitch'\\n})(Switch);\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Switch\",\"props\",\"classes\",\"className\",\"color\",\"other\",\"_objectWithoutProperties2\",\"default\",\"_react\",\"createElement\",\"_classnames\",\"root\",\"_SwitchBase\",\"_extends2\",\"type\",\"icon\",\"switchBase\",\"concat\",\"_helpers\",\"capitalize\",\"checked\",\"disabled\",\"checkedIcon\",\"iconChecked\",\"bar\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"styles\",\"_withStyles\",\"theme\",\"display\",\"width\",\"position\",\"flexShrink\",\"verticalAlign\",\"boxShadow\",\"shadows\",\"backgroundColor\",\"height\",\"borderRadius\",\"zIndex\",\"padding\",\"palette\",\"grey\",\"transition\",\"transitions\",\"create\",\"duration\",\"shortest\",\"transform\",\"opacity\",\"colorPrimary\",\"primary\",\"main\",\"colorSecondary\",\"secondary\",\"common\",\"black\",\"white\",\"top\",\"left\",\"marginTop\",\"marginLeft\",\"propTypes\",\"defaultProps\",\"_default\",\"name\"]\n}\n"]