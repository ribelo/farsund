["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/keycode/index.js"],"~:js","shadow$provide.module$node_modules$keycode$index=function(b,e,a,f,c,m){function d(a){if(a&&\"object\"===typeof a){var b=a.which||a.keyCode||a.charCode;b&&(a=b)}if(\"number\"===typeof a)return h[a];a=String(a);if((b=k[a.toLowerCase()])||(b=l[a.toLowerCase()]))return b;if(1===a.length)return a.charCodeAt(0)}d.isEventKey=function(a,b){if(a&&\"object\"===typeof a){a=a.which||a.keyCode||a.charCode;if(null===a||void 0===a)return!1;if(\"string\"===typeof b){var c=k[b.toLowerCase()];if(c||(c=l[b.toLowerCase()]))return c===\na}else if(\"number\"===typeof b)return b===a;return!1}};c=f.exports=d;var k=c.code=c.codes={backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,\"pause/break\":19,\"caps lock\":20,esc:27,space:32,\"page up\":33,\"page down\":34,end:35,home:36,left:37,up:38,right:39,down:40,insert:45,\"delete\":46,command:91,\"left command\":91,\"right command\":93,\"numpad *\":106,\"numpad +\":107,\"numpad -\":109,\"numpad .\":110,\"numpad /\":111,\"num lock\":144,\"scroll lock\":145,\"my computer\":182,\"my calculator\":183,\";\":186,\"\\x3d\":187,\",\":188,\n\"-\":189,\".\":190,\"/\":191,\"`\":192,\"[\":219,\"\\\\\":220,\"]\":221,\"'\":222},l=c.aliases={windows:91,\"⇧\":16,\"⌥\":18,\"⌃\":17,\"⌘\":91,ctl:17,control:17,option:18,pause:19,\"break\":19,caps:20,\"return\":13,escape:27,spc:32,spacebar:32,pgup:33,pgdn:34,ins:45,del:46,cmd:91};for(b=97;123>b;b++)k[String.fromCharCode(b)]=b-32;for(b=48;58>b;b++)k[b-48]=b;for(b=1;13>b;b++)k[\"f\"+b]=b+111;for(b=0;10>b;b++)k[\"numpad \"+b]=b+96;var h=c.names=c.title={};for(b in k)h[k[b]]=b;for(var p in l)k[p]=l[p]}","~:source","shadow$provide[\"module$node_modules$keycode$index\"] = function(global,process,require,module,exports,shadow$shims) {\n// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["space","tab","right","aliases","up","command","spacebar","delete","codes","caps","return","ins","option","backspace","escape","del","shift","pause","alt","ctl","break","windows","control","isEventKey","pgdn","names","cmd","title","down","home","spc","insert","ctrl","pgup","enter","code","end","esc","left"]],"~:compiled-at",1537815743074,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$keycode$index.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/keycode/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$keycode$index\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n// Source: http://jsfiddle.net/vWx8V/\\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\\n\\n/**\\n * Conenience method returns corresponding value for given keyName or keyCode.\\n *\\n * @param {Mixed} keyCode {Number} or keyName {String}\\n * @return {Mixed}\\n * @api public\\n */\\n\\nfunction keyCode(searchInput) {\\n  // Keyboard Events\\n  if (searchInput && 'object' === typeof searchInput) {\\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\\n    if (hasKeyCode) searchInput = hasKeyCode\\n  }\\n\\n  // Numbers\\n  if ('number' === typeof searchInput) return names[searchInput]\\n\\n  // Everything else (cast to string)\\n  var search = String(searchInput)\\n\\n  // check codes\\n  var foundNamedKey = codes[search.toLowerCase()]\\n  if (foundNamedKey) return foundNamedKey\\n\\n  // check aliases\\n  var foundNamedKey = aliases[search.toLowerCase()]\\n  if (foundNamedKey) return foundNamedKey\\n\\n  // weird character?\\n  if (search.length === 1) return search.charCodeAt(0)\\n\\n  return undefined\\n}\\n\\n/**\\n * Compares a keyboard event with a given keyCode or keyName.\\n *\\n * @param {Event} event Keyboard event that should be tested\\n * @param {Mixed} keyCode {Number} or keyName {String}\\n * @return {Boolean}\\n * @api public\\n */\\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\\n  if (event && 'object' === typeof event) {\\n    var keyCode = event.which || event.keyCode || event.charCode\\n    if (keyCode === null || keyCode === undefined) { return false; }\\n    if (typeof nameOrCode === 'string') {\\n      // check codes\\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\\n    \\n      // check aliases\\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\\n    } else if (typeof nameOrCode === 'number') {\\n      return nameOrCode === keyCode;\\n    }\\n    return false;\\n  }\\n}\\n\\nexports = module.exports = keyCode;\\n\\n/**\\n * Get by name\\n *\\n *   exports.code['enter'] // => 13\\n */\\n\\nvar codes = exports.code = exports.codes = {\\n  'backspace': 8,\\n  'tab': 9,\\n  'enter': 13,\\n  'shift': 16,\\n  'ctrl': 17,\\n  'alt': 18,\\n  'pause/break': 19,\\n  'caps lock': 20,\\n  'esc': 27,\\n  'space': 32,\\n  'page up': 33,\\n  'page down': 34,\\n  'end': 35,\\n  'home': 36,\\n  'left': 37,\\n  'up': 38,\\n  'right': 39,\\n  'down': 40,\\n  'insert': 45,\\n  'delete': 46,\\n  'command': 91,\\n  'left command': 91,\\n  'right command': 93,\\n  'numpad *': 106,\\n  'numpad +': 107,\\n  'numpad -': 109,\\n  'numpad .': 110,\\n  'numpad /': 111,\\n  'num lock': 144,\\n  'scroll lock': 145,\\n  'my computer': 182,\\n  'my calculator': 183,\\n  ';': 186,\\n  '=': 187,\\n  ',': 188,\\n  '-': 189,\\n  '.': 190,\\n  '/': 191,\\n  '`': 192,\\n  '[': 219,\\n  '\\\\\\\\': 220,\\n  ']': 221,\\n  \\\"'\\\": 222\\n}\\n\\n// Helper aliases\\n\\nvar aliases = exports.aliases = {\\n  'windows': 91,\\n  '\\u21e7': 16,\\n  '\\u2325': 18,\\n  '\\u2303': 17,\\n  '\\u2318': 91,\\n  'ctl': 17,\\n  'control': 17,\\n  'option': 18,\\n  'pause': 19,\\n  'break': 19,\\n  'caps': 20,\\n  'return': 13,\\n  'escape': 27,\\n  'spc': 32,\\n  'spacebar': 32,\\n  'pgup': 33,\\n  'pgdn': 34,\\n  'ins': 45,\\n  'del': 46,\\n  'cmd': 91\\n}\\n\\n/*!\\n * Programatically add the following\\n */\\n\\n// lower case chars\\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\\n\\n// numbers\\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\\n\\n// function keys\\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\\n\\n// numpad keys\\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\\n\\n/**\\n * Get by code\\n *\\n *   exports.name[13] // => 'Enter'\\n */\\n\\nvar names = exports.names = exports.title = {} // title for backward compat\\n\\n// Create reverse mapping\\nfor (i in codes) names[codes[i]] = i\\n\\n// Add aliases\\nfor (var alias in aliases) {\\n  codes[alias] = aliases[alias]\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"keyCode\",\"searchInput\",\"hasKeyCode\",\"which\",\"charCode\",\"names\",\"search\",\"String\",\"foundNamedKey\",\"codes\",\"toLowerCase\",\"aliases\",\"length\",\"charCodeAt\",\"isEventKey\",\"keyCode.isEventKey\",\"event\",\"nameOrCode\",\"undefined\",\"code\",\"i\",\"fromCharCode\",\"title\",\"alias\"]\n}\n"]