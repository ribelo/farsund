["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Collection/Collection.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Collection$Collection=function(b,e,a,f,c,m){function d(a){return a&&a.__esModule?a:{default:a}}Object.defineProperty(c,\"__esModule\",{value:!0});b=a(\"module$node_modules$babel_runtime$helpers$extends\");var k=d(b);b=a(\"module$node_modules$babel_runtime$helpers$objectWithoutProperties\");var l=d(b);b=a(\"module$node_modules$babel_runtime$core_js$object$get_prototype_of\");var h=d(b);b=a(\"module$node_modules$babel_runtime$helpers$classCallCheck\");\nvar p=d(b);b=a(\"module$node_modules$babel_runtime$helpers$createClass\");var r=d(b);b=a(\"module$node_modules$babel_runtime$helpers$possibleConstructorReturn\");var q=d(b);b=a(\"module$node_modules$babel_runtime$helpers$inherits\");var g=d(b);b=a(\"module$node_modules$prop_types$index\");d(b);var n=function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);b.default=a;return b}(a(\"module$node_modules$react$index\"));b=a(\"module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView\");\nvar v=d(b);b=a(\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\");var y=d(b);b=a(\"module$node_modules$react_virtualized$dist$commonjs$utils$getUpdatedOffsetForIndex\");var w=d(b);a(\"module$node_modules$react_virtualized$dist$commonjs$Collection$types\");a=function(a){function b(a,c){(0,p.default)(this,b);a=(0,q.default)(this,(b.__proto__||(0,h.default)(b)).call(this,a,c));a._cellMetadata=[];a._lastRenderedCellIndices=[];a._cellCache=[];a._isScrollingChange=\na._isScrollingChange.bind(a);a._setCollectionViewRef=a._setCollectionViewRef.bind(a);return a}(0,g.default)(b,a);(0,r.default)(b,[{key:\"forceUpdate\",value:function(){void 0!==this._collectionView&&this._collectionView.forceUpdate()}},{key:\"recomputeCellSizesAndPositions\",value:function(){this._cellCache=[];this._collectionView.recomputeCellSizesAndPositions()}},{key:\"render\",value:function(){var a=(0,l.default)(this.props,[]);return n.createElement(v.default,(0,k.default)({cellLayoutManager:this,\nisScrollingChange:this._isScrollingChange,ref:this._setCollectionViewRef},a))}},{key:\"calculateSizeAndPositionData\",value:function(){var a=this.props,b=a.cellCount,c=a.cellSizeAndPositionGetter;a=a.sectionSize;b=(0,y.default)({cellCount:b,cellSizeAndPositionGetter:c,sectionSize:a});this._cellMetadata=b.cellMetadata;this._sectionManager=b.sectionManager;this._height=b.height;this._width=b.width}},{key:\"getLastRenderedIndices\",value:function(){return this._lastRenderedCellIndices}},{key:\"getScrollPositionForCell\",\nvalue:function(a){var b=a.align,c=a.cellIndex,d=a.height,e=a.scrollLeft,g=a.scrollTop;a=a.width;var f=this.props.cellCount;0<=c&&c<f&&(f=this._cellMetadata[c],e=(0,w.default)({align:b,cellOffset:f.x,cellSize:f.width,containerSize:a,currentOffset:e,targetIndex:c}),g=(0,w.default)({align:b,cellOffset:f.y,cellSize:f.height,containerSize:d,currentOffset:g,targetIndex:c}));return{scrollLeft:e,scrollTop:g}}},{key:\"getTotalSize\",value:function(){return{height:this._height,width:this._width}}},{key:\"cellRenderers\",\nvalue:function(a){var b=this,c=a.isScrolling,d=this.props,e=d.cellGroupRenderer;d=d.cellRenderer;this._lastRenderedCellIndices=this._sectionManager.getCellIndices({height:a.height,width:a.width,x:a.x,y:a.y});return e({cellCache:this._cellCache,cellRenderer:d,cellSizeAndPositionGetter:function(a){return b._sectionManager.getCellMetadata({index:a.index})},indices:this._lastRenderedCellIndices,isScrolling:c})}},{key:\"_isScrollingChange\",value:function(a){a||(this._cellCache=[])}},{key:\"_setCollectionViewRef\",\nvalue:function(a){this._collectionView=a}}]);return b}(n.PureComponent);a.defaultProps={\"aria-label\":\"grid\",cellGroupRenderer:function(a){var b=a.cellCache,c=a.cellRenderer,d=a.cellSizeAndPositionGetter,e=a.isScrolling;return a.indices.map(function(a){var g=d({index:a});g={index:a,isScrolling:e,key:a,style:{height:g.height,left:g.x,position:\"absolute\",top:g.y,width:g.width}};return e?(a in b||(b[a]=c(g)),b[a]):c(g)}).filter(function(a){return!!a})}};c.default=a;a.propTypes={}}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _CollectionView = require('./CollectionView');\n\nvar _CollectionView2 = _interopRequireDefault(_CollectionView);\n\nvar _calculateSizeAndPositionData2 = require('./utils/calculateSizeAndPositionData');\n\nvar _calculateSizeAndPositionData3 = _interopRequireDefault(_calculateSizeAndPositionData2);\n\nvar _getUpdatedOffsetForIndex = require('../utils/getUpdatedOffsetForIndex');\n\nvar _getUpdatedOffsetForIndex2 = _interopRequireDefault(_getUpdatedOffsetForIndex);\n\nvar _types = require('./types');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection = function (_React$PureComponent) {\n  (0, _inherits3.default)(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    (0, _classCallCheck3.default)(this, Collection);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Collection.__proto__ || (0, _getPrototypeOf2.default)(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = [];\n\n    // Cell cache during scroll (for perforamnce)\n    _this._cellCache = [];\n\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = (0, _objectWithoutProperties3.default)(this.props, []);\n\n\n      return React.createElement(_CollectionView2.default, (0, _extends3.default)({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n\n      var data = (0, _calculateSizeAndPositionData3.default)({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n\n        scrollLeft = (0, _getUpdatedOffsetForIndex2.default)({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n\n        scrollTop = (0, _getUpdatedOffsetForIndex2.default)({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer;\n\n      // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({ index: index });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexports.default = Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': _propTypes2.default.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: _propTypes2.default.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: _propTypes2.default.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: _propTypes2.default.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: _propTypes2.default.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: _propTypes2.default.number\n} : {};\n\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\n\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    };\n\n    // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$Collection$types","~$module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData","~$module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView","~$module$node_modules$babel_runtime$helpers$possibleConstructorReturn","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$babel_runtime$helpers$inherits","~$module$node_modules$babel_runtime$core_js$object$get_prototype_of","~$module$node_modules$babel_runtime$helpers$objectWithoutProperties","~$module$node_modules$react_virtualized$dist$commonjs$utils$getUpdatedOffsetForIndex","~$module$node_modules$babel_runtime$helpers$extends","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["sectionSize","_lastRenderedCellIndices","_collectionView","width","align","top","targetIndex","index","cellLayoutManager","height","_cellMetadata","_setCollectionViewRef","scrollLeft","_sectionManager","key","x","__esModule","isScrolling","containerSize","propTypes","_isScrollingChange","_width","position","cellRenderer","style","value","cellSizeAndPositionGetter","_cellCache","_height","cellSize","cellCache","defaultProps","isScrollingChange","cellCount","y","cellOffset","ref","currentOffset","cellGroupRenderer","scrollTop","default","left","indices"]],"~:compiled-at",1537815743272,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection.js\",\n\"lineCount\":8,\n\"mappings\":\"AAAAA,cAAA,0EAAA,CAA8F,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CA2D3JC,QAASA,EAAsB,CAACC,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAOA,CAAAC,WAAP,CAAwBD,CAAxB,CAA8B,CAAEE,QAASF,CAAX,CAAvC,CAxDrCG,MAAAC,eAAA,CAAsBP,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAIIC,EAAAA,CAAYX,CAAA,CAAQ,mDAAR,CAEhB,KAAIY,EAAYR,CAAA,CAAuBO,CAAvB,CAEZE,EAAAA,CAA4Bb,CAAA,CAAQ,mEAAR,CAEhC,KAAIc,EAA4BV,CAAA,CAAuBS,CAAvB,CAE5BE,EAAAA,CAAkBf,CAAA,CAAQ,mEAAR,CAEtB,KAAIgB,EAAmBZ,CAAA,CAAuBW,CAAvB,CAEnBE,EAAAA,CAAmBjB,CAAA,CAAQ,0DAAR,CAEvB;IAAIkB,EAAmBd,CAAA,CAAuBa,CAAvB,CAEnBE,EAAAA,CAAgBnB,CAAA,CAAQ,uDAAR,CAEpB,KAAIoB,EAAgBhB,CAAA,CAAuBe,CAAvB,CAEhBE,EAAAA,CAA8BrB,CAAA,CAAQ,qEAAR,CAElC,KAAIsB,EAA8BlB,CAAA,CAAuBiB,CAAvB,CAE9BE,EAAAA,CAAavB,CAAA,CAAQ,oDAAR,CAEjB,KAAIwB,EAAapB,CAAA,CAAuBmB,CAAvB,CAEbE,EAAAA,CAAazB,CAAA,CAAQ,sCAAR,CAECI,EAAA,CAAuBqB,CAAvB,CAIlB,KAAIC,EAgBJC,QAAgC,CAACtB,CAAD,CAAM,CAAE,GAAIA,CAAJ,EAAWA,CAAAC,WAAX,CAA6B,MAAOD,EAAc,KAAIuB,EAAS,EAAI,IAAW,IAAX,EAAIvB,CAAJ,CAAmB,IAAKwB,IAAIA,CAAT,GAAgBxB,EAAhB,CAA2BG,MAAAsB,UAAAC,eAAAC,KAAA,CAAqC3B,CAArC,CAA0CwB,CAA1C,CAAJ,GAAoDD,CAAA,CAAOC,CAAP,CAApD,CAAkExB,CAAA,CAAIwB,CAAJ,CAAlE,CAAgFD,EAAArB,QAAA,CAAiBF,CAAK,OAAOuB,EAA5N,CAhB1B,CAFC5B,CAAAiC,CAAQ,iCAARA,CAED,CAERC,EAAAA,CAAkBlC,CAAA,CAAQ,+EAAR,CAEtB;IAAImC,EAAmB/B,CAAA,CAAuB8B,CAAvB,CAEnBE,EAAAA,CAAiCpC,CAAA,CAAQ,mGAAR,CAErC,KAAIqC,EAAiCjC,CAAA,CAAuBgC,CAAvB,CAEjCE,EAAAA,CAA4BtC,CAAA,CAAQ,oFAAR,CAEhC,KAAIuC,EAA6BnC,CAAA,CAAuBkC,CAAvB,CAEpBtC,EAAA,CAAQ,sEAAR,CAUTwC,EAAAA,CAAa,QAAS,CAACC,CAAD,CAAuB,CAG/CD,QAASA,EAAU,CAACE,CAAD,CAAQC,CAAR,CAAiB,CAClC,CAAC,CAAA,CAAGzB,CAAAX,QAAJ,EAA8B,IAA9B,CAAoCiC,CAApC,CAEII,EAAAA,CAAQ,CAAC,CAAA,CAAGtB,CAAAf,QAAJ,EAAyC,IAAzC,CAA+CyB,CAACQ,CAAAK,UAADb,EAAyB,CAAC,CAAA,CAAGhB,CAAAT,QAAJ,EAA8BiC,CAA9B,CAAzBR,MAAA,CAAyE,IAAzE,CAA+EU,CAA/E,CAAsFC,CAAtF,CAA/C,CAEZC,EAAAE,cAAA,CAAsB,EACtBF,EAAAG,yBAAA,CAAiC,EAGjCH,EAAAI,WAAA,CAAmB,EAEnBJ,EAAAK,mBAAA;AAA2BL,CAAAK,mBAAAC,KAAA,CAA8BN,CAA9B,CAC3BA,EAAAO,sBAAA,CAA8BP,CAAAO,sBAAAD,KAAA,CAAiCN,CAAjC,CAC9B,OAAOA,EAb2B,CAFpC,CAAC,CAAA,CAAGpB,CAAAjB,QAAJ,EAAwBiC,CAAxB,CAAoCC,CAApC,CAkBA,EAAC,CAAA,CAAGrB,CAAAb,QAAJ,EAA2BiC,CAA3B,CAAuC,CAAC,CACtCX,IAAK,aADiC,CAEtCnB,MAAO0C,QAAoB,EAAG,CACCC,IAAAA,EAA7B,GAAI,IAAAC,gBAAJ,EACE,IAAAA,gBAAAF,YAAA,EAF0B,CAFQ,CAAD,CAUpC,CACDvB,IAAK,gCADJ,CAEDnB,MAAO6C,QAAuC,EAAG,CAC/C,IAAAP,WAAA,CAAkB,EAClB,KAAAM,gBAAAC,+BAAA,EAF+C,CAFhD,CAVoC,CAmBpC,CACD1B,IAAK,QADJ,CAEDnB,MAAO8C,QAAe,EAAG,CACvB,IAAId,EAAQ,CAAC,CAAA,CAAG5B,CAAAP,QAAJ,EAAuC,IAAAmC,MAAvC,CAAmD,EAAnD,CAGZ,OAAOhB,EAAA+B,cAAA,CAAoBtB,CAAA5B,QAApB,CAA8C,CAAC,CAAA,CAAGK,CAAAL,QAAJ,EAAuB,CAC1EmD,kBAAmB,IADuD;AAE1EC,kBAAmB,IAAAV,mBAFuD,CAG1EW,IAAK,IAAAT,sBAHqE,CAAvB,CAIlDT,CAJkD,CAA9C,CAJgB,CAFxB,CAnBoC,CAkCpC,CACDb,IAAK,8BADJ,CAEDnB,MAAOmD,QAAqC,EAAG,CAAA,IACzCC,EAAS,IAAApB,MADgC,CAEzCqB,EAAYD,CAAAC,UAF6B,CAGzCC,EAA4BF,CAAAE,0BAC5BC,EAAAA,CAAcH,CAAAG,YAGdC,EAAAA,CAAO,CAAC,CAAA,CAAG7B,CAAA9B,QAAJ,EAA4C,CACrDwD,UAAWA,CAD0C,CAErDC,0BAA2BA,CAF0B,CAGrDC,YAAaA,CAHwC,CAA5C,CAMX,KAAAnB,cAAA,CAAqBoB,CAAAC,aACrB,KAAAC,gBAAA,CAAuBF,CAAAG,eACvB,KAAAC,QAAA,CAAeJ,CAAAK,OACf,KAAAC,OAAA,CAAcN,CAAAO,MAhB+B,CAF9C,CAlCoC,CA2DpC,CACD5C,IAAK,wBADJ,CAEDnB,MAAOgE,QAA+B,EAAG,CACvC,MAAO,KAAA3B,yBADgC,CAFxC,CA3DoC,CAqEpC,CACDlB,IAAK,0BADJ;AAEDnB,MAAOiE,QAAiC,CAACC,CAAD,CAAO,CAAA,IACzCC,EAAQD,CAAAC,MADiC,CAEzCC,EAAYF,CAAAE,UAF6B,CAGzCP,EAASK,CAAAL,OAHgC,CAIzCQ,EAAaH,CAAAG,WAJ4B,CAKzCC,EAAYJ,CAAAI,UACZP,EAAAA,CAAQG,CAAAH,MACZ,KAAIV,EAAY,IAAArB,MAAAqB,UAGC,EAAjB,EAAIe,CAAJ,EAAsBA,CAAtB,CAAkCf,CAAlC,GACMI,CAWJ,CAXmB,IAAArB,cAAA,CAAmBgC,CAAnB,CAWnB,CATAC,CASA,CATa,CAAC,CAAA,CAAGxC,CAAAhC,QAAJ,EAAwC,CACnDsE,MAAOA,CAD4C,CAEnDI,WAAYd,CAAAe,EAFuC,CAGnDC,SAAUhB,CAAAM,MAHyC,CAInDW,cAAeX,CAJoC,CAKnDY,cAAeN,CALoC,CAMnDO,YAAaR,CANsC,CAAxC,CASb,CAAAE,CAAA,CAAY,CAAC,CAAA,CAAGzC,CAAAhC,QAAJ,EAAwC,CAClDsE,MAAOA,CAD2C,CAElDI,WAAYd,CAAAoB,EAFsC,CAGlDJ,SAAUhB,CAAAI,OAHwC,CAIlDa,cAAeb,CAJmC,CAKlDc,cAAeL,CALmC,CAMlDM,YAAaR,CANqC,CAAxC,CAZd,CAsBA,OAAO,CACLC,WAAYA,CADP,CAELC,UAAWA,CAFN,CAhCsC,CAF9C,CArEoC,CA4GpC,CACDnD,IAAK,cADJ,CAEDnB,MAAO8E,QAAqB,EAAG,CAC7B,MAAO,CACLjB,OAAQ,IAAAD,QADH,CAELG,MAAO,IAAAD,OAFF,CADsB,CAF9B,CA5GoC,CAoHpC,CACD3C,IAAK,eADJ;AAEDnB,MAAO+E,QAAsB,CAACC,CAAD,CAAQ,CACnC,IAAIC,EAAS,IAAb,CAGIC,EAAcF,CAAAE,YAHlB,CAOIC,EAAU,IAAAnD,MAPd,CAQIoD,EAAoBD,CAAAC,kBACpBC,EAAAA,CAAeF,CAAAE,aAInB,KAAAhD,yBAAA,CAAgC,IAAAqB,gBAAA4B,eAAA,CAAoC,CAClEzB,OAZWmB,CAAAnB,OAWuD,CAElEE,MAXUiB,CAAAjB,MASwD,CAGlES,EAXMQ,CAAAR,EAQ4D,CAIlEK,EAXMG,CAAAH,EAO4D,CAApC,CAOhC,OAAOO,EAAA,CAAkB,CACvBG,UAAW,IAAAjD,WADY,CAEvB+C,aAAcA,CAFS,CAGvB/B,0BAA2BA,QAAkC,CAACkC,CAAD,CAAQ,CAEnE,MAAOP,EAAAvB,gBAAA+B,gBAAA,CAAuC,CAAEC,MADpCF,CAAAE,MACkC,CAAvC,CAF4D,CAH9C,CAOvBC,QAAS,IAAAtD,yBAPc,CAQvB6C,YAAaA,CARU,CAAlB,CArB4B,CAFpC,CApHoC,CAsJpC,CACD/D,IAAK,oBADJ,CAEDnB,MAAOuC,QAA2B,CAAC2C,CAAD,CAAc,CACzCA,CAAL,GACE,IAAA5C,WADF,CACoB,EADpB,CAD8C,CAF/C,CAtJoC,CA6JpC,CACDnB,IAAK,uBADJ;AAEDnB,MAAOyC,QAA8B,CAACS,CAAD,CAAM,CACzC,IAAAN,gBAAA,CAAuBM,CADkB,CAF1C,CA7JoC,CAAvC,CAmKA,OAAOpB,EAtLwC,CAAhC,CAuLfd,CAAA4E,cAvLe,CAyLjB9D,EAAA+D,aAAA,CAA0B,CACxB,aAAc,MADU,CAExBT,kBAwCFU,QAAiC,CAACC,CAAD,CAAQ,CAAA,IACnCR,EAAYQ,CAAAR,UADuB,CAEnCF,EAAeU,CAAAV,aAFoB,CAGnC/B,EAA4ByC,CAAAzC,0BAHO,CAKnC4B,EAAca,CAAAb,YAElB,OAHca,EAAAJ,QAGPK,IAAA,CAAY,QAAS,CAACN,CAAD,CAAQ,CAClC,IAAIjC,EAAeH,CAAA,CAA0B,CAAEoC,MAAOA,CAAT,CAA1B,CAEfO,EAAAA,CAAoB,CACtBP,MAAOA,CADe,CAEtBR,YAAaA,CAFS,CAGtB/D,IAAKuE,CAHiB,CAItBQ,MAAO,CACLrC,OAAQJ,CAAAI,OADH,CAELsC,KAAM1C,CAAAe,EAFD,CAGL4B,SAAU,UAHL,CAILC,IAAK5C,CAAAoB,EAJA,CAKLd,MAAON,CAAAM,MALF,CAJe,CAiBxB,OAAImB,EAAJ,EACQQ,CAIC,GAJQH,EAIR,GAHLA,CAAA,CAAUG,CAAV,CAGK,CAHcL,CAAA,CAAaY,CAAb,CAGd,EAAAV,CAAA,CAAUG,CAAV,CALT,EAOSL,CAAA,CAAaY,CAAb,CA3ByB,CAA7B,CAAAK,OAAA,CA6BG,QAAS,CAACC,CAAD,CAAe,CAChC,MAAO,CAAC,CAACA,CADuB,CA7B3B,CAPgC,CA1Cf,CAI1B/G,EAAAK,QAAA,CAAkBiC,CAClBA,EAAA0E,UAAA,CAkCI,EAjSuJ;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Collection/Collection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Collection$Collection\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends2 = require('babel-runtime/helpers/extends');\\n\\nvar _extends3 = _interopRequireDefault(_extends2);\\n\\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\\n\\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\\n\\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\\n\\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\\n\\nvar _inherits2 = require('babel-runtime/helpers/inherits');\\n\\nvar _inherits3 = _interopRequireDefault(_inherits2);\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = require('react');\\n\\nvar React = _interopRequireWildcard(_react);\\n\\nvar _CollectionView = require('./CollectionView');\\n\\nvar _CollectionView2 = _interopRequireDefault(_CollectionView);\\n\\nvar _calculateSizeAndPositionData2 = require('./utils/calculateSizeAndPositionData');\\n\\nvar _calculateSizeAndPositionData3 = _interopRequireDefault(_calculateSizeAndPositionData2);\\n\\nvar _getUpdatedOffsetForIndex = require('../utils/getUpdatedOffsetForIndex');\\n\\nvar _getUpdatedOffsetForIndex2 = _interopRequireDefault(_getUpdatedOffsetForIndex);\\n\\nvar _types = require('./types');\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * Renders scattered or non-linear data.\\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\\n */\\nvar Collection = function (_React$PureComponent) {\\n  (0, _inherits3.default)(Collection, _React$PureComponent);\\n\\n  function Collection(props, context) {\\n    (0, _classCallCheck3.default)(this, Collection);\\n\\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Collection.__proto__ || (0, _getPrototypeOf2.default)(Collection)).call(this, props, context));\\n\\n    _this._cellMetadata = [];\\n    _this._lastRenderedCellIndices = [];\\n\\n    // Cell cache during scroll (for perforamnce)\\n    _this._cellCache = [];\\n\\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\\n    return _this;\\n  }\\n\\n  (0, _createClass3.default)(Collection, [{\\n    key: 'forceUpdate',\\n    value: function forceUpdate() {\\n      if (this._collectionView !== undefined) {\\n        this._collectionView.forceUpdate();\\n      }\\n    }\\n\\n    /** See Collection#recomputeCellSizesAndPositions */\\n\\n  }, {\\n    key: 'recomputeCellSizesAndPositions',\\n    value: function recomputeCellSizesAndPositions() {\\n      this._cellCache = [];\\n      this._collectionView.recomputeCellSizesAndPositions();\\n    }\\n\\n    /** React lifecycle methods */\\n\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var props = (0, _objectWithoutProperties3.default)(this.props, []);\\n\\n\\n      return React.createElement(_CollectionView2.default, (0, _extends3.default)({\\n        cellLayoutManager: this,\\n        isScrollingChange: this._isScrollingChange,\\n        ref: this._setCollectionViewRef\\n      }, props));\\n    }\\n\\n    /** CellLayoutManager interface */\\n\\n  }, {\\n    key: 'calculateSizeAndPositionData',\\n    value: function calculateSizeAndPositionData() {\\n      var _props = this.props,\\n          cellCount = _props.cellCount,\\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\\n          sectionSize = _props.sectionSize;\\n\\n\\n      var data = (0, _calculateSizeAndPositionData3.default)({\\n        cellCount: cellCount,\\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\\n        sectionSize: sectionSize\\n      });\\n\\n      this._cellMetadata = data.cellMetadata;\\n      this._sectionManager = data.sectionManager;\\n      this._height = data.height;\\n      this._width = data.width;\\n    }\\n\\n    /**\\n     * Returns the most recently rendered set of cell indices.\\n     */\\n\\n  }, {\\n    key: 'getLastRenderedIndices',\\n    value: function getLastRenderedIndices() {\\n      return this._lastRenderedCellIndices;\\n    }\\n\\n    /**\\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\\n     */\\n\\n  }, {\\n    key: 'getScrollPositionForCell',\\n    value: function getScrollPositionForCell(_ref) {\\n      var align = _ref.align,\\n          cellIndex = _ref.cellIndex,\\n          height = _ref.height,\\n          scrollLeft = _ref.scrollLeft,\\n          scrollTop = _ref.scrollTop,\\n          width = _ref.width;\\n      var cellCount = this.props.cellCount;\\n\\n\\n      if (cellIndex >= 0 && cellIndex < cellCount) {\\n        var cellMetadata = this._cellMetadata[cellIndex];\\n\\n        scrollLeft = (0, _getUpdatedOffsetForIndex2.default)({\\n          align: align,\\n          cellOffset: cellMetadata.x,\\n          cellSize: cellMetadata.width,\\n          containerSize: width,\\n          currentOffset: scrollLeft,\\n          targetIndex: cellIndex\\n        });\\n\\n        scrollTop = (0, _getUpdatedOffsetForIndex2.default)({\\n          align: align,\\n          cellOffset: cellMetadata.y,\\n          cellSize: cellMetadata.height,\\n          containerSize: height,\\n          currentOffset: scrollTop,\\n          targetIndex: cellIndex\\n        });\\n      }\\n\\n      return {\\n        scrollLeft: scrollLeft,\\n        scrollTop: scrollTop\\n      };\\n    }\\n  }, {\\n    key: 'getTotalSize',\\n    value: function getTotalSize() {\\n      return {\\n        height: this._height,\\n        width: this._width\\n      };\\n    }\\n  }, {\\n    key: 'cellRenderers',\\n    value: function cellRenderers(_ref2) {\\n      var _this2 = this;\\n\\n      var height = _ref2.height,\\n          isScrolling = _ref2.isScrolling,\\n          width = _ref2.width,\\n          x = _ref2.x,\\n          y = _ref2.y;\\n      var _props2 = this.props,\\n          cellGroupRenderer = _props2.cellGroupRenderer,\\n          cellRenderer = _props2.cellRenderer;\\n\\n      // Store for later calls to getLastRenderedIndices()\\n\\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\\n        height: height,\\n        width: width,\\n        x: x,\\n        y: y\\n      });\\n\\n      return cellGroupRenderer({\\n        cellCache: this._cellCache,\\n        cellRenderer: cellRenderer,\\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\\n          var index = _ref3.index;\\n          return _this2._sectionManager.getCellMetadata({ index: index });\\n        },\\n        indices: this._lastRenderedCellIndices,\\n        isScrolling: isScrolling\\n      });\\n    }\\n  }, {\\n    key: '_isScrollingChange',\\n    value: function _isScrollingChange(isScrolling) {\\n      if (!isScrolling) {\\n        this._cellCache = [];\\n      }\\n    }\\n  }, {\\n    key: '_setCollectionViewRef',\\n    value: function _setCollectionViewRef(ref) {\\n      this._collectionView = ref;\\n    }\\n  }]);\\n  return Collection;\\n}(React.PureComponent);\\n\\nCollection.defaultProps = {\\n  'aria-label': 'grid',\\n  cellGroupRenderer: defaultCellGroupRenderer\\n};\\nexports.default = Collection;\\nCollection.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  'aria-label': _propTypes2.default.string,\\n\\n  /**\\n   * Number of cells in Collection.\\n   */\\n  cellCount: _propTypes2.default.number.isRequired,\\n\\n  /**\\n   * Responsible for rendering a group of cells given their indices.\\n   * Should implement the following interface: ({\\n   *   cellSizeAndPositionGetter:Function,\\n   *   indices: Array<number>,\\n   *   cellRenderer: Function\\n   * }): Array<PropTypes.node>\\n   */\\n  cellGroupRenderer: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Responsible for rendering a cell given an row and column index.\\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\\n   */\\n  cellRenderer: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Callback responsible for returning size and offset/position information for a given cell (index).\\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\\n   */\\n  cellSizeAndPositionGetter: _propTypes2.default.func.isRequired,\\n\\n  /**\\n   * Optionally override the size of the sections a Collection's cells are split into.\\n   */\\n  sectionSize: _propTypes2.default.number\\n} : {};\\n\\n\\nfunction defaultCellGroupRenderer(_ref4) {\\n  var cellCache = _ref4.cellCache,\\n      cellRenderer = _ref4.cellRenderer,\\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\\n      indices = _ref4.indices,\\n      isScrolling = _ref4.isScrolling;\\n\\n  return indices.map(function (index) {\\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\\n\\n    var cellRendererProps = {\\n      index: index,\\n      isScrolling: isScrolling,\\n      key: index,\\n      style: {\\n        height: cellMetadata.height,\\n        left: cellMetadata.x,\\n        position: 'absolute',\\n        top: cellMetadata.y,\\n        width: cellMetadata.width\\n      }\\n    };\\n\\n    // Avoid re-creating cells while scrolling.\\n    // This can lead to the same cell being created many times and can cause performance issues for \\\"heavy\\\" cells.\\n    // If a scroll is in progress- cache and reuse cells.\\n    // This cache will be thrown away once scrolling complets.\\n    if (isScrolling) {\\n      if (!(index in cellCache)) {\\n        cellCache[index] = cellRenderer(cellRendererProps);\\n      }\\n\\n      return cellCache[index];\\n    } else {\\n      return cellRenderer(cellRendererProps);\\n    }\\n  }).filter(function (renderedCell) {\\n    return !!renderedCell;\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"Object\",\"defineProperty\",\"value\",\"_extends2\",\"_extends3\",\"_objectWithoutProperties2\",\"_objectWithoutProperties3\",\"_getPrototypeOf\",\"_getPrototypeOf2\",\"_classCallCheck2\",\"_classCallCheck3\",\"_createClass2\",\"_createClass3\",\"_possibleConstructorReturn2\",\"_possibleConstructorReturn3\",\"_inherits2\",\"_inherits3\",\"_propTypes\",\"React\",\"_interopRequireWildcard\",\"newObj\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"_react\",\"_CollectionView\",\"_CollectionView2\",\"_calculateSizeAndPositionData2\",\"_calculateSizeAndPositionData3\",\"_getUpdatedOffsetForIndex\",\"_getUpdatedOffsetForIndex2\",\"Collection\",\"_React$PureComponent\",\"props\",\"context\",\"_this\",\"__proto__\",\"_cellMetadata\",\"_lastRenderedCellIndices\",\"_cellCache\",\"_isScrollingChange\",\"bind\",\"_setCollectionViewRef\",\"forceUpdate\",\"undefined\",\"_collectionView\",\"recomputeCellSizesAndPositions\",\"render\",\"createElement\",\"cellLayoutManager\",\"isScrollingChange\",\"ref\",\"calculateSizeAndPositionData\",\"_props\",\"cellCount\",\"cellSizeAndPositionGetter\",\"sectionSize\",\"data\",\"cellMetadata\",\"_sectionManager\",\"sectionManager\",\"_height\",\"height\",\"_width\",\"width\",\"getLastRenderedIndices\",\"getScrollPositionForCell\",\"_ref\",\"align\",\"cellIndex\",\"scrollLeft\",\"scrollTop\",\"cellOffset\",\"x\",\"cellSize\",\"containerSize\",\"currentOffset\",\"targetIndex\",\"y\",\"getTotalSize\",\"cellRenderers\",\"_ref2\",\"_this2\",\"isScrolling\",\"_props2\",\"cellGroupRenderer\",\"cellRenderer\",\"getCellIndices\",\"cellCache\",\"_ref3\",\"getCellMetadata\",\"index\",\"indices\",\"PureComponent\",\"defaultProps\",\"defaultCellGroupRenderer\",\"_ref4\",\"map\",\"cellRendererProps\",\"style\",\"left\",\"position\",\"top\",\"filter\",\"renderedCell\",\"propTypes\"]\n}\n"]