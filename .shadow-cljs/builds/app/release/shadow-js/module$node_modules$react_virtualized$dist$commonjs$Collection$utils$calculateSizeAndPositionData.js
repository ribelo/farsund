["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData=function(b,e,a,f,c,m){Object.defineProperty(c,\"__esModule\",{value:!0});c.default=function(a){var b=a.cellCount,c=a.cellSizeAndPositionGetter,e=[];a=new d.default(a.sectionSize);for(var f=0,k=0,g=0;g<b;g++){var m=c({index:g});if(null==m.height||isNaN(m.height)||null==m.width||isNaN(m.width)||null==m.x||isNaN(m.x)||null==m.y||isNaN(m.y))throw Error(\"Invalid metadata returned for cell \"+g+\n\":\\n        x:\"+m.x+\", y:\"+m.y+\", width:\"+m.width+\", height:\"+m.height);f=Math.max(f,m.y+m.height);k=Math.max(k,m.x+m.width);e[g]=m;a.registerCell({cellMetadatum:m,index:g})}return{cellMetadata:e,height:f,sectionManager:a,width:k}};var d=(b=a(\"module$node_modules$react_virtualized$dist$commonjs$Collection$SectionManager\"))&&b.__esModule?b:{default:b}}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calculateSizeAndPositionData;\n\nvar _SectionManager = require('../SectionManager');\n\nvar _SectionManager2 = _interopRequireDefault(_SectionManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n\n  var cellMetadata = [];\n  var sectionManager = new _SectionManager2.default(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react_virtualized$dist$commonjs$Collection$SectionManager"]],"~:properties",["^5",["width","sectionManager","index","height","__esModule","cellMetadatum","value","cellMetadata","default"]],"~:compiled-at",1537815743271,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,kGAAA,CAAsH,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAuCC,CAAvC,CAAqD,CAGnLC,MAAAC,eAAA,CAAsBH,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,EAAAK,QAAA,CAQAC,QAAqC,CAACC,CAAD,CAAO,CAAA,IACtCC,EAAYD,CAAAC,UAD0B,CAEtCC,EAA4BF,CAAAE,0BAFU,CAKtCC,EAAe,EACfC,EAAAA,CAAiB,IAAIC,CAAAP,QAAJ,CAHHE,CAAAM,YAGG,CAIrB,KAHA,IAAIC,EAAS,CAAb,CACIC,EAAQ,CADZ,CAGSC,EAAQ,CAAjB,CAAoBA,CAApB,CAA4BR,CAA5B,CAAuCQ,CAAA,EAAvC,CAAgD,CAC9C,IAAIC,EAAgBR,CAAA,CAA0B,CAAEO,MAAOA,CAAT,CAA1B,CAEpB,IAA4B,IAA5B,EAAIC,CAAAH,OAAJ,EAAoCI,KAAA,CAAMD,CAAAH,OAAN,CAApC,EAA0F,IAA1F,EAAmEG,CAAAF,MAAnE,EAAkGG,KAAA,CAAMD,CAAAF,MAAN,CAAlG,EAAmJ,IAAnJ,EAAgIE,CAAAE,EAAhI,EAA2JD,KAAA,CAAMD,CAAAE,EAAN,CAA3J,EAAwM,IAAxM,EAAqLF,CAAAG,EAArL,EAAgNF,KAAA,CAAMD,CAAAG,EAAN,CAAhN,CACE,KAAMC,MAAA,CAAM,qCAAN,CAA8CL,CAA9C;AAAsD,eAAtD,CAAwEC,CAAAE,EAAxE,CAA0F,MAA1F,CAAmGF,CAAAG,EAAnG,CAAqH,UAArH,CAAkIH,CAAAF,MAAlI,CAAwJ,WAAxJ,CAAsKE,CAAAH,OAAtK,CAAN,CAGFA,CAAA,CAASQ,IAAAC,IAAA,CAAST,CAAT,CAAiBG,CAAAG,EAAjB,CAAmCH,CAAAH,OAAnC,CACTC,EAAA,CAAQO,IAAAC,IAAA,CAASR,CAAT,CAAgBE,CAAAE,EAAhB,CAAkCF,CAAAF,MAAlC,CAERL,EAAA,CAAaM,CAAb,CAAA,CAAsBC,CACtBN,EAAAa,aAAA,CAA4B,CAC1BP,cAAeA,CADW,CAE1BD,MAAOA,CAFmB,CAA5B,CAX8C,CAiBhD,MAAO,CACLN,aAAcA,CADT,CAELI,OAAQA,CAFH,CAGLH,eAAgBA,CAHX,CAILI,MAAOA,CAJF,CA3BmC,CAJ5C,KAAIH,EAE0C,CAJ1Ca,CAI0C,CAJxB3B,CAAA,CAAQ,+EAAR,CAIwB,GAFA2B,CAEOC,WAAP,CAFAD,CAEA,CAA8B,CAAEpB,QAFhCoB,CAE8B,CAZuG;\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/Collection/utils/calculateSizeAndPositionData.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = calculateSizeAndPositionData;\\n\\nvar _SectionManager = require('../SectionManager');\\n\\nvar _SectionManager2 = _interopRequireDefault(_SectionManager);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction calculateSizeAndPositionData(_ref) {\\n  var cellCount = _ref.cellCount,\\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\\n      sectionSize = _ref.sectionSize;\\n\\n  var cellMetadata = [];\\n  var sectionManager = new _SectionManager2.default(sectionSize);\\n  var height = 0;\\n  var width = 0;\\n\\n  for (var index = 0; index < cellCount; index++) {\\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\\n\\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\\n      throw Error('Invalid metadata returned for cell ' + index + ':\\\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\\n    }\\n\\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\\n\\n    cellMetadata[index] = cellMetadatum;\\n    sectionManager.registerCell({\\n      cellMetadatum: cellMetadatum,\\n      index: index\\n    });\\n  }\\n\\n  return {\\n    cellMetadata: cellMetadata,\\n    height: height,\\n    sectionManager: sectionManager,\\n    width: width\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"default\",\"calculateSizeAndPositionData\",\"_ref\",\"cellCount\",\"cellSizeAndPositionGetter\",\"cellMetadata\",\"sectionManager\",\"_SectionManager2\",\"sectionSize\",\"height\",\"width\",\"index\",\"cellMetadatum\",\"isNaN\",\"x\",\"y\",\"Error\",\"Math\",\"max\",\"registerCell\",\"_SectionManager\",\"__esModule\"]\n}\n"]