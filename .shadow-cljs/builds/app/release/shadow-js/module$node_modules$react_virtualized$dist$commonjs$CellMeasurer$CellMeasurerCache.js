["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js"],"~:js","shadow$provide.module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurerCache=function(b,e,a,f,c,m){function d(a,b){return a+\"-\"+b}Object.defineProperty(c,\"__esModule\",{value:!0});c.DEFAULT_WIDTH=c.DEFAULT_HEIGHT=void 0;var k=(b=a(\"module$node_modules$babel_runtime$helpers$classCallCheck\"))&&b.__esModule?b:{default:b},l=(b=a(\"module$node_modules$babel_runtime$helpers$createClass\"))&&b.__esModule?b:{default:b};a(\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types\");\nvar h=c.DEFAULT_HEIGHT=30,p=c.DEFAULT_WIDTH=100;a=function(){function a(){var b=this,c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};(0,k.default)(this,a);this._cellHeightCache={};this._cellWidthCache={};this._columnWidthCache={};this._rowHeightCache={};this._rowCount=this._columnCount=0;this.columnWidth=function(a){a=b._keyMapper(0,a.index);return b._columnWidthCache.hasOwnProperty(a)?b._columnWidthCache[a]:b._defaultWidth};this.rowHeight=function(a){a=b._keyMapper(a.index,0);return b._rowHeightCache.hasOwnProperty(a)?\nb._rowHeightCache[a]:b._defaultHeight};var e=c.defaultHeight,f=c.defaultWidth,l=c.fixedWidth,m=c.keyMapper,r=c.minHeight,u=c.minWidth;this._hasFixedHeight=!0===c.fixedHeight;this._hasFixedWidth=!0===l;this._minHeight=r||0;this._minWidth=u||0;this._keyMapper=m||d;this._defaultHeight=Math.max(this._minHeight,\"number\"===typeof e?e:h);this._defaultWidth=Math.max(this._minWidth,\"number\"===typeof f?f:p)}(0,l.default)(a,[{key:\"clear\",value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\n0,c=this._keyMapper(a,b);delete this._cellHeightCache[c];delete this._cellWidthCache[c];this._updateCachedColumnAndRowSizes(a,b)}},{key:\"clearAll\",value:function(){this._cellHeightCache={};this._cellWidthCache={};this._columnWidthCache={};this._rowHeightCache={};this._columnCount=this._rowCount=0}},{key:\"hasFixedHeight\",value:function(){return this._hasFixedHeight}},{key:\"hasFixedWidth\",value:function(){return this._hasFixedWidth}},{key:\"getHeight\",value:function(a){if(this._hasFixedHeight)return this._defaultHeight;\nvar b=this._keyMapper(a,1<arguments.length&&void 0!==arguments[1]?arguments[1]:0);return this._cellHeightCache.hasOwnProperty(b)?Math.max(this._minHeight,this._cellHeightCache[b]):this._defaultHeight}},{key:\"getWidth\",value:function(a){if(this._hasFixedWidth)return this._defaultWidth;var b=this._keyMapper(a,1<arguments.length&&void 0!==arguments[1]?arguments[1]:0);return this._cellWidthCache.hasOwnProperty(b)?Math.max(this._minWidth,this._cellWidthCache[b]):this._defaultWidth}},{key:\"has\",value:function(a){var b=\nthis._keyMapper(a,1<arguments.length&&void 0!==arguments[1]?arguments[1]:0);return this._cellHeightCache.hasOwnProperty(b)}},{key:\"set\",value:function(a,b,c,d){var e=this._keyMapper(a,b);b>=this._columnCount&&(this._columnCount=b+1);a>=this._rowCount&&(this._rowCount=a+1);this._cellHeightCache[e]=d;this._cellWidthCache[e]=c;this._updateCachedColumnAndRowSizes(a,b)}},{key:\"_updateCachedColumnAndRowSizes\",value:function(a,b){if(!this._hasFixedWidth){for(var c=0,d=0;d<this._rowCount;d++)c=Math.max(c,\nthis.getWidth(d,b));b=this._keyMapper(0,b);this._columnWidthCache[b]=c}if(!this._hasFixedHeight){for(b=c=0;b<this._columnCount;b++)c=Math.max(c,this.getHeight(a,b));a=this._keyMapper(a,0);this._rowHeightCache[a]=c}}},{key:\"defaultHeight\",get:function(){return this._defaultHeight}},{key:\"defaultWidth\",get:function(){return this._defaultWidth}}]);return a}();c.default=a}","~:source","shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurerCache\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_HEIGHT = exports.DEFAULT_HEIGHT = 30;\n\nvar DEFAULT_WIDTH = exports.DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3.default)(this, CellMeasurerCache);\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n\n\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass3.default)(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports.default = CellMeasurerCache;\n\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$types","~$shadow.js","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$babel_runtime$helpers$createClass"]],"~:properties",["^5",["_rowHeightCache","_columnWidthCache","_cellWidthCache","columnWidth","_cellHeightCache","key","__esModule","_defaultWidth","rowHeight","value","_columnCount","_defaultHeight","_minWidth","_rowCount","_hasFixedWidth","DEFAULT_HEIGHT","_hasFixedHeight","_keyMapper","DEFAULT_WIDTH","_minHeight","get","default"]],"~:compiled-at",1537815743267,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurerCache.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$CellMeasurerCache\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = undefined;\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _createClass2 = require('babel-runtime/helpers/createClass');\\n\\nvar _createClass3 = _interopRequireDefault(_createClass2);\\n\\nvar _types = require('./types');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar DEFAULT_HEIGHT = exports.DEFAULT_HEIGHT = 30;\\n\\nvar DEFAULT_WIDTH = exports.DEFAULT_WIDTH = 100;\\n\\n// Enables more intelligent mapping of a given column and row index to an item ID.\\n// This prevents a cell cache from being invalidated when its parent collection is modified.\\n\\n/**\\n * Caches measurements for a given cell.\\n */\\nvar CellMeasurerCache = function () {\\n  function CellMeasurerCache() {\\n    var _this = this;\\n\\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    (0, _classCallCheck3.default)(this, CellMeasurerCache);\\n    this._cellHeightCache = {};\\n    this._cellWidthCache = {};\\n    this._columnWidthCache = {};\\n    this._rowHeightCache = {};\\n    this._columnCount = 0;\\n    this._rowCount = 0;\\n\\n    this.columnWidth = function (_ref) {\\n      var index = _ref.index;\\n\\n      var key = _this._keyMapper(0, index);\\n\\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\\n    };\\n\\n    this.rowHeight = function (_ref2) {\\n      var index = _ref2.index;\\n\\n      var key = _this._keyMapper(index, 0);\\n\\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\\n    };\\n\\n    var defaultHeight = params.defaultHeight,\\n        defaultWidth = params.defaultWidth,\\n        fixedHeight = params.fixedHeight,\\n        fixedWidth = params.fixedWidth,\\n        keyMapper = params.keyMapper,\\n        minHeight = params.minHeight,\\n        minWidth = params.minWidth;\\n\\n\\n    this._hasFixedHeight = fixedHeight === true;\\n    this._hasFixedWidth = fixedWidth === true;\\n    this._minHeight = minHeight || 0;\\n    this._minWidth = minWidth || 0;\\n    this._keyMapper = keyMapper || defaultKeyMapper;\\n\\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\\n        console.warn(\\\"CellMeasurerCache should only measure a cell's width or height. \\\" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\\n      }\\n\\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\\n      }\\n\\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\\n      }\\n    }\\n  }\\n\\n  (0, _createClass3.default)(CellMeasurerCache, [{\\n    key: 'clear',\\n    value: function clear(rowIndex) {\\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n\\n      var key = this._keyMapper(rowIndex, columnIndex);\\n\\n      delete this._cellHeightCache[key];\\n      delete this._cellWidthCache[key];\\n\\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\\n    }\\n  }, {\\n    key: 'clearAll',\\n    value: function clearAll() {\\n      this._cellHeightCache = {};\\n      this._cellWidthCache = {};\\n      this._columnWidthCache = {};\\n      this._rowHeightCache = {};\\n      this._rowCount = 0;\\n      this._columnCount = 0;\\n    }\\n  }, {\\n    key: 'hasFixedHeight',\\n    value: function hasFixedHeight() {\\n      return this._hasFixedHeight;\\n    }\\n  }, {\\n    key: 'hasFixedWidth',\\n    value: function hasFixedWidth() {\\n      return this._hasFixedWidth;\\n    }\\n  }, {\\n    key: 'getHeight',\\n    value: function getHeight(rowIndex) {\\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n\\n      if (this._hasFixedHeight) {\\n        return this._defaultHeight;\\n      } else {\\n        var _key = this._keyMapper(rowIndex, columnIndex);\\n\\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\\n      }\\n    }\\n  }, {\\n    key: 'getWidth',\\n    value: function getWidth(rowIndex) {\\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n\\n      if (this._hasFixedWidth) {\\n        return this._defaultWidth;\\n      } else {\\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\\n\\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\\n      }\\n    }\\n  }, {\\n    key: 'has',\\n    value: function has(rowIndex) {\\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n\\n      var key = this._keyMapper(rowIndex, columnIndex);\\n\\n      return this._cellHeightCache.hasOwnProperty(key);\\n    }\\n  }, {\\n    key: 'set',\\n    value: function set(rowIndex, columnIndex, width, height) {\\n      var key = this._keyMapper(rowIndex, columnIndex);\\n\\n      if (columnIndex >= this._columnCount) {\\n        this._columnCount = columnIndex + 1;\\n      }\\n      if (rowIndex >= this._rowCount) {\\n        this._rowCount = rowIndex + 1;\\n      }\\n\\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\\n      this._cellHeightCache[key] = height;\\n      this._cellWidthCache[key] = width;\\n\\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\\n    }\\n  }, {\\n    key: '_updateCachedColumnAndRowSizes',\\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\\n      // Pre-cache these derived values for faster lookup later.\\n      // Reads are expected to occur more frequently than writes in this case.\\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\\n      if (!this._hasFixedWidth) {\\n        var columnWidth = 0;\\n        for (var i = 0; i < this._rowCount; i++) {\\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\\n        }\\n        var columnKey = this._keyMapper(0, columnIndex);\\n        this._columnWidthCache[columnKey] = columnWidth;\\n      }\\n      if (!this._hasFixedHeight) {\\n        var rowHeight = 0;\\n        for (var _i = 0; _i < this._columnCount; _i++) {\\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\\n        }\\n        var rowKey = this._keyMapper(rowIndex, 0);\\n        this._rowHeightCache[rowKey] = rowHeight;\\n      }\\n    }\\n  }, {\\n    key: 'defaultHeight',\\n    get: function get() {\\n      return this._defaultHeight;\\n    }\\n  }, {\\n    key: 'defaultWidth',\\n    get: function get() {\\n      return this._defaultWidth;\\n    }\\n  }]);\\n  return CellMeasurerCache;\\n}();\\n\\nexports.default = CellMeasurerCache;\\n\\n\\nfunction defaultKeyMapper(rowIndex, columnIndex) {\\n  return rowIndex + '-' + columnIndex;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"defaultKeyMapper\",\"rowIndex\",\"columnIndex\",\"Object\",\"defineProperty\",\"value\",\"DEFAULT_WIDTH\",\"DEFAULT_HEIGHT\",\"undefined\",\"_classCallCheck3\",\"_classCallCheck2\",\"__esModule\",\"default\",\"_createClass3\",\"_createClass2\",\"CellMeasurerCache\",\"_this\",\"params\",\"arguments\",\"length\",\"_cellHeightCache\",\"_cellWidthCache\",\"_columnWidthCache\",\"_rowHeightCache\",\"_rowCount\",\"_columnCount\",\"columnWidth\",\"this.columnWidth\",\"_ref\",\"key\",\"_keyMapper\",\"index\",\"hasOwnProperty\",\"_defaultWidth\",\"rowHeight\",\"this.rowHeight\",\"_ref2\",\"_defaultHeight\",\"defaultHeight\",\"defaultWidth\",\"fixedWidth\",\"keyMapper\",\"minHeight\",\"minWidth\",\"_hasFixedHeight\",\"fixedHeight\",\"_hasFixedWidth\",\"_minHeight\",\"_minWidth\",\"Math\",\"max\",\"clear\",\"_updateCachedColumnAndRowSizes\",\"clearAll\",\"hasFixedHeight\",\"hasFixedWidth\",\"getHeight\",\"_key\",\"getWidth\",\"_key2\",\"has\",\"set\",\"width\",\"height\",\"i\",\"columnKey\",\"_i\",\"rowKey\",\"get\"]\n}\n"]