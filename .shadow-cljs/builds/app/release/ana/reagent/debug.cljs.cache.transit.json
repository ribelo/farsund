["^ ","~:output",["^ ","~:js","goog.provide('reagent.debug');\nreagent.debug.has_console = (typeof console !== 'undefined');\nreagent.debug.tracking = false;\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.warnings !== 'undefined')){\n} else {\nreagent.debug.warnings = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.track_console !== 'undefined')){\n} else {\nreagent.debug.track_console = (function (){var o = ({});\no.warn = ((function (o){\nreturn (function() { \nvar G__21045__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__21045 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__21046__i = 0, G__21046__a = new Array(arguments.length -  0);\nwhile (G__21046__i < G__21046__a.length) {G__21046__a[G__21046__i] = arguments[G__21046__i + 0]; ++G__21046__i;}\n  args = new cljs.core.IndexedSeq(G__21046__a,0,null);\n} \nreturn G__21045__delegate.call(this,args);};\nG__21045.cljs$lang$maxFixedArity = 0;\nG__21045.cljs$lang$applyTo = (function (arglist__21047){\nvar args = cljs.core.seq(arglist__21047);\nreturn G__21045__delegate(args);\n});\nG__21045.cljs$core$IFn$_invoke$arity$variadic = G__21045__delegate;\nreturn G__21045;\n})()\n;})(o))\n;\n\no.error = ((function (o){\nreturn (function() { \nvar G__21048__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__21048 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__21049__i = 0, G__21049__a = new Array(arguments.length -  0);\nwhile (G__21049__i < G__21049__a.length) {G__21049__a[G__21049__i] = arguments[G__21049__i + 0]; ++G__21049__i;}\n  args = new cljs.core.IndexedSeq(G__21049__a,0,null);\n} \nreturn G__21048__delegate.call(this,args);};\nG__21048.cljs$lang$maxFixedArity = 0;\nG__21048.cljs$lang$applyTo = (function (arglist__21050){\nvar args = cljs.core.seq(arglist__21050);\nreturn G__21048__delegate(args);\n});\nG__21048.cljs$core$IFn$_invoke$arity$variadic = G__21048__delegate;\nreturn G__21048;\n})()\n;})(o))\n;\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings = (function reagent$debug$track_warnings(f){\nreagent.debug.tracking = true;\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns = cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\nreagent.debug.tracking = false;\n\nreturn warns;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/debug.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$assert-js-object",["^ ","~:arglists",["~#list",[["~$value"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","~:name","~$reagent.debug/assert-js-object","~:ns","~$reagent.debug","~:macro",true],"~$log",["^ ","^I",["^J",[["~$&","~$forms"]]],"~:doc","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/log","^N","^O","^P",true],"~$warn-unless",["^ ","^I",["^J",[["~$cond","~$&","^R"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/warn-unless","^N","^O","^P",true],"~$assert-some",["^ ","^I",["^J",[["^K","~$tag"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/assert-some","^N","^O","^P",true],"~$assert-new-state",["^ ","^I",["^J",[["^K"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/assert-new-state","^N","^O","^P",true],"~$dbg",["^ ","^I",["^J",[["~$x"]]],"^S","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/dbg","^N","^O","^P",true],"~$prn",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/prn","^N","^O","^P",true],"~$warn",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/warn","^N","^O","^P",true],"~$dev?",["^ ","^I",["^J",[[]]],"^S","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/dev?","^N","^O","^P",true],"~$println",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/println","^N","^O","^P",true],"~$time",["^ ","^I",["^J",[["~$&","^R"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/time","^N","^O","^P",true],"~$assert-component",["^ ","^I",["^J",[["^K"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/assert-component","^N","^O","^P",true],"~$assert-callable",["^ ","^I",["^J",[["^K"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/assert-callable","^N","^O","^P",true],"~$error",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^L","~$reagent.debug/error","^N","^O","^P",true]],"^L","^O","~:op","^N","~:imports",null,"~:requires",["^ ","~$cljs.core","^1F","~$goog","^1G"],"~:seen",["^F",["~:require-macros"]],"~:uses",null,"^1I",["^ ","^O","^O","^1F","^1F"],"~:form",["^J",["~$ns","^O",["^J",["^1I",["^O"]]]]],"~:flags",["^ ","^1I",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^1G","^1F"]],"^N","^O","~:resource-id",["~:shadow.build.classpath/resource","reagent/debug.cljs"],"~:compiled-at",1537815749309,"~:resource-name","reagent/debug.cljs","~:warnings",[],"~:source","(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i3",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",1]],"~i13",[["^ ","^1Y",0,"^1Z",1,"^L","reagent.debug/has-console"]],"~i25",[["^ ","^1Y",28,"^1Z",1],["^ ","^1Y",36,"^1Z",1,"^L","js/console"]]],"~i5",["^ ","~i0",[["^ ","^1Y",0,"^1Z",2],["^ ","^1Y",25,"^1Z",2]],"~i14",[["^ ","^1Y",0,"^1Z",2,"^L","reagent.debug/tracking"]]],"~i7",["^ ","~i0",[["^ ","^1Y",0,"^1Z",3],["^ ","^1Y",3,"^1Z",3],["^ ","^1Y",11,"^1Z",3,"^L","js/reagent"],["^ ","^1Y",47,"^1Z",3,"^L","js/reagent.debug"],["^ ","^1Y",89,"^1Z",3,"^L","js/reagent.debug.warnings"],["^ ","^1Y",0,"^1Z",4],["^ ","^1Y",0,"^1Z",5],["^ ","^1Y",0,"^1Z",5]],"~i9",[["^ ","^1Y",0,"^1Z",5,"^L","reagent.debug/warnings"]],"~i18",[["^ ","^1Y",25,"^1Z",5],["^ ","^1Y",70,"^1Z",5]],"~i19",[["^ ","^1Y",25,"^1Z",5,"^L","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i9",["^ ","~i0",[["^ ","^1Y",0,"^1Z",7],["^ ","^1Y",3,"^1Z",7],["^ ","^1Y",11,"^1Z",7,"^L","js/reagent"],["^ ","^1Y",47,"^1Z",7,"^L","js/reagent.debug"],["^ ","^1Y",89,"^1Z",7,"^L","js/reagent.debug.track-console"],["^ ","^1Y",0,"^1Z",8],["^ ","^1Y",0,"^1Z",9],["^ ","^1Y",0,"^1Z",9]],"~i9",[["^ ","^1Y",0,"^1Z",9,"^L","reagent.debug/track-console"]]],"~i10",["^ ","~i2",[["^ ","^1Y",30,"^1Z",9],["^ ","^1Y",51,"^1Z",9],["^ ","^1Y",0,"^1Z",10]],"~i8",[["^ ","^1Y",47,"^1Z",9,"^L","o"]]],"~i11",["^ ","~i4",[["^ ","^1Y",0,"^1Z",10]],"^24",[["^ ","^1Y",0,"^1Z",10]],"^22",[["^ ","^1Y",0,"^1Z",10,"^L","o"]]],"~i12",["^ ","^24",[["^ ","^1Y",9,"^1Z",10],["^ ","^1Y",0,"^1Z",13]],"~i17",[["^ ","^1Y",35,"^1Z",12,"^L","args"],["^ ","^1Y",4,"^1Z",16,"^L","args"],["^ ","^1Y",2,"^1Z",20,"^L","args"],["^ ","^1Y",36,"^1Z",22,"^L","args"],["^ ","^1Y",4,"^1Z",25,"^L","args"],["^ ","^1Y",26,"^1Z",26,"^L","args"]]],"^1[",["^ ","^26",[["^ ","^1Y",0,"^1Z",13],["^ ","^1Y",108,"^1Z",13],["^ ","^1Y",191,"^1Z",13]],"^1[",[["^ ","^1Y",7,"^1Z",13,"^L","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^23",[["^ ","^1Y",65,"^1Z",13,"^L","reagent.debug/warnings"]],"~i28",[["^ ","^1Y",88,"^1Z",13,"^L","cljs.core/update-in"]],"~i46",[["^ ","^1Y",252,"^1Z",13,"^L","cljs.core/conj"]],"~i51",[["^ ","^1Y",317,"^1Z",13]],"~i52",[["^ ","^1Y",317,"^1Z",13,"^L","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i58",[["^ ","^1Y",363,"^1Z",13,"^L","cljs.core/str"]],"~i62",[["^ ","^1Y",377,"^1Z",13,"^L","args"]]],"^21",["^ ","~i4",[["^ ","^1Y",0,"^1Z",34]],"^24",[["^ ","^1Y",0,"^1Z",34]],"^23",[["^ ","^1Y",0,"^1Z",34,"^L","o"]]],"~i15",["^ ","^24",[["^ ","^1Y",10,"^1Z",34],["^ ","^1Y",0,"^1Z",37]],"^27",[["^ ","^1Y",35,"^1Z",36,"^L","args"],["^ ","^1Y",4,"^1Z",40,"^L","args"],["^ ","^1Y",2,"^1Z",44,"^L","args"],["^ ","^1Y",36,"^1Z",46,"^L","args"],["^ ","^1Y",4,"^1Z",49,"^L","args"],["^ ","^1Y",26,"^1Z",50,"^L","args"]]],"~i16",["^ ","^26",[["^ ","^1Y",0,"^1Z",37],["^ ","^1Y",108,"^1Z",37],["^ ","^1Y",191,"^1Z",37]],"^1[",[["^ ","^1Y",7,"^1Z",37,"^L","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic"]],"^23",[["^ ","^1Y",65,"^1Z",37,"^L","reagent.debug/warnings"]],"^28",[["^ ","^1Y",88,"^1Z",37,"^L","cljs.core/update-in"]],"~i47",[["^ ","^1Y",254,"^1Z",37,"^L","cljs.core/conj"]],"^2;",[["^ ","^1Y",319,"^1Z",37]],"~i53",[["^ ","^1Y",319,"^1Z",37,"^L","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i59",[["^ ","^1Y",365,"^1Z",37,"^L","cljs.core/str"]],"~i63",[["^ ","^1Y",379,"^1Z",37,"^L","args"]]],"^27",["^ ","~i4",[["^ ","^1Y",0,"^1Z",58,"^L","o"]]],"^23",["^ ","~i0",[["^ ","^1Y",0,"^1Z",61],["^ ","^1Y",31,"^1Z",61],["^ ","^1Y",0,"^1Z",62]],"~i6",[["^ ","^1Y",0,"^1Z",61,"^L","reagent.debug/track-warnings"]],"~i22",[["^ ","^1Y",70,"^1Z",61,"^L","f"]]],"~i20",["^ ","~i2",[["^ ","^1Y",0,"^1Z",62],["^ ","^1Y",25,"^1Z",62]],"~i8",[["^ ","^1Y",0,"^1Z",62,"^L","reagent.debug/tracking"]]],"~i21",["^ ","~i2",[["^ ","^1Y",0,"^1Z",64],["^ ","^1Y",45,"^1Z",64]],"~i3",[["^ ","^1Y",0,"^1Z",64,"^L","cljs.core/reset!"]],"^24",[["^ ","^1Y",22,"^1Z",64,"^L","reagent.debug/warnings"]]],"^2D",["^ ","~i2",[["^ ","^1Y",0,"^1Z",66]],"~i3",[["^ ","^1Y",1,"^1Z",66,"^L","f"],["^ ","^1Y",35,"^1Z",66,"^L","f"],["^ ","^1Y",71,"^1Z",66,"^L","f"]]],"~i23",["^ ","~i2",[["^ ","^1Y",0,"^1Z",68],["^ ","^1Y",12,"^1Z",68],["^ ","^1Y",12,"^1Z",68,"^L","cljs.core/deref"],["^ ","^1Y",0,"^1Z",69]],"~i8",[["^ ","^1Y",4,"^1Z",68,"^L","warns"]],"^2>",[["^ ","^1Y",28,"^1Z",68,"^L","reagent.debug/warnings"]]],"~i24",["^ ","~i4",[["^ ","^1Y",0,"^1Z",69],["^ ","^1Y",45,"^1Z",69]],"~i5",[["^ ","^1Y",0,"^1Z",69,"^L","cljs.core/reset!"]],"^26",[["^ ","^1Y",22,"^1Z",69,"^L","reagent.debug/warnings"]]],"^20",["^ ","~i4",[["^ ","^1Y",0,"^1Z",71],["^ ","^1Y",25,"^1Z",71]],"^24",[["^ ","^1Y",0,"^1Z",71,"^L","reagent.debug/tracking"]]],"~i26",["^ ","~i4",[["^ ","^1Y",0,"^1Z",73,"^L","warns"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^P","^1F"],[1533155342000],["^1Q","goog/math/math.js"],[1533155346000,"^1G","~$goog.array","~$goog.asserts"],["^P","^O"],[1533155353000],["^1Q","goog/array/array.js"],[1533155346000,"^1G","^2N"],["^1Q","goog/debug/error.js"],[1533155346000,"^1G"],["^1Q","goog/dom/nodetype.js"],[1533155346000,"^1G"],["^1Q","goog/object/object.js"],[1533155346000,"^1G"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^1Q","goog/math/long.js"],[1533155346000,"^1G","^2N","~$goog.reflect"],["^1Q","goog/functions/functions.js"],[1533155346000,"^1G"],["^1Q","goog/structs/map.js"],[1533155346000,"^1G","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1Q","goog/asserts/asserts.js"],[1533155346000,"^1G","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1Q","goog/uri/uri.js"],[1533155346000,"^1G","^2M","^2N","^2V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1Q","goog/base.js"],[1533155346000],["^1Q","goog/structs/structs.js"],[1533155346000,"^1G","^2M","^2S"],["^1Q","goog/string/string.js"],[1533155346000,"^1G"],["^1Q","goog/reflect/reflect.js"],[1533155346000,"^1G"],["^1Q","goog/string/stringbuffer.js"],[1533155346000,"^1G"],["^1Q","goog/iter/iter.js"],[1533155346000,"^1G","^2M","^2N","~$goog.functions","~$goog.math"],["^1Q","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^2V","^2S","^2M","~$goog.Uri","~$goog.string.StringBuffer"],["^1Q","reagent/debug.cljs"],[1533155353000,"^1G","^1F"],["^1Q","goog/math/integer.js"],[1533155346000,"^1G"],["^1Q","goog/uri/utils.js"],[1533155346000,"^1G","^2M","^2N","^2V"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/debug.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G",["^ ","^H",["^ ","^I",["^J",[["^K"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","^L","^M","^N","^O","^P",true],"^Q",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^L","^T","^N","^O","^P",true],"^U",["^ ","^I",["^J",[["^V","~$&","^R"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^L","^W","^N","^O","^P",true],"^X",["^ ","^I",["^J",[["^K","^Y"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^L","^Z","^N","^O","^P",true],"^[",["^ ","^I",["^J",[["^K"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^L","^10","^N","^O","^P",true],"^11",["^ ","^I",["^J",[["~$x"]]],"^S","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^L","^12","^N","^O","^P",true],"^13",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^L","^14","^N","^O","^P",true],"^15",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^L","^16","^N","^O","^P",true],"^17",["^ ","^I",["^J",[[]]],"^S","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^L","^18","^N","^O","^P",true],"^19",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^L","^1:","^N","^O","^P",true],"^1;",["^ ","^I",["^J",[["~$&","^R"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^L","^1<","^N","^O","^P",true],"^1=",["^ ","^I",["^J",[["^K"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^L","^1>","^N","^O","^P",true],"^1?",["^ ","^I",["^J",[["^K"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^L","^1@","^N","^O","^P",true],"^1A",["^ ","^I",["^J",[["~$&","^R"]]],"^S","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^L","^1B","^N","^O","^P",true]],"^L","^O","^1D",null,"^1E",["^ ","^1F","^1F","^1G","^1G"],"^1H",["^F",["^1I"]],"^1J",null,"~:defs",["^ ","~$has-console",["^ ","^L","~$reagent.debug/has-console","^6","reagent/debug.cljs","^7",4,"^8",1,"^9",4,"^:",25,"~:const",true,"^5",["^ ","^6","reagent/debug.cljs","^7",4,"^8",14,"^9",4,"^:",25,"^3:",true],"~:tag","~$boolean"],"~$tracking",["^ ","^L","~$reagent.debug/tracking","^6","reagent/debug.cljs","^7",6,"^8",1,"^9",6,"^:",23,"^3;","^3<","^5",["^ ","^6","reagent/debug.cljs","^7",6,"^8",15,"^9",6,"^:",23,"^3;","^3<"]],"~$warnings",["^ ","^L","~$reagent.debug/warnings","^6","reagent/debug.cljs","^7",8,"^8",1,"^9",8,"^:",18,"^5",["^ ","^6","reagent/debug.cljs","^7",8,"^8",10,"^9",8,"^:",18],"^3;","~$any"],"~$track-console",["^ ","^L","~$reagent.debug/track-console","^6","reagent/debug.cljs","^7",10,"^8",1,"^9",10,"^:",23,"^5",["^ ","^6","reagent/debug.cljs","^7",10,"^8",10,"^9",10,"^:",23],"^3;","~$object"],"~$track-warnings",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/debug.cljs","^7",20,"^8",7,"^9",20,"^:",21,"^I",["^J",["~$quote",["^J",[["~$f"]]]]]],"^L","~$reagent.debug/track-warnings","~:variadic",false,"^6","reagent/debug.cljs","^:",21,"~:method-params",["^J",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^8",1,"^7",20,"^9",20,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^3G",["^J",[["~$f"]]]]]]],"^1I",["^ ","^O","^O","^1F","^1F"],"~:cljs.analyzer/constants",["^ ","^1H",["^F",["~:warn","~:error"]],"~:order",["^3P","^3Q"]],"^1M",["^ ","^1I",["^F",[]]],"^1N",["^ "],"^1O",["^1G","^1F"]],"^N","^O","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2L",[["^3U","~:static-fns"],true,["^3U","~:elide-asserts"],true,["^3U","~:optimize-constants"],null,["^3U","~:external-config"],null,["^3U","~:tooling-config"],null,["^3U","~:emit-constants"],null,["^3U","~:infer-externs"],true,["^3U","^1V"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^3U","~:fn-invoke-direct"],null,["^3U","^1X"],null]]]