["^ ","~:output",["^ ","~:js","goog.provide('re_frame.subs');\nre_frame.subs.kind = new cljs.core.Keyword(null,\"sub\",\"sub\",-2093760025);\nre_frame.subs.query__GT_reaction = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n/**\n * Causes all subscriptions to be removed from the cache.\n *   Does this by:\n *   1. running on-dispose on all cached subscriptions\n *   2. These on-dispose will then do the removal of themselves.\n * \n *   This is a development time tool. Useful when reloading Figwheel code\n *   after a React exception, because React components won't have been\n *   cleaned up properly. And this, in turn, means the subscriptions within those\n *   components won't have been cleaned up correctly. So this forces the issue.\n */\nre_frame.subs.clear_subscription_cache_BANG_ = (function re_frame$subs$clear_subscription_cache_BANG_(){\nvar seq__22056_22070 = cljs.core.seq(cljs.core.deref(re_frame.subs.query__GT_reaction));\nvar chunk__22057_22071 = null;\nvar count__22058_22072 = (0);\nvar i__22059_22073 = (0);\nwhile(true){\nif((i__22059_22073 < count__22058_22072)){\nvar vec__22060_22074 = chunk__22057_22071.cljs$core$IIndexed$_nth$arity$2(null,i__22059_22073);\nvar k_22075 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22060_22074,(0),null);\nvar rxn_22076 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22060_22074,(1),null);\nre_frame.interop.dispose_BANG_(rxn_22076);\n\n\nvar G__22077 = seq__22056_22070;\nvar G__22078 = chunk__22057_22071;\nvar G__22079 = count__22058_22072;\nvar G__22080 = (i__22059_22073 + (1));\nseq__22056_22070 = G__22077;\nchunk__22057_22071 = G__22078;\ncount__22058_22072 = G__22079;\ni__22059_22073 = G__22080;\ncontinue;\n} else {\nvar temp__5457__auto___22081 = cljs.core.seq(seq__22056_22070);\nif(temp__5457__auto___22081){\nvar seq__22056_22082__$1 = temp__5457__auto___22081;\nif(cljs.core.chunked_seq_QMARK_(seq__22056_22082__$1)){\nvar c__4351__auto___22083 = cljs.core.chunk_first(seq__22056_22082__$1);\nvar G__22084 = cljs.core.chunk_rest(seq__22056_22082__$1);\nvar G__22085 = c__4351__auto___22083;\nvar G__22086 = cljs.core.count(c__4351__auto___22083);\nvar G__22087 = (0);\nseq__22056_22070 = G__22084;\nchunk__22057_22071 = G__22085;\ncount__22058_22072 = G__22086;\ni__22059_22073 = G__22087;\ncontinue;\n} else {\nvar vec__22064_22088 = cljs.core.first(seq__22056_22082__$1);\nvar k_22089 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22064_22088,(0),null);\nvar rxn_22090 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22064_22088,(1),null);\nre_frame.interop.dispose_BANG_(rxn_22090);\n\n\nvar G__22094 = cljs.core.next(seq__22056_22082__$1);\nvar G__22095 = null;\nvar G__22096 = (0);\nvar G__22097 = (0);\nseq__22056_22070 = G__22094;\nchunk__22057_22071 = G__22095;\ncount__22058_22072 = G__22096;\ni__22059_22073 = G__22097;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(cljs.core.not_empty(cljs.core.deref(re_frame.subs.query__GT_reaction)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Subscription cache should be empty after clearing it.\"], 0));\n} else {\nreturn null;\n}\n});\n/**\n * Unregisters all existing subscription handlers\n */\nre_frame.subs.clear_all_handlers_BANG_ = (function re_frame$subs$clear_all_handlers_BANG_(){\nre_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.subs.kind);\n\nreturn re_frame.subs.clear_subscription_cache_BANG_();\n});\n/**\n * cache the reaction r\n */\nre_frame.subs.cache_and_return = (function re_frame$subs$cache_and_return(query_v,dynv,r){\nvar cache_key = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dynv], null);\nre_frame.interop.add_on_dispose_BANG_(r,((function (cache_key){\nreturn (function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR_22100 = re_frame.trace._STAR_current_trace_STAR_;\nre_frame.trace._STAR_current_trace_STAR_ = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),re_frame.utils.first_in_vector(query_v),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_v,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(r)], null)], null));\n\ntry{try{return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,((function (_STAR_current_trace_STAR_22100,cache_key){\nreturn (function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) && ((r === cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n});})(_STAR_current_trace_STAR_22100,cache_key))\n);\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21987__auto___22107 = re_frame.interop.now();\nvar duration__21988__auto___22108 = (end__21987__auto___22107 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21988__auto___22108,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21987__auto___22107);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR_22100;\n}} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,((function (cache_key){\nreturn (function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) && ((r === cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n});})(cache_key))\n);\n}\n});})(cache_key))\n);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,((function (cache_key){\nreturn (function (query_cache){\nif(re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.contains_QMARK_(query_cache,cache_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: Adding a new subscription to the cache while there is an existing subscription in the cache\",cache_key], 0));\n} else {\n}\n} else {\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_cache,cache_key,r);\n});})(cache_key))\n);\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22109 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(r)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(r)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22109;\n\n} else {\n}\n\nreturn r;\n});\nre_frame.subs.cache_lookup = (function re_frame$subs$cache_lookup(var_args){\nvar G__22115 = arguments.length;\nswitch (G__22115) {\ncase 1:\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nre_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1 = (function (query_v){\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query_v,cljs.core.PersistentVector.EMPTY);\n});\n\nre_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2 = (function (query_v,dyn_v){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frame.subs.query__GT_reaction),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dyn_v], null));\n});\n\nre_frame.subs.cache_lookup.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a `query`, returns a Reagent `reaction` which, over\n *   time, reactively delivers a stream of values. So in FRP-ish terms,\n *   it returns a Signal.\n * \n *   To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n * \n *   `query` is a vector of at least one element. The first element is the\n *   `query-id`, typically a namespaced keyword. The rest of the vector's\n *   elements are optional, additional values which parameterise the query\n *   performed.\n * \n *   `dynv` is an optional 3rd argument, `which is a vector of further input\n *   signals (atoms, reactions, etc), NOT values. This argument exists for\n *   historical reasons and is borderline deprecated these days.\n * \n *   Example Usage:\n *   --------------\n * \n *  (subscribe [:items])\n *  (subscribe [:items \"blue\" :small])\n *  (subscribe [:items {:colour \"blue\"  :size :small}])\n * \n *   Note: for any given call to `subscribe` there must have been a previous call\n *   to `reg-sub`, registering the query handler (function) for the `query-id` given.\n * \n *   Hint\n *   ----\n * \n *   When used in a view function BE SURE to `deref` the returned value.\n *   In fact, to avoid any mistakes, some prefer to define:\n * \n *   (def <sub  (comp deref re-frame.core/subscribe))\n * \n *   And then, within their views, they call  `(<sub [:items :small])` rather\n *   than using `subscribe` directly.\n * \n *   De-duplication\n *   --------------\n * \n *   XXX\n *   \n */\nre_frame.subs.subscribe = (function re_frame$subs$subscribe(var_args){\nvar G__22121 = arguments.length;\nswitch (G__22121) {\ncase 1:\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nre_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1 = (function (query){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR_22122 = re_frame.trace._STAR_current_trace_STAR_;\nre_frame.trace._STAR_current_trace_STAR_ = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query], null)], null));\n\ntry{try{var temp__5455__auto__ = re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar cached = temp__5455__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22136 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22136;\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = re_frame.utils.first_in_vector(query);\nvar handler_fn = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22137 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22137;\n\n} else {\n}\n\nif((handler_fn == null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22138 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22138;\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nreturn re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(re_frame.db.app_db,query) : handler_fn.call(null,re_frame.db.app_db,query)));\n}\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21987__auto___22140 = re_frame.interop.now();\nvar duration__21988__auto___22141 = (end__21987__auto___22140 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21988__auto___22141,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21987__auto___22140);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR_22122;\n}} else {\nvar temp__5455__auto__ = re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar cached = temp__5455__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22142 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22142;\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = re_frame.utils.first_in_vector(query);\nvar handler_fn = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22143 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22143;\n\n} else {\n}\n\nif((handler_fn == null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22146 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22146;\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nreturn re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(re_frame.db.app_db,query) : handler_fn.call(null,re_frame.db.app_db,query)));\n}\n}\n}\n});\n\nre_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2 = (function (query,dynv){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR_22126 = re_frame.trace._STAR_current_trace_STAR_;\nre_frame.trace._STAR_current_trace_STAR_ = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query,new cljs.core.Keyword(null,\"dyn-v\",\"dyn-v\",949994592),dynv], null)], null));\n\ntry{try{var temp__5455__auto__ = re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar cached = temp__5455__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22147 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22147;\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = re_frame.utils.first_in_vector(query);\nvar handler_fn = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22150 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22150;\n\n} else {\n}\n\nif(re_frame.interop.debug_enabled_QMARK_){\nvar temp__5457__auto___22151 = cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5457__auto___22151)){\nvar not_reactive_22152 = temp__5457__auto___22151;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\",not_reactive_22152], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn == null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22153 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22153;\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nvar dyn_vals = re_frame.interop.make_reaction(((function (query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126){\nreturn (function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n});})(query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126))\n);\nvar sub = re_frame.interop.make_reaction(((function (dyn_vals,query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126){\nreturn (function (){\nvar G__22128 = re_frame.db.app_db;\nvar G__22129 = query;\nvar G__22130 = cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__22128,G__22129,G__22130) : handler_fn.call(null,G__22128,G__22129,G__22130));\n});})(dyn_vals,query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126))\n);\nreturn re_frame.subs.cache_and_return(query,dynv,re_frame.interop.make_reaction(((function (dyn_vals,sub,query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126){\nreturn (function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n});})(dyn_vals,sub,query_id,handler_fn,temp__5455__auto__,_STAR_current_trace_STAR_22126))\n));\n}\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21987__auto___22155 = re_frame.interop.now();\nvar duration__21988__auto___22156 = (end__21987__auto___22155 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21988__auto___22156,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21987__auto___22155);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR_22126;\n}} else {\nvar temp__5455__auto__ = re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5455__auto__)){\nvar cached = temp__5455__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22160 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22160;\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = re_frame.utils.first_in_vector(query);\nvar handler_fn = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22162 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22162;\n\n} else {\n}\n\nif(re_frame.interop.debug_enabled_QMARK_){\nvar temp__5457__auto___22164 = cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5457__auto___22164)){\nvar not_reactive_22165 = temp__5457__auto___22164;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\",not_reactive_22165], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn == null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22166 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22166;\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nvar dyn_vals = re_frame.interop.make_reaction(((function (query_id,handler_fn,temp__5455__auto__){\nreturn (function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n});})(query_id,handler_fn,temp__5455__auto__))\n);\nvar sub = re_frame.interop.make_reaction(((function (dyn_vals,query_id,handler_fn,temp__5455__auto__){\nreturn (function (){\nvar G__22132 = re_frame.db.app_db;\nvar G__22133 = query;\nvar G__22134 = cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__22132,G__22133,G__22134) : handler_fn.call(null,G__22132,G__22133,G__22134));\n});})(dyn_vals,query_id,handler_fn,temp__5455__auto__))\n);\nreturn re_frame.subs.cache_and_return(query,dynv,re_frame.interop.make_reaction(((function (dyn_vals,sub,query_id,handler_fn,temp__5455__auto__){\nreturn (function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n});})(dyn_vals,sub,query_id,handler_fn,temp__5455__auto__))\n));\n}\n}\n}\n});\n\nre_frame.subs.subscribe.cljs$lang$maxFixedArity = 2;\n\n/**\n * Returns a new version of 'm' in which 'f' has been applied to each value.\n *   (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}\n */\nre_frame.subs.map_vals = (function re_frame$subs$map_vals(f,m){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(m),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__22167){\nvar vec__22168 = p__22167;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22168,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22168,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null,v))], null);\n})),m);\n});\n/**\n * Runs f over signals. Signals may take several\n *   forms, this function handles all of them.\n */\nre_frame.subs.map_signals = (function re_frame$subs$map_signals(f,signals){\nif(cljs.core.sequential_QMARK_(signals)){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nreturn re_frame.subs.map_vals(f,signals);\n} else {\nif(cljs.core.truth_(re_frame.interop.deref_QMARK_(signals))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(signals) : f.call(null,signals));\n} else {\nreturn cljs.core.List.EMPTY;\n\n}\n}\n}\n});\n/**\n * Coerces x to a seq if it isn't one already\n */\nre_frame.subs.to_seq = (function re_frame$subs$to_seq(x){\nif(cljs.core.sequential_QMARK_(x)){\nreturn x;\n} else {\nreturn (new cljs.core.List(null,x,null,(1),null));\n}\n});\nre_frame.subs.deref_input_signals = (function re_frame$subs$deref_input_signals(signals,query_id){\nvar dereffed_signals = re_frame.subs.map_signals(cljs.core.deref,signals);\nif(cljs.core.sequential_QMARK_(signals)){\ncljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nre_frame.subs.map_vals(cljs.core.deref,signals);\n} else {\nif(cljs.core.truth_(re_frame.interop.deref_QMARK_(signals))){\ncljs.core.deref(signals);\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in the reg-sub for\",query_id,\", the input-signals function returns:\",signals], 0));\n\n}\n}\n}\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22175 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(re_frame.subs.to_seq(re_frame.subs.map_signals(re_frame.interop.reagent_id,signals)))], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(re_frame.subs.to_seq(re_frame.subs.map_signals(re_frame.interop.reagent_id,signals)))], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22175;\n\n} else {\n}\n\nreturn dereffed_signals;\n});\n/**\n * For a given `query-id`, register a `computation` function and input `signals`.\n * \n *   At an abstract level, a call to this function allows you to register 'the mechanism'\n *   to later fulfil a call to `(subscribe [query-id ...])`.\n * \n *   To say that another way, reg-sub allows you to create a template for a node\n *   in the signal graph. But note: reg-sub does not cause a node to be created.\n *   It simply allows you to register the template from which such a\n *   node could be created, if it were needed, sometime later, when the call\n *   to `subscribe` is made.\n * \n *   reg-sub needs three things:\n *  - a `query-id`\n *  - the required inputs for this node\n *  - a computation function for this node\n * \n *   The `query-id` is always the 1st argument to reg-sub and it is typically\n *   a namespaced keyword.\n * \n *   A computation function is always the last argument and it has this general form:\n *  `(input-signals, query-vector) -> a-value`\n * \n *   What goes in between the 1st and last args can vary, but whatever is there will\n *   define the input signals part of the template, and, as a result, it will control\n *   what values the computation functions gets as a first argument.\n * \n *   There's 3 ways this function can be called - 3 ways to supply input signals:\n * \n *   1. No input signals given:\n * \n *   (reg-sub\n *     :query-id\n *     a-computation-fn)   ;; (fn [db v]  ... a-value)\n * \n *   The node's input signal defaults to `app-db`, and the value within `app-db` is\n *   is given as the 1st argument to the computation function.\n * \n *   2. A signal function is supplied:\n * \n *   (reg-sub\n *     :query-id\n *     signal-fn     ;; <-- here\n *     computation-fn)\n * \n *   When a node is created from the template, the `signal-fn` will be called and it\n *   is expected to return the input signal(s) as either a singleton, if there is only\n *   one, or a sequence if there are many, or a map with the signals as the values.\n * \n *   The values from the nominated signals will be supplied as the 1st argument to the\n *   computation function - either a singleton, sequence or map of them, paralleling\n *   the structure returned by the signal function.\n * \n *   Here, is an example signal-fn, which returns a vector of input signals.\n * \n *     (fn [query-vec dynamic-vec]\n *       [(subscribe [:a-sub])\n *        (subscribe [:b-sub])])\n * \n *   For that signal function, the computation function must be written\n *   to expect a vector of values for its first argument.\n *     (fn [[a b] _] ....)\n * \n *   If the signal function was simpler and returned a singleton, like this:\n *      (fn [query-vec dynamic-vec]\n *        (subscribe [:a-sub]))\n * \n *   then the computation function must be written to expect a single value\n *   as the 1st argument:\n * \n *      (fn [a _] ...)\n * \n *   3. Syntax Sugar\n * \n *   (reg-sub\n *     :a-b-sub\n *     :<- [:a-sub]\n *     :<- [:b-sub]\n *     (fn [[a b] [_]] {:a a :b b}))\n * \n *   This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n *   of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n *   vector follows.\n * \n *   For further understanding, read `/docs`, and look at the detailed comments in\n *   /examples/todomvc/src/subs.cljs\n *   \n */\nre_frame.subs.reg_sub = (function re_frame$subs$reg_sub(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___22201 = arguments.length;\nvar i__4532__auto___22202 = (0);\nwhile(true){\nif((i__4532__auto___22202 < len__4531__auto___22201)){\nargs__4534__auto__.push((arguments[i__4532__auto___22202]));\n\nvar G__22203 = (i__4532__auto___22202 + (1));\ni__4532__auto___22202 = G__22203;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn re_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\nre_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic = (function (query_id,args){\nvar computation_fn = cljs.core.last(args);\nvar input_args = cljs.core.butlast(args);\nvar err_header = [\"re-frame: reg-sub for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\", \"].join('');\nvar inputs_fn = (function (){var G__22178 = cljs.core.count(input_args);\nswitch (G__22178) {\ncase (0):\nreturn ((function (G__22178,computation_fn,input_args,err_header){\nreturn (function() {\nvar G__22205 = null;\nvar G__22205__1 = (function (_){\nreturn re_frame.db.app_db;\n});\nvar G__22205__2 = (function (_,___$1){\nreturn re_frame.db.app_db;\n});\nG__22205 = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn G__22205__1.call(this,_);\ncase 2:\nreturn G__22205__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__22205.cljs$core$IFn$_invoke$arity$1 = G__22205__1;\nG__22205.cljs$core$IFn$_invoke$arity$2 = G__22205__2;\nreturn G__22205;\n})()\n;})(G__22178,computation_fn,input_args,err_header))\n\nbreak;\ncase (1):\nvar f = cljs.core.first(input_args);\nif(cljs.core.fn_QMARK_(f)){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"2nd argument expected to be an inputs function, got:\",f], 0));\n}\n\nreturn f;\n\nbreak;\ncase (2):\nvar vec__22179 = input_args;\nvar marker = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22179,(0),null);\nvar vec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22179,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<-\",\"<-\",760412998),marker)){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"expected :<-, got:\",marker], 0));\n}\n\nreturn ((function (vec__22179,marker,vec,G__22178,computation_fn,input_args,err_header){\nreturn (function() {\nvar re_frame$subs$inp_fn = null;\nvar re_frame$subs$inp_fn__1 = (function (_){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nvar re_frame$subs$inp_fn__2 = (function (_,___$1){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nre_frame$subs$inp_fn = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 = re_frame$subs$inp_fn__1;\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 = re_frame$subs$inp_fn__2;\nreturn re_frame$subs$inp_fn;\n})()\n;})(vec__22179,marker,vec,G__22178,computation_fn,input_args,err_header))\n\nbreak;\ndefault:\nvar pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),input_args);\nvar markers = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar vecs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.last,pairs);\nif(((cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"<-\",\"<-\",760412998),null], null), null),markers)) && (cljs.core.every_QMARK_(cljs.core.vector_QMARK_,vecs)))){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"expected pairs of :<- and vectors, got:\",pairs], 0));\n}\n\nreturn ((function (pairs,markers,vecs,G__22178,computation_fn,input_args,err_header){\nreturn (function() {\nvar re_frame$subs$inp_fn = null;\nvar re_frame$subs$inp_fn__1 = (function (_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(re_frame.subs.subscribe,vecs);\n});\nvar re_frame$subs$inp_fn__2 = (function (_,___$1){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(re_frame.subs.subscribe,vecs);\n});\nre_frame$subs$inp_fn = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 = re_frame$subs$inp_fn__1;\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 = re_frame$subs$inp_fn__2;\nreturn re_frame$subs$inp_fn;\n})()\n;})(pairs,markers,vecs,G__22178,computation_fn,input_args,err_header))\n\n}\n})();\nreturn re_frame.registrar.register_handler(re_frame.subs.kind,query_id,((function (computation_fn,input_args,err_header,inputs_fn){\nreturn (function() {\nvar re_frame$subs$subs_handler_fn = null;\nvar re_frame$subs$subs_handler_fn__2 = (function (db,query_vec){\nvar subscriptions = (inputs_fn.cljs$core$IFn$_invoke$arity$1 ? inputs_fn.cljs$core$IFn$_invoke$arity$1(query_vec) : inputs_fn.call(null,query_vec));\nvar reaction_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction = re_frame.interop.make_reaction(((function (subscriptions,reaction_id,computation_fn,input_args,err_header,inputs_fn){\nreturn (function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR_22182 = re_frame.trace._STAR_current_trace_STAR_;\nre_frame.trace._STAR_current_trace_STAR_ = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_vec,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),cljs.core.deref(reaction_id)], null)], null));\n\ntry{try{var subscription = (function (){var G__22183 = re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__22184 = query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__22183,G__22184) : computation_fn.call(null,G__22183,G__22184));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22209 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22209;\n\n} else {\n}\n\nreturn subscription;\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21987__auto___22210 = re_frame.interop.now();\nvar duration__21988__auto___22211 = (end__21987__auto___22210 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21988__auto___22211,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21987__auto___22210);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR_22182;\n}} else {\nvar subscription = (function (){var G__22185 = re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__22186 = query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__22185,G__22186) : computation_fn.call(null,G__22185,G__22186));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22212 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22212;\n\n} else {\n}\n\nreturn subscription;\n}\n});})(subscriptions,reaction_id,computation_fn,input_args,err_header,inputs_fn))\n);\ncljs.core.reset_BANG_(reaction_id,re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nvar re_frame$subs$subs_handler_fn__3 = (function (db,query_vec,dyn_vec){\nvar subscriptions = (inputs_fn.cljs$core$IFn$_invoke$arity$2 ? inputs_fn.cljs$core$IFn$_invoke$arity$2(query_vec,dyn_vec) : inputs_fn.call(null,query_vec,dyn_vec));\nvar reaction_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction = re_frame.interop.make_reaction(((function (subscriptions,reaction_id,computation_fn,input_args,err_header,inputs_fn){\nreturn (function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR_22191 = re_frame.trace._STAR_current_trace_STAR_;\nre_frame.trace._STAR_current_trace_STAR_ = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_vec,new cljs.core.Keyword(null,\"dyn-v\",\"dyn-v\",949994592),dyn_vec,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),cljs.core.deref(reaction_id)], null)], null));\n\ntry{try{var subscription = (function (){var G__22192 = re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__22193 = query_vec;\nvar G__22194 = dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__22192,G__22193,G__22194) : computation_fn.call(null,G__22192,G__22193,G__22194));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22213 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22213;\n\n} else {\n}\n\nreturn subscription;\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__21987__auto___22214 = re_frame.interop.now();\nvar duration__21988__auto___22215 = (end__21987__auto___22214 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__21988__auto___22215,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__21987__auto___22214);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR_22191;\n}} else {\nvar subscription = (function (){var G__22195 = re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__22196 = query_vec;\nvar G__22197 = dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__22195,G__22196,G__22197) : computation_fn.call(null,G__22195,G__22196,G__22197));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__21989__auto___22216 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\nre_frame.trace._STAR_current_trace_STAR_ = new_trace__21989__auto___22216;\n\n} else {\n}\n\nreturn subscription;\n}\n});})(subscriptions,reaction_id,computation_fn,input_args,err_header,inputs_fn))\n);\ncljs.core.reset_BANG_(reaction_id,re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nre_frame$subs$subs_handler_fn = function(db,query_vec,dyn_vec){\nswitch(arguments.length){\ncase 2:\nreturn re_frame$subs$subs_handler_fn__2.call(this,db,query_vec);\ncase 3:\nreturn re_frame$subs$subs_handler_fn__3.call(this,db,query_vec,dyn_vec);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nre_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$2 = re_frame$subs$subs_handler_fn__2;\nre_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$3 = re_frame$subs$subs_handler_fn__3;\nreturn re_frame$subs$subs_handler_fn;\n})()\n;})(computation_fn,input_args,err_header,inputs_fn))\n);\n});\n\nre_frame.subs.reg_sub.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nre_frame.subs.reg_sub.cljs$lang$applyTo = (function (seq22176){\nvar G__22177 = cljs.core.first(seq22176);\nvar seq22176__$1 = cljs.core.next(seq22176);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22177,seq22176__$1);\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/subs.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.subs","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.db","^M","~$re-frame.interop","^N","~$re-frame.loggers","^O","~$re-frame.utils","^P","~$re-frame.registrar","^Q","~$re-frame.trace","^R","~$trace","^R","~$cljs.core","^T","~$goog","^U"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$reagent-id","^N","~$console","^O","~$app-db","^M","~$dispose!","^N","~$add-on-dispose!","^N","~$make-reaction","^N","~$get-handler","^Q","~$first-in-vector","^P","~$deref?","^N","~$ratom?","^N","~$debug-enabled?","^N","~$clear-handlers","^Q","~$register-handler","^Q"],"~:require-macros",["^ ","^R","^R","^S","^R","^T","^T"],"~:form",["~#list",["~$ns","^H",["^1<",["^W",["^M","~:refer",["^["]],["^N","^1>",["^11","^17","^12","^16","^15","^10","^Y"]],["^O","^1>",["^Z"]],["^P","^1>",["^14"]],["^Q","^1>",["^13","^18","^19"]],["^R","~:as","^S","~:include-macros",true]]]]],"~:flags",["^ ","^W",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^M","^N","^O","^P","^Q","^R"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/subs.cljc"],"~:compiled-at",1537815750497,"~:resource-name","re_frame/subs.cljc","~:warnings",[],"~:source","(ns re-frame.subs\n (:require\n   [re-frame.db        :refer [app-db]]\n   [re-frame.interop   :refer [add-on-dispose! debug-enabled? make-reaction ratom? deref? dispose! reagent-id]]\n   [re-frame.loggers   :refer [console]]\n   [re-frame.utils     :refer [first-in-vector]]\n   [re-frame.registrar :refer [get-handler clear-handlers register-handler]]\n   [re-frame.trace     :as trace :include-macros true]))\n\n(def kind :sub)\n(assert (re-frame.registrar/kinds kind))\n\n;; -- cache -------------------------------------------------------------------\n;;\n;; De-duplicate subscriptions. If two or more equal subscriptions\n;; are concurrently active, we want only one handler running.\n;; Two subscriptions are \"equal\" if their query vectors test \"=\".\n(def query->reaction (atom {}))\n\n(defn clear-subscription-cache!\n  \"Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue.\"\n  []\n  (doseq [[k rxn] @query->reaction]\n    (dispose! rxn))\n  (if (not-empty @query->reaction)\n    (console :warn \"Subscription cache should be empty after clearing it.\")))\n\n(defn clear-all-handlers!\n  \"Unregisters all existing subscription handlers\"\n  []\n  (clear-handlers kind)\n  (clear-subscription-cache!))\n\n(defn cache-and-return\n  \"cache the reaction r\"\n  [query-v dynv r]\n  (let [cache-key [query-v dynv]]\n    ;; when this reaction is no longer being used, remove it from the cache\n    (add-on-dispose! r #(trace/with-trace {:operation (first-in-vector query-v)\n                                           :op-type   :sub/dispose\n                                           :tags      {:query-v  query-v\n                                                       :reaction (reagent-id r)}}\n                                          (swap! query->reaction\n                                                 (fn [query-cache]\n                                                   (if (and (contains? query-cache cache-key) (identical? r (get query-cache cache-key)))\n                                                     (dissoc query-cache cache-key)\n                                                     query-cache)))))\n    ;; cache this reaction, so it can be used to deduplicate other, later \"=\" subscriptions\n    (swap! query->reaction (fn [query-cache]\n                             (when debug-enabled?\n                               (when (contains? query-cache cache-key)\n                                 (console :warn \"re-frame: Adding a new subscription to the cache while there is an existing subscription in the cache\" cache-key)))\n                             (assoc query-cache cache-key r)))\n    (trace/merge-trace! {:tags {:reaction (reagent-id r)}})\n    r)) ;; return the actual reaction\n\n(defn cache-lookup\n  ([query-v]\n   (cache-lookup query-v []))\n  ([query-v dyn-v]\n   (get @query->reaction [query-v dyn-v])))\n\n\n;; -- subscribe ---------------------------------------------------------------\n\n(defn subscribe\n  \"Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \\\"blue\\\" :small])\n    (subscribe [:items {:colour \\\"blue\\\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  \"\n\n  ([query]\n   (trace/with-trace {:operation (first-in-vector query)\n                      :op-type   :sub/create\n                      :tags      {:query-v query}}\n     (if-let [cached (cache-lookup query)]\n       (do\n         (trace/merge-trace! {:tags {:cached?  true\n                                     :reaction (reagent-id cached)}})\n         cached)\n\n       (let [query-id   (first-in-vector query)\n             handler-fn (get-handler kind query-id)]\n         (trace/merge-trace! {:tags {:cached? false}})\n         (if (nil? handler-fn)\n           (do (trace/merge-trace! {:error true})\n               (console :error (str \"re-frame: no subscription handler registered for: \" query-id \". Returning a nil subscription.\")))\n           (cache-and-return query [] (handler-fn app-db query)))))))\n\n  ([query dynv]\n   (trace/with-trace {:operation (first-in-vector query)\n                      :op-type   :sub/create\n                      :tags      {:query-v query\n                                  :dyn-v   dynv}}\n     (if-let [cached (cache-lookup query dynv)]\n       (do\n         (trace/merge-trace! {:tags {:cached?  true\n                                     :reaction (reagent-id cached)}})\n         cached)\n       (let [query-id   (first-in-vector query)\n             handler-fn (get-handler kind query-id)]\n         (trace/merge-trace! {:tags {:cached? false}})\n         (when debug-enabled?\n           (when-let [not-reactive (not-empty (remove ratom? dynv))]\n             (console :warn \"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\" not-reactive)))\n         (if (nil? handler-fn)\n           (do (trace/merge-trace! {:error true})\n               (console :error (str \"re-frame: no subscription handler registered for: \" query-id \". Returning a nil subscription.\")))\n           (let [dyn-vals (make-reaction (fn [] (mapv deref dynv)))\n                 sub      (make-reaction (fn [] (handler-fn app-db query @dyn-vals)))]\n             ;; handler-fn returns a reaction which is then wrapped in the sub reaction\n             ;; need to double deref it to get to the actual value.\n             ;(console :log \"Subscription created: \" v dynv)\n             (cache-and-return query dynv (make-reaction (fn [] @@sub))))))))))\n\n;; -- reg-sub -----------------------------------------------------------------\n\n(defn- map-vals\n  \"Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}\"\n  [f m]\n  (into (empty m)\n        (map (fn [[k v]] [k (f v)]))\n        m))\n\n(defn map-signals\n  \"Runs f over signals. Signals may take several\n  forms, this function handles all of them.\"\n  [f signals]\n  (cond\n    (sequential? signals) (map f signals)\n    (map? signals) (map-vals f signals)\n    (deref? signals) (f signals)\n    :else '()))\n\n(defn to-seq\n  \"Coerces x to a seq if it isn't one already\"\n  [x]\n  (if (sequential? x)\n    x\n    (list x)))\n\n(defn- deref-input-signals\n  [signals query-id]\n  (let [dereffed-signals (map-signals deref signals)]\n    (cond\n      (sequential? signals) (map deref signals)\n      (map? signals) (map-vals deref signals)\n      (deref? signals) (deref signals)\n      :else (console :error \"re-frame: in the reg-sub for\" query-id \", the input-signals function returns:\" signals))\n    (trace/merge-trace! {:tags {:input-signals (doall (to-seq (map-signals reagent-id signals)))}})\n    dereffed-signals))\n\n\n(defn reg-sub\n  \"For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  \"\n  [query-id & args]\n  (let [computation-fn (last args)\n        input-args     (butlast args) ;; may be empty, or one signal fn, or pairs of  :<- / vector\n        err-header     (str \"re-frame: reg-sub for \" query-id \", \")\n        inputs-fn      (case (count input-args)\n                         ;; no `inputs` function provided - give the default\n                         0 (fn\n                             ([_] app-db)\n                             ([_ _] app-db))\n\n                         ;; a single `inputs` fn\n                         1 (let [f (first input-args)]\n                             (when-not (fn? f)\n                               (console :error err-header \"2nd argument expected to be an inputs function, got:\" f))\n                             f)\n\n                         ;; one sugar pair\n                         2 (let [[marker vec] input-args]\n                             (when-not (= :<- marker)\n                               (console :error err-header \"expected :<-, got:\" marker))\n                             (fn inp-fn\n                               ([_] (subscribe vec))\n                               ([_ _] (subscribe vec))))\n\n                         ;; multiple sugar pairs\n                         (let [pairs   (partition 2 input-args)\n                               markers (map first pairs)\n                               vecs    (map last pairs)]\n                           (when-not (and (every? #{:<-} markers) (every? vector? vecs))\n                             (console :error err-header \"expected pairs of :<- and vectors, got:\" pairs))\n                           (fn inp-fn\n                             ([_] (map subscribe vecs))\n                             ([_ _] (map subscribe vecs)))))]\n    (register-handler\n      kind\n      query-id\n      (fn subs-handler-fn\n        ([db query-vec]\n         (let [subscriptions (inputs-fn query-vec)\n               reaction-id   (atom nil)\n               reaction      (make-reaction\n                               (fn []\n                                 (trace/with-trace {:operation (first-in-vector query-vec)\n                                                    :op-type   :sub/run\n                                                    :tags      {:query-v    query-vec\n                                                                :reaction   @reaction-id}}\n                                                   (let [subscription (computation-fn (deref-input-signals subscriptions query-id) query-vec)]\n                                                     (trace/merge-trace! {:tags {:value subscription}})\n                                                     subscription))))]\n\n           (reset! reaction-id (reagent-id reaction))\n           reaction))\n        ([db query-vec dyn-vec]\n         (let [subscriptions (inputs-fn query-vec dyn-vec)\n               reaction-id   (atom nil)\n               reaction      (make-reaction\n                               (fn []\n                                 (trace/with-trace {:operation (first-in-vector query-vec)\n                                                    :op-type   :sub/run\n                                                    :tags      {:query-v   query-vec\n                                                                :dyn-v     dyn-vec\n                                                                :reaction  @reaction-id}}\n                                                   (let [subscription (computation-fn (deref-input-signals subscriptions query-id) query-vec dyn-vec)]\n                                                     (trace/merge-trace! {:tags {:value subscription}})\n                                                     subscription))))]\n\n           (reset! reaction-id (reagent-id reaction))\n           reaction))))))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i9",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",1],["^ ","^1M",21,"^1N",1]],"~i5",[["^ ","^1M",0,"^1N",1,"^G","re-frame.subs/kind"]]],"~i10",["^ ","~i0",[["^ ","^1M",0,"^1N",2]]],"~i17",["^ ","~i0",[["^ ","^1M",0,"^1N",2]],"~i5",[["^ ","^1M",0,"^1N",2,"^G","re-frame.subs/query->reaction"]],"~i21",[["^ ","^1M",35,"^1N",2],["^ ","^1M",80,"^1N",2]],"~i22",[["^ ","^1M",35,"^1N",2,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i19",["^ ","~i0",[["^ ","^1M",0,"^1N",3],["^ ","^1M",47,"^1N",14],["^ ","^1M",0,"^1N",15]],"~i6",[["^ ","^1M",0,"^1N",14,"^G","re-frame.subs/clear-subscription-cache!"]]],"~i30",["^ ","~i2",[["^ ","^1M",0,"^1N",15],["^ ","^1M",4,"^1N",15,"^G","seq__22056"],["^ ","^1M",23,"^1N",15],["^ ","^1M",23,"^1N",15,"^G","cljs.core/seq"],["^ ","^1M",37,"^1N",15],["^ ","^1M",37,"^1N",15,"^G","cljs.core/deref"],["^ ","^1M",4,"^1N",16,"^G","chunk__22057"],["^ ","^1M",25,"^1N",16],["^ ","^1M",4,"^1N",17,"^G","count__22058"],["^ ","^1M",25,"^1N",17],["^ ","^1M",4,"^1N",18,"^G","i__22059"],["^ ","^1M",21,"^1N",18],["^ ","^1M",0,"^1N",20],["^ ","^1M",0,"^1N",20],["^ ","^1M",3,"^1N",20],["^ ","^1M",3,"^1N",20],["^ ","^1M",4,"^1N",20,"^G","i__22059"],["^ ","^1M",21,"^1N",20,"^G","count__22058"],["^ ","^1M",0,"^1N",21],["^ ","^1M",4,"^1N",21,"^G","vec__22060"],["^ ","^1M",23,"^1N",21],["^ ","^1M",23,"^1N",21,"^G","chunk__22057"],["^ ","^1M",79,"^1N",21,"^G","i__22059"],["^ ","^1M",14,"^1N",22],["^ ","^1M",14,"^1N",22,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",58,"^1N",22,"^G","vec__22060"],["^ ","^1M",75,"^1N",22],["^ ","^1M",79,"^1N",22],["^ ","^1M",16,"^1N",23],["^ ","^1M",16,"^1N",23,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",60,"^1N",23,"^G","vec__22060"],["^ ","^1M",77,"^1N",23],["^ ","^1M",81,"^1N",23],["^ ","^1M",0,"^1N",24],["^ ","^1M",0,"^1N",24],["^ ","^1M",0,"^1N",26],["^ ","^1M",0,"^1N",27],["^ ","^1M",15,"^1N",27,"^G","seq__22056"],["^ ","^1M",15,"^1N",28,"^G","chunk__22057"],["^ ","^1M",15,"^1N",29,"^G","count__22058"],["^ ","^1M",15,"^1N",30],["^ ","^1M",16,"^1N",30,"^G","i__22059"],["^ ","^1M",33,"^1N",30],["^ ","^1M",0,"^1N",37],["^ ","^1M",4,"^1N",37,"^G","temp__5457__auto__"],["^ ","^1M",31,"^1N",37],["^ ","^1M",31,"^1N",37,"^G","cljs.core/seq"],["^ ","^1M",45,"^1N",37,"^G","seq__22056"],["^ ","^1M",0,"^1N",38],["^ ","^1M",0,"^1N",38],["^ ","^1M",3,"^1N",38,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",39],["^ ","^1M",0,"^1N",39],["^ ","^1M",4,"^1N",39,"^G","seq__22056"],["^ ","^1M",27,"^1N",39,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",40],["^ ","^1M",0,"^1N",40],["^ ","^1M",3,"^1N",40],["^ ","^1M",3,"^1N",40,"^G","cljs.core/chunked-seq?"],["^ ","^1M",32,"^1N",40,"^G","seq__22056"],["^ ","^1M",0,"^1N",41],["^ ","^1M",4,"^1N",41,"^G","c__4351__auto__"],["^ ","^1M",28,"^1N",41],["^ ","^1M",28,"^1N",41,"^G","cljs.core/chunk-first"],["^ ","^1M",50,"^1N",41,"^G","seq__22056"],["^ ","^1M",0,"^1N",42],["^ ","^1M",0,"^1N",42],["^ ","^1M",15,"^1N",42],["^ ","^1M",15,"^1N",42,"^G","cljs.core/chunk-rest"],["^ ","^1M",36,"^1N",42,"^G","seq__22056"],["^ ","^1M",15,"^1N",43,"^G","c__4351__auto__"],["^ ","^1M",15,"^1N",44],["^ ","^1M",15,"^1N",44,"^G","cljs.core/count"],["^ ","^1M",31,"^1N",44,"^G","c__4351__auto__"],["^ ","^1M",15,"^1N",45],["^ ","^1M",0,"^1N",52],["^ ","^1M",4,"^1N",52,"^G","vec__22064"],["^ ","^1M",23,"^1N",52],["^ ","^1M",23,"^1N",52,"^G","cljs.core/first"],["^ ","^1M",39,"^1N",52,"^G","seq__22056"],["^ ","^1M",14,"^1N",53],["^ ","^1M",14,"^1N",53,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",58,"^1N",53,"^G","vec__22064"],["^ ","^1M",75,"^1N",53],["^ ","^1M",79,"^1N",53],["^ ","^1M",16,"^1N",54],["^ ","^1M",16,"^1N",54,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",60,"^1N",54,"^G","vec__22064"],["^ ","^1M",77,"^1N",54],["^ ","^1M",81,"^1N",54],["^ ","^1M",0,"^1N",55],["^ ","^1M",0,"^1N",55],["^ ","^1M",0,"^1N",57],["^ ","^1M",0,"^1N",58],["^ ","^1M",15,"^1N",58],["^ ","^1M",15,"^1N",58,"^G","cljs.core/next"],["^ ","^1M",30,"^1N",58,"^G","seq__22056"],["^ ","^1M",15,"^1N",59],["^ ","^1M",15,"^1N",60],["^ ","^1M",15,"^1N",61],["^ ","^1M",0,"^1N",69]],"~i11",[["^ ","^1M",4,"^1N",22,"^G","k"],["^ ","^1M",4,"^1N",53,"^G","k"]],"~i13",[["^ ","^1M",4,"^1N",23,"^G","rxn"],["^ ","^1M",4,"^1N",54,"^G","rxn"]],"^1S",[["^ ","^1M",53,"^1N",15,"^G","re-frame.subs/query->reaction"]]],"~i31",["^ ","~i4",[["^ ","^1M",0,"^1N",24],["^ ","^1M",0,"^1N",55]],"~i5",[["^ ","^1M",0,"^1N",24,"^G","re-frame.interop/dispose!"],["^ ","^1M",0,"^1N",55,"^G","re-frame.interop/dispose!"]],"~i14",[["^ ","^1M",31,"^1N",24,"^G","rxn"],["^ ","^1M",31,"^1N",55,"^G","rxn"]]],"~i32",["^ ","~i2",[["^ ","^1M",0,"^1N",74],["^ ","^1M",0,"^1N",77]],"~i6",[["^ ","^1M",20,"^1N",74],["^ ","^1M",40,"^1N",74],["^ ","^1M",40,"^1N",74,"^G","cljs.core/deref"]],"~i7",[["^ ","^1M",20,"^1N",74,"^G","cljs.core/not-empty"]],"~i18",[["^ ","^1M",56,"^1N",74,"^G","re-frame.subs/query->reaction"]]],"~i33",["^ ","~i4",[["^ ","^1M",0,"^1N",75],["^ ","^1M",69,"^1N",75],["^ ","^1M",172,"^1N",75]],"~i5",[["^ ","^1M",7,"^1N",75,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]]],"~i35",["^ ","~i0",[["^ ","^1M",0,"^1N",80],["^ ","^1M",41,"^1N",83],["^ ","^1M",0,"^1N",84]],"~i6",[["^ ","^1M",0,"^1N",83,"^G","re-frame.subs/clear-all-handlers!"]]],"~i38",["^ ","~i2",[["^ ","^1M",0,"^1N",84]],"~i3",[["^ ","^1M",0,"^1N",84,"^G","re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1"]],"^1Z",[["^ ","^1M",64,"^1N",84,"^G","re-frame.subs/kind"]]],"~i39",["^ ","~i2",[["^ ","^1M",0,"^1N",86]],"~i3",[["^ ","^1M",7,"^1N",86,"^G","re-frame.subs/clear-subscription-cache!"]]],"~i41",["^ ","~i0",[["^ ","^1M",0,"^1N",88],["^ ","^1M",33,"^1N",91],["^ ","^1M",0,"^1N",92]],"~i6",[["^ ","^1M",0,"^1N",91,"^G","re-frame.subs/cache-and-return"]]],"~i43",["^ ","~i3",[["^ ","^1M",74,"^1N",91,"^G","query-v"]],"^1U",[["^ ","^1M",82,"^1N",91,"^G","dynv"]],"~i16",[["^ ","^1M",87,"^1N",91,"^G","r"]]],"~i44",["^ ","~i2",[["^ ","^1M",0,"^1N",92],["^ ","^1M",16,"^1N",92],["^ ","^1M",0,"^1N",93]],"~i8",[["^ ","^1M",4,"^1N",92,"^G","cache-key"]],"^1S",[["^ ","^1M",99,"^1N",92,"^G","query-v"]],"~i27",[["^ ","^1M",107,"^1N",92,"^G","dynv"]]],"~i46",["^ ","~i4",[["^ ","^1M",0,"^1N",93],["^ ","^1M",40,"^1N",93],["^ ","^1M",0,"^1N",95]],"~i5",[["^ ","^1M",0,"^1N",93,"^G","re-frame.interop/add-on-dispose!"]],"^1Q",[["^ ","^1M",38,"^1N",93,"^G","r"]],"~i24",[["^ ","^1M",0,"^1N",95],["^ ","^1M",3,"^1N",95],["^ ","^1M",3,"^1N",95,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",96],["^ ","^1M",4,"^1N",96,"^G","*current-trace*22100"],["^ ","^1M",37,"^1N",96,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",97],["^ ","^1M",0,"^1N",97],["^ ","^1M",0,"^1N",97,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",97],["^ ","^1M",43,"^1N",97,"^G","re-frame.trace/start-trace"],["^ ","^1M",70,"^1N",97],["^ ","^1M",113,"^1N",97],["^ ","^1M",217,"^1N",97],["^ ","^1M",277,"^1N",97],["^ ","^1M",340,"^1N",97],["^ ","^1M",393,"^1N",97],["^ ","^1M",436,"^1N",97],["^ ","^1M",504,"^1N",97],["^ ","^1M",0,"^1N",99],["^ ","^1M",4,"^1N",99],["^ ","^1M",4,"^1N",99],["^ ","^1M",8,"^1N",99],["^ ","^1M",10,"^1N",108],["^ ","^1M",10,"^1N",108],["^ ","^1M",13,"^1N",108],["^ ","^1M",13,"^1N",108,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",109],["^ ","^1M",0,"^1N",109],["^ ","^1M",4,"^1N",109,"^G","end__21987__auto__"],["^ ","^1M",31,"^1N",109],["^ ","^1M",31,"^1N",109,"^G","re-frame.interop/now"],["^ ","^1M",4,"^1N",110,"^G","duration__21988__auto__"],["^ ","^1M",36,"^1N",110],["^ ","^1M",37,"^1N",110,"^G","end__21987__auto__"],["^ ","^1M",64,"^1N",110],["^ ","^1M",64,"^1N",110],["^ ","^1M",149,"^1N",110,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",111],["^ ","^1M",0,"^1N",111],["^ ","^1M",0,"^1N",111,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",51,"^1N",111,"^G","re-frame.trace/traces"],["^ ","^1M",73,"^1N",111,"^G","cljs.core/conj"],["^ ","^1M",88,"^1N",111],["^ ","^1M",88,"^1N",111,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",141,"^1N",111,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",182,"^1N",111],["^ ","^1M",243,"^1N",111,"^G","duration__21988__auto__"],["^ ","^1M",323,"^1N",111],["^ ","^1M",374,"^1N",111],["^ ","^1M",374,"^1N",111,"^G","re-frame.interop/now"],["^ ","^1M",0,"^1N",113],["^ ","^1M",0,"^1N",113,"^G","re-frame.trace/run-tracing-callbacks!"],["^ ","^1M",43,"^1N",113,"^G","end__21987__auto__"],["^ ","^1M",0,"^1N",115],["^ ","^1M",11,"^1N",116],["^ ","^1M",11,"^1N",116],["^ ","^1M",11,"^1N",116,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",54,"^1N",116,"^G","*current-trace*22100"],["^ ","^1M",0,"^1N",118]],"~i54",[["^ ","^1M",177,"^1N",97]],"~i55",[["^ ","^1M",177,"^1N",97,"^G","re-frame.utils/first-in-vector"]],"~i71",[["^ ","^1M",208,"^1N",97,"^G","query-v"]]],"~i48",["^ ","~i65",[["^ ","^1M",496,"^1N",97,"^G","query-v"]]],"~i49",["^ ","^2>",[["^ ","^1M",564,"^1N",97]],"~i66",[["^ ","^1M",564,"^1N",97,"^G","re-frame.interop/reagent-id"]],"~i77",[["^ ","^1M",592,"^1N",97,"^G","r"]]],"~i50",["^ ","~i42",[["^ ","^1M",8,"^1N",99],["^ ","^1M",0,"^1N",118]],"^24",[["^ ","^1M",15,"^1N",99,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",7,"^1N",118,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^2?",[["^ ","^1M",66,"^1N",99,"^G","re-frame.subs/query->reaction"],["^ ","^1M",58,"^1N",118,"^G","re-frame.subs/query->reaction"]]],"~i51",["^ ","^2?",[["^ ","^1M",99,"^1N",99],["^ ","^1M",0,"^1N",101],["^ ","^1M",91,"^1N",118],["^ ","^1M",0,"^1N",120]],"^2:",[["^ ","^1M",18,"^1N",100,"^G","query-cache"],["^ ","^1M",18,"^1N",119,"^G","query-cache"]]],"~i52",["^ ","^2D",[["^ ","^1M",0,"^1N",101],["^ ","^1M",0,"^1N",120]],"^2;",[["^ ","^1M",3,"^1N",101],["^ ","^1M",3,"^1N",120]],"~i60",[["^ ","^1M",5,"^1N",101],["^ ","^1M",5,"^1N",120]],"~i61",[["^ ","^1M",5,"^1N",101,"^G","cljs.core/contains?"],["^ ","^1M",5,"^1N",120,"^G","cljs.core/contains?"]],"^2<",[["^ ","^1M",31,"^1N",101,"^G","query-cache"],["^ ","^1M",31,"^1N",120,"^G","query-cache"]],"~i83",[["^ ","^1M",43,"^1N",101,"^G","cache-key"],["^ ","^1M",43,"^1N",120,"^G","cache-key"]],"~i94",[["^ ","^1M",59,"^1N",101],["^ ","^1M",59,"^1N",120]],"~i106",[["^ ","^1M",60,"^1N",101,"^G","r"],["^ ","^1M",60,"^1N",120,"^G","r"]],"~i108",[["^ ","^1M",66,"^1N",101],["^ ","^1M",66,"^1N",120]],"~i109",[["^ ","^1M",66,"^1N",101,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",66,"^1N",120,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i113",[["^ ","^1M",110,"^1N",101,"^G","query-cache"],["^ ","^1M",110,"^1N",120,"^G","query-cache"]],"~i125",[["^ ","^1M",122,"^1N",101,"^G","cache-key"],["^ ","^1M",122,"^1N",120,"^G","cache-key"]]],"~i53",["^ ","^2O",[["^ ","^1M",0,"^1N",102],["^ ","^1M",0,"^1N",121]],"^2:",[["^ ","^1M",7,"^1N",102,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",7,"^1N",121,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"]],"^2G",[["^ ","^1M",54,"^1N",102,"^G","query-cache"],["^ ","^1M",54,"^1N",121,"^G","query-cache"]],"~i73",[["^ ","^1M",66,"^1N",102,"^G","cache-key"],["^ ","^1M",66,"^1N",121,"^G","cache-key"]]],"^2:",["^ ","^2O",[["^ ","^1M",0,"^1N",104,"^G","query-cache"],["^ ","^1M",0,"^1N",123,"^G","query-cache"]]],"~i56",["^ ","~i4",[["^ ","^1M",0,"^1N",131]],"~i5",[["^ ","^1M",0,"^1N",131,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2"]],"^1U",[["^ ","^1M",51,"^1N",131,"^G","re-frame.subs/query->reaction"]],"^27",[["^ ","^1M",84,"^1N",131],["^ ","^1M",0,"^1N",133]],"^1Y",[["^ ","^1M",18,"^1N",132,"^G","query-cache"]]],"~i57",["^ ","~i29",[["^ ","^1M",0,"^1N",133],["^ ","^1M",0,"^1N",134],["^ ","^1M",0,"^1N",139]],"^20",[["^ ","^1M",3,"^1N",133,"^G","re-frame.interop/debug-enabled?"]]],"~i58",["^ ","^1W",[["^ ","^1M",0,"^1N",134],["^ ","^1M",0,"^1N",135],["^ ","^1M",0,"^1N",137]],"~i37",[["^ ","^1M",3,"^1N",134]],"^21",[["^ ","^1M",3,"^1N",134,"^G","cljs.core/contains?"]],"^2=",[["^ ","^1M",29,"^1N",134,"^G","query-cache"]],"^2F",[["^ ","^1M",41,"^1N",134,"^G","cache-key"]]],"~i59",["^ ","^1[",[["^ ","^1M",0,"^1N",135],["^ ","^1M",62,"^1N",135],["^ ","^1M",165,"^1N",135]],"~i34",[["^ ","^1M",0,"^1N",135,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i152",[["^ ","^1M",269,"^1N",135,"^G","cache-key"]]],"^2F",["^ ","^2S",[["^ ","^1M",0,"^1N",141]],"^1T",[["^ ","^1M",7,"^1N",141,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"]],"~i36",[["^ ","^1M",53,"^1N",141,"^G","query-cache"]],"^2=",[["^ ","^1M",65,"^1N",141,"^G","cache-key"]],"^2T",[["^ ","^1M",75,"^1N",141,"^G","r"]]],"^2G",["^ ","~i4",[["^ ","^1M",0,"^1N",145],["^ ","^1M",3,"^1N",145],["^ ","^1M",3,"^1N",145,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",146],["^ ","^1M",0,"^1N",146],["^ ","^1M",4,"^1N",146,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",146],["^ ","^1M",37,"^1N",146,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",146],["^ ","^1M",140,"^1N",146,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",146,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",146],["^ ","^1M",281,"^1N",146,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",146],["^ ","^1M",297,"^1N",146],["^ ","^1M",380,"^1N",146],["^ ","^1M",423,"^1N",146],["^ ","^1M",476,"^1N",146],["^ ","^1M",519,"^1N",146],["^ ","^1M",628,"^1N",146],["^ ","^1M",628,"^1N",146,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",675,"^1N",146],["^ ","^1M",718,"^1N",146],["^ ","^1M",771,"^1N",146],["^ ","^1M",814,"^1N",146],["^ ","^1M",921,"^1N",146],["^ ","^1M",0,"^1N",147],["^ ","^1M",0,"^1N",147],["^ ","^1M",0,"^1N",147,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",147,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",149],["^ ","^1M",0,"^1N",150]],"^2C",[["^ ","^1M",579,"^1N",146],["^ ","^1M",874,"^1N",146]],"^24",[["^ ","^1M",579,"^1N",146,"^G","re-frame.interop/reagent-id"],["^ ","^1M",874,"^1N",146,"^G","re-frame.interop/reagent-id"]],"^2:",[["^ ","^1M",607,"^1N",146,"^G","r"],["^ ","^1M",902,"^1N",146,"^G","r"]]],"~i62",["^ ","~i4",[["^ ","^1M",0,"^1N",152,"^G","r"]]],"~i64",["^ ","~i0",[["^ ","^1M",0,"^1N",154],["^ ","^1M",0,"^1N",154],["^ ","^1M",29,"^1N",154],["^ ","^1M",66,"^1N",154,"^G","var_args"],["^ ","^1M",0,"^1N",155],["^ ","^1M",0,"^1N",155],["^ ","^1M",4,"^1N",155,"^G","G__22115"],["^ ","^1M",15,"^1N",155],["^ ","^1M",15,"^1N",155],["^ ","^1M",0,"^1N",156],["^ ","^1M",0,"^1N",156],["^ ","^1M",8,"^1N",156,"^G","G__22115"],["^ ","^1M",5,"^1N",157],["^ ","^1M",0,"^1N",158],["^ ","^1M",7,"^1N",158,"^G","re-frame.subs/cache-lookup"],["^ ","^1M",64,"^1N",158],["^ ","^1M",65,"^1N",158],["^ ","^1M",75,"^1N",158],["^ ","^1M",5,"^1N",161],["^ ","^1M",0,"^1N",162],["^ ","^1M",7,"^1N",162,"^G","re-frame.subs/cache-lookup"],["^ ","^1M",64,"^1N",162],["^ ","^1M",65,"^1N",162],["^ ","^1M",75,"^1N",162],["^ ","^1M",81,"^1N",162],["^ ","^1M",82,"^1N",162],["^ ","^1M",92,"^1N",162],["^ ","^1M",0,"^1N",166],["^ ","^1M",6,"^1N",166],["^ ","^1M",11,"^1N",166,"^G","js/Error"],["^ ","^1M",17,"^1N",166],["^ ","^1M",18,"^1N",166],["^ ","^1M",80,"^1N",166],["^ ","^1M",80,"^1N",166],["^ ","^1M",0,"^1N",171],["^ ","^1M",0,"^1N",171],["^ ","^1M",59,"^1N",171],["^ ","^1M",0,"^1N",172],["^ ","^1M",0,"^1N",175],["^ ","^1M",0,"^1N",175],["^ ","^1M",59,"^1N",175],["^ ","^1M",0,"^1N",176],["^ ","^1M",0,"^1N",179],["^ ","^1M",0,"^1N",179],["^ ","^1M",53,"^1N",179],["^ ","^1M",0,"^1N",181]],"~i6",[["^ ","^1M",0,"^1N",154,"^G","re-frame.subs/cache-lookup"],["^ ","^1M",0,"^1N",171,"^G","re-frame.subs/cache-lookup"],["^ ","^1M",0,"^1N",175,"^G","re-frame.subs/cache-lookup"],["^ ","^1M",0,"^1N",179,"^G","re-frame.subs/cache-lookup"]]],"^2>",["^ ","~i4",[["^ ","^1M",70,"^1N",171,"^G","query-v"]]],"^2@",["^ ","~i3",[["^ ","^1M",0,"^1N",172],["^ ","^1M",72,"^1N",172]],"~i4",[["^ ","^1M",7,"^1N",172,"^G","re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2"]],"^1P",[["^ ","^1M",64,"^1N",172,"^G","query-v"]]],"~i67",["^ ","~i4",[["^ ","^1M",70,"^1N",175,"^G","query-v"]],"~i12",[["^ ","^1M",78,"^1N",175,"^G","dyn-v"]]],"~i68",["^ ","~i3",[["^ ","^1M",0,"^1N",176],["^ ","^1M",51,"^1N",176],["^ ","^1M",51,"^1N",176,"^G","cljs.core/deref"],["^ ","^1M",101,"^1N",176]],"~i4",[["^ ","^1M",7,"^1N",176,"^G","cljs.core.get.cljs$core$IFn$_invoke$arity$2"]],"~i9",[["^ ","^1M",67,"^1N",176,"^G","re-frame.subs/query->reaction"]],"~i26",[["^ ","^1M",184,"^1N",176,"^G","query-v"]],"^2W",[["^ ","^1M",192,"^1N",176,"^G","dyn-v"]]],"^2P",["^ ","~i0",[["^ ","^1M",0,"^1N",181],["^ ","^1M",0,"^1N",181],["^ ","^1M",26,"^1N",224],["^ ","^1M",60,"^1N",224,"^G","var_args"],["^ ","^1M",0,"^1N",225],["^ ","^1M",0,"^1N",225],["^ ","^1M",4,"^1N",225,"^G","G__22121"],["^ ","^1M",15,"^1N",225],["^ ","^1M",15,"^1N",225],["^ ","^1M",0,"^1N",226],["^ ","^1M",0,"^1N",226],["^ ","^1M",8,"^1N",226,"^G","G__22121"],["^ ","^1M",5,"^1N",227],["^ ","^1M",0,"^1N",228],["^ ","^1M",7,"^1N",228,"^G","re-frame.subs/subscribe"],["^ ","^1M",61,"^1N",228],["^ ","^1M",62,"^1N",228],["^ ","^1M",72,"^1N",228],["^ ","^1M",5,"^1N",231],["^ ","^1M",0,"^1N",232],["^ ","^1M",7,"^1N",232,"^G","re-frame.subs/subscribe"],["^ ","^1M",61,"^1N",232],["^ ","^1M",62,"^1N",232],["^ ","^1M",72,"^1N",232],["^ ","^1M",78,"^1N",232],["^ ","^1M",79,"^1N",232],["^ ","^1M",89,"^1N",232],["^ ","^1M",0,"^1N",236],["^ ","^1M",6,"^1N",236],["^ ","^1M",11,"^1N",236,"^G","js/Error"],["^ ","^1M",17,"^1N",236],["^ ","^1M",18,"^1N",236],["^ ","^1M",80,"^1N",236],["^ ","^1M",80,"^1N",236],["^ ","^1M",0,"^1N",241],["^ ","^1M",0,"^1N",241],["^ ","^1M",56,"^1N",241],["^ ","^1M",0,"^1N",242],["^ ","^1M",0,"^1N",327],["^ ","^1M",0,"^1N",327],["^ ","^1M",56,"^1N",327],["^ ","^1M",0,"^1N",328],["^ ","^1M",0,"^1N",467],["^ ","^1M",0,"^1N",467],["^ ","^1M",50,"^1N",467],["^ ","^1M",0,"^1N",469]],"~i6",[["^ ","^1M",0,"^1N",224,"^G","re-frame.subs/subscribe"],["^ ","^1M",0,"^1N",241,"^G","re-frame.subs/subscribe"],["^ ","^1M",0,"^1N",327,"^G","re-frame.subs/subscribe"],["^ ","^1M",0,"^1N",467,"^G","re-frame.subs/subscribe"]]],"~i116",["^ ","~i4",[["^ ","^1M",67,"^1N",241,"^G","query"]]],"~i117",["^ ","~i3",[["^ ","^1M",0,"^1N",242],["^ ","^1M",3,"^1N",242],["^ ","^1M",3,"^1N",242,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",243],["^ ","^1M",4,"^1N",243,"^G","*current-trace*22122"],["^ ","^1M",37,"^1N",243,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",244],["^ ","^1M",0,"^1N",244],["^ ","^1M",0,"^1N",244,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",244],["^ ","^1M",43,"^1N",244,"^G","re-frame.trace/start-trace"],["^ ","^1M",70,"^1N",244],["^ ","^1M",113,"^1N",244],["^ ","^1M",215,"^1N",244],["^ ","^1M",275,"^1N",244],["^ ","^1M",338,"^1N",244],["^ ","^1M",391,"^1N",244],["^ ","^1M",434,"^1N",244],["^ ","^1M",0,"^1N",246],["^ ","^1M",4,"^1N",246],["^ ","^1M",4,"^1N",246],["^ ","^1M",8,"^1N",246],["^ ","^1M",10,"^1N",280],["^ ","^1M",10,"^1N",280],["^ ","^1M",13,"^1N",280],["^ ","^1M",13,"^1N",280,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",281],["^ ","^1M",0,"^1N",281],["^ ","^1M",4,"^1N",281,"^G","end__21987__auto__"],["^ ","^1M",31,"^1N",281],["^ ","^1M",31,"^1N",281,"^G","re-frame.interop/now"],["^ ","^1M",4,"^1N",282,"^G","duration__21988__auto__"],["^ ","^1M",36,"^1N",282],["^ ","^1M",37,"^1N",282,"^G","end__21987__auto__"],["^ ","^1M",64,"^1N",282],["^ ","^1M",64,"^1N",282],["^ ","^1M",149,"^1N",282,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",283],["^ ","^1M",0,"^1N",283],["^ ","^1M",0,"^1N",283,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",51,"^1N",283,"^G","re-frame.trace/traces"],["^ ","^1M",73,"^1N",283,"^G","cljs.core/conj"],["^ ","^1M",88,"^1N",283],["^ ","^1M",88,"^1N",283,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",141,"^1N",283,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",182,"^1N",283],["^ ","^1M",243,"^1N",283,"^G","duration__21988__auto__"],["^ ","^1M",323,"^1N",283],["^ ","^1M",374,"^1N",283],["^ ","^1M",374,"^1N",283,"^G","re-frame.interop/now"],["^ ","^1M",0,"^1N",285],["^ ","^1M",0,"^1N",285,"^G","re-frame.trace/run-tracing-callbacks!"],["^ ","^1M",43,"^1N",285,"^G","end__21987__auto__"],["^ ","^1M",0,"^1N",287],["^ ","^1M",11,"^1N",288],["^ ","^1M",11,"^1N",288],["^ ","^1M",11,"^1N",288,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",54,"^1N",288,"^G","*current-trace*22122"],["^ ","^1M",0,"^1N",290]],"^1[",[["^ ","^1M",177,"^1N",244]],"^2W",[["^ ","^1M",177,"^1N",244,"^G","re-frame.utils/first-in-vector"]],"^2B",[["^ ","^1M",208,"^1N",244,"^G","query"]]],"~i119",["^ ","^24",[["^ ","^1M",494,"^1N",244,"^G","query"]]],"~i120",["^ ","~i5",[["^ ","^1M",8,"^1N",246],["^ ","^1M",12,"^1N",246,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",247],["^ ","^1M",0,"^1N",247],["^ ","^1M",20,"^1N",247,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",248],["^ ","^1M",13,"^1N",248,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",249],["^ ","^1M",0,"^1N",290],["^ ","^1M",4,"^1N",290,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",291],["^ ","^1M",0,"^1N",291],["^ ","^1M",20,"^1N",291,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",292],["^ ","^1M",13,"^1N",292,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",293]],"^1X",[["^ ","^1M",4,"^1N",248,"^G","cached"],["^ ","^1M",4,"^1N",292,"^G","cached"]],"^1Q",[["^ ","^1M",33,"^1N",246],["^ ","^1M",25,"^1N",290]],"^1R",[["^ ","^1M",33,"^1N",246,"^G","re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1"],["^ ","^1M",25,"^1N",290,"^G","re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1"]],"^20",[["^ ","^1M",90,"^1N",246,"^G","query"],["^ ","^1M",82,"^1N",290,"^G","query"]]],"~i121",["^ ","~i7",[["^ ","^1M",0,"^1N",249],["^ ","^1M",0,"^1N",293]]],"~i122",["^ ","~i9",[["^ ","^1M",0,"^1N",249],["^ ","^1M",3,"^1N",249],["^ ","^1M",3,"^1N",249,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",250],["^ ","^1M",0,"^1N",250],["^ ","^1M",4,"^1N",250,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",250],["^ ","^1M",37,"^1N",250,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",250],["^ ","^1M",140,"^1N",250,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",250,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",250],["^ ","^1M",281,"^1N",250,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",250],["^ ","^1M",297,"^1N",250],["^ ","^1M",380,"^1N",250],["^ ","^1M",423,"^1N",250],["^ ","^1M",476,"^1N",250],["^ ","^1M",519,"^1N",250],["^ ","^1M",576,"^1N",250],["^ ","^1M",581,"^1N",250],["^ ","^1M",695,"^1N",250],["^ ","^1M",695,"^1N",250,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",742,"^1N",250],["^ ","^1M",785,"^1N",250],["^ ","^1M",838,"^1N",250],["^ ","^1M",881,"^1N",250],["^ ","^1M",938,"^1N",250],["^ ","^1M",943,"^1N",250],["^ ","^1M",1055,"^1N",250],["^ ","^1M",0,"^1N",251],["^ ","^1M",0,"^1N",251],["^ ","^1M",0,"^1N",251,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",251,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",253],["^ ","^1M",0,"^1N",254],["^ ","^1M",0,"^1N",293],["^ ","^1M",3,"^1N",293],["^ ","^1M",3,"^1N",293,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",294],["^ ","^1M",0,"^1N",294],["^ ","^1M",4,"^1N",294,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",294],["^ ","^1M",37,"^1N",294,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",294],["^ ","^1M",140,"^1N",294,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",294,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",294],["^ ","^1M",281,"^1N",294,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",294],["^ ","^1M",297,"^1N",294],["^ ","^1M",380,"^1N",294],["^ ","^1M",423,"^1N",294],["^ ","^1M",476,"^1N",294],["^ ","^1M",519,"^1N",294],["^ ","^1M",576,"^1N",294],["^ ","^1M",581,"^1N",294],["^ ","^1M",695,"^1N",294],["^ ","^1M",695,"^1N",294,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",742,"^1N",294],["^ ","^1M",785,"^1N",294],["^ ","^1M",838,"^1N",294],["^ ","^1M",881,"^1N",294],["^ ","^1M",938,"^1N",294],["^ ","^1M",943,"^1N",294],["^ ","^1M",1055,"^1N",294],["^ ","^1M",0,"^1N",295],["^ ","^1M",0,"^1N",295],["^ ","^1M",0,"^1N",295,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",295,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",297],["^ ","^1M",0,"^1N",298]]],"~i123",["^ ","~i47",[["^ ","^1M",641,"^1N",250],["^ ","^1M",1003,"^1N",250],["^ ","^1M",641,"^1N",294],["^ ","^1M",1003,"^1N",294]],"^2=",[["^ ","^1M",641,"^1N",250,"^G","re-frame.interop/reagent-id"],["^ ","^1M",1003,"^1N",250,"^G","re-frame.interop/reagent-id"],["^ ","^1M",641,"^1N",294,"^G","re-frame.interop/reagent-id"],["^ ","^1M",1003,"^1N",294,"^G","re-frame.interop/reagent-id"]],"^2V",[["^ ","^1M",669,"^1N",250,"^G","cached"],["^ ","^1M",1031,"^1N",250,"^G","cached"],["^ ","^1M",669,"^1N",294,"^G","cached"],["^ ","^1M",1031,"^1N",294,"^G","cached"]]],"~i124",["^ ","~i9",[["^ ","^1M",0,"^1N",256,"^G","cached"],["^ ","^1M",0,"^1N",300,"^G","cached"]]],"~i126",["^ ","~i7",[["^ ","^1M",0,"^1N",258],["^ ","^1M",0,"^1N",260],["^ ","^1M",0,"^1N",302],["^ ","^1M",0,"^1N",304]],"^1V",[["^ ","^1M",4,"^1N",258,"^G","query-id"],["^ ","^1M",4,"^1N",302,"^G","query-id"]],"^29",[["^ ","^1M",15,"^1N",258],["^ ","^1M",15,"^1N",302]],"~i25",[["^ ","^1M",15,"^1N",258,"^G","re-frame.utils/first-in-vector"],["^ ","^1M",15,"^1N",302,"^G","re-frame.utils/first-in-vector"]],"^23",[["^ ","^1M",46,"^1N",258,"^G","query"],["^ ","^1M",46,"^1N",302,"^G","query"]]],"~i127",["^ ","^1V",[["^ ","^1M",4,"^1N",259,"^G","handler-fn"],["^ ","^1M",4,"^1N",303,"^G","handler-fn"]],"^29",[["^ ","^1M",17,"^1N",259],["^ ","^1M",17,"^1N",303]],"^3>",[["^ ","^1M",17,"^1N",259,"^G","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",17,"^1N",303,"^G","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^1M",78,"^1N",259,"^G","re-frame.subs/kind"],["^ ","^1M",78,"^1N",303,"^G","re-frame.subs/kind"]],"^2C",[["^ ","^1M",97,"^1N",259,"^G","query-id"],["^ ","^1M",97,"^1N",303,"^G","query-id"]]],"~i128",["^ ","~i9",[["^ ","^1M",0,"^1N",260],["^ ","^1M",3,"^1N",260],["^ ","^1M",3,"^1N",260,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",261],["^ ","^1M",0,"^1N",261],["^ ","^1M",4,"^1N",261,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",261],["^ ","^1M",37,"^1N",261,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",261],["^ ","^1M",140,"^1N",261,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",261,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",261],["^ ","^1M",281,"^1N",261,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",261],["^ ","^1M",297,"^1N",261],["^ ","^1M",380,"^1N",261],["^ ","^1M",423,"^1N",261],["^ ","^1M",476,"^1N",261],["^ ","^1M",519,"^1N",261],["^ ","^1M",576,"^1N",261],["^ ","^1M",600,"^1N",261],["^ ","^1M",600,"^1N",261,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",647,"^1N",261],["^ ","^1M",690,"^1N",261],["^ ","^1M",743,"^1N",261],["^ ","^1M",786,"^1N",261],["^ ","^1M",843,"^1N",261],["^ ","^1M",865,"^1N",261],["^ ","^1M",0,"^1N",262],["^ ","^1M",0,"^1N",262],["^ ","^1M",0,"^1N",262,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",262,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",264],["^ ","^1M",0,"^1N",265],["^ ","^1M",0,"^1N",304],["^ ","^1M",3,"^1N",304],["^ ","^1M",3,"^1N",304,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",305],["^ ","^1M",0,"^1N",305],["^ ","^1M",4,"^1N",305,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",305],["^ ","^1M",37,"^1N",305,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",305],["^ ","^1M",140,"^1N",305,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",305,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",305],["^ ","^1M",281,"^1N",305,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",305],["^ ","^1M",297,"^1N",305],["^ ","^1M",380,"^1N",305],["^ ","^1M",423,"^1N",305],["^ ","^1M",476,"^1N",305],["^ ","^1M",519,"^1N",305],["^ ","^1M",576,"^1N",305],["^ ","^1M",600,"^1N",305],["^ ","^1M",600,"^1N",305,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",647,"^1N",305],["^ ","^1M",690,"^1N",305],["^ ","^1M",743,"^1N",305],["^ ","^1M",786,"^1N",305],["^ ","^1M",843,"^1N",305],["^ ","^1M",865,"^1N",305],["^ ","^1M",0,"^1N",306],["^ ","^1M",0,"^1N",306],["^ ","^1M",0,"^1N",306,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",306,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",308],["^ ","^1M",0,"^1N",309]]],"~i129",["^ ","~i9",[["^ ","^1M",0,"^1N",267],["^ ","^1M",0,"^1N",311]],"^1V",[["^ ","^1M",3,"^1N",267],["^ ","^1M",18,"^1N",267],["^ ","^1M",3,"^1N",311],["^ ","^1M",18,"^1N",311]],"^1S",[["^ ","^1M",4,"^1N",267,"^G","handler-fn"],["^ ","^1M",4,"^1N",311,"^G","handler-fn"]]],"~i130",["^ ","^1U",[["^ ","^1M",0,"^1N",268],["^ ","^1M",0,"^1N",312]],"~i15",[["^ ","^1M",0,"^1N",268],["^ ","^1M",3,"^1N",268],["^ ","^1M",3,"^1N",268,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",269],["^ ","^1M",0,"^1N",269],["^ ","^1M",4,"^1N",269,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",269],["^ ","^1M",37,"^1N",269,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",269],["^ ","^1M",140,"^1N",269,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",269,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",269],["^ ","^1M",281,"^1N",269,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",269],["^ ","^1M",297,"^1N",269],["^ ","^1M",380,"^1N",269],["^ ","^1M",423,"^1N",269],["^ ","^1M",478,"^1N",269],["^ ","^1M",493,"^1N",269],["^ ","^1M",493,"^1N",269,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",540,"^1N",269],["^ ","^1M",583,"^1N",269],["^ ","^1M",638,"^1N",269],["^ ","^1M",651,"^1N",269],["^ ","^1M",0,"^1N",270],["^ ","^1M",0,"^1N",270],["^ ","^1M",0,"^1N",270,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",270,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",272],["^ ","^1M",0,"^1N",273],["^ ","^1M",0,"^1N",312],["^ ","^1M",3,"^1N",312],["^ ","^1M",3,"^1N",312,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",313],["^ ","^1M",0,"^1N",313],["^ ","^1M",4,"^1N",313,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",313],["^ ","^1M",37,"^1N",313,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",313],["^ ","^1M",140,"^1N",313,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",313,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",313],["^ ","^1M",281,"^1N",313,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",313],["^ ","^1M",297,"^1N",313],["^ ","^1M",380,"^1N",313],["^ ","^1M",423,"^1N",313],["^ ","^1M",478,"^1N",313],["^ ","^1M",493,"^1N",313],["^ ","^1M",493,"^1N",313,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",540,"^1N",313],["^ ","^1M",583,"^1N",313],["^ ","^1M",638,"^1N",313],["^ ","^1M",651,"^1N",313],["^ ","^1M",0,"^1N",314],["^ ","^1M",0,"^1N",314],["^ ","^1M",0,"^1N",314,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",314,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",316],["^ ","^1M",0,"^1N",317]]],"~i131",["^ ","^3C",[["^ ","^1M",0,"^1N",275],["^ ","^1M",69,"^1N",275],["^ ","^1M",0,"^1N",319],["^ ","^1M",69,"^1N",319]],"^25",[["^ ","^1M",7,"^1N",275,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",7,"^1N",319,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"^1W",[["^ ","^1M",174,"^1N",275],["^ ","^1M",175,"^1N",275],["^ ","^1M",282,"^1N",275],["^ ","^1M",174,"^1N",319],["^ ","^1M",175,"^1N",319],["^ ","^1M",282,"^1N",319]],"~i89",[["^ ","^1M",272,"^1N",275,"^G","query-id"],["^ ","^1M",272,"^1N",319,"^G","query-id"]]],"~i132",["^ ","^1U",[["^ ","^1M",0,"^1N",277],["^ ","^1M",44,"^1N",277],["^ ","^1M",0,"^1N",321],["^ ","^1M",44,"^1N",321]],"^31",[["^ ","^1M",7,"^1N",277,"^G","re-frame.subs/cache-and-return"],["^ ","^1M",7,"^1N",321,"^G","re-frame.subs/cache-and-return"]],"^2S",[["^ ","^1M",38,"^1N",277,"^G","query"],["^ ","^1M",38,"^1N",321,"^G","query"]],"^21",[["^ ","^1M",77,"^1N",277],["^ ","^1M",77,"^1N",321]],"^22",[["^ ","^1M",78,"^1N",277,"^G","handler-fn"],["^ ","^1M",121,"^1N",277,"^G","handler-fn"],["^ ","^1M",190,"^1N",277,"^G","handler-fn"],["^ ","^1M",78,"^1N",321,"^G","handler-fn"],["^ ","^1M",121,"^1N",321,"^G","handler-fn"],["^ ","^1M",190,"^1N",321,"^G","handler-fn"]],"^2B",[["^ ","^1M",162,"^1N",277,"^G","re-frame.db/app-db"],["^ ","^1M",211,"^1N",277,"^G","re-frame.db/app-db"],["^ ","^1M",162,"^1N",321,"^G","re-frame.db/app-db"],["^ ","^1M",211,"^1N",321,"^G","re-frame.db/app-db"]],"^2R",[["^ ","^1M",181,"^1N",277,"^G","query"],["^ ","^1M",230,"^1N",277,"^G","query"],["^ ","^1M",181,"^1N",321,"^G","query"],["^ ","^1M",230,"^1N",321,"^G","query"]]],"~i134",["^ ","~i4",[["^ ","^1M",67,"^1N",327,"^G","query"]],"^1O",[["^ ","^1M",73,"^1N",327,"^G","dynv"]]],"~i135",["^ ","~i3",[["^ ","^1M",0,"^1N",328],["^ ","^1M",3,"^1N",328],["^ ","^1M",3,"^1N",328,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",329],["^ ","^1M",4,"^1N",329,"^G","*current-trace*22126"],["^ ","^1M",37,"^1N",329,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",330],["^ ","^1M",0,"^1N",330],["^ ","^1M",0,"^1N",330,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",330],["^ ","^1M",43,"^1N",330,"^G","re-frame.trace/start-trace"],["^ ","^1M",70,"^1N",330],["^ ","^1M",113,"^1N",330],["^ ","^1M",215,"^1N",330],["^ ","^1M",275,"^1N",330],["^ ","^1M",338,"^1N",330],["^ ","^1M",391,"^1N",330],["^ ","^1M",434,"^1N",330],["^ ","^1M",500,"^1N",330],["^ ","^1M",0,"^1N",332],["^ ","^1M",4,"^1N",332],["^ ","^1M",4,"^1N",332],["^ ","^1M",8,"^1N",332],["^ ","^1M",10,"^1N",393],["^ ","^1M",10,"^1N",393],["^ ","^1M",13,"^1N",393],["^ ","^1M",13,"^1N",393,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",394],["^ ","^1M",0,"^1N",394],["^ ","^1M",4,"^1N",394,"^G","end__21987__auto__"],["^ ","^1M",31,"^1N",394],["^ ","^1M",31,"^1N",394,"^G","re-frame.interop/now"],["^ ","^1M",4,"^1N",395,"^G","duration__21988__auto__"],["^ ","^1M",36,"^1N",395],["^ ","^1M",37,"^1N",395,"^G","end__21987__auto__"],["^ ","^1M",64,"^1N",395],["^ ","^1M",64,"^1N",395],["^ ","^1M",149,"^1N",395,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",396],["^ ","^1M",0,"^1N",396],["^ ","^1M",0,"^1N",396,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",51,"^1N",396,"^G","re-frame.trace/traces"],["^ ","^1M",73,"^1N",396,"^G","cljs.core/conj"],["^ ","^1M",88,"^1N",396],["^ ","^1M",88,"^1N",396,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",141,"^1N",396,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",182,"^1N",396],["^ ","^1M",243,"^1N",396,"^G","duration__21988__auto__"],["^ ","^1M",323,"^1N",396],["^ ","^1M",374,"^1N",396],["^ ","^1M",374,"^1N",396,"^G","re-frame.interop/now"],["^ ","^1M",0,"^1N",398],["^ ","^1M",0,"^1N",398,"^G","re-frame.trace/run-tracing-callbacks!"],["^ ","^1M",43,"^1N",398,"^G","end__21987__auto__"],["^ ","^1M",0,"^1N",400],["^ ","^1M",11,"^1N",401],["^ ","^1M",11,"^1N",401],["^ ","^1M",11,"^1N",401,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",54,"^1N",401,"^G","*current-trace*22126"],["^ ","^1M",0,"^1N",403]],"^1[",[["^ ","^1M",177,"^1N",330]],"^2W",[["^ ","^1M",177,"^1N",330,"^G","re-frame.utils/first-in-vector"]],"^2B",[["^ ","^1M",208,"^1N",330,"^G","query"]]],"~i137",["^ ","^24",[["^ ","^1M",494,"^1N",330,"^G","query"]]],"~i138",["^ ","^24",[["^ ","^1M",554,"^1N",330,"^G","dynv"]]],"~i139",["^ ","~i5",[["^ ","^1M",8,"^1N",332],["^ ","^1M",12,"^1N",332,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",333],["^ ","^1M",0,"^1N",333],["^ ","^1M",20,"^1N",333,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",334],["^ ","^1M",13,"^1N",334,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",335],["^ ","^1M",0,"^1N",403],["^ ","^1M",4,"^1N",403,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",404],["^ ","^1M",0,"^1N",404],["^ ","^1M",20,"^1N",404,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",405],["^ ","^1M",13,"^1N",405,"^G","temp__5455__auto__"],["^ ","^1M",0,"^1N",406]],"^1X",[["^ ","^1M",4,"^1N",334,"^G","cached"],["^ ","^1M",4,"^1N",405,"^G","cached"]],"^1Q",[["^ ","^1M",33,"^1N",332],["^ ","^1M",25,"^1N",403]],"^1R",[["^ ","^1M",33,"^1N",332,"^G","re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",25,"^1N",403,"^G","re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2"]],"^20",[["^ ","^1M",90,"^1N",332,"^G","query"],["^ ","^1M",82,"^1N",403,"^G","query"]],"^23",[["^ ","^1M",96,"^1N",332,"^G","dynv"],["^ ","^1M",88,"^1N",403,"^G","dynv"]]],"~i140",["^ ","~i7",[["^ ","^1M",0,"^1N",335],["^ ","^1M",0,"^1N",406]]],"~i141",["^ ","~i9",[["^ ","^1M",0,"^1N",335],["^ ","^1M",3,"^1N",335],["^ ","^1M",3,"^1N",335,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",336],["^ ","^1M",0,"^1N",336],["^ ","^1M",4,"^1N",336,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",336],["^ ","^1M",37,"^1N",336,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",336],["^ ","^1M",140,"^1N",336,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",336,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",336],["^ ","^1M",281,"^1N",336,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",336],["^ ","^1M",297,"^1N",336],["^ ","^1M",380,"^1N",336],["^ ","^1M",423,"^1N",336],["^ ","^1M",476,"^1N",336],["^ ","^1M",519,"^1N",336],["^ ","^1M",576,"^1N",336],["^ ","^1M",581,"^1N",336],["^ ","^1M",695,"^1N",336],["^ ","^1M",695,"^1N",336,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",742,"^1N",336],["^ ","^1M",785,"^1N",336],["^ ","^1M",838,"^1N",336],["^ ","^1M",881,"^1N",336],["^ ","^1M",938,"^1N",336],["^ ","^1M",943,"^1N",336],["^ ","^1M",1055,"^1N",336],["^ ","^1M",0,"^1N",337],["^ ","^1M",0,"^1N",337],["^ ","^1M",0,"^1N",337,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",337,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",339],["^ ","^1M",0,"^1N",340],["^ ","^1M",0,"^1N",406],["^ ","^1M",3,"^1N",406],["^ ","^1M",3,"^1N",406,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",407],["^ ","^1M",0,"^1N",407],["^ ","^1M",4,"^1N",407,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",407],["^ ","^1M",37,"^1N",407,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",407],["^ ","^1M",140,"^1N",407,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",407,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",407],["^ ","^1M",281,"^1N",407,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",407],["^ ","^1M",297,"^1N",407],["^ ","^1M",380,"^1N",407],["^ ","^1M",423,"^1N",407],["^ ","^1M",476,"^1N",407],["^ ","^1M",519,"^1N",407],["^ ","^1M",576,"^1N",407],["^ ","^1M",581,"^1N",407],["^ ","^1M",695,"^1N",407],["^ ","^1M",695,"^1N",407,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",742,"^1N",407],["^ ","^1M",785,"^1N",407],["^ ","^1M",838,"^1N",407],["^ ","^1M",881,"^1N",407],["^ ","^1M",938,"^1N",407],["^ ","^1M",943,"^1N",407],["^ ","^1M",1055,"^1N",407],["^ ","^1M",0,"^1N",408],["^ ","^1M",0,"^1N",408],["^ ","^1M",0,"^1N",408,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",408,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",410],["^ ","^1M",0,"^1N",411]]],"~i142",["^ ","^3;",[["^ ","^1M",641,"^1N",336],["^ ","^1M",1003,"^1N",336],["^ ","^1M",641,"^1N",407],["^ ","^1M",1003,"^1N",407]],"^2=",[["^ ","^1M",641,"^1N",336,"^G","re-frame.interop/reagent-id"],["^ ","^1M",1003,"^1N",336,"^G","re-frame.interop/reagent-id"],["^ ","^1M",641,"^1N",407,"^G","re-frame.interop/reagent-id"],["^ ","^1M",1003,"^1N",407,"^G","re-frame.interop/reagent-id"]],"^2V",[["^ ","^1M",669,"^1N",336,"^G","cached"],["^ ","^1M",1031,"^1N",336,"^G","cached"],["^ ","^1M",669,"^1N",407,"^G","cached"],["^ ","^1M",1031,"^1N",407,"^G","cached"]]],"~i143",["^ ","~i9",[["^ ","^1M",0,"^1N",342,"^G","cached"],["^ ","^1M",0,"^1N",413,"^G","cached"]]],"~i144",["^ ","~i7",[["^ ","^1M",0,"^1N",344],["^ ","^1M",0,"^1N",346],["^ ","^1M",0,"^1N",415],["^ ","^1M",0,"^1N",417]],"^1V",[["^ ","^1M",4,"^1N",344,"^G","query-id"],["^ ","^1M",4,"^1N",415,"^G","query-id"]],"^29",[["^ ","^1M",15,"^1N",344],["^ ","^1M",15,"^1N",415]],"^3>",[["^ ","^1M",15,"^1N",344,"^G","re-frame.utils/first-in-vector"],["^ ","^1M",15,"^1N",415,"^G","re-frame.utils/first-in-vector"]],"^23",[["^ ","^1M",46,"^1N",344,"^G","query"],["^ ","^1M",46,"^1N",415,"^G","query"]]],"~i145",["^ ","^1V",[["^ ","^1M",4,"^1N",345,"^G","handler-fn"],["^ ","^1M",4,"^1N",416,"^G","handler-fn"]],"^29",[["^ ","^1M",17,"^1N",345],["^ ","^1M",17,"^1N",416]],"^3>",[["^ ","^1M",17,"^1N",345,"^G","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",17,"^1N",416,"^G","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2"]],"^2U",[["^ ","^1M",78,"^1N",345,"^G","re-frame.subs/kind"],["^ ","^1M",78,"^1N",416,"^G","re-frame.subs/kind"]],"^2C",[["^ ","^1M",97,"^1N",345,"^G","query-id"],["^ ","^1M",97,"^1N",416,"^G","query-id"]]],"~i146",["^ ","~i9",[["^ ","^1M",0,"^1N",346],["^ ","^1M",3,"^1N",346],["^ ","^1M",3,"^1N",346,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",347],["^ ","^1M",0,"^1N",347],["^ ","^1M",4,"^1N",347,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",347],["^ ","^1M",37,"^1N",347,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",347],["^ ","^1M",140,"^1N",347,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",347,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",347],["^ ","^1M",281,"^1N",347,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",347],["^ ","^1M",297,"^1N",347],["^ ","^1M",380,"^1N",347],["^ ","^1M",423,"^1N",347],["^ ","^1M",476,"^1N",347],["^ ","^1M",519,"^1N",347],["^ ","^1M",576,"^1N",347],["^ ","^1M",600,"^1N",347],["^ ","^1M",600,"^1N",347,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",647,"^1N",347],["^ ","^1M",690,"^1N",347],["^ ","^1M",743,"^1N",347],["^ ","^1M",786,"^1N",347],["^ ","^1M",843,"^1N",347],["^ ","^1M",865,"^1N",347],["^ ","^1M",0,"^1N",348],["^ ","^1M",0,"^1N",348],["^ ","^1M",0,"^1N",348,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",348,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",350],["^ ","^1M",0,"^1N",351],["^ ","^1M",0,"^1N",417],["^ ","^1M",3,"^1N",417],["^ ","^1M",3,"^1N",417,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",418],["^ ","^1M",0,"^1N",418],["^ ","^1M",4,"^1N",418,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",418],["^ ","^1M",37,"^1N",418,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",418],["^ ","^1M",140,"^1N",418,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",418,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",418],["^ ","^1M",281,"^1N",418,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",418],["^ ","^1M",297,"^1N",418],["^ ","^1M",380,"^1N",418],["^ ","^1M",423,"^1N",418],["^ ","^1M",476,"^1N",418],["^ ","^1M",519,"^1N",418],["^ ","^1M",576,"^1N",418],["^ ","^1M",600,"^1N",418],["^ ","^1M",600,"^1N",418,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",647,"^1N",418],["^ ","^1M",690,"^1N",418],["^ ","^1M",743,"^1N",418],["^ ","^1M",786,"^1N",418],["^ ","^1M",843,"^1N",418],["^ ","^1M",865,"^1N",418],["^ ","^1M",0,"^1N",419],["^ ","^1M",0,"^1N",419],["^ ","^1M",0,"^1N",419,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",419,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",421],["^ ","^1M",0,"^1N",422]]],"~i147",["^ ","~i9",[["^ ","^1M",0,"^1N",353],["^ ","^1M",0,"^1N",354],["^ ","^1M",0,"^1N",361],["^ ","^1M",0,"^1N",424],["^ ","^1M",0,"^1N",425],["^ ","^1M",0,"^1N",432]],"^3C",[["^ ","^1M",3,"^1N",353,"^G","re-frame.interop/debug-enabled?"],["^ ","^1M",3,"^1N",424,"^G","re-frame.interop/debug-enabled?"]]],"~i148",["^ ","^1U",[["^ ","^1M",0,"^1N",354],["^ ","^1M",4,"^1N",354,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",355],["^ ","^1M",0,"^1N",355],["^ ","^1M",20,"^1N",355,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",356],["^ ","^1M",0,"^1N",356],["^ ","^1M",25,"^1N",356,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",357],["^ ","^1M",0,"^1N",359],["^ ","^1M",0,"^1N",425],["^ ","^1M",4,"^1N",425,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",426],["^ ","^1M",0,"^1N",426],["^ ","^1M",20,"^1N",426,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",427],["^ ","^1M",0,"^1N",427],["^ ","^1M",25,"^1N",427,"^G","temp__5457__auto__"],["^ ","^1M",0,"^1N",428],["^ ","^1M",0,"^1N",430]],"^1R",[["^ ","^1M",4,"^1N",356,"^G","not-reactive"],["^ ","^1M",4,"^1N",427,"^G","not-reactive"]],"^20",[["^ ","^1M",31,"^1N",354],["^ ","^1M",31,"^1N",425]],"^2Y",[["^ ","^1M",31,"^1N",354,"^G","cljs.core/not-empty"],["^ ","^1M",31,"^1N",425,"^G","cljs.core/not-empty"]],"^28",[["^ ","^1M",51,"^1N",354],["^ ","^1M",51,"^1N",425]],"^3;",[["^ ","^1M",51,"^1N",354,"^G","cljs.core.remove.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",51,"^1N",425,"^G","cljs.core.remove.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1M",98,"^1N",354,"^G","re-frame.interop/ratom?"],["^ ","^1M",98,"^1N",425,"^G","re-frame.interop/ratom?"]],"^2G",[["^ ","^1M",128,"^1N",354,"^G","dynv"],["^ ","^1M",128,"^1N",425,"^G","dynv"]]],"~i149",["^ ","^1V",[["^ ","^1M",0,"^1N",357],["^ ","^1M",62,"^1N",357],["^ ","^1M",165,"^1N",357],["^ ","^1M",0,"^1N",428],["^ ","^1M",62,"^1N",428],["^ ","^1M",165,"^1N",428]],"^1X",[["^ ","^1M",0,"^1N",357,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",0,"^1N",428,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i115",[["^ ","^1M",252,"^1N",357,"^G","not-reactive"],["^ ","^1M",252,"^1N",428,"^G","not-reactive"]]],"~i150",["^ ","~i9",[["^ ","^1M",0,"^1N",363],["^ ","^1M",0,"^1N",434]],"^1V",[["^ ","^1M",3,"^1N",363],["^ ","^1M",18,"^1N",363],["^ ","^1M",3,"^1N",434],["^ ","^1M",18,"^1N",434]],"^1S",[["^ ","^1M",4,"^1N",363,"^G","handler-fn"],["^ ","^1M",4,"^1N",434,"^G","handler-fn"]]],"~i151",["^ ","^1U",[["^ ","^1M",0,"^1N",364],["^ ","^1M",0,"^1N",435]],"^3C",[["^ ","^1M",0,"^1N",364],["^ ","^1M",3,"^1N",364],["^ ","^1M",3,"^1N",364,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",365],["^ ","^1M",0,"^1N",365],["^ ","^1M",4,"^1N",365,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",365],["^ ","^1M",37,"^1N",365,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",365],["^ ","^1M",140,"^1N",365,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",365,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",365],["^ ","^1M",281,"^1N",365,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",365],["^ ","^1M",297,"^1N",365],["^ ","^1M",380,"^1N",365],["^ ","^1M",423,"^1N",365],["^ ","^1M",478,"^1N",365],["^ ","^1M",493,"^1N",365],["^ ","^1M",493,"^1N",365,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",540,"^1N",365],["^ ","^1M",583,"^1N",365],["^ ","^1M",638,"^1N",365],["^ ","^1M",651,"^1N",365],["^ ","^1M",0,"^1N",366],["^ ","^1M",0,"^1N",366],["^ ","^1M",0,"^1N",366,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",366,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",368],["^ ","^1M",0,"^1N",369],["^ ","^1M",0,"^1N",435],["^ ","^1M",3,"^1N",435],["^ ","^1M",3,"^1N",435,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",436],["^ ","^1M",0,"^1N",436],["^ ","^1M",4,"^1N",436,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",436],["^ ","^1M",37,"^1N",436,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",436],["^ ","^1M",140,"^1N",436,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",436,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",436],["^ ","^1M",281,"^1N",436,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",436],["^ ","^1M",297,"^1N",436],["^ ","^1M",380,"^1N",436],["^ ","^1M",423,"^1N",436],["^ ","^1M",478,"^1N",436],["^ ","^1M",493,"^1N",436],["^ ","^1M",493,"^1N",436,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",540,"^1N",436],["^ ","^1M",583,"^1N",436],["^ ","^1M",638,"^1N",436],["^ ","^1M",651,"^1N",436],["^ ","^1M",0,"^1N",437],["^ ","^1M",0,"^1N",437],["^ ","^1M",0,"^1N",437,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",437,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",439],["^ ","^1M",0,"^1N",440]]],"^2X",["^ ","^3C",[["^ ","^1M",0,"^1N",371],["^ ","^1M",69,"^1N",371],["^ ","^1M",0,"^1N",442],["^ ","^1M",69,"^1N",442]],"^25",[["^ ","^1M",7,"^1N",371,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",7,"^1N",442,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"^1W",[["^ ","^1M",174,"^1N",371],["^ ","^1M",175,"^1N",371],["^ ","^1M",282,"^1N",371],["^ ","^1M",174,"^1N",442],["^ ","^1M",175,"^1N",442],["^ ","^1M",282,"^1N",442]],"^3E",[["^ ","^1M",272,"^1N",371,"^G","query-id"],["^ ","^1M",272,"^1N",442,"^G","query-id"]]],"~i153",["^ ","^1U",[["^ ","^1M",0,"^1N",373],["^ ","^1M",0,"^1N",386],["^ ","^1M",0,"^1N",444],["^ ","^1M",0,"^1N",457]],"^1P",[["^ ","^1M",4,"^1N",373,"^G","dyn-vals"],["^ ","^1M",4,"^1N",444,"^G","dyn-vals"]],"^33",[["^ ","^1M",15,"^1N",373],["^ ","^1M",15,"^1N",444]],"^27",[["^ ","^1M",15,"^1N",373,"^G","re-frame.interop/make-reaction"],["^ ","^1M",15,"^1N",444,"^G","re-frame.interop/make-reaction"]],"^23",[["^ ","^1M",46,"^1N",373],["^ ","^1M",0,"^1N",375],["^ ","^1M",46,"^1N",444],["^ ","^1M",0,"^1N",446]],"^2=",[["^ ","^1M",0,"^1N",375],["^ ","^1M",0,"^1N",446]],"^2?",[["^ ","^1M",7,"^1N",375,"^G","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",7,"^1N",446,"^G","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1M",52,"^1N",375,"^G","cljs.core/deref"],["^ ","^1M",52,"^1N",446,"^G","cljs.core/deref"]],"^2F",[["^ ","^1M",68,"^1N",375,"^G","dynv"],["^ ","^1M",68,"^1N",446,"^G","dynv"]]],"~i154",["^ ","^1P",[["^ ","^1M",4,"^1N",378,"^G","sub"],["^ ","^1M",4,"^1N",449,"^G","sub"]],"^33",[["^ ","^1M",10,"^1N",378],["^ ","^1M",10,"^1N",449]],"^27",[["^ ","^1M",10,"^1N",378,"^G","re-frame.interop/make-reaction"],["^ ","^1M",10,"^1N",449,"^G","re-frame.interop/make-reaction"]],"^23",[["^ ","^1M",41,"^1N",378],["^ ","^1M",0,"^1N",380],["^ ","^1M",41,"^1N",449],["^ ","^1M",0,"^1N",451]],"^2=",[["^ ","^1M",0,"^1N",380],["^ ","^1M",4,"^1N",380,"^G","G__22128"],["^ ","^1M",4,"^1N",381,"^G","G__22129"],["^ ","^1M",4,"^1N",382,"^G","G__22130"],["^ ","^1M",15,"^1N",382],["^ ","^1M",15,"^1N",382,"^G","cljs.core/deref"],["^ ","^1M",0,"^1N",383],["^ ","^1M",0,"^1N",383],["^ ","^1M",92,"^1N",383,"^G","G__22128"],["^ ","^1M",101,"^1N",383,"^G","G__22129"],["^ ","^1M",110,"^1N",383,"^G","G__22130"],["^ ","^1M",143,"^1N",383,"^G","G__22128"],["^ ","^1M",152,"^1N",383,"^G","G__22129"],["^ ","^1M",161,"^1N",383,"^G","G__22130"],["^ ","^1M",0,"^1N",451],["^ ","^1M",4,"^1N",451,"^G","G__22132"],["^ ","^1M",4,"^1N",452,"^G","G__22133"],["^ ","^1M",4,"^1N",453,"^G","G__22134"],["^ ","^1M",15,"^1N",453],["^ ","^1M",15,"^1N",453,"^G","cljs.core/deref"],["^ ","^1M",0,"^1N",454],["^ ","^1M",0,"^1N",454],["^ ","^1M",92,"^1N",454,"^G","G__22132"],["^ ","^1M",101,"^1N",454,"^G","G__22133"],["^ ","^1M",110,"^1N",454,"^G","G__22134"],["^ ","^1M",143,"^1N",454,"^G","G__22132"],["^ ","^1M",152,"^1N",454,"^G","G__22133"],["^ ","^1M",161,"^1N",454,"^G","G__22134"]],"^2?",[["^ ","^1M",8,"^1N",383,"^G","handler-fn"],["^ ","^1M",51,"^1N",383,"^G","handler-fn"],["^ ","^1M",122,"^1N",383,"^G","handler-fn"],["^ ","^1M",8,"^1N",454,"^G","handler-fn"],["^ ","^1M",51,"^1N",454,"^G","handler-fn"],["^ ","^1M",122,"^1N",454,"^G","handler-fn"]],"^2F",[["^ ","^1M",15,"^1N",380,"^G","re-frame.db/app-db"],["^ ","^1M",15,"^1N",451,"^G","re-frame.db/app-db"]],"^30",[["^ ","^1M",15,"^1N",381,"^G","query"],["^ ","^1M",15,"^1N",452,"^G","query"]],"~i74",[["^ ","^1M",31,"^1N",382,"^G","dyn-vals"],["^ ","^1M",31,"^1N",453,"^G","dyn-vals"]]],"~i158",["^ ","^1V",[["^ ","^1M",0,"^1N",386],["^ ","^1M",0,"^1N",457]],"^1X",[["^ ","^1M",7,"^1N",386,"^G","re-frame.subs/cache-and-return"],["^ ","^1M",7,"^1N",457,"^G","re-frame.subs/cache-and-return"]],"^1W",[["^ ","^1M",38,"^1N",386,"^G","query"],["^ ","^1M",38,"^1N",457,"^G","query"]],"^2U",[["^ ","^1M",44,"^1N",386,"^G","dynv"],["^ ","^1M",44,"^1N",457,"^G","dynv"]],"^2C",[["^ ","^1M",49,"^1N",386],["^ ","^1M",49,"^1N",457]],"^24",[["^ ","^1M",49,"^1N",386,"^G","re-frame.interop/make-reaction"],["^ ","^1M",49,"^1N",457,"^G","re-frame.interop/make-reaction"]],"^2R",[["^ ","^1M",80,"^1N",386],["^ ","^1M",0,"^1N",388],["^ ","^1M",0,"^1N",388],["^ ","^1M",7,"^1N",388,"^G","cljs.core/deref"],["^ ","^1M",23,"^1N",388],["^ ","^1M",23,"^1N",388,"^G","cljs.core/deref"],["^ ","^1M",80,"^1N",457],["^ ","^1M",0,"^1N",459],["^ ","^1M",0,"^1N",459],["^ ","^1M",7,"^1N",459,"^G","cljs.core/deref"],["^ ","^1M",23,"^1N",459],["^ ","^1M",23,"^1N",459,"^G","cljs.core/deref"]],"^2@",[["^ ","^1M",39,"^1N",388,"^G","sub"],["^ ","^1M",39,"^1N",459,"^G","sub"]]],"~i162",["^ ","~i0",[["^ ","^1M",0,"^1N",469],["^ ","^1M",25,"^1N",473],["^ ","^1M",0,"^1N",474]],"~i7",[["^ ","^1M",0,"^1N",473,"^G","re-frame.subs/map-vals"]]],"~i165",["^ ","~i3",[["^ ","^1M",58,"^1N",473,"^G","f"]],"~i5",[["^ ","^1M",60,"^1N",473,"^G","m"]]],"~i166",["^ ","~i2",[["^ ","^1M",0,"^1N",474]],"~i3",[["^ ","^1M",7,"^1N",474,"^G","cljs.core.into.cljs$core$IFn$_invoke$arity$3"]],"~i8",[["^ ","^1M",52,"^1N",474]],"~i9",[["^ ","^1M",52,"^1N",474,"^G","cljs.core/empty"]],"^3C",[["^ ","^1M",68,"^1N",474,"^G","m"]]],"~i167",["^ ","~i8",[["^ ","^1M",71,"^1N",474]],"~i9",[["^ ","^1M",71,"^1N",474,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$1"]],"^1V",[["^ ","^1M",115,"^1N",474],["^ ","^1M",126,"^1N",474,"^G","p__22167"],["^ ","^1M",0,"^1N",475],["^ ","^1M",0,"^1N",475],["^ ","^1M",4,"^1N",475,"^G","vec__22168"],["^ ","^1M",17,"^1N",475,"^G","p__22167"],["^ ","^1M",8,"^1N",476],["^ ","^1M",8,"^1N",476,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",52,"^1N",476,"^G","vec__22168"],["^ ","^1M",63,"^1N",476],["^ ","^1M",67,"^1N",476],["^ ","^1M",8,"^1N",477],["^ ","^1M",8,"^1N",477,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",52,"^1N",477,"^G","vec__22168"],["^ ","^1M",63,"^1N",477],["^ ","^1M",67,"^1N",477],["^ ","^1M",0,"^1N",478],["^ ","^1M",0,"^1N",478]],"^1S",[["^ ","^1M",4,"^1N",476,"^G","k"]],"^1Q",[["^ ","^1M",4,"^1N",477,"^G","v"]],"^33",[["^ ","^1M",90,"^1N",478,"^G","k"]],"~i28",[["^ ","^1M",92,"^1N",478]],"^2S",[["^ ","^1M",93,"^1N",478,"^G","f"],["^ ","^1M",127,"^1N",478,"^G","f"],["^ ","^1M",164,"^1N",478,"^G","f"]],"^1W",[["^ ","^1M",159,"^1N",478,"^G","v"],["^ ","^1M",176,"^1N",478,"^G","v"]]],"~i168",["^ ","~i8",[["^ ","^1M",4,"^1N",479,"^G","m"]]],"~i170",["^ ","~i0",[["^ ","^1M",0,"^1N",481],["^ ","^1M",28,"^1N",485],["^ ","^1M",0,"^1N",486]],"~i6",[["^ ","^1M",0,"^1N",485,"^G","re-frame.subs/map-signals"]]],"~i173",["^ ","~i3",[["^ ","^1M",64,"^1N",485,"^G","f"]],"~i5",[["^ ","^1M",66,"^1N",485,"^G","signals"]]],"~i174",["^ ","~i2",[["^ ","^1M",0,"^1N",486],["^ ","^1M",0,"^1N",489],["^ ","^1M",0,"^1N",492],["^ ","^1M",0,"^1N",495],["^ ","^1M",0,"^1N",495]]],"~i175",["^ ","~i4",[["^ ","^1M",3,"^1N",486]],"~i5",[["^ ","^1M",3,"^1N",486,"^G","cljs.core/sequential?"]],"^1P",[["^ ","^1M",31,"^1N",486,"^G","signals"]],"^33",[["^ ","^1M",0,"^1N",487]],"^27",[["^ ","^1M",7,"^1N",487,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^1W",[["^ ","^1M",51,"^1N",487,"^G","f"]],"^1[",[["^ ","^1M",53,"^1N",487,"^G","signals"]]],"~i176",["^ ","~i4",[["^ ","^1M",3,"^1N",489]],"~i5",[["^ ","^1M",3,"^1N",489,"^G","cljs.core/map?"]],"^1O",[["^ ","^1M",24,"^1N",489,"^G","signals"]],"^1S",[["^ ","^1M",0,"^1N",490]],"~i20",[["^ ","^1M",7,"^1N",490,"^G","re-frame.subs/map-vals"]],"^2S",[["^ ","^1M",30,"^1N",490,"^G","f"]],"^1W",[["^ ","^1M",32,"^1N",490,"^G","signals"]]],"~i177",["^ ","~i4",[["^ ","^1M",20,"^1N",492]],"~i5",[["^ ","^1M",20,"^1N",492,"^G","re-frame.interop/deref?"]],"^31",[["^ ","^1M",50,"^1N",492,"^G","signals"]],"^1Q",[["^ ","^1M",0,"^1N",493]],"^1R",[["^ ","^1M",8,"^1N",493,"^G","f"],["^ ","^1M",42,"^1N",493,"^G","f"],["^ ","^1M",85,"^1N",493,"^G","f"]],"^29",[["^ ","^1M",74,"^1N",493,"^G","signals"],["^ ","^1M",97,"^1N",493,"^G","signals"]]],"~i180",["^ ","~i0",[["^ ","^1M",0,"^1N",501],["^ ","^1M",23,"^1N",504],["^ ","^1M",0,"^1N",505]],"~i6",[["^ ","^1M",0,"^1N",504,"^G","re-frame.subs/to-seq"]]],"~i182",["^ ","~i3",[["^ ","^1M",54,"^1N",504,"^G","x"]]],"~i183",["^ ","~i2",[["^ ","^1M",0,"^1N",505]],"~i6",[["^ ","^1M",3,"^1N",505]],"~i7",[["^ ","^1M",3,"^1N",505,"^G","cljs.core/sequential?"]],"^1S",[["^ ","^1M",31,"^1N",505,"^G","x"]]],"~i184",["^ ","~i4",[["^ ","^1M",0,"^1N",506,"^G","x"]]],"~i185",["^ ","~i4",[["^ ","^1M",0,"^1N",508],["^ ","^1M",12,"^1N",508,"^G","cljs.core/List"],["^ ","^1M",27,"^1N",508],["^ ","^1M",34,"^1N",508],["^ ","^1M",39,"^1N",508],["^ ","^1M",43,"^1N",508]],"^1O",[["^ ","^1M",32,"^1N",508,"^G","x"]]],"~i187",["^ ","~i0",[["^ ","^1M",0,"^1N",511],["^ ","^1M",36,"^1N",511],["^ ","^1M",0,"^1N",512]],"~i7",[["^ ","^1M",0,"^1N",511,"^G","re-frame.subs/deref-input-signals"]]],"~i188",["^ ","~i3",[["^ ","^1M",80,"^1N",511,"^G","signals"]],"^1U",[["^ ","^1M",88,"^1N",511,"^G","query-id"]]],"~i189",["^ ","~i2",[["^ ","^1M",0,"^1N",512],["^ ","^1M",0,"^1N",513]],"~i8",[["^ ","^1M",4,"^1N",512,"^G","dereffed-signals"]],"^3>",[["^ ","^1M",23,"^1N",512]],"^33",[["^ ","^1M",23,"^1N",512,"^G","re-frame.subs/map-signals"]],"^21",[["^ ","^1M",49,"^1N",512,"^G","cljs.core/deref"]],"^26",[["^ ","^1M",65,"^1N",512,"^G","signals"]]],"~i190",["^ ","~i4",[["^ ","^1M",0,"^1N",513],["^ ","^1M",0,"^1N",516],["^ ","^1M",0,"^1N",519],["^ ","^1M",0,"^1N",522]]],"~i191",["^ ","~i6",[["^ ","^1M",3,"^1N",513]],"~i7",[["^ ","^1M",3,"^1N",513,"^G","cljs.core/sequential?"]],"^1S",[["^ ","^1M",31,"^1N",513,"^G","signals"]],"^45",[["^ ","^1M",0,"^1N",514]],"^2S",[["^ ","^1M",0,"^1N",514,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^1[",[["^ ","^1M",44,"^1N",514,"^G","cljs.core/deref"]],"^22",[["^ ","^1M",60,"^1N",514,"^G","signals"]]],"~i192",["^ ","~i6",[["^ ","^1M",3,"^1N",516]],"~i7",[["^ ","^1M",3,"^1N",516,"^G","cljs.core/map?"]],"^31",[["^ ","^1M",24,"^1N",516,"^G","signals"]],"^1Q",[["^ ","^1M",0,"^1N",517]],"^1R",[["^ ","^1M",0,"^1N",517,"^G","re-frame.subs/map-vals"]],"^1W",[["^ ","^1M",23,"^1N",517,"^G","cljs.core/deref"]],"^2U",[["^ ","^1M",39,"^1N",517,"^G","signals"]]],"~i193",["^ ","~i6",[["^ ","^1M",20,"^1N",519]],"~i7",[["^ ","^1M",20,"^1N",519,"^G","re-frame.interop/deref?"]],"^1X",[["^ ","^1M",50,"^1N",519,"^G","signals"]],"~i23",[["^ ","^1M",0,"^1N",520]],"^29",[["^ ","^1M",0,"^1N",520,"^G","cljs.core/deref"]],"^1T",[["^ ","^1M",16,"^1N",520,"^G","signals"]]],"~i194",["^ ","^31",[["^ ","^1M",0,"^1N",522],["^ ","^1M",62,"^1N",522],["^ ","^1M",167,"^1N",522],["^ ","^1M",207,"^1N",522]],"^1V",[["^ ","^1M",0,"^1N",522,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"^2V",[["^ ","^1M",198,"^1N",522,"^G","query-id"]],"^2K",[["^ ","^1M",247,"^1N",522,"^G","signals"]]],"~i195",["^ ","~i4",[["^ ","^1M",0,"^1N",528],["^ ","^1M",3,"^1N",528],["^ ","^1M",3,"^1N",528,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",529],["^ ","^1M",0,"^1N",529],["^ ","^1M",4,"^1N",529,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",529],["^ ","^1M",37,"^1N",529,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",529],["^ ","^1M",140,"^1N",529,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",529,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",529],["^ ","^1M",281,"^1N",529,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",529],["^ ","^1M",297,"^1N",529],["^ ","^1M",380,"^1N",529],["^ ","^1M",423,"^1N",529],["^ ","^1M",476,"^1N",529],["^ ","^1M",519,"^1N",529],["^ ","^1M",739,"^1N",529],["^ ","^1M",739,"^1N",529,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",786,"^1N",529],["^ ","^1M",829,"^1N",529],["^ ","^1M",882,"^1N",529],["^ ","^1M",925,"^1N",529],["^ ","^1M",1143,"^1N",529],["^ ","^1M",0,"^1N",530],["^ ","^1M",0,"^1N",530],["^ ","^1M",0,"^1N",530,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",530,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",532],["^ ","^1M",0,"^1N",533]],"^3;",[["^ ","^1M",589,"^1N",529],["^ ","^1M",995,"^1N",529]],"^2=",[["^ ","^1M",589,"^1N",529,"^G","cljs.core.doall.cljs$core$IFn$_invoke$arity$1"],["^ ","^1M",995,"^1N",529,"^G","cljs.core.doall.cljs$core$IFn$_invoke$arity$1"]],"^2:",[["^ ","^1M",635,"^1N",529],["^ ","^1M",1041,"^1N",529]],"^2;",[["^ ","^1M",635,"^1N",529,"^G","re-frame.subs/to-seq"],["^ ","^1M",1041,"^1N",529,"^G","re-frame.subs/to-seq"]],"^2Z",[["^ ","^1M",656,"^1N",529],["^ ","^1M",1062,"^1N",529]],"~i63",[["^ ","^1M",656,"^1N",529,"^G","re-frame.subs/map-signals"],["^ ","^1M",1062,"^1N",529,"^G","re-frame.subs/map-signals"]],"~i75",[["^ ","^1M",682,"^1N",529,"^G","re-frame.interop/reagent-id"],["^ ","^1M",1088,"^1N",529,"^G","re-frame.interop/reagent-id"]],"~i86",[["^ ","^1M",710,"^1N",529,"^G","signals"],["^ ","^1M",1116,"^1N",529,"^G","signals"]]],"~i196",["^ ","~i4",[["^ ","^1M",0,"^1N",535,"^G","dereffed-signals"]]],"~i199",["^ ","~i0",[["^ ","^1M",0,"^1N",537],["^ ","^1M",0,"^1N",537],["^ ","^1M",24,"^1N",625],["^ ","^1M",56,"^1N",625,"^G","var_args"],["^ ","^1M",0,"^1N",626],["^ ","^1M",0,"^1N",626],["^ ","^1M",4,"^1N",626,"^G","args__4534__auto__"],["^ ","^1M",25,"^1N",626],["^ ","^1M",0,"^1N",627],["^ ","^1M",0,"^1N",627],["^ ","^1M",4,"^1N",627,"^G","len__4531__auto__"],["^ ","^1M",30,"^1N",627],["^ ","^1M",30,"^1N",627],["^ ","^1M",0,"^1N",628],["^ ","^1M",0,"^1N",628],["^ ","^1M",4,"^1N",628,"^G","i__4532__auto__"],["^ ","^1M",28,"^1N",628],["^ ","^1M",0,"^1N",630],["^ ","^1M",0,"^1N",630],["^ ","^1M",3,"^1N",630],["^ ","^1M",4,"^1N",630,"^G","i__4532__auto__"],["^ ","^1M",28,"^1N",630,"^G","len__4531__auto__"],["^ ","^1M",0,"^1N",631],["^ ","^1M",0,"^1N",631],["^ ","^1M",0,"^1N",631,"^G","args__4534__auto__"],["^ ","^1M",24,"^1N",631],["^ ","^1M",25,"^1N",631],["^ ","^1M",35,"^1N",631,"^G","i__4532__auto__"],["^ ","^1M",0,"^1N",633],["^ ","^1M",15,"^1N",633],["^ ","^1M",16,"^1N",633,"^G","i__4532__auto__"],["^ ","^1M",40,"^1N",633],["^ ","^1M",0,"^1N",637],["^ ","^1M",0,"^1N",641],["^ ","^1M",4,"^1N",641,"^G","argseq__4535__auto__"],["^ ","^1M",27,"^1N",641],["^ ","^1M",29,"^1N",641],["^ ","^1M",30,"^1N",641],["^ ","^1M",36,"^1N",641],["^ ","^1M",36,"^1N",641,"^G","args__4534__auto__"],["^ ","^1M",64,"^1N",641],["^ ","^1M",64,"^1N",641],["^ ","^1M",69,"^1N",641,"^G","cljs.core/IndexedSeq"],["^ ","^1M",90,"^1N",641],["^ ","^1M",90,"^1N",641,"^G","args__4534__auto__"],["^ ","^1M",115,"^1N",641],["^ ","^1M",120,"^1N",641],["^ ","^1M",124,"^1N",641],["^ ","^1M",131,"^1N",641],["^ ","^1M",0,"^1N",642],["^ ","^1M",0,"^1N",642],["^ ","^1M",7,"^1N",642,"^G","re-frame.subs/reg-sub"],["^ ","^1M",66,"^1N",642],["^ ","^1M",67,"^1N",642],["^ ","^1M",77,"^1N",642],["^ ","^1M",83,"^1N",642,"^G","argseq__4535__auto__"],["^ ","^1M",0,"^1N",645],["^ ","^1M",0,"^1N",645],["^ ","^1M",0,"^1N",645],["^ ","^1M",0,"^1N",645,"^G","re-frame.subs/reg-sub"],["^ ","^1M",61,"^1N",645],["^ ","^1M",0,"^1N",646],["^ ","^1M",0,"^1N",878],["^ ","^1M",0,"^1N",878],["^ ","^1M",0,"^1N",878,"^G","re-frame.subs/reg-sub"],["^ ","^1M",48,"^1N",878],["^ ","^1M",0,"^1N",880],["^ ","^1M",0,"^1N",881],["^ ","^1M",0,"^1N",881],["^ ","^1M",0,"^1N",881,"^G","re-frame.subs/reg-sub"],["^ ","^1M",42,"^1N",881],["^ ","^1M",53,"^1N",881,"^G","seq22176"],["^ ","^1M",0,"^1N",882],["^ ","^1M",0,"^1N",882],["^ ","^1M",4,"^1N",882,"^G","G__22177"],["^ ","^1M",15,"^1N",882],["^ ","^1M",15,"^1N",882,"^G","cljs.core/first"],["^ ","^1M",31,"^1N",882,"^G","seq22176"],["^ ","^1M",4,"^1N",883,"^G","seq22176"],["^ ","^1M",19,"^1N",883],["^ ","^1M",19,"^1N",883,"^G","cljs.core/next"],["^ ","^1M",34,"^1N",883,"^G","seq22176"],["^ ","^1M",0,"^1N",884],["^ ","^1M",0,"^1N",884],["^ ","^1M",4,"^1N",884,"^G","self__4518__auto__"],["^ ","^1M",25,"^1N",884],["^ ","^1M",0,"^1N",885],["^ ","^1M",0,"^1N",885],["^ ","^1M",7,"^1N",885,"^G","self__4518__auto__"],["^ ","^1M",63,"^1N",885,"^G","G__22177"],["^ ","^1M",72,"^1N",885,"^G","seq22176"],["^ ","^1M",0,"^1N",888]],"~i6",[["^ ","^1M",0,"^1N",625,"^G","re-frame.subs/reg-sub"]]],"~i286",["^ ","~i3",[["^ ","^1M",72,"^1N",645,"^G","query-id"]],"^1X",[["^ ","^1M",81,"^1N",645,"^G","args"]]],"~i287",["^ ","~i2",[["^ ","^1M",0,"^1N",646],["^ ","^1M",0,"^1N",756]],"~i8",[["^ ","^1M",4,"^1N",646,"^G","computation-fn"]],"^4J",[["^ ","^1M",21,"^1N",646]],"^29",[["^ ","^1M",21,"^1N",646,"^G","cljs.core/last"]],"^2S",[["^ ","^1M",36,"^1N",646,"^G","args"]]],"~i288",["^ ","~i8",[["^ ","^1M",4,"^1N",647,"^G","input-args"]],"^4J",[["^ ","^1M",17,"^1N",647]],"^29",[["^ ","^1M",17,"^1N",647,"^G","cljs.core/butlast"]],"^1Y",[["^ ","^1M",35,"^1N",647,"^G","args"]]],"~i289",["^ ","~i8",[["^ ","^1M",4,"^1N",648,"^G","err-header"]],"^4J",[["^ ","^1M",17,"^1N",648],["^ ","^1M",18,"^1N",648],["^ ","^1M",97,"^1N",648]],"^2O",[["^ ","^1M",87,"^1N",648,"^G","query-id"]]],"~i290",["^ ","~i8",[["^ ","^1M",4,"^1N",649,"^G","inputs-fn"]],"^4J",[["^ ","^1M",16,"^1N",649],["^ ","^1M",33,"^1N",649,"^G","G__22178"],["^ ","^1M",0,"^1N",650],["^ ","^1M",0,"^1N",650],["^ ","^1M",8,"^1N",650,"^G","G__22178"],["^ ","^1M",5,"^1N",651],["^ ","^1M",5,"^1N",677],["^ ","^1M",5,"^1N",687]],"^2S",[["^ ","^1M",44,"^1N",649]],"^1T",[["^ ","^1M",44,"^1N",649,"^G","cljs.core/count"]],"^2Y",[["^ ","^1M",60,"^1N",649,"^G","input-args"]]],"~i292",["^ ","^27",[["^ ","^1M",0,"^1N",652],["^ ","^1M",0,"^1N",656],["^ ","^1M",0,"^1N",659]]],"~i293",["^ ","^1W",[["^ ","^1M",29,"^1N",655,"^G","_"]],"^2W",[["^ ","^1M",0,"^1N",656,"^G","re-frame.db/app-db"]]],"~i294",["^ ","^1W",[["^ ","^1M",29,"^1N",658,"^G","_"],["^ ","^1M",20,"^1N",661,"^G","_"],["^ ","^1M",29,"^1N",664,"^G","_"],["^ ","^1M",29,"^1N",666,"^G","_"]],"^1[",[["^ ","^1M",31,"^1N",658,"^G","_"],["^ ","^1M",22,"^1N",661,"^G","_"],["^ ","^1M",31,"^1N",666,"^G","_"]],"^2Y",[["^ ","^1M",0,"^1N",659,"^G","re-frame.db/app-db"]]],"~i297",["^ ","^27",[["^ ","^1M",0,"^1N",678],["^ ","^1M",0,"^1N",679]],"^1[",[["^ ","^1M",4,"^1N",678,"^G","f"]],"^20",[["^ ","^1M",8,"^1N",678]],"^2Y",[["^ ","^1M",8,"^1N",678,"^G","cljs.core/first"]],"^2C",[["^ ","^1M",24,"^1N",678,"^G","input-args"]]],"~i298",["^ ","^2S",[["^ ","^1M",0,"^1N",679],["^ ","^1M",0,"^1N",680],["^ ","^1M",0,"^1N",681]],"^22",[["^ ","^1M",3,"^1N",679]],"~i40",[["^ ","^1M",3,"^1N",679,"^G","cljs.core/fn?"]],"^26",[["^ ","^1M",23,"^1N",679,"^G","f"]]],"~i299",["^ ","^1W",[["^ ","^1M",0,"^1N",681],["^ ","^1M",62,"^1N",681],["^ ","^1M",178,"^1N",681]],"^1Y",[["^ ","^1M",0,"^1N",681,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"^3;",[["^ ","^1M",167,"^1N",681,"^G","err-header"]],"^2M",[["^ ","^1M",233,"^1N",681,"^G","f"]]],"~i300",["^ ","^2S",[["^ ","^1M",0,"^1N",684,"^G","f"]]],"~i303",["^ ","^27",[["^ ","^1M",0,"^1N",688],["^ ","^1M",4,"^1N",688,"^G","vec__22179"],["^ ","^1M",13,"^1N",689],["^ ","^1M",13,"^1N",689,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",57,"^1N",689,"^G","vec__22179"],["^ ","^1M",68,"^1N",689],["^ ","^1M",72,"^1N",689],["^ ","^1M",10,"^1N",690],["^ ","^1M",10,"^1N",690,"^G","cljs.core.nth.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",54,"^1N",690,"^G","vec__22179"],["^ ","^1M",65,"^1N",690],["^ ","^1M",69,"^1N",690],["^ ","^1M",0,"^1N",691]],"^2W",[["^ ","^1M",4,"^1N",689,"^G","marker"]],"^23",[["^ ","^1M",4,"^1N",690,"^G","vec"]],"^28",[["^ ","^1M",17,"^1N",688,"^G","input-args"]]],"~i304",["^ ","^2S",[["^ ","^1M",0,"^1N",691],["^ ","^1M",0,"^1N",692],["^ ","^1M",0,"^1N",693]],"^22",[["^ ","^1M",3,"^1N",691],["^ ","^1M",48,"^1N",691]],"^50",[["^ ","^1M",3,"^1N",691,"^G","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"]],"^28",[["^ ","^1M",96,"^1N",691,"^G","marker"]]],"~i305",["^ ","^1W",[["^ ","^1M",0,"^1N",693],["^ ","^1M",62,"^1N",693],["^ ","^1M",178,"^1N",693]],"^1Y",[["^ ","^1M",0,"^1N",693,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"^3;",[["^ ","^1M",167,"^1N",693,"^G","err-header"]],"~i79",[["^ ","^1M",199,"^1N",693,"^G","marker"]]],"~i306",["^ ","^2S",[["^ ","^1M",0,"^1N",696],["^ ","^1M",0,"^1N",700],["^ ","^1M",0,"^1N",703]]],"~i307",["^ ","^1[",[["^ ","^1M",41,"^1N",699,"^G","_"]],"^2Y",[["^ ","^1M",0,"^1N",700]],"^2U",[["^ ","^1M",7,"^1N",700,"^G","re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1"]],"^3;",[["^ ","^1M",61,"^1N",700,"^G","vec"]]],"~i308",["^ ","^1[",[["^ ","^1M",41,"^1N",702,"^G","_"],["^ ","^1M",32,"^1N",705,"^G","_"],["^ ","^1M",41,"^1N",708,"^G","_"],["^ ","^1M",41,"^1N",710,"^G","_"]],"^20",[["^ ","^1M",43,"^1N",702,"^G","_"],["^ ","^1M",34,"^1N",705,"^G","_"],["^ ","^1M",43,"^1N",710,"^G","_"]],"^21",[["^ ","^1M",0,"^1N",703]],"^22",[["^ ","^1M",7,"^1N",703,"^G","re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1"]],"^2?",[["^ ","^1M",61,"^1N",703,"^G","vec"]]],"~i311",["^ ","^3>",[["^ ","^1M",0,"^1N",722],["^ ","^1M",0,"^1N",725]],"^1W",[["^ ","^1M",4,"^1N",722,"^G","pairs"]],"^22",[["^ ","^1M",12,"^1N",722],["^ ","^1M",62,"^1N",722]],"^50",[["^ ","^1M",12,"^1N",722,"^G","cljs.core.partition.cljs$core$IFn$_invoke$arity$2"]],"^2E",[["^ ","^1M",66,"^1N",722,"^G","input-args"]]],"~i312",["^ ","^1W",[["^ ","^1M",4,"^1N",723,"^G","markers"]],"^22",[["^ ","^1M",14,"^1N",723]],"^50",[["^ ","^1M",14,"^1N",723,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1M",58,"^1N",723,"^G","cljs.core/first"]],"^2B",[["^ ","^1M",74,"^1N",723,"^G","pairs"]]],"~i313",["^ ","^1W",[["^ ","^1M",4,"^1N",724,"^G","vecs"]],"^22",[["^ ","^1M",11,"^1N",724]],"^50",[["^ ","^1M",11,"^1N",724,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1M",55,"^1N",724,"^G","cljs.core/last"]],"^2?",[["^ ","^1M",70,"^1N",724,"^G","pairs"]]],"~i314",["^ ","^27",[["^ ","^1M",0,"^1N",725],["^ ","^1M",0,"^1N",726],["^ ","^1M",0,"^1N",727]],"^2U",[["^ ","^1M",3,"^1N",725]],"^2C",[["^ ","^1M",5,"^1N",725],["^ ","^1M",28,"^1N",725],["^ ","^1M",109,"^1N",725]],"^24",[["^ ","^1M",5,"^1N",725,"^G","cljs.core/every?"]],"^2R",[["^ ","^1M",177,"^1N",725,"^G","markers"]],"^2@",[["^ ","^1M",191,"^1N",725]],"^30",[["^ ","^1M",191,"^1N",725,"^G","cljs.core/every?"]],"^3[",[["^ ","^1M",214,"^1N",725,"^G","cljs.core/vector?"]],"~i82",[["^ ","^1M",238,"^1N",725,"^G","vecs"]]],"~i315",["^ ","^2S",[["^ ","^1M",0,"^1N",727],["^ ","^1M",62,"^1N",727],["^ ","^1M",178,"^1N",727]],"^1T",[["^ ","^1M",0,"^1N",727,"^G","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic"]],"~i45",[["^ ","^1M",167,"^1N",727,"^G","err-header"]],"~i98",[["^ ","^1M",220,"^1N",727,"^G","pairs"]]],"~i316",["^ ","^27",[["^ ","^1M",0,"^1N",730],["^ ","^1M",0,"^1N",734],["^ ","^1M",0,"^1N",737]]],"~i317",["^ ","^1W",[["^ ","^1M",41,"^1N",733,"^G","_"]],"^2W",[["^ ","^1M",0,"^1N",734]],"^20",[["^ ","^1M",7,"^1N",734,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^22",[["^ ","^1M",51,"^1N",734,"^G","re-frame.subs/subscribe"]],"^2?",[["^ ","^1M",75,"^1N",734,"^G","vecs"]]],"~i318",["^ ","^1W",[["^ ","^1M",41,"^1N",736,"^G","_"],["^ ","^1M",32,"^1N",739,"^G","_"],["^ ","^1M",41,"^1N",742,"^G","_"],["^ ","^1M",41,"^1N",744,"^G","_"]],"^1[",[["^ ","^1M",43,"^1N",736,"^G","_"],["^ ","^1M",34,"^1N",739,"^G","_"],["^ ","^1M",43,"^1N",744,"^G","_"]],"^2Y",[["^ ","^1M",0,"^1N",737]],"^2U",[["^ ","^1M",7,"^1N",737,"^G","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"^23",[["^ ","^1M",51,"^1N",737,"^G","re-frame.subs/subscribe"]],"^2D",[["^ ","^1M",75,"^1N",737,"^G","vecs"]]],"~i319",["^ ","~i4",[["^ ","^1M",0,"^1N",756]],"~i5",[["^ ","^1M",7,"^1N",756,"^G","re-frame.registrar/register-handler"]]],"~i320",["^ ","~i6",[["^ ","^1M",43,"^1N",756,"^G","re-frame.subs/kind"]]],"~i321",["^ ","~i6",[["^ ","^1M",62,"^1N",756,"^G","query-id"]]],"~i322",["^ ","~i6",[["^ ","^1M",71,"^1N",756],["^ ","^1M",0,"^1N",760],["^ ","^1M",0,"^1N",810]]],"~i323",["^ ","^1O",[["^ ","^1M",50,"^1N",759,"^G","db"]],"^1V",[["^ ","^1M",53,"^1N",759,"^G","query-vec"]]],"~i324",["^ ","~i9",[["^ ","^1M",0,"^1N",760],["^ ","^1M",0,"^1N",805]],"^3C",[["^ ","^1M",4,"^1N",760,"^G","subscriptions"]],"^2S",[["^ ","^1M",20,"^1N",760]],"^1T",[["^ ","^1M",21,"^1N",760,"^G","inputs-fn"],["^ ","^1M",63,"^1N",760,"^G","inputs-fn"],["^ ","^1M",116,"^1N",760,"^G","inputs-fn"]],"^50",[["^ ","^1M",103,"^1N",760,"^G","query-vec"],["^ ","^1M",136,"^1N",760,"^G","query-vec"]]],"~i325",["^ ","^3C",[["^ ","^1M",4,"^1N",761,"^G","reaction-id"]],"^2S",[["^ ","^1M",18,"^1N",761],["^ ","^1M",63,"^1N",761]],"^1T",[["^ ","^1M",18,"^1N",761,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i326",["^ ","^3C",[["^ ","^1M",4,"^1N",762,"^G","reaction"]],"^2S",[["^ ","^1M",15,"^1N",762]],"^1T",[["^ ","^1M",15,"^1N",762,"^G","re-frame.interop/make-reaction"]]],"~i327",["^ ","^1W",[["^ ","^1M",46,"^1N",762],["^ ","^1M",0,"^1N",764]]],"~i328",["^ ","^1[",[["^ ","^1M",0,"^1N",764],["^ ","^1M",3,"^1N",764],["^ ","^1M",3,"^1N",764,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",765],["^ ","^1M",4,"^1N",765,"^G","*current-trace*22182"],["^ ","^1M",37,"^1N",765,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",766],["^ ","^1M",0,"^1N",766],["^ ","^1M",0,"^1N",766,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",766],["^ ","^1M",43,"^1N",766,"^G","re-frame.trace/start-trace"],["^ ","^1M",70,"^1N",766],["^ ","^1M",113,"^1N",766],["^ ","^1M",219,"^1N",766],["^ ","^1M",279,"^1N",766],["^ ","^1M",336,"^1N",766],["^ ","^1M",389,"^1N",766],["^ ","^1M",432,"^1N",766],["^ ","^1M",502,"^1N",766],["^ ","^1M",562,"^1N",766],["^ ","^1M",562,"^1N",766,"^G","cljs.core/deref"],["^ ","^1M",0,"^1N",768],["^ ","^1M",4,"^1N",768],["^ ","^1M",4,"^1N",768],["^ ","^1M",8,"^1N",768],["^ ","^1M",10,"^1N",780],["^ ","^1M",10,"^1N",780],["^ ","^1M",13,"^1N",780],["^ ","^1M",13,"^1N",780,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",781],["^ ","^1M",0,"^1N",781],["^ ","^1M",4,"^1N",781,"^G","end__21987__auto__"],["^ ","^1M",31,"^1N",781],["^ ","^1M",31,"^1N",781,"^G","re-frame.interop/now"],["^ ","^1M",4,"^1N",782,"^G","duration__21988__auto__"],["^ ","^1M",36,"^1N",782],["^ ","^1M",37,"^1N",782,"^G","end__21987__auto__"],["^ ","^1M",64,"^1N",782],["^ ","^1M",64,"^1N",782],["^ ","^1M",149,"^1N",782,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",783],["^ ","^1M",0,"^1N",783],["^ ","^1M",0,"^1N",783,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",51,"^1N",783,"^G","re-frame.trace/traces"],["^ ","^1M",73,"^1N",783,"^G","cljs.core/conj"],["^ ","^1M",88,"^1N",783],["^ ","^1M",88,"^1N",783,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",141,"^1N",783,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",182,"^1N",783],["^ ","^1M",243,"^1N",783,"^G","duration__21988__auto__"],["^ ","^1M",323,"^1N",783],["^ ","^1M",374,"^1N",783],["^ ","^1M",374,"^1N",783,"^G","re-frame.interop/now"],["^ ","^1M",0,"^1N",785],["^ ","^1M",0,"^1N",785,"^G","re-frame.trace/run-tracing-callbacks!"],["^ ","^1M",43,"^1N",785,"^G","end__21987__auto__"],["^ ","^1M",0,"^1N",787],["^ ","^1M",11,"^1N",788],["^ ","^1M",11,"^1N",788],["^ ","^1M",11,"^1N",788,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",54,"^1N",788,"^G","*current-trace*22182"],["^ ","^1M",0,"^1N",790]],"^4M",[["^ ","^1M",177,"^1N",766]],"^2[",[["^ ","^1M",177,"^1N",766,"^G","re-frame.utils/first-in-vector"]],"~i80",[["^ ","^1M",208,"^1N",766,"^G","query-vec"]]],"~i330",["^ ","~i76",[["^ ","^1M",492,"^1N",766,"^G","query-vec"]]],"~i331",["^ ","^2A",[["^ ","^1M",578,"^1N",766,"^G","reaction-id"]]],"~i332",["^ ","^2D",[["^ ","^1M",8,"^1N",768],["^ ","^1M",0,"^1N",772],["^ ","^1M",0,"^1N",790],["^ ","^1M",0,"^1N",794]],"^2R",[["^ ","^1M",12,"^1N",768,"^G","subscription"],["^ ","^1M",4,"^1N",790,"^G","subscription"]],"~i70",[["^ ","^1M",27,"^1N",768],["^ ","^1M",44,"^1N",768,"^G","G__22183"],["^ ","^1M",4,"^1N",769,"^G","G__22184"],["^ ","^1M",0,"^1N",770],["^ ","^1M",0,"^1N",770],["^ ","^1M",100,"^1N",770,"^G","G__22183"],["^ ","^1M",109,"^1N",770,"^G","G__22184"],["^ ","^1M",146,"^1N",770,"^G","G__22183"],["^ ","^1M",155,"^1N",770,"^G","G__22184"],["^ ","^1M",19,"^1N",790],["^ ","^1M",36,"^1N",790,"^G","G__22185"],["^ ","^1M",4,"^1N",791,"^G","G__22186"],["^ ","^1M",0,"^1N",792],["^ ","^1M",0,"^1N",792],["^ ","^1M",100,"^1N",792,"^G","G__22185"],["^ ","^1M",109,"^1N",792,"^G","G__22186"],["^ ","^1M",146,"^1N",792,"^G","G__22185"],["^ ","^1M",155,"^1N",792,"^G","G__22186"]],"^2<",[["^ ","^1M",8,"^1N",770,"^G","computation-fn"],["^ ","^1M",55,"^1N",770,"^G","computation-fn"],["^ ","^1M",121,"^1N",770,"^G","computation-fn"],["^ ","^1M",8,"^1N",792,"^G","computation-fn"],["^ ","^1M",55,"^1N",792,"^G","computation-fn"],["^ ","^1M",121,"^1N",792,"^G","computation-fn"]],"^4O",[["^ ","^1M",55,"^1N",768],["^ ","^1M",47,"^1N",790]],"~i87",[["^ ","^1M",55,"^1N",768,"^G","re-frame.subs/deref-input-signals"],["^ ","^1M",47,"^1N",790,"^G","re-frame.subs/deref-input-signals"]],"~i107",[["^ ","^1M",89,"^1N",768,"^G","subscriptions"],["^ ","^1M",81,"^1N",790,"^G","subscriptions"]],"^38",[["^ ","^1M",103,"^1N",768,"^G","query-id"],["^ ","^1M",95,"^1N",790,"^G","query-id"]],"^3D",[["^ ","^1M",15,"^1N",769,"^G","query-vec"],["^ ","^1M",15,"^1N",791,"^G","query-vec"]]],"~i333",["^ ","^2O",[["^ ","^1M",0,"^1N",772],["^ ","^1M",3,"^1N",772],["^ ","^1M",3,"^1N",772,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",773],["^ ","^1M",0,"^1N",773],["^ ","^1M",4,"^1N",773,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",773],["^ ","^1M",37,"^1N",773,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",773],["^ ","^1M",140,"^1N",773,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",773,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",773],["^ ","^1M",281,"^1N",773,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",773],["^ ","^1M",297,"^1N",773],["^ ","^1M",380,"^1N",773],["^ ","^1M",423,"^1N",773],["^ ","^1M",476,"^1N",773],["^ ","^1M",519,"^1N",773],["^ ","^1M",604,"^1N",773],["^ ","^1M",604,"^1N",773,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",651,"^1N",773],["^ ","^1M",694,"^1N",773],["^ ","^1M",747,"^1N",773],["^ ","^1M",790,"^1N",773],["^ ","^1M",873,"^1N",773],["^ ","^1M",0,"^1N",774],["^ ","^1M",0,"^1N",774],["^ ","^1M",0,"^1N",774,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",774,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",776],["^ ","^1M",0,"^1N",777],["^ ","^1M",0,"^1N",794],["^ ","^1M",3,"^1N",794],["^ ","^1M",3,"^1N",794,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",795],["^ ","^1M",0,"^1N",795],["^ ","^1M",4,"^1N",795,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",795],["^ ","^1M",37,"^1N",795,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",795],["^ ","^1M",140,"^1N",795,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",795,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",795],["^ ","^1M",281,"^1N",795,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",795],["^ ","^1M",297,"^1N",795],["^ ","^1M",380,"^1N",795],["^ ","^1M",423,"^1N",795],["^ ","^1M",476,"^1N",795],["^ ","^1M",519,"^1N",795],["^ ","^1M",604,"^1N",795],["^ ","^1M",604,"^1N",795,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",651,"^1N",795],["^ ","^1M",694,"^1N",795],["^ ","^1M",747,"^1N",795],["^ ","^1M",790,"^1N",795],["^ ","^1M",873,"^1N",795],["^ ","^1M",0,"^1N",796],["^ ","^1M",0,"^1N",796],["^ ","^1M",0,"^1N",796,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",796,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",798],["^ ","^1M",0,"^1N",799]],"~i88",[["^ ","^1M",573,"^1N",773,"^G","subscription"],["^ ","^1M",844,"^1N",773,"^G","subscription"],["^ ","^1M",573,"^1N",795,"^G","subscription"],["^ ","^1M",844,"^1N",795,"^G","subscription"]]],"~i334",["^ ","^2O",[["^ ","^1M",0,"^1N",779,"^G","subscription"],["^ ","^1M",0,"^1N",801,"^G","subscription"]]],"~i336",["^ ","^1U",[["^ ","^1M",0,"^1N",805]],"^31",[["^ ","^1M",0,"^1N",805,"^G","cljs.core/reset!"]],"^1S",[["^ ","^1M",22,"^1N",805,"^G","reaction-id"]],"^1W",[["^ ","^1M",34,"^1N",805]],"^1Y",[["^ ","^1M",34,"^1N",805,"^G","re-frame.interop/reagent-id"]],"^24",[["^ ","^1M",62,"^1N",805,"^G","reaction"]]],"~i337",["^ ","^1U",[["^ ","^1M",0,"^1N",807,"^G","reaction"]]],"~i338",["^ ","^1O",[["^ ","^1M",50,"^1N",809,"^G","db"],["^ ","^1M",41,"^1N",861,"^G","db"],["^ ","^1M",50,"^1N",864,"^G","db"],["^ ","^1M",50,"^1N",866,"^G","db"]],"^1V",[["^ ","^1M",53,"^1N",809,"^G","query-vec"],["^ ","^1M",44,"^1N",861,"^G","query-vec"],["^ ","^1M",53,"^1N",864,"^G","query-vec"],["^ ","^1M",53,"^1N",866,"^G","query-vec"]],"^4J",[["^ ","^1M",63,"^1N",809,"^G","dyn-vec"],["^ ","^1M",54,"^1N",861,"^G","dyn-vec"],["^ ","^1M",63,"^1N",866,"^G","dyn-vec"]]],"~i339",["^ ","~i9",[["^ ","^1M",0,"^1N",810],["^ ","^1M",0,"^1N",857]],"^3C",[["^ ","^1M",4,"^1N",810,"^G","subscriptions"]],"^2S",[["^ ","^1M",20,"^1N",810]],"^1T",[["^ ","^1M",21,"^1N",810,"^G","inputs-fn"],["^ ","^1M",63,"^1N",810,"^G","inputs-fn"],["^ ","^1M",124,"^1N",810,"^G","inputs-fn"]],"^50",[["^ ","^1M",103,"^1N",810,"^G","query-vec"],["^ ","^1M",144,"^1N",810,"^G","query-vec"]],"^2B",[["^ ","^1M",113,"^1N",810,"^G","dyn-vec"],["^ ","^1M",154,"^1N",810,"^G","dyn-vec"]]],"~i340",["^ ","^3C",[["^ ","^1M",4,"^1N",811,"^G","reaction-id"]],"^2S",[["^ ","^1M",18,"^1N",811],["^ ","^1M",63,"^1N",811]],"^1T",[["^ ","^1M",18,"^1N",811,"^G","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i341",["^ ","^3C",[["^ ","^1M",4,"^1N",812,"^G","reaction"]],"^2S",[["^ ","^1M",15,"^1N",812]],"^1T",[["^ ","^1M",15,"^1N",812,"^G","re-frame.interop/make-reaction"]]],"~i342",["^ ","^1W",[["^ ","^1M",46,"^1N",812],["^ ","^1M",0,"^1N",814]]],"~i343",["^ ","^1[",[["^ ","^1M",0,"^1N",814],["^ ","^1M",3,"^1N",814],["^ ","^1M",3,"^1N",814,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",815],["^ ","^1M",4,"^1N",815,"^G","*current-trace*22191"],["^ ","^1M",37,"^1N",815,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",816],["^ ","^1M",0,"^1N",816],["^ ","^1M",0,"^1N",816,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",816],["^ ","^1M",43,"^1N",816,"^G","re-frame.trace/start-trace"],["^ ","^1M",70,"^1N",816],["^ ","^1M",113,"^1N",816],["^ ","^1M",219,"^1N",816],["^ ","^1M",279,"^1N",816],["^ ","^1M",336,"^1N",816],["^ ","^1M",389,"^1N",816],["^ ","^1M",432,"^1N",816],["^ ","^1M",502,"^1N",816],["^ ","^1M",564,"^1N",816],["^ ","^1M",624,"^1N",816],["^ ","^1M",624,"^1N",816,"^G","cljs.core/deref"],["^ ","^1M",0,"^1N",818],["^ ","^1M",4,"^1N",818],["^ ","^1M",4,"^1N",818],["^ ","^1M",8,"^1N",818],["^ ","^1M",10,"^1N",831],["^ ","^1M",10,"^1N",831],["^ ","^1M",13,"^1N",831],["^ ","^1M",13,"^1N",831,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",832],["^ ","^1M",0,"^1N",832],["^ ","^1M",4,"^1N",832,"^G","end__21987__auto__"],["^ ","^1M",31,"^1N",832],["^ ","^1M",31,"^1N",832,"^G","re-frame.interop/now"],["^ ","^1M",4,"^1N",833,"^G","duration__21988__auto__"],["^ ","^1M",36,"^1N",833],["^ ","^1M",37,"^1N",833,"^G","end__21987__auto__"],["^ ","^1M",64,"^1N",833],["^ ","^1M",64,"^1N",833],["^ ","^1M",149,"^1N",833,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",0,"^1N",834],["^ ","^1M",0,"^1N",834],["^ ","^1M",0,"^1N",834,"^G","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"],["^ ","^1M",51,"^1N",834,"^G","re-frame.trace/traces"],["^ ","^1M",73,"^1N",834,"^G","cljs.core/conj"],["^ ","^1M",88,"^1N",834],["^ ","^1M",88,"^1N",834,"^G","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",141,"^1N",834,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",182,"^1N",834],["^ ","^1M",243,"^1N",834,"^G","duration__21988__auto__"],["^ ","^1M",323,"^1N",834],["^ ","^1M",374,"^1N",834],["^ ","^1M",374,"^1N",834,"^G","re-frame.interop/now"],["^ ","^1M",0,"^1N",836],["^ ","^1M",0,"^1N",836,"^G","re-frame.trace/run-tracing-callbacks!"],["^ ","^1M",43,"^1N",836,"^G","end__21987__auto__"],["^ ","^1M",0,"^1N",838],["^ ","^1M",11,"^1N",839],["^ ","^1M",11,"^1N",839],["^ ","^1M",11,"^1N",839,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",54,"^1N",839,"^G","*current-trace*22191"],["^ ","^1M",0,"^1N",841]],"^4M",[["^ ","^1M",177,"^1N",816]],"^2[",[["^ ","^1M",177,"^1N",816,"^G","re-frame.utils/first-in-vector"]],"^5O",[["^ ","^1M",208,"^1N",816,"^G","query-vec"]]],"~i345",["^ ","^4N",[["^ ","^1M",492,"^1N",816,"^G","query-vec"]]],"~i346",["^ ","^4N",[["^ ","^1M",556,"^1N",816,"^G","dyn-vec"]]],"~i347",["^ ","^5Q",[["^ ","^1M",640,"^1N",816,"^G","reaction-id"]]],"~i348",["^ ","^2D",[["^ ","^1M",8,"^1N",818],["^ ","^1M",0,"^1N",823],["^ ","^1M",0,"^1N",841],["^ ","^1M",0,"^1N",846]],"^2R",[["^ ","^1M",12,"^1N",818,"^G","subscription"],["^ ","^1M",4,"^1N",841,"^G","subscription"]],"^5T",[["^ ","^1M",27,"^1N",818],["^ ","^1M",44,"^1N",818,"^G","G__22192"],["^ ","^1M",4,"^1N",819,"^G","G__22193"],["^ ","^1M",4,"^1N",820,"^G","G__22194"],["^ ","^1M",0,"^1N",821],["^ ","^1M",0,"^1N",821],["^ ","^1M",100,"^1N",821,"^G","G__22192"],["^ ","^1M",109,"^1N",821,"^G","G__22193"],["^ ","^1M",118,"^1N",821,"^G","G__22194"],["^ ","^1M",155,"^1N",821,"^G","G__22192"],["^ ","^1M",164,"^1N",821,"^G","G__22193"],["^ ","^1M",173,"^1N",821,"^G","G__22194"],["^ ","^1M",19,"^1N",841],["^ ","^1M",36,"^1N",841,"^G","G__22195"],["^ ","^1M",4,"^1N",842,"^G","G__22196"],["^ ","^1M",4,"^1N",843,"^G","G__22197"],["^ ","^1M",0,"^1N",844],["^ ","^1M",0,"^1N",844],["^ ","^1M",100,"^1N",844,"^G","G__22195"],["^ ","^1M",109,"^1N",844,"^G","G__22196"],["^ ","^1M",118,"^1N",844,"^G","G__22197"],["^ ","^1M",155,"^1N",844,"^G","G__22195"],["^ ","^1M",164,"^1N",844,"^G","G__22196"],["^ ","^1M",173,"^1N",844,"^G","G__22197"]],"^2<",[["^ ","^1M",8,"^1N",821,"^G","computation-fn"],["^ ","^1M",55,"^1N",821,"^G","computation-fn"],["^ ","^1M",130,"^1N",821,"^G","computation-fn"],["^ ","^1M",8,"^1N",844,"^G","computation-fn"],["^ ","^1M",55,"^1N",844,"^G","computation-fn"],["^ ","^1M",130,"^1N",844,"^G","computation-fn"]],"^4O",[["^ ","^1M",55,"^1N",818],["^ ","^1M",47,"^1N",841]],"^5U",[["^ ","^1M",55,"^1N",818,"^G","re-frame.subs/deref-input-signals"],["^ ","^1M",47,"^1N",841,"^G","re-frame.subs/deref-input-signals"]],"^5V",[["^ ","^1M",89,"^1N",818,"^G","subscriptions"],["^ ","^1M",81,"^1N",841,"^G","subscriptions"]],"^38",[["^ ","^1M",103,"^1N",818,"^G","query-id"],["^ ","^1M",95,"^1N",841,"^G","query-id"]],"^3D",[["^ ","^1M",15,"^1N",819,"^G","query-vec"],["^ ","^1M",15,"^1N",842,"^G","query-vec"]],"^3M",[["^ ","^1M",15,"^1N",820,"^G","dyn-vec"],["^ ","^1M",15,"^1N",843,"^G","dyn-vec"]]],"~i349",["^ ","^2O",[["^ ","^1M",0,"^1N",823],["^ ","^1M",3,"^1N",823],["^ ","^1M",3,"^1N",823,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",824],["^ ","^1M",0,"^1N",824],["^ ","^1M",4,"^1N",824,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",824],["^ ","^1M",37,"^1N",824,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",824],["^ ","^1M",140,"^1N",824,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",824,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",824],["^ ","^1M",281,"^1N",824,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",824],["^ ","^1M",297,"^1N",824],["^ ","^1M",380,"^1N",824],["^ ","^1M",423,"^1N",824],["^ ","^1M",476,"^1N",824],["^ ","^1M",519,"^1N",824],["^ ","^1M",604,"^1N",824],["^ ","^1M",604,"^1N",824,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",651,"^1N",824],["^ ","^1M",694,"^1N",824],["^ ","^1M",747,"^1N",824],["^ ","^1M",790,"^1N",824],["^ ","^1M",873,"^1N",824],["^ ","^1M",0,"^1N",825],["^ ","^1M",0,"^1N",825],["^ ","^1M",0,"^1N",825,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",825,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",827],["^ ","^1M",0,"^1N",828],["^ ","^1M",0,"^1N",846],["^ ","^1M",3,"^1N",846],["^ ","^1M",3,"^1N",846,"^G","re-frame.trace/is-trace-enabled?"],["^ ","^1M",0,"^1N",847],["^ ","^1M",0,"^1N",847],["^ ","^1M",4,"^1N",847,"^G","new-trace__21989__auto__"],["^ ","^1M",37,"^1N",847],["^ ","^1M",37,"^1N",847,"^G","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic"],["^ ","^1M",140,"^1N",847],["^ ","^1M",140,"^1N",847,"^G","cljs.core.update.cljs$core$IFn$_invoke$arity$4"],["^ ","^1M",187,"^1N",847,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",228,"^1N",847],["^ ","^1M",281,"^1N",847,"^G","cljs.core/merge"],["^ ","^1M",297,"^1N",847],["^ ","^1M",297,"^1N",847],["^ ","^1M",380,"^1N",847],["^ ","^1M",423,"^1N",847],["^ ","^1M",476,"^1N",847],["^ ","^1M",519,"^1N",847],["^ ","^1M",604,"^1N",847],["^ ","^1M",604,"^1N",847,"^G","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1M",651,"^1N",847],["^ ","^1M",694,"^1N",847],["^ ","^1M",747,"^1N",847],["^ ","^1M",790,"^1N",847],["^ ","^1M",873,"^1N",847],["^ ","^1M",0,"^1N",848],["^ ","^1M",0,"^1N",848],["^ ","^1M",0,"^1N",848,"^G","re-frame.trace/*current-trace*"],["^ ","^1M",43,"^1N",848,"^G","new-trace__21989__auto__"],["^ ","^1M",0,"^1N",850],["^ ","^1M",0,"^1N",851]],"^5X",[["^ ","^1M",573,"^1N",824,"^G","subscription"],["^ ","^1M",844,"^1N",824,"^G","subscription"],["^ ","^1M",573,"^1N",847,"^G","subscription"],["^ ","^1M",844,"^1N",847,"^G","subscription"]]],"~i350",["^ ","^2O",[["^ ","^1M",0,"^1N",830,"^G","subscription"],["^ ","^1M",0,"^1N",853,"^G","subscription"]]],"~i352",["^ ","^1U",[["^ ","^1M",0,"^1N",857]],"^31",[["^ ","^1M",0,"^1N",857,"^G","cljs.core/reset!"]],"^1S",[["^ ","^1M",22,"^1N",857,"^G","reaction-id"]],"^1W",[["^ ","^1M",34,"^1N",857]],"^1Y",[["^ ","^1M",34,"^1N",857,"^G","re-frame.interop/reagent-id"]],"^24",[["^ ","^1M",62,"^1N",857,"^G","reaction"]]],"~i353",["^ ","^1U",[["^ ","^1M",0,"^1N",859,"^G","reaction"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1537460974000,1537389904000,"~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"],["^1E","reagent/impl/batching.cljs"],[1533155353000,"^U","^T","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"],["^1E","goog/dom/tagname.js"],[1533155346000,"^U","~$goog.dom.HtmlElement"],["~:macro","^T"],[1533155342000],["^1E","goog/math/math.js"],[1533155346000,"^U","~$goog.array","~$goog.asserts"],["^6A","node_modules/schedule/cjs/schedule.production.min.js"],[1537460974000,1537389904000,"^6B"],["^1E","goog/labs/useragent/browser.js"],[1533155346000,"^U","^6K","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1E","re_frame/loggers.cljc"],[1537460972000,"^U","^T","~$clojure.set"],["^6J","^6E"],[1533155353000],["^6A","node_modules/schedule/cjs/schedule-tracing.production.min.js"],[1537460974000,1537389904000,"^6B"],["^1E","goog/array/array.js"],[1533155346000,"^U","^6L"],["^6A","node_modules/prop-types/checkPropTypes.js"],[1537460974000,1534609634000,"^6B","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"],["^1E","reagent/impl/util.cljs"],[1533155353000,"^U","^T","^6E","^6F","^6H"],["^6J","~$net.cgrand.macrovich"],[1533155354000],["^6A","node_modules/fbjs/lib/emptyFunction.js"],[1537460974000,1534609635000,"^6B"],["^1E","goog/debug/error.js"],[1533155346000,"^U"],["^1E","re_frame/registrar.cljc"],[1537460972000,"^U","^T","^N","^O"],["^6A","node_modules/fbjs/lib/emptyObject.js"],[1537460974000,1534609635000,"^6B"],["^1E","goog/dom/nodetype.js"],[1533155346000,"^U"],["^6J","~$reagent.core"],[1533155353000],["^1E","reagent/ratom.cljs"],[1533155353000,"^U","^T","^6G","^6E","~$reagent.impl.batching","^6P"],["^1E","re_frame/interop.cljs"],[1537460972000,"^U","^T","~$goog.async.nextTick","^6S","~$reagent.ratom"],["^6A","node_modules/create-react-class/factory.js"],[1537460974000,1534609635000,"^6B","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"],["^6A","node_modules/react/index.js"],[1537460974000,1537389904000,"^6B","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"],["^1E","shadow/js.js"],[1537460974000,"^U"],["^1E","goog/object/object.js"],[1533155346000,"^U"],["^1E","reagent/impl/template.cljs"],[1533155353000,"^U","^T","^=","^6H","~$clojure.walk","^6G","~$reagent.impl.component","^6T","^6V","^6F","^6E"],["^6A","node_modules/react-dom/cjs/react-dom.production.min.js"],[1537460974000,1537389904000,"^6B","^=","^6W","~$module$node_modules$schedule$index"],"~:SHADOW-TIMESTAMP",[1537460974000,1533155342000],["^6A","node_modules/react/cjs/react.development.js"],[1537460974000,1537389904000,"^6B","^6W","~$module$node_modules$prop_types$checkPropTypes"],["^6J","^6V"],[1533155353000],["^1E","goog/math/long.js"],[1533155346000,"^U","^6L","~$goog.reflect"],["^6J","^6F"],[1533155353000],["^6A","node_modules/fbjs/lib/warning.js"],[1537460974000,1534609635000,"^6B","~$module$node_modules$fbjs$lib$emptyFunction"],["^1E","goog/functions/functions.js"],[1533155346000,"^U"],["^1E","reagent/impl/component.cljs"],[1533155353000,"^U","^T","^?","^=","^6G","^6T","^6V","^6F","^6E"],["^1E","clojure/walk.cljs"],[1533155342000,"^U","^T"],["^1E","goog/structs/map.js"],[1533155346000,"^U","~$goog.iter.Iterator","~$goog.iter.StopIteration","^6N"],["^1E","goog/labs/useragent/engine.js"],[1533155346000,"^U","^6K","^6M","^6O"],["^1E","goog/asserts/asserts.js"],[1533155346000,"^U","~$goog.debug.Error","~$goog.dom.NodeType","^6O"],["^1E","goog/uri/uri.js"],[1533155346000,"^U","^6K","^6L","^6O","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^6A","node_modules/object-assign/index.js"],[1537460974000,1534609614000,"^6B"],["^1E","re_frame/db.cljc"],[1537460972000,"^U","^T","^N"],["^6A","node_modules/schedule/tracing.js"],[1537460974000,1537389904000,"^6B","~$module$node_modules$schedule$cjs$schedule_tracing_production_min","~$module$node_modules$schedule$cjs$schedule_tracing_development"],["^1E","goog/base.js"],[1533155346000],["^1E","goog/structs/structs.js"],[1533155346000,"^U","^6K","^6N"],["^1E","clojure/string.cljs"],[1533155342000,"^U","^T","^6O","~$goog.string.StringBuffer"],["^6A","node_modules/create-react-class/index.js"],[1537460974000,1534609635000,"^6B","^=","~$module$node_modules$create_react_class$factory"],["^6A","node_modules/schedule/cjs/schedule.development.js"],[1537460974000,1537389904000,"^6B"],["^6A","node_modules/react/cjs/react.production.min.js"],[1537460974000,1537389904000,"^6B","^6W"],["^1E","goog/debug/entrypointregistry.js"],[1533155346000,"^U","^6L"],["^1E","goog/string/string.js"],[1533155346000,"^U"],["^6A","node_modules/schedule/cjs/schedule-tracing.development.js"],[1537460974000,1537389904000,"^6B"],["^1E","goog/reflect/reflect.js"],[1533155346000,"^U"],["^1E","goog/labs/useragent/util.js"],[1533155346000,"^U","^6O"],["^1E","reagent/core.cljs"],[1533155353000,"^U","^T","^=","~$reagent.impl.template","^72","^6G","^6T","^6V","^6E","^6F","~$reagent.dom"],["^1E","goog/string/stringbuffer.js"],[1533155346000,"^U"],["^1E","goog/iter/iter.js"],[1533155346000,"^U","^6K","^6L","~$goog.functions","~$goog.math"],["^1E","goog/async/nexttick.js"],[1533155346000,"^U","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^7G","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^1E","re_frame/utils.cljc"],[1537460972000,"^U","^T","^O"],["^1E","reagent/dom.cljs"],[1533155353000,"^U","^T","^A","^6G","^7E","^6T","^6V","^6E","^6F"],["^6A","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1537460974000,1534609634000,"^6B"],["^1E","reagent/interop.cljs"],[1533155353000,"^U","^T"],["^1E","goog/dom/htmlelement.js"],[1533155346000,"^U"],["^1E","cljs/core.cljs"],[1533155342000,"~$goog.math.Long","~$goog.math.Integer","^6O","^6N","^6K","~$goog.Uri","^7C"],["^1E","reagent/debug.cljs"],[1533155353000,"^U","^T"],["^6J","^R"],[1537460972000],["^1E","goog/math/integer.js"],[1533155346000,"^U"],["^6A","node_modules/react-dom/cjs/react-dom.development.js"],[1537460974000,1537389904000,"^6B","^=","^6W","^75","^73","~$module$node_modules$schedule$tracing"],["^1E","clojure/set.cljs"],[1533155342000,"^U","^T"],["^1E","goog/uri/utils.js"],[1533155346000,"^U","^6K","^6L","^6O"],["^6A","node_modules/schedule/index.js"],[1537460974000,1537389904000,"^6B","~$module$node_modules$schedule$cjs$schedule_production_min","~$module$node_modules$schedule$cjs$schedule_development"],["^6A","node_modules/fbjs/lib/invariant.js"],[1537460974000,1534609635000,"^6B"],["^1E","re_frame/trace.cljc"],[1537460972000,"^U","^T","^N","^O","^7G"],["^1E","re_frame/subs.cljc"],[1537460972000,"^U","^T","^M","^N","^O","^P","^Q","^R"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/subs.cljc","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^R","^T","^T","^U","^U"],"^V",["^F",["^W"]],"~:shadow/js-access-global",["^F",["Error"]],"^X",["^ ","^Y","^N","^Z","^O","^[","^M","^10","^N","^11","^N","^12","^N","^13","^Q","^14","^P","^15","^N","^16","^N","^17","^N","^18","^Q","^19","^Q"],"~:defs",["^ ","~$to-seq",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",181,"^8",7,"^9",181,"^:",13,"~:arglists",["^1<",["~$quote",["^1<",[["~$x"]]]]],"~:doc","Coerces x to a seq if it isn't one already"],"^G","~$re-frame.subs/to-seq","~:variadic",false,"^6","re_frame/subs.cljc","^:",13,"~:method-params",["^1<",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^8",1,"^7",181,"^9",181,"~:max-fixed-arity",1,"~:fn-var",true,"^7X",["^1<",["^7Y",["^1<",[["~$x"]]]]],"^7Z","Coerces x to a seq if it isn't one already"],"~$cache-and-return",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",42,"^8",7,"^9",42,"^:",23,"^7X",["^1<",["^7Y",["^1<",[["~$query-v","~$dynv","~$r"]]]]],"^7Z","cache the reaction r"],"^G","~$re-frame.subs/cache-and-return","^80",false,"^6","re_frame/subs.cljc","^:",23,"^81",["^1<",[["^87","^88","~$r"]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",42,"^9",42,"^84",3,"^85",true,"^7X",["^1<",["^7Y",["^1<",[["^87","^88","~$r"]]]]],"^7Z","cache the reaction r"],"~$deref-input-signals",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",188,"^8",8,"^9",188,"^:",27,"~:private",true,"^7X",["^1<",["^7Y",["^1<",[["~$signals","~$query-id"]]]]]],"^8;",true,"^G","~$re-frame.subs/deref-input-signals","^80",false,"^6","re_frame/subs.cljc","^:",27,"^81",["^1<",[["^8<","^8="]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",188,"^9",188,"^84",2,"^85",true,"^7X",["^1<",["^7Y",["^1<",[["^8<","^8="]]]]]],"~$subscribe",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",74,"^8",7,"^9",74,"^:",16,"^7X",["^1<",["^7Y",["^1<",[["~$query"],["^8@","^88"]]]]],"^7Z","Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \"blue\" :small])\n    (subscribe [:items {:colour \"blue\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  ","~:top-fn",["^ ","^80",false,"^84",2,"^81",["^1<",[["^8@"],["^8@","^88"]]],"^7X",["^1<",[["^8@"],["^8@","^88"]]],"^83",["^1<",[null,null]]]],"^G","~$re-frame.subs/subscribe","^80",false,"^6","re_frame/subs.cljc","^:",16,"^8A",["^ ","^80",false,"^84",2,"^81",["^1<",[["^8@"],["^8@","^88"]]],"^7X",["^1<",[["^8@"],["^8@","^88"]]],"^83",["^1<",[null,null]]],"^81",["^1<",[["^8@"],["^8@","^88"]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",74,"^9",74,"^84",2,"^85",true,"^7X",["^1<",[["^8@"],["^8@","^88"]]],"^7Z","Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \"blue\" :small])\n    (subscribe [:items {:colour \"blue\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  "],"~$reg-sub",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",200,"^8",7,"^9",200,"^:",14,"^7X",["^1<",["^7Y",["^1<",[["^8=","~$&","~$args"]]]]],"^7Z","For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  ","^8A",["^ ","^80",true,"^84",1,"^81",[["^1<",["^8=","^8D"]]],"^7X",["^1<",[["^8=","~$&","^8D"]]],"^83",["^1<",[null]]]],"^G","~$re-frame.subs/reg-sub","^80",true,"^6","re_frame/subs.cljc","^:",14,"^8A",["^ ","^80",true,"^84",1,"^81",[["^1<",["^8=","^8D"]]],"^7X",["^1<",[["^8=","~$&","^8D"]]],"^83",["^1<",[null]]],"^81",[["^1<",["^8=","^8D"]]],"^82",null,"^83",["^1<",[null]],"^8",1,"^7",200,"^9",200,"^84",1,"^85",true,"^7X",["^1<",[["^8=","~$&","^8D"]]],"^7Z","For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  "],"~$query->reaction",["^ ","^G","~$re-frame.subs/query->reaction","^6","re_frame/subs.cljc","^7",18,"^8",1,"^9",18,"^:",21,"^5",["^ ","^6","re_frame/subs.cljc","^7",18,"^8",6,"^9",18,"^:",21],"~:tag","~$any"],"~$clear-all-handlers!",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",36,"^8",7,"^9",36,"^:",26,"^7X",["^1<",["^7Y",["^1<",[[]]]]],"^7Z","Unregisters all existing subscription handlers"],"^G","~$re-frame.subs/clear-all-handlers!","^80",false,"^6","re_frame/subs.cljc","^:",26,"^81",["^1<",[[]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",36,"^9",36,"^84",0,"^85",true,"^7X",["^1<",["^7Y",["^1<",[[]]]]],"^7Z","Unregisters all existing subscription handlers"],"~$cache-lookup",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",65,"^8",7,"^9",65,"^:",19,"^7X",["^1<",["^7Y",["^1<",[["^87"],["^87","~$dyn-v"]]]]],"^8A",["^ ","^80",false,"^84",2,"^81",["^1<",[["^87"],["^87","^8M"]]],"^7X",["^1<",[["^87"],["^87","^8M"]]],"^83",["^1<",[null,null]]]],"^G","~$re-frame.subs/cache-lookup","^80",false,"^6","re_frame/subs.cljc","^:",19,"^8A",["^ ","^80",false,"^84",2,"^81",["^1<",[["^87"],["^87","^8M"]]],"^7X",["^1<",[["^87"],["^87","^8M"]]],"^83",["^1<",[null,null]]],"^81",["^1<",[["^87"],["^87","^8M"]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",65,"^9",65,"^84",2,"^85",true,"^7X",["^1<",[["^87"],["^87","^8M"]]]],"~$map-vals",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",163,"^8",8,"^9",163,"^:",16,"^8;",true,"^7X",["^1<",["^7Y",["^1<",[["~$f","~$m"]]]]],"^7Z","Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}"],"^8;",true,"^G","~$re-frame.subs/map-vals","^80",false,"^6","re_frame/subs.cljc","^:",16,"^81",["^1<",[["~$f","~$m"]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",163,"^9",163,"^84",2,"^85",true,"^7X",["^1<",["^7Y",["^1<",[["~$f","~$m"]]]]],"^7Z","Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}"],"~$kind",["^ ","^G","~$re-frame.subs/kind","^6","re_frame/subs.cljc","^7",10,"^8",1,"^9",10,"^:",10,"^5",["^ ","^6","re_frame/subs.cljc","^7",10,"^8",6,"^9",10,"^:",10],"^8H","~$cljs.core/Keyword"],"~$clear-subscription-cache!",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",20,"^8",7,"^9",20,"^:",32,"^7X",["^1<",["^7Y",["^1<",[[]]]]],"^7Z","Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue."],"^G","~$re-frame.subs/clear-subscription-cache!","^80",false,"^6","re_frame/subs.cljc","^:",32,"^81",["^1<",[[]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",20,"^9",20,"^84",0,"^85",true,"^7X",["^1<",["^7Y",["^1<",[[]]]]],"^7Z","Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue."],"~$map-signals",["^ ","^7W",null,"^5",["^ ","^6","re_frame/subs.cljc","^7",171,"^8",7,"^9",171,"^:",18,"^7X",["^1<",["^7Y",["^1<",[["~$f","^8<"]]]]],"^7Z","Runs f over signals. Signals may take several\n  forms, this function handles all of them."],"^G","~$re-frame.subs/map-signals","^80",false,"^6","re_frame/subs.cljc","^:",18,"^81",["^1<",[["~$f","^8<"]]],"^82",null,"^83",["^1<",[null,null]],"^8",1,"^7",171,"^9",171,"^84",2,"^85",true,"^7X",["^1<",["^7Y",["^1<",[["~$f","^8<"]]]]],"^7Z","Runs f over signals. Signals may take several\n  forms, this function handles all of them."]],"^1:",["^ ","^R","^R","^S","^R","^T","^T"],"~:cljs.analyzer/constants",["^ ","^V",["^F",["~:dyn-v","~:tags","~:sub/run","~:else","~:<-","~:sub","~:sub/create","~:warn","~:value","~:operation","~:start","~:duration","~:query-v","~:cached?","~:sub/dispose","~:error","~:input-signals","~:end","~:reaction","~:op-type"]],"~:order",["^92","^94","^96","^9@","^8Z","^9;","^99","^9?","^97","^98","^9>","^93","^9:","^9<","^8Y","^90","^9=","^91","^8[","^95"]],"^1A",["^ ","^W",["^F",[]]],"^1B",["^ "],"^1C",["^U","^T","^M","^N","^O","^P","^Q","^R"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^6@",[["^9D","~:static-fns"],true,["^9D","~:elide-asserts"],true,["^9D","~:optimize-constants"],null,["^9D","~:external-config"],null,["^9D","~:tooling-config"],null,["^9D","~:emit-constants"],null,["^9D","~:infer-externs"],true,["^9D","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^9D","~:fn-invoke-direct"],null,["^9D","^1L"],null]]]