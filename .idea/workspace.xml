<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="8867de46-1b15-465c-be40-f2215452d5de" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/farsund.iml" beforeDir="false" afterPath="$PROJECT_DIR$/farsund.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/farsund/data/sales.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/farsund/data/sales.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FileColors">
    <fileColor scope="Non-Project Files (Material Default)" color="2E3C43" />
    <fileColor scope="Non-Project Files (Material Darker)" color="323232" />
    <fileColor scope="Non-Project Files (Material Lighter)" color="eae8e8" />
    <fileColor scope="Non-Project Files (Material Palenight)" color="2f2e43" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="525">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/stock.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="560">
              <caret line="10" selection-start-line="10" selection-end-line="28" selection-end-column="39" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/market.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="4760">
              <caret line="85" column="20" selection-start-line="85" selection-start-column="20" selection-end-line="85" selection-end-column="20" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/utils.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="2912">
              <caret line="52" column="48" selection-start-line="52" selection-start-column="48" selection-end-line="52" selection-end-column="48" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/config.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="616">
              <caret line="11" column="15" selection-start-line="11" selection-start-column="15" selection-end-line="11" selection-end-column="15" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/report.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="616">
              <caret line="11" column="20" selection-start-line="11" selection-start-column="20" selection-end-line="11" selection-end-column="20" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/cg.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="601">
              <caret line="82" column="18" selection-start-line="82" selection-start-column="18" selection-end-line="82" selection-end-column="18" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/events.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="616">
              <caret line="65" column="26" selection-start-line="65" selection-start-column="26" selection-end-line="65" selection-end-column="26" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/documents.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1064">
              <caret line="19" column="19" selection-start-line="19" selection-start-column="19" selection-end-line="19" selection-end-column="19" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/rcv.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="336">
              <caret line="6" column="4" selection-start-line="6" selection-start-column="4" selection-end-line="6" selection-end-column="4" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state>
              <caret column="20" selection-start-column="4" selection-end-column="21" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="ClojureScript Namespace" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>add-wa</find>
      <find>:sync/</find>
      <find>sex</find>
      <find>cg</find>
      <find>(.</find>
      <find>mm-file</find>
      <find>gerre</find>
      <find>firestore</find>
      <find>farsund.data.core</find>
      <find>-&gt;</find>
      <find>sender</find>
      <find>:farsund/sente</find>
      <find>promotion</find>
      <find>fores</find>
      <find>collector-path</find>
      <find>:pace</find>
      <find>clear-a</find>
      <find>crit</find>
      <find>read-store</find>
      <find>:data/market-report</find>
      <find>blabla</find>
      <find>println</find>
      <find>:sync/ftp-&gt;collector</find>
      <find>x/sort</find>
      <find>watch</find>
      <find>invo</find>
      <find>save</find>
      <find>load</find>
      <find>max-age-in-days</find>
      <find>select-sh</find>
    </findStrings>
    <replaceStrings>
      <replace>farsund</replace>
      <replace>store-sales</replace>
      <replace>sale-price</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/cljs/farsund/ws/fx.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/data/db.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/init.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/scanner/ui.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/utils/key.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/window/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/data/subs.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/data/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/ui/core.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/farsund/data/ui.cljs" />
        <option value="$PROJECT_DIR$/package.json" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/nn.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/ml_copy.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/weather/core.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/iris.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/utils.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/ml.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/stats.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/starter_ml.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/layout.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/middleware.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/transit.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/firebase/core.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/ml_copy2.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/ml_copy3.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/core.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/config.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/stock.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/market_watcher.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/warehouse.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/invoice_watcher.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/firestore_repl.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/db.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/firestore/core.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/core.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/ws/core.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/ml2.clj" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/playground.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/report.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/cg.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/events.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/documents.clj" />
        <option value="$PROJECT_DIR$/config.edn" />
        <option value="$PROJECT_DIR$/src/clj/farsund/ml/core.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/ml/estimate.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/invoice.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/farsund/repl.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/sales.clj" />
        <option value="$PROJECT_DIR$/src/clj/farsund/data/market.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="1610" />
    <option name="y" value="58" />
    <option name="width" value="1560" />
    <option name="height" value="1712" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="data" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="farsund" type="b2602c69:ProjectViewProjectNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="farsund" type="462c0819:PsiDirectoryNode" />
              <item name="ml" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="PackagesPane">
        <subPane>
          <expand>
            <path>
              <item name="farsund" type="58d84e3e:PackageViewProjectNode" />
              <item name="farsund" type="616d4139:PackageViewModuleNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="SearchEverywhereHistoryKey" value="&#9;FILE&#9;file:///home/ribelo/code/clojure/farsund/src/clj/farsund/weather/core.clj" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1549834539129" />
    <property name="cursive.last.file.extension./home/ribelo/code/clojure/farsund/env/dev/clj" value="clj" />
    <property name="cursive.last.file.extension./home/ribelo/code/clojure/farsund/src" value="clj" />
    <property name="cursive.last.file.extension./home/ribelo/code/clojure/farsund/src/clj" value="clj" />
    <property name="cursive.last.file.extension./home/ribelo/code/clojure/farsund/src/cljs" value="cljs" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../dunston" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/env/dev/clj/farsund" />
      <recent name="$PROJECT_DIR$/src/cljs/farsund/window" />
      <recent name="$PROJECT_DIR$/src/cljs/farsund" />
      <recent name="$PROJECT_DIR$/src/cljs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="ReplState" timestamp="1549839447189">{:repl-history {:ide [], :local [{:command &quot;(into []\n      (comp (map (fn [{:keys [sales profit]}]\n                   (* 100 (/ profit sales))))\n            (take 1))\n      data)&quot;, :offset 134, :ns &quot;farsund.playground&quot;} {:command &quot;(into []\n      (comp (map (fn [{:keys [sales profit] :as m}]\n                   (assoc m :margin (* 100 (/ profit sales)))))\n            (take 1))\n      data)&quot;, :offset 158, :ns &quot;farsund.playground&quot;} {:command &quot;(quick-bench\n  (into []\n        (comp (map (fn [{:keys [sales profit] :as m}]\n                     (assoc m :margin (* 100 (/ profit sales))))))\n        data))&quot;, :offset 159, :ns &quot;farsund.playground&quot;} {:command &quot;(quick-bench\n  (into []\n        (comp (map (fn [{:keys [sales profit] :as m}]\n                     (if-not (zero? sales) \n                       (assoc m :margin (* 100 (/ profit sales)))\n                       m))))\n        data))&quot;, :offset 231, :ns &quot;farsund.playground&quot;} {:command &quot;(defn edi-&gt;document [edi]\n  (let [data (clojure.string/split-lines edi)]\n    (loop [[line &amp; data] data\n           result []\n           elem {}\n           n 0]\n      (if line\n        (cond\n          (str/starts-with? line \&quot;[Poz\&quot;)\n          (recur data (conj result (assoc elem :id (inc n))) {} (inc n))\n          (str/starts-with? line \&quot;Symbol=\&quot;)\n          (let [ean (last (str/split line \&quot;=\&quot;))]\n            (recur data result (assoc elem :ean ean)))\n          (str/starts-with? line \&quot;Ilosc=\&quot;)\n          (let [qty (-&gt; line (str/split \&quot;=\&quot;) (last) Double/parseDouble)]\n            (recur data result (assoc elem :qty qty)))\n          :else (recur data result elem))\n        (into (sorted-map-by :id)\n              (comp (filter seq)\n                    (remove #(nil? (:qty %)))\n                    (map (juxt :ean identity)))\n              result)))))&quot;, :offset 849, :ns &quot;farsund.data.cg&quot;} {:command &quot;(defn edi-&gt;document [edi]\n  (let [data (clojure.string/split-lines edi)]\n    (loop [[line &amp; data] data\n           result []\n           elem {}\n           n 0]\n      (if line\n        (cond\n          (str/starts-with? line \&quot;[Poz\&quot;)\n          (recur data (conj result (assoc elem :id (inc n))) {} (inc n))\n          (str/starts-with? line \&quot;Symbol=\&quot;)\n          (let [ean (last (str/split line \&quot;=\&quot;))]\n            (recur data result (assoc elem :ean ean) n))\n          (str/starts-with? line \&quot;Ilosc=\&quot;)\n          (let [qty (-&gt; line (str/split \&quot;=\&quot;) (last) Double/parseDouble)]\n            (recur data result (assoc elem :qty qty) n))\n          :else (recur data result elem))\n        (into (sorted-map-by :id)\n              (comp (filter seq)\n                    (remove #(nil? (:qty %)))\n                    (map (juxt :ean identity)))\n              result)))))&quot;, :offset 853, :ns &quot;farsund.data.cg&quot;} {:command &quot;(defn edi-&gt;document [edi]\n  (let [data (clojure.string/split-lines edi)]\n    (loop [[line &amp; data] data\n           result []\n           elem {}\n           n 0]\n      (if line\n        (cond\n          (str/starts-with? line \&quot;[Poz\&quot;)\n          (recur data (conj result (assoc elem :id (inc n))) {} (inc n))\n          (str/starts-with? line \&quot;Symbol=\&quot;)\n          (let [ean (last (str/split line \&quot;=\&quot;))]\n            (recur data result (assoc elem :ean ean) n))\n          (str/starts-with? line \&quot;Ilosc=\&quot;)\n          (let [qty (-&gt; line (str/split \&quot;=\&quot;) (last) Double/parseDouble)]\n            (recur data result (assoc elem :qty qty) n))\n          :else (recur data result elem n))\n        (into (sorted-map-by :id)\n              (comp (filter seq)\n                    (remove #(nil? (:qty %)))\n                    (map (juxt :ean identity)))\n              result)))))&quot;, :offset 855, :ns &quot;farsund.data.cg&quot;} {:command &quot;(+ 1 1)&quot;, :offset 6, :ns &quot;farsund.core&quot;} {:command &quot;(count (:market-report/by-id @tmp-db))&quot;, :offset 38, :ns &quot;farsund.repl&quot;} {:command &quot;(ns farsund.data.report\n  (:require [dk.ative.docjure.spreadsheet :as xls]\n            [cuerdas.core :as str]))&quot;, :offset 111, :ns &quot;farsund.core&quot;} {:command &quot;(defn read-file [path]\n  (-&gt;&gt; (xls/load-workbook-from-file path)\n       (xls/select-sheet \&quot;Arkusz 1\&quot;)\n       (xls/select-columns {:A :category-id\n                            :B :name\n                            :C :id\n                            :D :ean\n                            :E :pace\n                            :F :optimal\n                            :G :price\n                            :H :established-margin\n                            :I :min-supply\n                            :J :optimal-supply\n                            :K :max-supply\n                            :L :last-sales\n                            :M :last-delivery\n                            :N :volume\n                            :O :sales\n                            :P :profit\n                            :Q :buy-price\n                            :R :stock\n                            :S :promotion})\n       (rest)\n       (into (sorted-map (fn [{:keys [stock optimal]}]\n                           (- stock optimal)))\n             (comp\n               (filter #(identity (:id %)))\n               (filter #(identity (:ean %)))\n               (map (fn [{:keys [sales profit volume ean] :as m}]\n                      {ean (-&gt; m\n                               (update :name str/human)\n                               (update :promotion str/trim)\n                               (update :optimal #(if (string? %) 0 %))\n                               (assoc :margin (if (pos? sales)\n                                                (/ profit sales)\n                                                0.0))\n                               (update :established-margin #(/ % 100))\n                               (assoc :profit (/ profit volume))\n                               (assoc :sales (/ sales volume)))}))))))&quot;, :offset 1780, :ns &quot;farsund.data.report&quot;} {:command &quot;(ns farsund.repl\n  (:require [clojure.core.async :as async :refer [go thread &lt;! &lt;!! &gt;! &gt;!!]]\n            [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [integrant.core :as ig]\n            [taoensso.encore :as e]\n            [taoensso.timbre :as timbre]\n            [com.rpl.specter :as sp]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [reitit.core :as reitit]\n            [clj-time.core :as dt]\n            [clj-time.coerce :as dtc]\n            [farsund.config :refer [config]]\n            [farsund.core]\n            [farsund.db]\n            [farsund.nrepl]\n            [farsund.middleware]\n            [farsund.handler]\n            [farsund.server]\n            [farsund.routes.core]\n            [farsund.ws.core]\n            [farsund.data.core]\n            [farsund.data.events]\n            [farsund.data.market]\n            [farsund.data.market :as market]\n            [farsund.data.invoice :as invoice]\n\n            [net.cgrand.xforms :as x]\n            [farsund.data.sales :as sales]\n            [farsund.ml.core :as ml]\n            [farsund.ml.estimate :as estimate]\n            [farsund.db :as db]\n            ;[farsund.firestore.core :as f]\n            ))&quot;, :offset 1232, :ns &quot;farsund.core&quot;} {:command &quot;(sorted-map-by (fn [{:keys [stock optimal]}]\n                 (- stock optimal)))&quot;, :offset 81, :ns &quot;farsund.repl&quot;} {:command &quot;(type (sorted-map-by (fn [{:keys [stock optimal]}]\n                  (- stock optimal))))&quot;, :offset 89, :ns &quot;farsund.repl&quot;} {:command &quot;(type {})&quot;, :offset 9, :ns &quot;farsund.repl&quot;} {:command &quot;(into (sorted-map-by (fn [{:keys [stock optimal]}]\n                       (- stock optimal)))\n      [{:stock 1 :optimal 0}])&quot;, :offset 124, :ns &quot;farsund.repl&quot;} {:command &quot;(into {}\n      [{:stock 1 :optimal 0}\n       {:stock 1 :optimal 0}])&quot;, :offset 68, :ns &quot;farsund.repl&quot;} {:command &quot;(into {}\n      [{:stock 1 :optimal 0}\n       {:stock 2 :optimal 0}])&quot;, :offset 68, :ns &quot;farsund.repl&quot;} {:command &quot;(into {}\n      [{:id 1 :stock 1 :optimal 0}\n       {:id 2 :stock 2 :optimal 0}])&quot;, :offset 80, :ns &quot;farsund.repl&quot;} {:command &quot;(into (sorted-map-by (fn [{:keys [stock optimal]}]\n                       (- stock optimal)))\n      [{:stock 1 :optimal 0}\n       {:stock 1 :optimal 0}])&quot;, :offset 153, :ns &quot;farsund.repl&quot;} {:command &quot;{1 {:a 5}\n 2 {:a 4}\n 3 {:a 3}\n 4 {:a 2}\n 5 {:a 1}}&quot;, :offset 50, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map 1 {:a 5}\n            2 {:a 4}\n            3 {:a 3}\n            4 {:a 2}\n            5 {:a 1})&quot;, :offset 105, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map :1 {:a 5}\n            2 {:a 4}\n            3 {:a 3}\n            4 {:a 2}\n            5 {:a 1})&quot;, :offset 106, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map :1 {:a 5}\n            :2 {:a 4}\n            :3 {:a 3}\n            :4 {:a 2}\n            :5 {:a 1})&quot;, :offset 110, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map {1 {:a 5}\n             2 {:a 4}\n             3 {:a 3}\n             4 {:a 2}\n             5 {:a 1}})&quot;, :offset 111, :ns &quot;farsund.playground&quot;} {:command &quot;(ns farsund.playground\n  (:require [clojure.java.io :as io]\n            [taoensso.encore :as e]\n            [net.cgrand.xforms :as x]\n            [taoensso.timbre :as timbre]\n            [farsund.data.sales :as sales]\n            [ribelo.wombat.dataframe :as df]\n            [ribelo.wombat.aggregate :as agg]\n            [ribelo.wombat.io :as wio]\n            [criterium.core :refer [quick-bench]]))&quot;, :offset 399, :ns &quot;farsund.core&quot;} {:command &quot;(apply sorted-map {1 {:a 5}\n                   2 {:a 4}\n                   3 {:a 3}\n                   4 {:a 2}\n                   5 {:a 1}})&quot;, :offset 141, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map\n  1 {:a 5}\n  2 {:a 4}\n  3 {:a 3}\n  4 {:a 2}\n  5 {:a 1})&quot;, :offset 67, :ns &quot;farsund.playground&quot;} {:command &quot;(sorted-map\n  1 {:a 5}\n  3 {:a 3}\n  2 {:a 4}\n  5 {:a 1}\n  4 {:a 2})&quot;, :offset 67, :ns &quot;farsund.playground&quot;} {:command &quot;(-&gt;&gt; (sorted-map-by (fn [k1 k2]\n                      (println k1 k2)\n                      (compare k1 k2))\n       1 {:a 5}\n       3 {:a 3}\n       2 {:a 4}\n       5 {:a 1}\n       4 {:a 2}))&quot;, :offset 190, :ns &quot;farsund.playground&quot;} {:command &quot;(defn document-&gt;csv [products]\n  (println products)\n  (-&gt;&gt; products\n       (into []\n             (comp\n               (x/sort-by (fn [[_ m1] [_ m2]]\n                            (compare (:position m1) (:position m2))))\n               (map (fn [[_ {:keys [ean qty]}]]\n                      (str/join \&quot;,\&quot;\n                                [\&quot;            \&quot;\n                                 (str/pad ean {:length 13 :type :left})\n                                 (as-&gt; (e/round2 qty) $\n                                       (format \&quot;%.2f\&quot; $)\n                                       (str/pad $ {:length 5 :type :right}))\n                                 \&quot;     \\r\\n\&quot;])))))\n       (str/join)))&quot;, :offset 683, :ns &quot;farsund.data.documents&quot;} {:command &quot;(defmethod ws/event-msg-handler :sync/ftp-&gt;collector\n  [{:keys [collector-path ftp-config]} {:keys [?reply-fn] event-id :id file-name :?data}]\n  (let [edi (cg/get-mm-from-ftp ftp-config file-name)\n        csv (-&gt; edi\n                (cg/edi-&gt;document)\n                (docs/document-&gt;csv))]\n    (println csv)\n    (spit (e/path collector-path \&quot;rcv.txt\&quot;) csv)))&quot;, :offset 359, :ns &quot;farsund.data.events&quot;} {:command &quot;(defn document-&gt;csv [products]\n  (-&gt;&gt; products\n       (into []\n             (comp\n               ;(x/sort-by (fn [[_ m1] [_ m2]]\n               ;             (compare (:position m1) (:position m2))))\n               (map (fn [[_ {:keys [ean qty]}]]\n                      (str/join \&quot;,\&quot;\n                                [\&quot;            \&quot;\n                                 (str/pad ean {:length 13 :type :left})\n                                 (as-&gt; (e/round2 qty) $\n                                       (format \&quot;%.2f\&quot; $)\n                                       (str/pad $ {:length 5 :type :right}))\n                                 \&quot;     \\r\\n\&quot;])))))\n       (str/join)))&quot;, :offset 664, :ns &quot;farsund.data.documents&quot;} {:command &quot;(defmethod ws/event-msg-handler :sync/ftp-&gt;collector\n  [{:keys [collector-path ftp-config]} {:keys [?reply-fn] event-id :id file-name :?data}]\n  (println :sync/ftp-&gt;collector)\n  (let [edi (cg/get-mm-from-ftp ftp-config file-name)\n        csv (-&gt; edi\n                (cg/edi-&gt;document)\n                (docs/document-&gt;csv))]\n    (println :blabla)\n    (println csv)\n    (spit (e/path collector-path \&quot;rcv.txt\&quot;) csv)))&quot;, :offset 414, :ns &quot;farsund.data.events&quot;} {:command &quot;(defn document-&gt;csv [products]\n  (-&gt;&gt; products\n       (into []\n             (comp\n               (x/sort-by (fn [[ean m1] [_ m2]]\n                            (println ean m1)\n                            (compare (:position m1) (:position m2))))\n               (map (fn [[_ {:keys [ean qty]}]]\n                      (str/join \&quot;,\&quot;\n                                [\&quot;            \&quot;\n                                 (str/pad ean {:length 13 :type :left})\n                                 (as-&gt; (e/round2 qty) $\n                                       (format \&quot;%.2f\&quot; $)\n                                       (str/pad $ {:length 5 :type :right}))\n                                 \&quot;     \\r\\n\&quot;])))))\n       (str/join)))&quot;, :offset 709, :ns &quot;farsund.data.documents&quot;} {:command &quot;(document-&gt;csv {1 {:ean 1 :position 1 :qty 1}})&quot;, :offset 47, :ns &quot;farsund.data.documents&quot;} {:command &quot;(defn document-&gt;csv [products]\n  (-&gt;&gt; products\n       (into []\n             (comp\n               (x/sort-by (fn [[[ean m1] [_ m2]]]\n                            (println ean m1)\n                            (compare (:position m1) (:position m2))))\n               (map (fn [[_ {:keys [ean qty]}]]\n                      (str/join \&quot;,\&quot;\n                                [\&quot;            \&quot;\n                                 (str/pad ean {:length 13 :type :left})\n                                 (as-&gt; (e/round2 qty) $\n                                       (format \&quot;%.2f\&quot; $)\n                                       (str/pad $ {:length 5 :type :right}))\n                                 \&quot;     \\r\\n\&quot;])))))\n       (str/join)))&quot;, :offset 711, :ns &quot;farsund.data.documents&quot;} {:command &quot;(document-&gt;csv {1 {:ean 1 :position 1 :qty 1}\n                2 {:ean 1 :position 1 :qty 1}})&quot;, :offset 93, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [m1 m2]\n                     (compare m1 m2)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 176, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[m1 m2]]\n                     (compare m1 m2)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 178, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[m1 m2]]\n                     (println m1)\n                     (compare m1 m2)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 212, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[m1 m2]]\n                     (println m1 m2)\n                     (compare m1 m2)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 215, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[_ m1] [ m2]]\n                     (println m1 m2)\n                     (compare m1 m2)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 220, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[_ m1]]\n                     (:position m1)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 176, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[_ m1]]\n                     (println m1)\n                     m1))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 198, :ns &quot;farsund.data.documents&quot;} {:command &quot;(into []\n      (comp\n        (x/sort-by (fn [[_ m1]]\n                     (println m1)\n                     (:position m1)))\n        )\n      {1 {:ean 1 :position 2 :qty 1}\n       2 {:ean 2 :position 1 :qty 2}})&quot;, :offset 210, :ns &quot;farsund.data.documents&quot;} {:command &quot;(defn document-&gt;csv [products]\n  (-&gt;&gt; products\n       (into []\n             (comp\n               (x/sort-by (fn [[_ {:keys [position]}]] position))\n               (map (fn [[_ {:keys [ean qty]}]]\n                      (str/join \&quot;,\&quot;\n                                [\&quot;            \&quot;\n                                 (str/pad ean {:length 13 :type :left})\n                                 (as-&gt; (e/round2 qty) $\n                                       (format \&quot;%.2f\&quot; $)\n                                       (str/pad $ {:length 5 :type :right}))\n                                 \&quot;     \\r\\n\&quot;])))))\n       (str/join)))&quot;, :offset 612, :ns &quot;farsund.data.documents&quot;} {:command &quot;(defn- report-handler\n  [{:keys [db report-path chan] :as params}]\n  (fn [_ {:keys [kind] :as e}]\n    (when (not= kind :delete)\n      (&lt;!! (timeout 3000))\n      (let [report (future (report/read-file report-path))]\n        (async/put! chan {:event :market-report/changed\n                          :data  @report})\n        (swap! db assoc :market-report/by-id @report)))))&quot;, :offset 371, :ns &quot;farsund.data.market&quot;} {:command &quot;(defn- report-handler\n  [{:keys [db report-path chan] :as params}]\n  (fn [_ {:keys [kind] :as e}]\n    (when (not= kind :delete)\n      (&lt;!! (timeout 3000))\n      (println :report-handler)\n      (let [report (future (report/read-file report-path))]\n        (async/put! chan {:event :market-report/changed\n                          :data  @report})\n        (swap! db assoc :market-report/by-id @report)))))&quot;, :offset 403, :ns &quot;farsund.data.market&quot;} {:command &quot;(.availableProcessors (Runtime/getRuntime))&quot;, :offset 43, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(def cpu-count (.availableProcessors (Runtime/getRuntime)))&quot;, :offset 59, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(dotimes [n 4]\n  :a)&quot;, :offset 20, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(apply inc [1 2 3])&quot;, :offset 19, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(doseq [i 5]\n  i)&quot;, :offset 17, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(doseq [i (range 5)]\n  i)&quot;, :offset 25, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(ns farsund.ml.estimate\n  (:require [clojure.core.async :as async :refer [go-loop &lt;! &gt;! timeout chan close!]]\n            [clojure.java.io :as io]\n            [integrant.core :as ig]\n            [taoensso.encore :as e]\n            [taoensso.nippy :as nippy]\n            [farsund.config :refer [config]]\n            [net.cgrand.xforms :as x]\n            [clj-time.core :as dt]\n            [clj-time.periodic :as dtper]\n            [taoensso.timbre :as timbre]\n            [ribelo.visby.math :as math]\n            [ribelo.visby.emath :as emath]\n            [ribelo.visby.stats :as stats]\n            [ribelo.wombat.dataframe :as df]\n            [ribelo.wombat.aggregate :as agg]\n            [clj-time.periodic :as dtper]\n            [clj-time.coerce :as dtc]\n            [com.rpl.specter :as sp]\n            [farsund.ml.core :as ml]))&quot;, :offset 832, :ns &quot;farsund.core&quot;} {:command &quot;(def ncpu (.availableProcessors (Runtime/getRuntime)))&quot;, :offset 54, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn model-checker-loop [in-chan {:keys [pub db] :as params}]\n  (timbre/info :init :model-checker-loop)\n  (let [ml-chan (async/chan)\n        avg-chan (async/chan)]\n    (go-loop []\n      (when-let [{:keys [id] :as product} (&lt;! in-chan)]\n        (timbre/info :model-checker-loop id)\n        (let [store-sales (:store-sales @db)]\n          (if (ml/enough-data? id store-sales)\n            (let [aggregated-data (ml/aggregate-data id store-sales)]\n              (if (ml/model-needs-refresh? id)\n                (try\n                  (let [xy (ml/data-&gt;xy ml/model-ks :qty aggregated-data)\n                        model (ml/create-random-forest-model id xy)]\n                    (ml/save-model id model)\n                    (timbre/info id \&quot;send model to ml-estimator\&quot;)\n                    (&gt;! ml-chan [product model aggregated-data]))\n                  (catch Exception e\n                    (timbre/error :error-create-model id)\n                    (timbre/info id \&quot;send product to avg-estimator\&quot;)\n                    (&gt;! avg-chan product)))\n                (let [model (ml/load-model id)]\n                  (timbre/info id \&quot;2 send model to ml-estimator\&quot;)\n                  (&gt;! ml-chan [product model aggregated-data]))))\n            (do\n              (timbre/info id \&quot;send product to avg-estimator\&quot;)\n              (&gt;! avg-chan product))))\n        (recur)))\n    [ml-chan avg-chan]))&quot;, :offset 1381, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn ml-estimator-loop [in-chan {:keys [db] :as params}]\n  (timbre/info :init :ml-estimator-loop)\n  (mapv\n    #(go-loop []\n       (when-let [[{:keys [id optimal-supply]} model data] (&lt;! in-chan)]\n         (timbre/info :ml-estimator-loop id)\n         (try\n           (let [optimal (e/round2 (ml/predict-sales model ml/model-ks optimal-supply data))]\n             (timbre/info :ml-estimator-loop id optimal)\n             (sp/setval [sp/ATOM :market-report sp/ALL #(= id (:id %)) :optimal] optimal db))\n           (catch Exception e (timbre/error e)))\n         (recur)))\n    (range ncpu)))&quot;, :offset 587, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn ml-estimator-loop [in-chan {:keys [db] :as params}]\n  (timbre/info :init :ml-estimator-loop)\n  (mapv\n    (fn []\n      (go-loop []\n        (when-let [[{:keys [id optimal-supply]} model data] (&lt;! in-chan)]\n          (timbre/info :ml-estimator-loop id)\n          (try\n            (let [optimal (e/round2 (ml/predict-sales model ml/model-ks optimal-supply data))]\n              (timbre/info :ml-estimator-loop id optimal)\n              (sp/setval [sp/ATOM :market-report sp/ALL #(= id (:id %)) :optimal] optimal db))\n            (catch Exception e (timbre/error e)))\n          (recur))))\n    (range ncpu)))&quot;, :offset 608, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn avg-estimator-loop [in-chan {:keys [pub db] :as params}]\n  (timbre/info :init :avg-estimator-loop)\n  (go-loop []\n    (when-let [{:keys [id optimal-supply] :as product} (&lt;! in-chan)]\n      (timbre/info :avg-estimator-loop id)\n      (try\n        (when-let [optimal (try (e/round2 (ml/average-sales id optimal-supply (:store-sales @db)))\n                                (catch Exception e nil))]\n          (timbre/info :avg-estimator-loop id optimal)\n          (sp/setval [sp/ATOM :market-report sp/ALL #(= id (:id %)) :optimal] optimal db))\n        (catch Exception e (timbre/error e)))\n      (recur))))&quot;, :offset 607, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defmethod ig/init-key :farsund/estimator [_ {:keys [pub] :as params}]\n  (timbre/info :ig/init-key :farsund/estimator)\n  (let [topic-chan (async/chan)\n        products-chan (async/chan)\n        [ml-chan avg-chan] (model-checker-loop products-chan params)\n        ml-estimator (ml-estimator-loop ml-chan params)\n        avg-estimator (avg-estimator-loop avg-chan params)]\n    (async/sub pub :market-report/changed topic-chan)\n    (go-loop []\n      (when-let [{:keys [data]} (&lt;! topic-chan)]\n        (doseq [[id product] data]\n          (timbre/info :farsund/estimator (:id product))\n          (&gt;! products-chan product))\n        (recur)))\n    {:products-chan products-chan\n     :ml-chan       ml-chan\n     :ml-estimators ml-estimator\n     :avg-chan      avg-chan\n     :avg-estimator avg-estimator}))&quot;, :offset 798, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defmethod ig/halt-key! :farsund/estimator [_ {:keys [products-chan ml-chan ml-estimators avg-chan avg-estimator]}]\n  (close! products-chan)\n  (close! ml-chan)\n  (doseq [estimator ml-estimators] (close! estimator))\n  (close! avg-chan)\n  (close! avg-estimator))&quot;, :offset 260, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(dotimes [n 4]\n  (go (println n)))&quot;, :offset 34, :ns &quot;farsund.repl&quot;} {:command &quot;(mapv\n  (fn [] (go (println n)))\n  (range 4))&quot;, :offset 45, :ns &quot;farsund.repl&quot;} {:command &quot;(mapv\n  (fn [n] (go (println n)))\n  (range 4))&quot;, :offset 46, :ns &quot;farsund.repl&quot;} {:command &quot;(def n-cpu (.availableProcessors (Runtime/getRuntime)))&quot;, :offset 55, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn ml-estimators-loops [in-chan {:keys [db] :as params}]\n  (timbre/info :init :ml-estimator-loop)\n  (mapv\n    (fn []\n      (println \&quot;aslkjdla\&quot;)\n      (go-loop []\n        (when-let [[{:keys [id optimal-supply]} model data] (&lt;! in-chan)]\n          (timbre/info :ml-estimator-loop id)\n          (try\n            (let [optimal (e/round2 (ml/predict-sales model ml/model-ks optimal-supply data))]\n              (timbre/info :ml-estimator-loop id optimal)\n              (sp/setval [sp/ATOM :market-report sp/ALL #(= id (:id %)) :optimal] optimal db))\n            (catch Exception e (timbre/error e)))\n          (recur))))\n    (range n-cpu)))&quot;, :offset 638, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;n-cpu&quot;, :offset 5, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn ml-estimators-loops [in-chan {:keys [db] :as params}]\n  (timbre/info :init :ml-estimator-loop)\n  (mapv\n    (fn [_]\n      (go-loop []\n        (when-let [[{:keys [id optimal-supply]} model data] (&lt;! in-chan)]\n          (timbre/info :ml-estimator-loop id)\n          (try\n            (let [optimal (e/round2 (ml/predict-sales model ml/model-ks optimal-supply data))]\n              (timbre/info :ml-estimator-loop id optimal)\n              (sp/setval [sp/ATOM :market-report sp/ALL #(= id (:id %)) :optimal] optimal db))\n            (catch Exception e (timbre/error e)))\n          (recur))))\n    (range n-cpu)))&quot;, :offset 612, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn run [] (do (reset! system (ig/init config [:farsund/db\n                                                 ;:farsund/firestore\n                                                 :pubsub/channel\n                                                 :pubsub/publisher\n                                                 :farsund/webserver\n                                                 :farsund/cg\n                                                 :farsund/market-watcher\n                                                 :farsund/invoice-watcher\n                                                 :farsund/estimator\n                                                 ]))\n                 (def tmp-db (:farsund/db @system))))&quot;, :offset 712, :ns &quot;farsund.repl&quot;} {:command &quot;(nippy/freeze-to-file \&quot;./test.error\&quot; \&quot;\&quot;)&quot;, :offset 40, :ns &quot;farsund.ml.core&quot;} {:command &quot;(nippy/thaw-from-file (str \&quot;./ml_models/\&quot; \&quot;sex\&quot; \&quot;.model\&quot;))&quot;, :offset 58, :ns &quot;farsund.ml.core&quot;} {:command &quot;(try (nippy/thaw-from-file (str \&quot;./ml_models/\&quot; \&quot;sex\&quot; \&quot;.model\&quot;)))&quot;, :offset 64, :ns &quot;farsund.ml.core&quot;} {:command &quot;(try (nippy/thaw-from-file (str \&quot;./ml_models/\&quot; \&quot;sex\&quot; \&quot;.model\&quot;))\n     (catch Exception e nil))&quot;, :offset 93, :ns &quot;farsund.ml.core&quot;} {:command &quot;(defn load-model [id]\n  (try (nippy/thaw-from-file (str \&quot;./ml_models/\&quot; id \&quot;.model\&quot;))\n       (catch Exception e nil)))&quot;, :offset 117, :ns &quot;farsund.ml.core&quot;} {:command &quot;(nippy/freeze-to-file \&quot;./test.error\&quot; :error)&quot;, :offset 44, :ns &quot;farsund.ml.core&quot;} {:command &quot;(nippy/thaw-from-file \&quot;./test.error\&quot;)&quot;, :offset 37, :ns &quot;farsund.ml.core&quot;} {:command &quot;(nippy/freeze-to-file \&quot;./test.error\&quot; nil)&quot;, :offset 41, :ns &quot;farsund.ml.core&quot;} {:command &quot;(defn model-checker-loop [in-chan {:keys [pub db] :as params}]\n  (timbre/info :init :model-checker-loop)\n  (let [ml-chan (async/chan)\n        avg-chan (async/chan)]\n    (go-loop []\n      (when-let [{:keys [id] :as product} (&lt;! in-chan)]\n        (timbre/info :model-checker-loop id)\n        (let [store-sales (:store-sales @db)]\n          (if (ml/enough-data? id store-sales)\n            (let [aggregated-data (ml/aggregate-data id store-sales)]\n              (if (ml/model-needs-refresh? id)\n                (try\n                  (let [xy (ml/data-&gt;xy ml/model-ks :qty aggregated-data)\n                        model (ml/create-random-forest-model id xy)]\n                    (ml/save-model id model)\n                    (&gt;! ml-chan [product model aggregated-data]))\n                  (catch Exception e\n                    (timbre/error :error-create-model id)\n                    (ml/save-model id nil)\n                    (&gt;! avg-chan product)))\n                (if-let [model (ml/load-model id)]\n                  (&gt;! ml-chan [product model aggregated-data])\n                  (&gt;! avg-chan product))))\n            (do\n              (timbre/info id \&quot;send product to avg-estimator\&quot;)\n              (&gt;! avg-chan product))))\n        (recur)))\n    [ml-chan avg-chan]))&quot;, :offset 1266, :ns &quot;farsund.ml.estimate&quot;} {:command &quot;(defn run [] (do (reset! system (ig/init config [:farsund/db\n                                                 :pubsub/channel\n                                                 :pubsub/publisher\n                                                 :farsund/webserver\n                                                 :farsund/cg\n                                                 :farsund/market-watcher\n                                                 :farsund/invoice-watcher\n                                                 ;:farsund/estimator\n                                                 ]))\n                 (def tmp-db (:farsund/db @system))))&quot;, :offset 644, :ns &quot;farsund.repl&quot;} {:command &quot;(defn- check-invoices-path [{:keys [invoices-path max-age-in-days delete-old-files? mask]}]\n  (println :max-age-in-days max-age-in-days)\n  (let [files (file-seq (io/as-file invoices-path))]\n    (into {}\n          (comp (filter #(.isFile %))\n                (filter #(re-find (re-pattern mask) (.getName %)))\n                (filter #(let [last-modified (-&gt; % (.lastModified) (dtc/from-long))\n                               to-old? (dt/before? last-modified\n                                                   (dt/minus (dt/today-at-midnight) (dt/days max-age-in-days)))]\n                           (when (and to-old? delete-old-files?)\n                             (io/delete-file %))\n                           to-old?))\n                (map #(let [{:keys [id] :as invoice} (invoice/read-file %)]\n                        {id invoice})))\n          files)))&quot;, :offset 855, :ns &quot;farsund.data.market&quot;} {:command &quot;config&quot;, :offset 6, :ns &quot;farsund.repl&quot;} {:command &quot;(:farsund/invoice-watcher config)&quot;, :offset 33, :ns &quot;farsund.repl&quot;} {:command &quot;(defn- check-invoices-path [{:keys [invoices-path max-age-in-days delete-old-files? mask]}]\n  (let [files (file-seq (io/as-file invoices-path))]\n    (into {}\n          (comp (filter #(.isFile %))\n                (filter #(re-find (re-pattern mask) (.getName %)))\n                (filter #(let [last-modified (-&gt; % (.lastModified) (dtc/from-long))\n                               to-old? (dt/before? last-modified\n                                                   (dt/minus (dt/today-at-midnight) (dt/days max-age-in-days)))]\n                           (when (and to-old? delete-old-files?)\n                             (io/delete-file %))\n                           (println last-modified to-old?)\n                           to-old?))\n                (map #(let [{:keys [id] :as invoice} (invoice/read-file %)]\n                        {id invoice})))\n          files)))&quot;, :offset 869, :ns &quot;farsund.data.market&quot;} {:command &quot;(defn- check-invoices-path [{:keys [invoices-path max-age-in-days delete-old-files? mask]}]\n  (let [files (file-seq (io/as-file invoices-path))]\n    (into {}\n          (comp (filter #(.isFile %))\n                (filter #(re-find (re-pattern mask) (.getName %)))\n                (filter #(let [last-modified (-&gt; % (.lastModified) (dtc/from-long))\n                               to-old? (dt/before? last-modified\n                                                   (dt/minus (dt/today-at-midnight) (dt/days max-age-in-days)))]\n                           (when (and to-old? delete-old-files?)\n                             (io/delete-file %))\n                           (not to-old?)))\n                (map #(let [{:keys [id] :as invoice} (invoice/read-file %)]\n                        {id invoice})))\n          files)))&quot;, :offset 816, :ns &quot;farsund.data.market&quot;} {:command &quot;(keys @tmp-db)&quot;, :offset 14, :ns &quot;farsund.repl&quot;} {:command &quot;(count (:invoices/by-id @tmp-db))&quot;, :offset 33, :ns &quot;farsund.repl&quot;} {:command &quot;(defn read-file [path]\n  (let [file (io/as-file path)]\n    (when (.exists file)\n      (let [id (second (str/split (.getName file) #\&quot;_|\\.\&quot;))\n            modified (-&gt; file (.lastModified) (dtc/from-long))\n            products (-&gt;&gt; (wio/read-csv file :sep \&quot;;\&quot; :encoding \&quot;cp1250\&quot;)\n                          (into []\n                                (map-indexed (fn [i [^String ean ^String qty]]\n                                               {ean {:ean      ean\n                                                     :qty      (Float/parseFloat qty)\n                                                     :position i}}))))]\n        {:id       id\n         :name     (.getName file)\n         :time     modified\n         :products products}))))&quot;, :offset 733, :ns &quot;farsund.data.invoice&quot;} {:command &quot;(defn read-file [path]\n  (let [file (io/as-file path)]\n    (when (.exists file)\n      (let [id (second (str/split (.getName file) #\&quot;_|\\.\&quot;))\n            modified (-&gt; file (.lastModified) (dtc/from-long))\n            products (-&gt;&gt; (wio/read-csv file :sep \&quot;;\&quot; :encoding \&quot;cp1250\&quot;)\n                          (into {}\n                                (map-indexed (fn [i [^String ean ^String qty]]\n                                               {ean {:ean      ean\n                                                     :qty      (Float/parseFloat qty)\n                                                     :position i}}))))]\n        {:id       id\n         :name     (.getName file)\n         :time     modified\n         :products products}))))&quot;, :offset 733, :ns &quot;farsund.data.invoice&quot;} {:command &quot;(stop)&quot;, :offset 6, :ns &quot;farsund.repl&quot;} {:command &quot;(first (:invoices/by-id @tmp-db))&quot;, :offset 33, :ns &quot;farsund.repl&quot;} {:command &quot;(ns farsund.repl\n  (:require [clojure.core.async :as async :refer [go thread &lt;! &lt;!! &gt;! &gt;!!]]\n            [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [integrant.core :as ig]\n            [taoensso.encore :as e]\n            [taoensso.timbre :as timbre]\n            [com.rpl.specter :as sp]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [reitit.core :as reitit]\n            [clj-time.core :as dt]\n            [clj-time.coerce :as dtc]\n            [farsund.config :refer [config]]\n            [farsund.core]\n            [farsund.db]\n            [farsund.nrepl]\n            [farsund.middleware]\n            [farsund.handler]\n            [farsund.server]\n            [farsund.routes.core]\n            [farsund.ws.core]\n            [farsund.data.core]\n            [farsund.data.events]\n            [farsund.data.market]\n            [farsund.data.market :as market]\n            [farsund.data.invoice :as invoice]\n\n            [net.cgrand.xforms :as x]\n            [farsund.data.sales :as sales]\n            [farsund.ml.core :as ml]\n            [farsund.ml.estimate :as estimate]\n            [farsund.db :as db]\n    ;[farsund.firestore.core :as f]\n            ))&quot;, :offset 1224, :ns &quot;farsund.core&quot;} {:command &quot;(timbre/merge-config! {:level :info})&quot;, :offset 37, :ns &quot;farsund.repl&quot;} {:command &quot;(def system (atom nil))&quot;, :offset 23, :ns &quot;farsund.repl&quot;} {:command &quot;(declare tmp-db)&quot;, :offset 16, :ns &quot;farsund.repl&quot;} {:command &quot;(defn run [] (do (reset! system (ig/init config [:farsund/db\n                                                 :pubsub/channel\n                                                 :pubsub/publisher\n                                                 :farsund/webserver\n                                                 :farsund/cg\n                                                 :farsund/market-watcher\n                                                 :farsund/invoice-watcher\n                                                 :farsund/estimator\n                                                 ]))\n                 (def tmp-db (:farsund/db @system))))&quot;, :offset 643, :ns &quot;farsund.repl&quot;} {:command &quot;(defn stop [] (ig/halt! @system))&quot;, :offset 33, :ns &quot;farsund.repl&quot;} {:command &quot;(defn reload [] (stop) (run))&quot;, :offset 29, :ns &quot;farsund.repl&quot;} {:command &quot;(run)&quot;, :offset 5, :ns &quot;farsund.repl&quot;}], :remote [{:command &quot;(rf/dispatch [:ws/send {:event :data/change-market-order-qty\n                          :params [1 2 3 4 :a :b {:a 1}]}])&quot;, :offset 120, :ns &quot;farsund.data.subs&quot;} {:command &quot;(ns farsund.ui.core\n  (:require [cljs.spec.alpha :as s]\n            [reagent.core :as r]\n            [reagent.ratom :refer [make-reaction reaction]]\n            [re-frame.core :as rf]\n            [taoensso.timbre :as timbre]\n            [oops.core :refer [oget ocall]]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.data.ui :as data.ui]\n\n            [\&quot;@material-ui/icons/Menu\&quot; :default MenuIcon]\n            [\&quot;@material-ui/icons/ChevronLeft\&quot; :default ChevronLeftIcon]\n            [\&quot;@material-ui/icons/Face\&quot; :default FaceIcon]\n            [\&quot;@material-ui/icons/Assignment\&quot; :default AssignmentIcon]\n            [\&quot;@material-ui/icons/Receipt\&quot; :default ReceiptIcon]\n            [\&quot;@material-ui/icons/Settings\&quot; :default SettingsIcon]))&quot;, :offset 768, :ns &quot;cljs.user&quot;} {:command &quot;(last @(rf/subscribe [:data/market-order]))&quot;, :offset 43, :ns &quot;farsund.ui.core&quot;} {:command &quot;(second @(rf/subscribe [:data/market-order]))&quot;, :offset 45, :ns &quot;farsund.ui.core&quot;} {:command &quot;(defmethod -event-msg-handler :chsk/recv\n  [{:as ev-msg [evt &amp; dispatch] :?data}]\n  (timbre/info \&quot;Push event from server:\&quot; evt dispatch)\n  (if (= :chsk/ws-ping evt)\n    (timbre/info \&quot;Ping:\&quot; (js/Date.))))&quot;, :offset 203, :ns &quot;farsund.ws.fx&quot;} {:command &quot;(ns farsund.ws.fx\n  (:require [cljs.spec.alpha :as s]\n            [re-frame.core :as rf]\n            [taoensso.timbre :as timbre]\n            [taoensso.sente :as sente :refer [cb-success?]]\n            [taoensso.encore :as e :refer-macros [have have?]]))&quot;, :offset 254, :ns &quot;farsund.ui.core&quot;} {:command &quot;(rf/subscribe [:data/market-filtered-order.nth 1])&quot;, :offset 50, :ns &quot;farsund.data.subs&quot;} {:command &quot;@(rf/subscribe [:data/market-filtered-order.nth 1])&quot;, :offset 51, :ns &quot;farsund.data.subs&quot;} {:command &quot;(ns farsund.data.events\n  (:require [re-frame.core :as rf]\n            [com.rpl.specter :as sp]\n            [taoensso.timbre :as timbre]\n            [cuerdas.core :as str]))&quot;, :offset 173, :ns &quot;farsund.ws.fx&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-qty\n  (fn [{db :db} [_ id qty]]\n    (cond\n      (str/empty-or-nil? qty)\n      {:ws/send {:event  :data/change-market-order-qty\n                 :params [id 0]}}\n      (not (neg? qty))\n      {:ws/send {:event  :data/change-market-order-qty\n                 :params [id (js/parseFloat qty)]}})))&quot;, :offset 338, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-qty\n  (fn [{db :db} [_ id qty]]\n    (cond\n      (str/empty-or-nil? qty)\n      {:ws/send {:event  :data/change-market-order-qty\n                 :params [id 0]}\n       :db      (sp/setval [:data :market-order sp/ALL #(= id (:id %)) :order] 0 db)}\n      (not (neg? qty))\n      {:ws/send {:event  :data/change-market-order-qty\n                 :params [id (js/parseFloat qty)]}\n       :db      (sp/setval [:data :market-order sp/ALL #(= id (:id %)) :order] (js/parseFloat qty) db)})))&quot;, :offset 526, :ns &quot;farsund.data.events&quot;} {:command &quot;(defmethod -event-msg-handler :chsk/recv\n  [{:as ev-msg [evt dispatch] :?data}]\n  (cond\n    (= :chsk/ws-ping evt) (timbre/info \&quot;Ping:\&quot; (js/Date.))\n    (= :rf/dispatch evt) (rf/dispatch dispatch)\n    :else (timbre/warn \&quot;Unhandled event: %s\&quot; evt)))&quot;, :offset 246, :ns &quot;farsund.ws.fx&quot;} {:command &quot;(ns farsund.data.events\n  (:require [re-frame.core :as rf]\n            [com.rpl.specter :as sp]\n            [taoensso.encore :as e]\n            [taoensso.timbre :as timbre]\n            [cuerdas.core :as str]))&quot;, :offset 209, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :market/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (- order (max 0 qty))]\n      (if (not (neg? order))\n        {:ws/send {:event  :data/change-market-order-qty\n                   :params [id order]}\n         :db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] order db)}\n        {:db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] 0 db)\n         :ws/send {:event  :data/change-market-order-qty\n                   :params [id 0]}}))))&quot;, :offset 1016, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:market :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (- order (max 0 qty))]\n      (if (not (neg? order))\n        {:ws/send {:event  :data/change-market-order-qty\n                   :params [id order]}\n         :db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] order db)}\n        {:db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] 0 db)\n         :ws/send {:event  :data/change-market-order-qty\n                   :params [id 0]}}))))&quot;, :offset 1014, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (- order (max 0 qty))]\n      (println :data/change-market-order-supply-days order)\n      (if (not (neg? order))\n        {:ws/send {:event  :data/change-market-order-qty\n                   :params [id order]}\n         :db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] order db)}\n        {:db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] 0 db)\n         :ws/send {:event  :data/change-market-order-qty\n                   :params [id 0]}}))))&quot;, :offset 1068, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (- order (max 0 qty))]\n      (println :data/change-market-order-supply-days order)\n      (if (not (neg? order))\n        {:db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] order db)}\n        {:db      (sp/setval [:market :market-order sp/ALL #(= id (:id %)) :order] 0 db)}))))&quot;, :offset 880, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (- order (max 0 qty))]\n      (println :data/change-market-order-supply-days order)\n      (if (not (neg? order))\n        {:db      (sp/setval [:data :market-order sp/ALL #(= id (:id %)) :order] order db)}\n        {:db      (sp/setval [:data :market-order sp/ALL #(= id (:id %)) :order] 0 db)}))))&quot;, :offset 876, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/change-market-order-supply-days\n  (fn [{db :db} [_ id days]]\n    (let [qty (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :qty] db)\n          old-order (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :order] db)\n          pace (sp/select-one [:data :market-order sp/ALL #(= id (:id %)) :pace] db)\n          old-days (e/round0 (/ old-order pace))\n          order (if (&gt; days old-days)\n                  (max (inc old-order) (Math/ceil (* pace days)))\n                  (min (dec old-order) (Math/ceil (* pace days))))\n          order (max 0 (- order (max 0 qty)))]\n      {:ws/send {:event  :data/change-market-order-qty\n                 :params [id order]}\n       :db      (sp/setval [:data :market-order sp/ALL #(= id (:id %)) :order] order db)})))&quot;, :offset 796, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/order-&gt;collector\n  (fn [{db :db} _]\n    (let [order (get-in db [:data :market-order])\n          categories (get-in db [:data :settings :categories])\n          min-pace (get-in db [:data :settings :min-pace])\n          min-margin (get-in db [:data :settings :min-margin])\n          order* (-&gt;&gt; (q/order-&gt;market-order order categories min-pace min-margin)\n                      (filter #(pos? (:order %))))]\n      {:ws/send {:event  :data/order-&gt;collector\n                 :params order*}})))&quot;, :offset 515, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/order-&gt;ftp\n  (fn [{db :db} _]\n    (let [order (get-in db [:data :market-order])\n          categories (get-in db [:data :settings :categories])\n          min-pace (get-in db [:data :settings :min-pace])\n          min-margin (get-in db [:data :settings :min-margin])\n          order* (-&gt;&gt; (q/order-&gt;cg-order order categories min-pace min-margin)\n                      (filter #(pos? (:order %))))]\n      {:ws/send {:event  :data/order-&gt;ftp\n                 :params order*}})))&quot;, :offset 499, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/ftp-&gt;collector\n  (fn [{db :db} [_ file-name]]\n    {:ws/send {:event  :data/ftp-&gt;collector\n               :params file-name}}))&quot;, :offset 151, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/dispatch [:data/ftp-&gt;collector \&quot;MM.000\&quot;])&quot;, :offset 45, :ns &quot;farsund.data.events&quot;} {:command &quot;(rf/reg-event-fx\n  :data/ftp-&gt;collector\n  (fn [{db :db} [_ file-name]]\n    {:ws/send {:event  :data/ftp-&gt;collector\n               :params file-name}\n     :dispatch [:data/toggle-ftp-files-dialog]}))&quot;, :offset 198, :ns &quot;farsund.data.events&quot;} {:command &quot;@(rf/subscribe [:ui/panel])&quot;, :offset 27, :ns &quot;farsund.ui.core&quot;} {:command &quot;@(rf/subscribe [:data/market-report])&quot;, :offset 37, :ns &quot;farsund.data.subs&quot;} {:command &quot;(count @(rf/subscribe [:data/market-report]))&quot;, :offset 45, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/reg-sub\n  :data/market-report.search\n  (fn [db _]\n    (sp/select [:data :market-report sp/ALL (sp/multi-path :name :ean)] db)))&quot;, :offset 131, :ns &quot;farsund.data.subs&quot;} {:command &quot;(count @(rf/subscribe [:data/market-report.search]))&quot;, :offset 52, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/reg-sub\n  :data/market-report.search\n  (fn [db _]\n    (sp/select [:data :market-report (sp/multi-path :name :ean)] db)))&quot;, :offset 124, :ns &quot;farsund.data.subs&quot;} {:command &quot;(first @(rf/subscribe [:data/market-report.search]))&quot;, :offset 52, :ns &quot;farsund.data.subs&quot;} {:command &quot;(first @(rf/subscribe [:data/market-report]))&quot;, :offset 45, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/reg-sub\n  :data/market-report.search\n  (fn [db [_ value]]\n    (sp/select [:data :market-report sp/ALL\n                #(or (re-find (re-pattern value) (:name %))\n                     (re-find (re-pattern value) (:ean %)))] db)))&quot;, :offset 232, :ns &quot;farsund.data.subs&quot;} {:command &quot;(first @(rf/subscribe [:data/market-report.search \&quot;cydr\&quot;]))&quot;, :offset 59, :ns &quot;farsund.data.subs&quot;} {:command &quot;@(rf/subscribe [:data/market-report.search \&quot;cydr\&quot;])&quot;, :offset 51, :ns &quot;farsund.data.subs&quot;} {:command &quot;(count @(rf/subscribe [:data/market-report.search \&quot;cydr\&quot;]))&quot;, :offset 59, :ns &quot;farsund.data.subs&quot;} {:command &quot;(count @(rf/subscribe [:data/market-report.search \&quot;\&quot;]))&quot;, :offset 55, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/subscribe [:data/parent-categories])&quot;, :offset 40, :ns &quot;farsund.ui.core&quot;} {:command &quot;(ns farsund.ui.core\n  (:require [cljs.spec.alpha :as s]\n            [reagent.core :as r]\n            [reagent.ratom :refer [make-reaction reaction]]\n            [re-frame.core :as rf]\n            [taoensso.timbre :as timbre]\n            [cuerdas.core :as str]\n            [oops.core :refer [oget ocall]]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n            [farsund.data.ui :as data.ui]\n            [farsund.login.ui :as login.ui]\n\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Clear\&quot; :default ClearIcon]\n            [\&quot;@material-ui/icons/Menu\&quot; :default MenuIcon]\n            [\&quot;@material-ui/icons/ChevronLeft\&quot; :default ChevronLeftIcon]\n            [\&quot;@material-ui/icons/Face\&quot; :default FaceIcon]\n            [\&quot;@material-ui/icons/Assignment\&quot; :default AssignmentIcon]\n            [\&quot;@material-ui/icons/Receipt\&quot; :default ReceiptIcon]\n            [\&quot;@material-ui/icons/Settings\&quot; :default SettingsIcon]))&quot;, :offset 1100, :ns &quot;farsund.ui.core&quot;} {:command &quot;(u/-&gt;px 24 0)&quot;, :offset 13, :ns &quot;farsund.ui.core&quot;} {:command &quot;(defn -&gt;px [v &amp; vs]\n  (str/trim\n    (reduce\n      (fn [acc v] (str acc v \&quot;px \&quot;))\n      (str v \&quot;px \&quot;)\n      vs)))&quot;, :offset 112, :ns &quot;farsund.utils.core&quot;} {:command &quot;(u/-&gt;px 5 0)&quot;, :offset 12, :ns &quot;farsund.ui.core&quot;} {:command &quot;(count @(rf/subscribe [:data/market-order]))&quot;, :offset 44, :ns &quot;farsund.data.ui&quot;} {:command &quot;@(rf/subscribe [:layout/gutter])&quot;, :offset 32, :ns &quot;farsund.data.ui&quot;} {:command &quot;(ns farsund.data.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer]\n            [\&quot;react-window\&quot; :refer [FixedSizeList FixedSizeGrid]]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 680, :ns &quot;cljs.user&quot;} {:command &quot;@(rf/subscribe [:data/market-order.nth 1])&quot;, :offset 42, :ns &quot;farsund.data.ui&quot;} {:command &quot;(rf/subscribe [:data/market-order.count])&quot;, :offset 41, :ns &quot;farsund.data.ui&quot;} {:command &quot;(rf/subscribe [:data/market-order])&quot;, :offset 35, :ns &quot;farsund.data.ui&quot;} {:command &quot;(first @(rf/subscribe [:data/market-order]))&quot;, :offset 44, :ns &quot;farsund.data.ui&quot;} {:command &quot;@(rf/subscribe [:data/market-order.count])&quot;, :offset 42, :ns &quot;farsund.data.ui&quot;} {:command &quot;(rf/subscribe [:data/market-order.nth 1])&quot;, :offset 41, :ns &quot;farsund.data.ui&quot;} {:command &quot;@(rf/subscribe [:data/search-value])&quot;, :offset 36, :ns &quot;farsund.data.subs&quot;} {:command &quot;@(rf/subscribe [:data/market-order.search])&quot;, :offset 43, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/subscribe [:data/market-order.search.nth 0])&quot;, :offset 48, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/subscribe [:data/market-order.search.nth 1])&quot;, :offset 48, :ns &quot;farsund.data.subs&quot;} {:command &quot;(comment\n  @(rf/subscribe [:data/market-order.search.nth 1])\n  )&quot;, :offset 64, :ns &quot;farsund.data.ui&quot;} {:command &quot;(comment\n  @(rf/subscribe [:data/market-order])\n  )&quot;, :offset 51, :ns &quot;farsund.data.ui&quot;} {:command &quot;@(rf/subscribe [:data/market-order])&quot;, :offset 36, :ns &quot;farsund.data.ui&quot;} {:command &quot;(comment\n  quagga\n  )&quot;, :offset 21, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.init\n  (:require\n    [day8.re-frame.async-flow-fx]\n    [day8.re-frame.http-fx]\n    [taoensso.timbre :as timbre]\n    [re-frame.core :as rf]\n    [re-frame.router :as router]\n    [re-frame.registrar :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers :refer [console]]\n\n    [farsund.utils.fx]\n    [farsund.utils.events]\n\n    [farsund.db.core]\n    [farsund.db.fx]\n    [farsund.db.events]\n\n\n    [farsund.ws.fx]\n    [farsund.ws.events]\n    [farsund.ws.subs]\n\n    [farsund.window.db]\n    [farsund.window.fx]\n    [farsund.window.events]\n    [farsund.window.subs]\n\n    [farsund.process.db]\n    [farsund.process.events]\n    [farsund.process.subs]\n\n    [farsund.error.db]\n    [farsund.error.events]\n    [farsund.error.subs]\n\n    [farsund.theme.db]\n    [farsund.theme.events]\n    [farsund.theme.subs]\n\n    [farsund.ui.db]\n    [farsund.ui.events]\n    [farsund.ui.subs]\n\n    [farsund.data.db]\n    [farsund.data.events]\n    [farsund.data.subs]\n\n    [farsund.login.db]\n    [farsund.login.events]\n    [farsund.data.subs]\n\n    [farsund.scanner.ui]\n\n    ))&quot;, :offset 1073, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(keys quagga)&quot;, :offset 13, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.ui.core\n  (:require [cljs.spec.alpha :as s]\n            [reagent.core :as r]\n            [reagent.ratom :refer [make-reaction reaction]]\n            [re-frame.core :as rf]\n            [taoensso.timbre :as timbre]\n            [cuerdas.core :as str]\n            [oops.core :refer [oget ocall]]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n            [farsund.data.ui :as data.ui]\n            [farsund.login.ui :as login.ui]\n            [farsund.scanner.ui :as scanner.ui]\n\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Clear\&quot; :default ClearIcon]\n            [\&quot;@material-ui/icons/Menu\&quot; :default MenuIcon]\n            [\&quot;@material-ui/icons/ChevronLeft\&quot; :default ChevronLeftIcon]\n            [\&quot;@material-ui/icons/Face\&quot; :default FaceIcon]\n            [\&quot;@material-ui/icons/Assignment\&quot; :default AssignmentIcon]\n            [\&quot;@material-ui/icons/Receipt\&quot; :default ReceiptIcon]\n            [\&quot;@material-ui/icons/Settings\&quot; :default SettingsIcon]))&quot;, :offset 1148, :ns &quot;cljs.user&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga\&quot; :default quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 692, :ns &quot;farsund.ui.core&quot;} {:command &quot;(js-keys quagga)&quot;, :offset 16, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;Quagga\&quot; :default Quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 692, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga\&quot; :default Quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 692, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;quagga&quot;, :offset 6, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(.init quagga)&quot;, :offset 14, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga\&quot; :default quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer1]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 693, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;AutoSizer&quot;, :offset 9, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;AutoSizer1&quot;, :offset 10, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(.init Quagga)&quot;, :offset 14, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga\&quot; :default Quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer1]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 693, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga/dist/quagga\&quot; :default Quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer1]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 705, :ns &quot;cljs.user&quot;} {:command &quot;(ns farsund.scanner.ui\n  (:require [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [taoensso.encore :as e]\n            [oops.core :refer [oget oget+]]\n            [cuerdas.core :as str]\n            [mui.core :as mui]\n            [mui.colors :as colors]\n            [farsund.flex :as flex]\n            [farsund.utils.core :as u]\n\n            [\&quot;quagga\&quot; :as Quagga]\n            [\&quot;react-virtualized/dist/commonjs/AutoSizer\&quot; :default AutoSizer1]\n            [\&quot;@material-ui/icons/Add\&quot; :default AddIcon]\n            [\&quot;@material-ui/icons/Remove\&quot; :default RemoveIcon]\n            [\&quot;@material-ui/icons/Delete\&quot; :default DeleteIcon]))&quot;, :offset 688, :ns &quot;cljs.user&quot;} {:command &quot;(js-keys Quagga)&quot;, :offset 16, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;Quagga&quot;, :offset 6, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;@(rf/subscribe [:window/inner-width])&quot;, :offset 37, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(rf/subscribe [:window/client-height])&quot;, :offset 38, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(- @(rf/subscribe [:window/client-height]) 112)&quot;, :offset 47, :ns &quot;farsund.scanner.ui&quot;} {:command &quot;(.-location js/window)&quot;, :offset 22, :ns &quot;farsund.data.events&quot;} {:command &quot;(.reload (.-location js/window))&quot;, :offset 32, :ns &quot;farsund.data.events&quot;} {:command &quot;(shadow.cljs.devtools.api/nrepl-select :dev)&quot;, :offset 43, :ns &quot;shadow.user&quot;} {:command &quot;(ns farsund.data.subs\n  (:require [re-frame.core :as rf]\n            [com.rpl.specter :as sp]\n            [farsund.data.query :as q]\n            [farsund.data.categories :as data.categories]))&quot;, :offset 192, :ns &quot;cljs.user&quot;} {:command &quot;(nth [1 2 3] 5)&quot;, :offset 15, :ns &quot;farsund.data.subs&quot;} {:command &quot;(nth [1 2 3] 1)&quot;, :offset 15, :ns &quot;farsund.data.subs&quot;} {:command &quot;(get [1 2 3] 10)&quot;, :offset 16, :ns &quot;farsund.data.subs&quot;} {:command &quot;(sp/select-one [1 2 3] 10)&quot;, :offset 26, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/clear-subscription-cache!)&quot;, :offset 30, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/subscribe [:data/market-order.search.count])&quot;, :offset 48, :ns &quot;farsund.data.subs&quot;} {:command &quot;(rf/subscribe [:window/inner-width])&quot;, :offset 36, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height (rf/subscribe [:window/client-height])\n        inner-width (rf/subscribe [:window/inner-width])\n        market-order-count (rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ width (min 366 (- @inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    row-count)&quot;, :offset 343, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    row-count)&quot;, :offset 345, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    inner-width)&quot;, :offset 347, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    market-order-count)&quot;, :offset 354, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    column-count)&quot;, :offset 348, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ inner-width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    )&quot;, :offset 342, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ inner-width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    column-count)&quot;, :offset 354, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ inner-width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ products-count column-count))]\n    row-count)&quot;, :offset 351, :ns &quot;farsund.data.ui&quot;} {:command &quot;(let [client-height @(rf/subscribe [:window/client-height])\n        inner-width @(rf/subscribe [:window/inner-width])\n        market-order-count @(rf/subscribe [:data/market-order.search.count])\n        column-count (Math/floor (/ inner-width (min 366 (- inner-width 16))))\n        row-count (Math/ceil (/ market-order-count column-count))]\n    row-count)&quot;, :offset 355, :ns &quot;farsund.data.ui&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.lein">
    <configuration default="true" type="Applet">
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="lein" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="farsund" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="dev" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration name="shadow" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <module name="farsund" />
      <setting name="host" value="localhost" />
      <setting name="port" value="7002" />
      <setting name="replType" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="core" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="farsund" />
      <setting name="path" value="$PROJECT_DIR$/src/clj/farsund/core.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/clj/farsund" />
      <method v="2" />
    </configuration>
    <configuration name="ml_copy2" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="farsund" />
      <setting name="path" value="$PROJECT_DIR$/env/dev/clj/farsund/ml_copy2.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/env/dev/clj/farsund" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file enabled="true" id="idea.log" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Clojure Application.core" />
      <item itemvalue="Clojure Application.ml_copy2" />
      <item itemvalue="Clojure REPL.lein" />
      <item itemvalue="Clojure REPL.shadow" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.ml_copy2" />
        <item itemvalue="Clojure Application.core" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8867de46-1b15-465c-be40-f2215452d5de" name="Default Changelist" comment="" />
      <created>1537460146554</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1537460146554</updated>
      <workItem from="1537460150700" duration="1822000" />
      <workItem from="1537463381966" duration="7455000" />
      <workItem from="1537558309894" duration="399000" />
      <workItem from="1537558809132" duration="7326000" />
      <workItem from="1537566185276" duration="7307000" />
      <workItem from="1537710171930" duration="60261000" />
      <workItem from="1538741730235" duration="206000" />
      <workItem from="1538997803095" duration="13510000" />
      <workItem from="1539072889601" duration="6364000" />
      <workItem from="1539089476653" duration="31771000" />
      <workItem from="1539237751997" duration="1520000" />
      <workItem from="1539347048857" duration="1465000" />
      <workItem from="1539363711763" duration="2100000" />
      <workItem from="1539466991871" duration="8597000" />
      <workItem from="1539551173037" duration="38781000" />
      <workItem from="1539944080010" duration="656000" />
      <workItem from="1539965617317" duration="30316000" />
      <workItem from="1540249798637" duration="3440000" />
      <workItem from="1540655623697" duration="11997000" />
      <workItem from="1541104505600" duration="574000" />
      <workItem from="1541105110957" duration="24239000" />
      <workItem from="1541241809970" duration="7322000" />
      <workItem from="1541367006145" duration="1197000" />
      <workItem from="1541369172799" duration="101589000" />
      <workItem from="1542034734450" duration="16526000" />
      <workItem from="1542138311911" duration="37963000" />
      <workItem from="1542550360248" duration="18138000" />
      <workItem from="1542582015349" duration="10872000" />
      <workItem from="1542650186892" duration="67000" />
      <workItem from="1542650624543" duration="8000" />
      <workItem from="1542652197655" duration="11487000" />
      <workItem from="1542715659939" duration="210000" />
      <workItem from="1542819354485" duration="743000" />
      <workItem from="1542821534256" duration="747000" />
      <workItem from="1542978144036" duration="1786000" />
      <workItem from="1543072910925" duration="7708000" />
      <workItem from="1543103048701" duration="238000" />
      <workItem from="1543103454954" duration="15250000" />
      <workItem from="1543265173167" duration="9343000" />
      <workItem from="1543523090210" duration="13720000" />
      <workItem from="1543946133007" duration="161000" />
      <workItem from="1544083099752" duration="15408000" />
      <workItem from="1544346231423" duration="1327000" />
      <workItem from="1544481847175" duration="235000" />
      <workItem from="1544482492315" duration="787000" />
      <workItem from="1544557490304" duration="23730000" />
      <workItem from="1544720401553" duration="7120000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="563788000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1610" y="58" width="1560" height="1712" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.3537415" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Inspection Results" order="0" weight="0.3298969" />
      <window_info anchor="bottom" id="Message" order="1" />
      <window_info anchor="bottom" auto_hide="true" id="Find" order="2" weight="0.32729626" />
      <window_info anchor="bottom" id="Run" order="3" weight="0.32860824" />
      <window_info anchor="bottom" id="Debug" order="4" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="5" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="6" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="7" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info anchor="bottom" id="Terminal" order="9" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" show_stripe_button="false" />
      <window_info anchor="right" id="Maven" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Leiningen" order="1" sideWeight="0.49903288" weight="0.32962722" />
      <window_info anchor="right" id="Ant Build" order="2" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="3" weight="0.25" />
      <window_info anchor="right" id="Palette" order="4" />
      <window_info anchor="right" id="Capture Analysis" order="5" />
      <window_info anchor="right" id="Theme Preview" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="7" />
      <window_info anchor="right" id="Maven Projects" order="8" />
      <window_info anchor="right" id="Database" order="9" sideWeight="0.49903288" weight="0.32962722" />
      <window_info anchor="right" id="REPL" order="10" sideWeight="0.50096714" weight="0.38423806" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/server.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/transit.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="280">
          <caret line="5" column="35" selection-start-line="5" selection-start-column="35" selection-end-line="5" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/com/google/cloud/google-cloud-firestore/0.61.0-beta/google-cloud-firestore-0.61.0-beta.jar!/com/google/cloud/firestore/FirestoreOptions.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="448">
          <caret line="158" column="4" selection-start-line="158" selection-start-column="4" selection-end-line="158" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/com/google/firebase/firebase-admin/6.6.0/firebase-admin-6.6.0.jar!/com/google/firebase/FirebaseOptions.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="492">
          <caret line="119" column="30" selection-start-line="119" selection-start-column="30" selection-end-line="119" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/com/google/cloud/google-cloud-core/1.43.0/google-cloud-core-1.43.0.jar!/com/google/cloud/ServiceOptions.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="492">
          <caret line="327" column="20" selection-start-line="327" selection-start-column="20" selection-end-line="327" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/ml_copy3.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/com/taoensso/encore/2.102.0/encore-2.102.0.jar!/taoensso/encore.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="471">
          <caret line="931" column="3" lean-forward="true" selection-start-line="931" selection-start-column="3" selection-end-line="931" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/clj-time/clj-time/0.15.1/clj-time-0.15.1.jar!/clj_time/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="492">
          <caret line="455" selection-start-line="455" selection-end-line="455" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-348">
          <caret line="85" column="14" selection-start-line="85" selection-start-column="14" selection-end-line="85" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/net/cgrand/xforms/0.19.0/xforms-0.19.0.jar!/net/cgrand/xforms/io.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="479">
          <caret line="22" column="39" lean-forward="true" selection-start-line="22" selection-start-column="39" selection-end-line="22" selection-end-column="39" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/ribelo/wombat/0.1.1-SNAPSHOT/wombat-0.1.1-SNAPSHOT.jar!/ribelo/wombat/io.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="640">
          <caret line="18" column="20" selection-start-line="18" selection-start-column="20" selection-end-line="18" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/iris.clj" />
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/invoice_watcher.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/hawk/hawk/0.2.11/hawk-0.2.11.jar!/hawk/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="919">
          <caret line="40" selection-start-line="40" selection-end-line="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/farsund.iml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/net/cgrand/xforms/0.19.0/xforms-0.19.0.jar!/net/cgrand/xforms.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="534">
          <caret line="444" column="17" selection-start-line="444" selection-start-column="8" selection-end-line="444" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="268">
          <caret line="72" column="6" selection-start-line="72" selection-start-column="6" selection-end-line="72" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/ml_copy2.clj" />
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/ws/reponse.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="11" column="6" selection-start-line="11" selection-start-column="6" selection-end-line="11" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/shadow-cljs.edn" />
    <entry file="file://$PROJECT_DIR$/env/prod/cljs/pintu/app.cljs" />
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/firestore_repl.clj" />
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/ws/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="71">
          <caret line="87" column="34" lean-forward="true" selection-start-line="87" selection-start-column="23" selection-end-line="87" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/firestore/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="448">
          <caret line="8" column="32" selection-start-line="8" selection-start-column="32" selection-end-line="8" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/techascent/tech.ml-base/3.5/tech.ml-base-3.5.jar!/tech/ml/protocols.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="4" selection-start-column="4" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/ml.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="952">
          <caret line="17" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="728">
          <caret line="13" column="7" selection-start-line="13" selection-start-column="7" selection-end-line="13" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/ribelo/wombat/0.1.1-SNAPSHOT/wombat-0.1.1-SNAPSHOT.jar!/ribelo/wombat/dataframe.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4816">
          <caret line="86" column="10" selection-start-line="86" selection-start-column="10" selection-end-line="86" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/playground.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="112">
          <caret line="23" column="36" selection-start-line="23" selection-start-column="36" selection-end-line="23" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/ml2.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1512">
          <caret line="27" column="33" selection-start-line="27" selection-start-column="33" selection-end-line="27" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/db.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="784">
          <caret line="14" column="8" selection-start-line="14" selection-start-column="8" selection-end-line="14" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="784">
          <caret line="14" column="21" selection-start-line="14" selection-start-column="21" selection-end-line="14" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/ioc_macros.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="490">
          <caret line="972" selection-start-line="972" selection-end-line="972" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="492">
          <caret line="6902" selection-start-line="6902" selection-end-line="6902" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/farsund/repl.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3192">
          <caret line="57" column="5" selection-start-line="57" selection-start-column="5" selection-end-line="57" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="15" column="41" selection-start-line="15" selection-start-column="41" selection-end-line="15" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/ml/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1359">
          <caret line="163" column="44" selection-start-line="163" selection-start-column="44" selection-end-line="163" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/ml/estimate.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1359">
          <caret line="40" column="42" selection-start-line="40" selection-start-column="42" selection-end-line="40" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/config.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="280">
          <caret line="5" column="11" selection-start-line="5" selection-start-column="11" selection-end-line="5" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/invoice.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1400">
          <caret line="25" column="18" selection-start-line="25" selection-start-column="18" selection-end-line="25" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/sales.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1960">
          <caret line="35" selection-start-line="35" selection-end-line="61" selection-end-column="70" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/stock.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="560">
          <caret line="10" selection-start-line="10" selection-end-line="28" selection-end-column="39" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/market.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4760">
          <caret line="85" column="20" selection-start-line="85" selection-start-column="20" selection-end-line="85" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/utils.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2912">
          <caret line="52" column="48" selection-start-line="52" selection-start-column="48" selection-end-line="52" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/config.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="11" column="15" selection-start-line="11" selection-start-column="15" selection-end-line="11" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/report.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="11" column="20" selection-start-line="11" selection-start-column="20" selection-end-line="11" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="20" selection-start-column="4" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/cg.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="601">
          <caret line="82" column="18" selection-start-line="82" selection-start-column="18" selection-end-line="82" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/events.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="65" column="26" selection-start-line="65" selection-start-column="26" selection-end-line="65" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/farsund/data/documents.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1064">
          <caret line="19" column="19" selection-start-line="19" selection-start-column="19" selection-end-line="19" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/rcv.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="336">
          <caret line="6" column="4" selection-start-line="6" selection-start-column="4" selection-end-line="6" selection-end-column="4" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="Copyright.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>farsund</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ScopeChooserConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>